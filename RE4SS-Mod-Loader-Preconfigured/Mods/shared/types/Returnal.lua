---@meta

---@class AAmbientSoundVolume : ATriggerVolume
---@field AmbientSoundVolume UAmbientSoundVolumeComponent
AAmbientSoundVolume = {}



---@class AAngenLandscapeModifierActor : AActor
---@field Properties FAngenLandscapeModifierProperties
AAngenLandscapeModifierActor = {}



---@class AAngenLevelGenActor : ALevelGenBaseActor
---@field GlobalPreMapDoorSelectRules TArray<UAngenMapDoorSelectRule>
---@field GlobalPostMapDoorSelectRules TArray<UAngenMapDoorSelectRule>
---@field GlobalPreRoomSelectRules TArray<UAngenRoomSelectRule>
---@field GlobalPostRoomSelectRules TArray<UAngenRoomSelectRule>
---@field GlobalPreRoomDoorSelectRules TArray<UAngenRoomDoorSelectRule>
---@field GlobalPostRoomDoorSelectRules TArray<UAngenRoomDoorSelectRule>
---@field GlobalPreLocatorSelectRules TArray<UAngenLocatorSelectRule>
---@field GlobalPostLocatorSelectRules TArray<UAngenLocatorSelectRule>
---@field RulesPool TMap<UClass, FAngenRulePool>
---@field b2DCollisionsForRooms boolean
---@field bCentreMapAfterGeneration boolean
---@field MapTransform FTransform
---@field GenStateAllocationId int32
---@field GenStates TMap<int32, FAngenLevelGenState>
---@field FailureModeStack TArray<boolean>
---@field DebugInfo UAngenDebugInfo
---@field bDeepDebugCapture boolean
---@field DebugPlayerRoomIndex int32
---@field MapInGeneration ULevelGenMap
AAngenLevelGenActor = {}

---@param MapDoorSelectionRules TArray<UAngenMapDoorSelectRule>
---@param RoomSelectionRules TArray<UAngenRoomSelectRule>
---@param RoomDoorSelectionRules TArray<UAngenRoomDoorSelectRule>
---@param GenerationTags TArray<FName>
---@param DebugColor FColor
---@param OutRoomId int32
---@return boolean
function AAngenLevelGenActor:TryAddRoomConnected(MapDoorSelectionRules, RoomSelectionRules, RoomDoorSelectionRules, GenerationTags, DebugColor, OutRoomId) end
---@return int32
function AAngenLevelGenActor:StoreGenerationState() end
function AAngenLevelGenActor:SetFailureMode() end
---@param AngenRule UAngenRule
function AAngenLevelGenActor:ReturnAngenRuleToPool(AngenRule) end
---@param MapDoorSelectRules TArray<UAngenMapDoorSelectRule>
---@param RoomSelectRules TArray<UAngenRoomSelectRule>
---@param RoomDoorSelectRules TArray<UAngenRoomDoorSelectRule>
function AAngenLevelGenActor:ReturnAngenRulesToPool(MapDoorSelectRules, RoomSelectRules, RoomDoorSelectRules) end
---@param Handle int32
function AAngenLevelGenActor:RestoreGenerationState(Handle) end
---@param LocatorSelectionRules TArray<UAngenLocatorSelectRule>
---@param DebugName FName
---@param OutNumberChanged int32
---@param OutSelectedTransforms TArray<FTransform>
function AAngenLevelGenActor:RemoveMapLocators(LocatorSelectionRules, DebugName, OutNumberChanged, OutSelectedTransforms) end
function AAngenLevelGenActor:PushFailureModeStack() end
---@return boolean
function AAngenLevelGenActor:PopFailureModeStack() end
---@return boolean
function AAngenLevelGenActor:IsInFailureMode() end
function AAngenLevelGenActor:GenerateLevelLayoutPhaseLocators() end
function AAngenLevelGenActor:GenerateLevelLayoutPhase2() end
function AAngenLevelGenActor:GenerateLevelLayout() end
---@param Handle int32
function AAngenLevelGenActor:ForgetGenerationState(Handle) end
---@param RoomSelectionRules TArray<UAngenRoomSelectRule>
---@return TArray<FString>
function AAngenLevelGenActor:FindRooms(RoomSelectionRules) end
---@param LocatorSelectionRules TArray<UAngenLocatorSelectRule>
---@param OutNumberFound int32
---@param OutSelectedTransforms TArray<FTransform>
function AAngenLevelGenActor:FindMapLocators(LocatorSelectionRules, OutNumberFound, OutSelectedTransforms) end
function AAngenLevelGenActor:DoDebugImgui() end
---@param RoomIndex int32
function AAngenLevelGenActor:DebugSetCurrentPlayerRoom(RoomIndex) end
---@param DebugName FName
---@param DebugColor FColor
---@param TryCount int32
function AAngenLevelGenActor:DebugRetryPointStart(DebugName, DebugColor, TryCount) end
function AAngenLevelGenActor:DebugRetryPointNext() end
---@param bSucceeded boolean
function AAngenLevelGenActor:DebugRetryPointEnd(bSucceeded) end
---@param MapDoorSelectionRules TArray<UAngenMapDoorSelectRule>
---@param AmountClosed int32
function AAngenLevelGenActor:CloseDoors(MapDoorSelectionRules, AmountClosed) end
---@param LocatorSelectionRules TArray<UAngenLocatorSelectRule>
---@param ActorClasses TArray<TSoftClassPtr<AActor>>
---@param CollisionHandlingMethod ESpawnActorCollisionHandlingMethod
---@param SpawnBehavior ELevelGenLocatorSpawnBehavior
---@param DebugName FName
---@param OutNumberChanged int32
---@param OutSelectedTransforms TArray<FTransform>
function AAngenLevelGenActor:AssignMapLocatorManyActors(LocatorSelectionRules, ActorClasses, CollisionHandlingMethod, SpawnBehavior, DebugName, OutNumberChanged, OutSelectedTransforms) end
---@param LocatorSelectionRules TArray<UAngenLocatorSelectRule>
---@param ActorClass TSoftClassPtr<AActor>
---@param CollisionHandlingMethod ESpawnActorCollisionHandlingMethod
---@param SpawnBehavior ELevelGenLocatorSpawnBehavior
---@param DebugName FName
---@param OutNumberChanged int32
---@param OutSelectedTransforms TArray<FTransform>
function AAngenLevelGenActor:AssignMapLocatorActors(LocatorSelectionRules, ActorClass, CollisionHandlingMethod, SpawnBehavior, DebugName, OutNumberChanged, OutSelectedTransforms) end
---@param Min int32
---@param Max int32
---@return int32
function AAngenLevelGenActor:AngenRandomIntegerInRange(Min, Max) end
---@return boolean
function AAngenLevelGenActor:AngenRandomBool() end
---@param RoomSelectionRules TArray<UAngenRoomSelectRule>
---@param Transform FTransform
---@param GenerationTags TArray<FName>
---@param OutRoomId int32
---@param DebugColor FLinearColor
---@return boolean
function AAngenLevelGenActor:AddRoomExplicit(RoomSelectionRules, Transform, GenerationTags, OutRoomId, DebugColor) end


---@class AArtefactCollectible : ACollectibleBase
---@field ArtefactName FName
AArtefactCollectible = {}

---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function AArtefactCollectible:OnSerializeState(Serializer) end


---@class AAudioManager : AInfo
---@field DefaultMusic UMusicSelection
---@field DiscoverySound UAkAudioEvent
---@field DiscoveryInterruptedSound UAkAudioEvent
---@field DiscoveryCompletedSound UAkAudioEvent
---@field onActiveListenerChangedDelegate FAudioManagerOnActiveListenerChangedDelegate
---@field onAudioOutputSystemNotified FAudioManagerOnAudioOutputSystemNotified
---@field onAudioOutputSystemChannelsChanged FAudioManagerOnAudioOutputSystemChannelsChanged
---@field onForceUpdateDynamicRange FAudioManagerOnForceUpdateDynamicRange
---@field onSwampReaperMusicStingerTriggered FAudioManagerOnSwampReaperMusicStingerTriggered
---@field BP_OnDoorOpenStateChanged FAudioManagerBP_OnDoorOpenStateChanged
---@field onPlayerChangedReady FAudioManagerOnPlayerChangedReady
---@field onHeadphonesRemoved FAudioManagerOnHeadphonesRemoved
---@field BulletVelocityRTPC FString
---@field bEnableCulling boolean
---@field bUseQuadCulling boolean
---@field bCullPerEvent boolean
---@field bLimitEventsPerQuad boolean
---@field fBulletCullingRadius float
---@field fBulletCullingRadiusHighVelocity float
---@field fInterpolationTime float
---@field fInterpolationTimeHighVelocity float
---@field fHighVelocityThreshold float
---@field nMaxEventPerQuad int32
---@field bLetLeadersCrossQuads boolean
---@field fBulletActivationDeadzoneRadius float
---@field fBulletQuadIdentifierSphereRadius float
---@field QuadrantBulletColors TArray<FColor>
---@field currentListenerRoom UAkRoomComponent
---@field MusicStacks TArray<FMusicStack>
---@field MusicPlayback UAkComponent
---@field PlayerFallVelocityThreshold float
---@field StopAllSoundsEvent UAkAudioEvent
---@field StopIngameSoundsEvent UAkAudioEvent
---@field StopAllMusicEvent UAkAudioEvent
---@field StopMusicEvent UAkAudioEvent
---@field MusicReaperEvent UAkAudioEvent
---@field MusicReaperEventMinDistance float
---@field PlayerSpawnEvent UAkAudioEvent
---@field PlayerDeathEvent UAkAudioEvent
---@field PlayerHealEvent UAkAudioEvent
---@field PlayerLowHealthEvent UAkAudioEvent
---@field PlayerLowHealthRecoverEvent UAkAudioEvent
---@field PlayerLowHealthMusic UMusicSelection
---@field PlayerCursedEvent UAkAudioEvent
---@field PlayerCursedStopEvent UAkAudioEvent
---@field PlayerCurseLiftedEvent UAkAudioEvent
---@field PlayerDashCooldownProgressEvent UAkAudioEvent
---@field PlayerDashCooldownProgressRTPC FName
---@field PlayerDashReadyEvent UAkAudioEvent
---@field CombatMusic UMusicSelection
---@field EnemyAttackPrepEvent UAkAudioEvent
---@field RoomClearedEvent UAkAudioEvent
---@field GameInitEvent UAkAudioEvent
---@field GameFlowEvents TMap<EAudioGameFlowState, UAkAudioEvent>
---@field GameplayTypeEvents TMap<EAudioGameplayType, UAkAudioEvent>
---@field CameraPerspectiveEvents TMap<EAudioCameraPerspective, UAkAudioEvent>
---@field BackgroundRoomAttributes TMap<EBiome, ULevelGenRoomAttributes>
---@field RandomisedRoomParamRanges TMap<FName, float>
---@field BiomeBPSpecifierNames TArray<FString>
---@field bStopAllPlayerSoundsOnDeath boolean
---@field AudioOutputSystemEvents TArray<FString>
---@field AudioOutputSystemPCEvents TArray<FString>
---@field AudioOutputChannelsEventsMap TMap<int32, FString>
---@field pCachedPlayerState APlayerState
---@field AmbienceThemeMap TMap<FSoftObjectPath, UAmbienceTheme>
---@field AcousticThemeMap TMap<FSoftObjectPath, UAcousticTheme>
---@field AudioEventMap TMap<FSoftObjectPath, UAkAudioEvent>
---@field MusicOverrideMap TMap<FSoftObjectPath, UMusicSelection>
---@field RoomAmbienceStates TArray<FRoomAmbienceState>
---@field AcousticPortals TArray<AAkAcousticPortal>
---@field AcousticPortalDoors TArray<ADoor>
---@field SingleLevelAmbienceState FRoomAmbienceState
---@field BackgroundAmbienceState FRoomAmbienceState
---@field DamageShapeEventEmittersMap TMap<FString, FDamageShapeAudioTracking>
---@field RemotePlayer ACharacter
AAudioManager = {}

function AAudioManager:UpdateAudioOutputChannels() end
---@param newCulture FString
function AAudioManager:SwitchWwiseLanguage(newCulture) end
---@param audioGameFlowState EAudioGameFlowStateForMusic
function AAudioManager:SetDebugMusicInfo(audioGameFlowState) end
---@param in_state FString
function AAudioManager:SetDebugCombatLevel(in_state) end
---@param in_state FString
function AAudioManager:SetCurrentThreatLevel(in_state) end
---@param NewCultureCode FString
---@param LanguageName FString
---@param LanguageCode FString
function AAudioManager:RequestChangeAudioLanguage(NewCultureCode, LanguageName, LanguageCode) end
---@param Actor AActor
---@param Music UMusicSelection
function AAudioManager:RemoveMusicElement(Actor, Music) end
---@param Actor AActor
function AAudioManager:RemoveAllMusicElements(Actor) end
---@param PlayerState APlayerState
---@param NewRoomIndex int32
---@param OldRoomIndex int32
function AAudioManager:OnPlayerRoomChanged(PlayerState, NewRoomIndex, OldRoomIndex) end
---@param HealthComponent UHealthComponent
---@param bIsLowHealth boolean
function AAudioManager:OnPlayerLowHealthModeChanged(HealthComponent, bIsLowHealth) end
---@param bIsLowHealth boolean
function AAudioManager:OnPlayerLowHealth(bIsLowHealth) end
---@param health float
---@param MaxHealth float
---@param IsMaxHealthAtMaximum boolean
function AAudioManager:OnPlayerHealthChanged(health, MaxHealth, IsMaxHealthAtMaximum) end
---@param CooldownProgress float
function AAudioManager:OnPlayerDashCooldownChanged(CooldownProgress) end
---@param bCursed boolean
function AAudioManager:OnPlayerCurseStateChanged(bCursed) end
---@param Door ADoor
function AAudioManager:OnDoorOpenStateChanged(Door) end
---@param DestroyedActor AActor
function AAudioManager:OnDoorDestroyed(DestroyedActor) end
---@param in_pEmitter UAkComponent
---@param in_pEvent UAkAudioEvent
function AAudioManager:OnDamageShapeStoppedPlaying(in_pEmitter, in_pEvent) end
---@param in_pEmitter UAkComponent
---@param in_pEvent UAkAudioEvent
function AAudioManager:OnDamageShapeStartedPlaying(in_pEmitter, in_pEvent) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function AAudioManager:OnBiomeStateChanged(Biome, NewBiomeState) end
---@param Biome EBiome
function AAudioManager:OnBiomeChanged(Biome) end
---@param in_audioOutputSystem int32
---@return int32
function AAudioManager:onAudioOutputSystemChangedBP(in_audioOutputSystem) end
---@param in_index int32
function AAudioManager:onAudioOutputSettingChanged(in_index) end
---@param out_RoomName FString
function AAudioManager:OnAngenRoomChanged(out_RoomName) end
function AAudioManager:NotifyLevelStarted() end
function AAudioManager:HeadphonesRemoved() end
---@return UAkComponent
function AAudioManager:GetMusicPlayback() end
---@return boolean
function AAudioManager:GetIsPlayerLowHealth() end
---@return FMusicInfo
function AAudioManager:GetDebugMusicInfo() end
---@return FString
function AAudioManager:GetCurrentAudioLanguage() end
---@param WorldLocation FVector
---@return AAkAcousticPortal
function AAudioManager:GetClosestAngenPortalToLocation(WorldLocation) end
---@return UAkRoomComponent
function AAudioManager:GetActiveListenerRoom() end
---@param WorldContextObject UObject
---@return AAudioManager
function AAudioManager:Get(WorldContextObject) end
---@param index int32
function AAudioManager:ForceUpdateDynamicRange(index) end
---@param Actor AActor
---@param Music UMusicSelection
function AAudioManager:AddMusicElement(Actor, Music) end


---@class ABasePlayerCharacter : ATouristCharacter
---@field LocalPlayerMaterialParams UMaterialParameterCollection
---@field GlobalMaterialParams UMaterialParameterCollection
---@field OnDisplayNameReplicated FBasePlayerCharacterOnDisplayNameReplicated
---@field TimeSpentHoldingDash float
---@field TimeDashNeedsToBeHeldBeforeSprint float
---@field bDashHeld boolean
---@field InteractionManager UInteractionManagerComponent
---@field CachedController ATouristPlayerController
---@field CachedPlayerState ATouristPlayerState
---@field PlayerIdx int32
---@field IsFocused boolean
ABasePlayerCharacter = {}

---@param bNewEnabled boolean
function ABasePlayerCharacter:SetPlayModeActive(bNewEnabled) end
---@param bNewEnabled boolean
function ABasePlayerCharacter:ReceiveSetPlayModeActive(bNewEnabled) end
function ABasePlayerCharacter:ReceiveEndPossessed() end
function ABasePlayerCharacter:ReceiveBeginPossessed() end
function ABasePlayerCharacter:OnSprintPressed() end
function ABasePlayerCharacter:OnSecondaryInteractReleased() end
function ABasePlayerCharacter:OnSecondaryInteractPressed() end
function ABasePlayerCharacter:OnReloadPressed() end
function ABasePlayerCharacter:OnJumpPressed() end
function ABasePlayerCharacter:OnInteractReleased() end
function ABasePlayerCharacter:OnInteractPressed() end
function ABasePlayerCharacter:OnFireReleased() end
function ABasePlayerCharacter:OnFirePressed() end
function ABasePlayerCharacter:OnDashPressed() end
---@return boolean
function ABasePlayerCharacter:IsOwnedLocally() end
---@return boolean
function ABasePlayerCharacter:IsFullyPossessed() end
---@param value float
function ABasePlayerCharacter:HandleTurnRateAxis(value) end
---@param value float
function ABasePlayerCharacter:HandleMoveRightAxis(value) end
---@param value float
function ABasePlayerCharacter:HandleMoveForwardAxis(value) end
---@param value float
function ABasePlayerCharacter:HandleMouseTurn(value) end
---@param value float
function ABasePlayerCharacter:HandleMouseLookUp(value) end
---@param value float
function ABasePlayerCharacter:HandleLookUpRateAxis(value) end
function ABasePlayerCharacter:HandleDiscoverReleased() end
function ABasePlayerCharacter:HandleDiscoverPressed() end
---@return ATouristPlayerController
function ABasePlayerCharacter:GetPlayerController() end
---@return UCameraComponent
function ABasePlayerCharacter:GetPlayerCamera() end


---@class ABeamHazardBase : AHazardBase
---@field OnWindupBegin_cpp FBeamHazardBaseOnWindupBegin_cpp
---@field OnWindupEnd_cpp FBeamHazardBaseOnWindupEnd_cpp
---@field OnBeamBeginFire_cpp FBeamHazardBaseOnBeamBeginFire_cpp
---@field OnBeamEndFire_cpp FBeamHazardBaseOnBeamEndFire_cpp
---@field bUseSimpleLights_cpp boolean
---@field bIsWindingUp_cpp boolean
---@field bRemoveDespawnableComponent boolean
---@field EmitterShell UStaticMeshComponent
---@field Emitter UStaticMeshComponent
---@field LaserLight UPointLightComponent
---@field LaserDirectionArrow UArrowComponent
ABeamHazardBase = {}

---@param DeltaTime float
function ABeamHazardBase:UpdateWindup_cpp(DeltaTime) end
---@param DeltaTime float
function ABeamHazardBase:UpdateLights_cpp(DeltaTime) end
---@param DeltaTime float
function ABeamHazardBase:UpdateEverythingTick_cpp(DeltaTime) end
function ABeamHazardBase:OnRep_RemoveDespawnableComponent() end
---@param Context UObject
---@param DistanceTolerance float
---@return boolean
function ABeamHazardBase:IsLocalPlayerInWayOfAnyBeamHazard(Context, DistanceTolerance) end
---@return float
function ABeamHazardBase:GetWindupValue_cpp() end
---@return UBeamInstance
function ABeamHazardBase:GetBeamInstance() end
---@return AGunBase
function ABeamHazardBase:GetBeamGun() end
function ABeamHazardBase:DestroyDespawnableComponent() end


---@class ABeamManager : AInfo
---@field LiveBeams TArray<UBeamInstance>
---@field FreeBeams TArray<UBeamInstance>
---@field EnemyDamagingBeams TArray<UBeamInstance>
ABeamManager = {}

---@param BeamSource AActor
---@param SpawnParams FBeamSpawnParameters
---@return UBeamInstance
function ABeamManager:SpawnBeam(BeamSource, SpawnParams) end
---@param WorldContextObject UObject
---@return ABeamManager
function ABeamManager:Get(WorldContextObject) end


---@class ABiomeLoader : AActor
ABiomeLoader = {}

---@param TargetBiome EBiome
function ABiomeLoader:PerformBiomeTransition(TargetBiome) end
---@param WorldContextObject UObject
---@return ABiomeLoader
function ABiomeLoader:GetBiomeLoader(WorldContextObject) end
---@param TargetBiome EBiome
---@return boolean
function ABiomeLoader:AreBootLayersVisible(TargetBiome) end


---@class ABulletManager : AActor
---@field PlayerBulletDataPerMaterial TMap<EPhysicalSurface, FBulletDataPerMaterial>
---@field EnemyBulletDataPerMaterial TMap<EPhysicalSurface, FBulletDataPerMaterial>
---@field bAudioCapsuleUsePlayerForward boolean
---@field AudioCapsuleForwardDistance float
---@field AudioCapsuleBackwardDistance float
---@field AudioCapsuleRadius float
---@field AudioSphereRadius float
---@field AudioInnerCapsuleForwardDistance float
---@field AudioInnerCapsulePositionOffset float
---@field AudioInnerCapsuleBackwardDistance float
---@field AudioInnerCapsuleRadius float
---@field AudioOcclusionRefreshInterval float
---@field TravelSoundsCacheSize int32
---@field TravelSoundsWaitTimeUntilFreed float
---@field LightsCacheSize int32
---@field LightCapsuleHalfLength float
---@field LightCapsuleRadius float
---@field LightCapsuleOffset FVector
---@field LightsPreset FBulletLightSettings
---@field DistanceBucketThresholds TArray<float>
---@field AttachedActorsData TMap<AActor, FBulletAttachedActorData>
---@field BulletsLights TArray<UPointLightComponent>
---@field FreeBulletsLight TArray<UPointLightComponent>
---@field AudioManager AAudioManager
---@field BulletsTravelSound TArray<UAkComponent>
---@field FreeBulletsTravelSound TArray<UAkComponent>
---@field PendingFreeBulletsTravelSound TArray<FPendingFreedTravelSound>
---@field InstancedStaticMeshComponents TArray<UInstancedStaticMeshComponent>
---@field VDM UVegetationDisplacementManagerComponent
ABulletManager = {}

---@param EndPlayActor AActor
---@param EndPlayReason EEndPlayReason::Type
function ABulletManager:TrackedEndPlayActor(EndPlayActor, EndPlayReason) end
---@param Quota int32
function ABulletManager:OverrideLightsQuotasForThisFrame(Quota) end
---@param BulletInstance FSpawnerBulletInstance
---@param Params FBulletSpawnData
---@return boolean
function ABulletManager:GetBulletParams(BulletInstance, Params) end
---@param BulletInstance FSpawnerBulletInstance
---@param bDisableExplode boolean
function ABulletManager:ExpireBullet(BulletInstance, bDisableExplode) end
---@param InOwner AActor
---@param bDisableExplode boolean
function ABulletManager:ExpireAllBulletsWithOwner(InOwner, bDisableExplode) end
---@param InInstigator AActor
---@param bDisableExplode boolean
function ABulletManager:ExpireAllBulletsWithInstigator(InInstigator, bDisableExplode) end
---@param DamageTarget int32
---@param bDisableExplode boolean
function ABulletManager:ExpireAllBulletsWithDamageMask(DamageTarget, bDisableExplode) end


---@class ACinematicActor : AHMQActor
---@field bCinematicEnabled boolean
---@field bCinematicRunOnce boolean
---@field bCinematicSkippable boolean
---@field bCinematicMode boolean
---@field bHideHud boolean
---@field bDisableMovementInput boolean
---@field bDisableLookInput boolean
---@field bHidePlayer boolean
---@field bDisablePlayerCollision boolean
---@field bHidePlayerWeapon boolean
---@field bOnlyInteractingPlayer boolean
---@field bHostTriggerable boolean
---@field bClientTriggerable boolean
---@field bBothPlayersAliveRequired boolean
---@field bBothPlayersFade boolean
---@field bTerminateIfDisconnectedAsClient boolean
---@field bAllowDuringJoining boolean
---@field FadeStartOutDuration float
---@field FadeStartInSleep float
---@field FadeStartInDuration float
---@field FadeSkipOutDuration float
---@field FadeSkipInDuration float
---@field FadeStopOutDuration float
---@field FadeStopInDuration float
---@field VisibleCinematicActors TArray<AActor>
---@field HiddenCinematicActors TArray<AActor>
---@field DestroyableCinematicActors TArray<AActor>
---@field OnCinematicStart FCinematicActorOnCinematicStart
---@field OnCinematicSetup FCinematicActorOnCinematicSetup
---@field OnCinematicRun FCinematicActorOnCinematicRun
---@field OnCinematicStop FCinematicActorOnCinematicStop
---@field OnCinematicComplete FCinematicActorOnCinematicComplete
---@field OnCinematicCompleteImmediate FCinematicActorOnCinematicCompleteImmediate
---@field OnCinematicEvent FCinematicActorOnCinematicEvent
---@field WrapperComponent UCinematicWrapperComponent
---@field CinematicManagerComponent UCinematicManagerComponent
---@field InitiatorActor AActor
---@field SequenceActors TArray<ALevelSequenceActor>
---@field SpawnedSequenceActors TArray<ALevelSequenceActor>
---@field SequencePlayers TArray<ASequenceCinematicPlayer>
---@field FeatureComponents TArray<UCinematicFeatureComponent>
---@field SequenceComponent UCinematicSequenceComponent
---@field SkipGate FName
---@field RunCount int32
---@field CompleteCount int32
---@field bStopFadeInEnabled boolean
---@field bSkipFadeInEnabled boolean
---@field bSkipped boolean
---@field bLockStartFadeIn boolean
---@field bDestroyWhenComplete boolean
---@field bWasClientWhenStarted boolean
ACinematicActor = {}

---@return boolean
function ACinematicActor:WasCinematicSkipped() end
function ACinematicActor:UnlockStartFadeIn() end
---@param SequenceActor ALevelSequenceActor
function ACinematicActor:StopSequence(SequenceActor) end
---@param Character ACharacter
---@param AnimMontage UAnimMontage
function ACinematicActor:StopAnimationMontage(Character, AnimMontage) end
---@param SequenceTag FName
---@param Player ASequenceCinematicPlayer
---@return ALevelSequenceActor
function ACinematicActor:StartSequenceByTag(SequenceTag, Player) end
---@param SequenceActor ALevelSequenceActor
---@param Player ASequenceCinematicPlayer
function ACinematicActor:StartSequenceByActor(SequenceActor, Player) end
---@param LevelSequence TSoftObjectPtr<ULevelSequence>
---@param Player ASequenceCinematicPlayer
---@return ALevelSequenceActor
function ACinematicActor:StartSequence(LevelSequence, Player) end
---@param InController AController
---@return boolean
function ACinematicActor:StartCinematicFromController(InController) end
---@param InPlayerController APlayerController
---@param InInitiatorActor AActor
---@return boolean
function ACinematicActor:StartCinematic(InPlayerController, InInitiatorActor) end
---@param LevelSequence TSoftObjectPtr<ULevelSequence>
---@param Bindings TArray<FCinematicSequenceBinding>
---@param EventReceivers TArray<AActor>
---@return ALevelSequenceActor
function ACinematicActor:SpawnSequence(LevelSequence, Bindings, EventReceivers) end
---@param InPlayerController APlayerController
---@return boolean
function ACinematicActor:SkipCinematic(InPlayerController) end
---@param NewViewTarget AActor
---@param TransitionParams FViewTargetTransitionParams
function ACinematicActor:SetViewTarget(NewViewTarget, TransitionParams) end
---@param bNewStopFadeInEnabled boolean
function ACinematicActor:SetStopFadeInEnabled(bNewStopFadeInEnabled) end
---@param NewSkipGate FName
function ACinematicActor:SetSkipGateName(NewSkipGate) end
---@param bNewSkipFadeInEnabled boolean
function ACinematicActor:SetSkipFadeInEnabled(bNewSkipFadeInEnabled) end
---@param bNewComplete boolean
function ACinematicActor:SetSetupComplete(bNewComplete) end
---@param NewInitiatorActor AActor
function ACinematicActor:SetInitiatorActor(NewInitiatorActor) end
---@param bNewDestroyWhenComplete boolean
function ACinematicActor:SetDestroyWhenComplete(bNewDestroyWhenComplete) end
---@param DeltaTime float
function ACinematicActor:ReceiveTickCinematic(DeltaTime) end
function ACinematicActor:ReceiveStopCinematic() end
function ACinematicActor:ReceiveStartCinematic() end
---@param SkipGateName FName
function ACinematicActor:ReceiveSkipCinematic(SkipGateName) end
function ACinematicActor:ReceiveSetupCinematic() end
function ACinematicActor:ReceiveRunCinematic() end
function ACinematicActor:ReceivePrepareStopCinematic() end
---@param InPlayerController APlayerController
---@param InInitiatorActor AActor
function ACinematicActor:ReceiveCannotStartCinematic(InPlayerController, InInitiatorActor) end
function ACinematicActor:ProcessSkipCinematic() end
---@param duration float
function ACinematicActor:PlayerCameraFadeOut(duration) end
---@param duration float
function ACinematicActor:PlayerCameraFadeIn(duration) end
---@param Character ACharacter
---@param AnimMontage UAnimMontage
---@param PlayRate float
---@param StartSectionName FName
---@return float
function ACinematicActor:PlayAnimationMontage(Character, AnimMontage, PlayRate, StartSectionName) end
function ACinematicActor:LockStartFadeIn() end
---@param SequenceActor ALevelSequenceActor
---@return boolean
function ACinematicActor:IsSequencePlaying(SequenceActor) end
---@param SequenceActor ALevelSequenceActor
---@param duration float
---@return boolean
function ACinematicActor:IsSequencePlaybackEndWithin(SequenceActor, duration) end
---@return boolean
function ACinematicActor:IsCinematicTriggerableMPCheck() end
---@return boolean
function ACinematicActor:IsCinematicTriggerable() end
---@return boolean
function ACinematicActor:IsCinematicSkipping() end
---@return boolean
function ACinematicActor:IsCinematicRunning() end
---@param Actor AActor
---@param Location FVector
---@param Rotation FRotator
---@param duration float
---@param EaseType EMathEaseFunction::Type
---@param ActionType EMoveComponentAction::Type
---@param LatentInfo FLatentActionInfo
function ACinematicActor:InterpolateToLocationAndRotation(Actor, Location, Rotation, duration, EaseType, ActionType, LatentInfo) end
function ACinematicActor:ImmediatelyCompleteCinematic() end
---@param SequenceActor ALevelSequenceActor
---@return float
function ACinematicActor:GetSequencePlaybackPercentage(SequenceActor) end
---@return APlayerController
function ACinematicActor:GetPlayerController() end
---@return APlayerCameraManager
function ACinematicActor:GetPlayerCameraManager() end
---@return ACharacter
function ACinematicActor:GetInitiatorCharacter() end
---@return AActor
function ACinematicActor:GetInitiatorActor() end
---@return UCinematicWrapperComponent
function ACinematicActor:GetEventsComponent() end
---@param SequenceActor ALevelSequenceActor
---@return boolean
function ACinematicActor:EndSequence(SequenceActor) end
function ACinematicActor:EndCinematic() end
function ACinematicActor:ContinueCinematic() end
---@param EventName FName
function ACinematicActor:CinematicEvent(EventName) end
---@return boolean
function ACinematicActor:CanStartCinematic() end
---@param SequenceActor ALevelSequenceActor
---@param BindingName FName
---@param Actor AActor
---@return boolean
function ACinematicActor:AddSequenceBinding(SequenceActor, BindingName, Actor) end


---@class ACinematicPlayerAIController : AAIController
---@field PlayerController APlayerController
---@field bMoving boolean
---@field bMovementInitialized boolean
ACinematicPlayerAIController = {}

---@param NewPlayerController APlayerController
function ACinematicPlayerAIController:SetPlayerController(NewPlayerController) end
---@return boolean
function ACinematicPlayerAIController:IsCinematicMoving() end
---@return APlayerController
function ACinematicPlayerAIController:GetPlayerController() end
---@param Destination FVector
---@param AcceptanceRadius float
---@param UsePathfinding boolean
---@return EPathFollowingRequestResult::Type
function ACinematicPlayerAIController:CinematicMoveToLocation(Destination, AcceptanceRadius, UsePathfinding) end


---@class ACollectibleBase : AHMQActor
---@field CollectibleType ECollectibleType
---@field DisplayName FText
---@field DescriptionText FText
---@field FontIcon FString
---@field IconTexture TSoftObjectPtr<UTexture2D>
---@field bShowLabel boolean
---@field bShowNotification boolean
---@field bNeverBlockPrimaryInteract boolean
---@field bCollectOnCollision boolean
---@field TrailColor FLinearColor
---@field bWasDroppedByPlayer boolean
---@field bIsShopSpawn boolean
---@field bCustomDepthEnabled boolean
---@field UserPolicy ECollectibleUserPolicy
---@field bShouldFlyOut boolean
---@field bCollideWithCollectibles boolean
---@field bCollectableDuringFlyOut boolean
---@field bAutoSuckAfterFlyOut boolean
---@field bSuckAltersSimulatePhysics boolean
---@field FlyOutMaxDistance float
---@field FlyOutImpulse FVector
---@field bDestroyOnReset boolean
---@field OnCollect FCollectibleBaseOnCollect
---@field OnFirstCollect FCollectibleBaseOnFirstCollect
---@field collision USphereComponent
---@field CollectorDetector UInteractableSphereComponent
---@field Visuals UStaticMeshComponent
---@field DiscoverableComponent UDiscoverableComponent
---@field ParticleSystem UParticleSystemComponent
---@field MinimapObject UMinimapObject
---@field PingableComponent UPingableComponent
---@field TextPrompt FText
---@field DefaultTextPrompt FText
---@field bIsCollected boolean
---@field SpawnEffect TSubclassOf<AEffectContainer>
---@field CollectEffect TSubclassOf<AEffectContainer>
---@field Label UHUDLabel
---@field FlyOutComp UFlyOutComponent
---@field SuckSourceComp USuckSourceComponent
---@field VegetationDisplacementComponent UVegetationDisplacerComponent
---@field DespawnableActorComponent UDespawnableActorComponent
---@field ActivatorComponent UHMQActorActivatorComponent
---@field CollectionTimer float
---@field CollectionDelay float
---@field bMustBeUnlocked boolean
---@field bSingleUnlockInstance boolean
---@field bStatsUpdate boolean
---@field bDropped boolean
---@field CollectedTag FName
---@field HUDDetailsComp UHUDDetailsComponent
ACollectibleBase = {}

---@param InteractingController AController
function ACollectibleBase:UpdateLabelPrompt(InteractingController) end
---@param UserPolicy ECollectibleUserPolicy
function ACollectibleBase:SetUserPolicy(UserPolicy) end
---@param bNewIsCollected boolean
function ACollectibleBase:SetIsCollected(bNewIsCollected) end
---@param bNewDropped boolean
function ACollectibleBase:SetDropped(bNewDropped) end
function ACollectibleBase:SetDiscovered() end
---@param NewPrompt FText
function ACollectibleBase:SetDefaultTextPrompt(NewPrompt) end
function ACollectibleBase:ResetTextPrompt() end
function ACollectibleBase:OnRep_UserPolicyChanged() end
---@param InteractingController ATouristPlayerController
function ACollectibleBase:OnCollectibleWantsFocus(InteractingController) end
---@param InteractingController ATouristPlayerController
function ACollectibleBase:OnCollectibleLoseFocus(InteractingController) end
---@param InteractingController AController
function ACollectibleBase:OnCollectibleInteract(InteractingController) end
---@param InteractingController ATouristPlayerController
function ACollectibleBase:OnCollectibleGetInteractionDelay(InteractingController) end
---@param InteractingController ATouristPlayerController
function ACollectibleBase:OnCollectibleGainFocus(InteractingController) end
---@param InteractingController AController
function ACollectibleBase:OnCollectibleBecomeInteractable(InteractingController) end
---@param Collector APlayerCharacter
---@param bManually boolean
function ACollectibleBase:OnCollected(Collector, bManually) end
---@param InteractingController AController
---@param bTemporaryDisabledUntilEveryoneExit boolean
function ACollectibleBase:OnBecomeUninteractable(InteractingController, bTemporaryDisabledUntilEveryoneExit) end
---@return boolean
function ACollectibleBase:NeedsToTick() end
---@param Collector APlayerCharacter
---@param bManually boolean
---@param bFirstCollect boolean
function ACollectibleBase:MulticastCollect(Collector, bManually, bFirstCollect) end
---@return boolean
function ACollectibleBase:IsDropped() end
---@return boolean
function ACollectibleBase:IsDiscovered() end
---@return boolean
function ACollectibleBase:IsCollected() end
---@return boolean
function ACollectibleBase:HasBeenCollectedBefore() end
---@param InSuckSourceComp USuckSourceComponent
function ACollectibleBase:HandleSuckTryActivate(InSuckSourceComp) end
---@param InSuckSourceComp USuckSourceComponent
function ACollectibleBase:HandleSuckerReached(InSuckSourceComp) end
---@param InSuckSourceComp UActorComponent
function ACollectibleBase:HandleSuckDeactivated(InSuckSourceComp) end
---@param InSuckSourceComp UActorComponent
---@param bReset boolean
function ACollectibleBase:HandleSuckActivated(InSuckSourceComp, bReset) end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function ACollectibleBase:HandleSerializeState(Serializer) end
---@param InteractingController AController
function ACollectibleBase:HandleGetInteractArgs(InteractingController) end
---@param InFlyOutComp UActorComponent
function ACollectibleBase:HandleFlyOutDeactivated(InFlyOutComp) end
---@param InFlyOutComp UActorComponent
---@param bReset boolean
function ACollectibleBase:HandleFlyOutActivated(InFlyOutComp, bReset) end
---@return ECollectibleUserPolicy
function ACollectibleBase:GetUserPolicy() end
---@return FName
function ACollectibleBase:GetDiscoveryTag() end
---@return FText
function ACollectibleBase:GetDescription() end
---@param bAbsolute boolean
---@return FVector
function ACollectibleBase:GetCenterPosition(bAbsolute) end
---@param Collector APlayerCharacter
function ACollectibleBase:ForceCollect(Collector) end
---@param Collector APlayerCharacter
function ACollectibleBase:FirstCollection(Collector) end
function ACollectibleBase:Despawn() end
---@param Collector APlayerCharacter
---@param bManually boolean
function ACollectibleBase:CollectedVisuals(Collector, bManually) end
---@param Collector APlayerCharacter
---@return boolean
function ACollectibleBase:CanBeCollected(Collector) end
---@return FVector
function ACollectibleBase:CalcCenterPosition() end


---@class AContactHazardBase : AHazardBase
---@field ContactTimerHandle FTimerHandle
---@field UpArrow UArrowComponent
---@field bOnlyApplyEffectsOnTheRightSide boolean
---@field bApplyEffectImmediatelyOnContact boolean
---@field ContactTickInterval float
---@field InitialContactTickDelay float
---@field OnHazardPlayerContactTick FContactHazardBaseOnHazardPlayerContactTick
---@field OnPlayerEnterHazard FContactHazardBaseOnPlayerEnterHazard
---@field OnPlayerExitHazard FContactHazardBaseOnPlayerExitHazard
AContactHazardBase = {}

---@param bActive boolean
function AContactHazardBase:OnHazardActiveStateChanged(bActive) end
---@param bDisabled boolean
function AContactHazardBase:OnDisabledStateChanged(bDisabled) end
---@param OverlappedActor AActor
---@param OtherActor AActor
function AContactHazardBase:OnActorEndOverlap_Internal(OverlappedActor, OtherActor) end
---@param OverlappedActor AActor
---@param OtherActor AActor
function AContactHazardBase:OnActorBeginOverlap_Internal(OverlappedActor, OtherActor) end
function AContactHazardBase:HandleHazardContactLogic_Internal() end


---@class ADEPRECATED_HookShotCollectible : ACollectibleBase
ADEPRECATED_HookShotCollectible = {}


---@class ADamageShapeManager : AActor
---@field DamageShapeList TSet<UDamageShapeComponent>
---@field DamageShapeBlockerList TSet<UDamageShapeBlockerComponent>
ADamageShapeManager = {}



---@class ADamageSpline : AActor
---@field Spline USplineComponent
---@field Radius float
---@field NumSegments int32
---@field SegmentLength float
---@field Segment2SegmentSpace float
---@field NumSlices int32
---@field TrailLength float
ADamageSpline = {}



---@class ADoor : AActor
---@field OnDoorOpenChanged FDoorOnDoorOpenChanged
---@field OnDoorLockdownChanged FDoorOnDoorLockdownChanged
---@field OnDoorLogicChanged FDoorOnDoorLogicChanged
---@field OnConnectingRoomsLoaded FDoorOnConnectingRoomsLoaded
---@field bIsOpen boolean
---@field bAlwaysOpen boolean
---@field bStaysOpen boolean
---@field FirstOpenPlayRate float
---@field NormalOpenPlayRate float
---@field bOnlyPlayersCanOpen boolean
---@field bHasBeenOpened boolean
---@field bTraversed boolean
---@field bFirstOpen boolean
---@field bLogicLocked boolean
---@field b2PersonDoor boolean
---@field bDoorCanLock boolean
---@field bLockdown boolean
---@field bForceLoadingMessage boolean
---@field TextLockdown FText
---@field Text2PersonDoor FText
---@field TextRoomLoading FText
---@field Interactable UInteractableComponent
---@field Trigger UBoxComponent
---@field Blocker UBoxComponent
---@field MinimapObject UMinimapObject
---@field AngenSpawnInfo UAngenLocatorSpawnInfoComponent
---@field LockedIconSettings UStaticMinimapIconSettings
---@field ClosedIconSettings UStaticMinimapIconSettings
---@field ClosedNeverOpenedIconSettings UStaticMinimapIconSettings
---@field OpenIconSettings UStaticMinimapIconSettings
---@field OpenTraversedIconSettings UStaticMinimapIconSettings
---@field Sounds UAkComponent
---@field OpenEffect TSubclassOf<AEffectContainer>
---@field CloseEffect TSubclassOf<AEffectContainer>
---@field CannotUnlockEffect TSubclassOf<AEffectContainer>
---@field UnlockEffect TSubclassOf<AEffectContainer>
---@field TraversalMechanism2Person TSubclassOf<AActor>
---@field TraversalMechanism2PersonIntance AActor
---@field ProximityInvoker UPOIProximityInvokerComponent
---@field TraversalMechanism2PersonInstance AActor
---@field OverlappedActors TArray<AActor>
---@field LockdownCounter int32
ADoor = {}

---@param bOverlapRequired boolean
---@return boolean
function ADoor:TryOpenDoor(bOverlapRequired) end
function ADoor:SetTraversed() end
---@param Locked boolean
function ADoor:SetLogicLocked(Locked) end
---@param bEnabled boolean
function ADoor:SetLockdownCounted(bEnabled) end
---@param bEnabled boolean
function ADoor:SetLockdown(bEnabled) end
---@param Enabled boolean
function ADoor:SetForceLoadingMessage(Enabled) end
---@param allPeopleRequired boolean
function ADoor:Set2PersonDoor(allPeopleRequired) end
---@param InteractingController ATouristPlayerController
function ADoor:OnWantsFocus(InteractingController) end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function ADoor:OnSerializeState(Serializer) end
---@param StreamingRoom ALevelGenRoomStreamingActor
function ADoor:OnRoomLoaded(StreamingRoom) end
---@param RoomIndex int32
---@param ActivationEventType ERoomActivationEventType
function ADoor:OnRoomDeactivated(RoomIndex, ActivationEventType) end
---@param RoomIndex int32
---@param ActivationEventType ERoomActivationEventType
function ADoor:OnRoomActivated(RoomIndex, ActivationEventType) end
function ADoor:OnRep_LogicLocked() end
function ADoor:OnRep_LockdownCounter() end
function ADoor:OnRep_Lockdown() end
function ADoor:OnRep_2PersonDoor() end
---@param DestroyedActor AActor
function ADoor:OnOverlappedActorDestroyed(DestroyedActor) end
---@param Map ULevelGenMapIngame
function ADoor:OnMapReady(Map) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function ADoor:OnEndOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex) end
function ADoor:OnDoorOpenStateChanged() end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function ADoor:OnBeginOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
---@return boolean
function ADoor:IsTraversed() end
---@return boolean
function ADoor:IsLogicLocked() end
---@return boolean
function ADoor:IsLockdown() end
---@return boolean
function ADoor:IsLoadingLocked() end
---@return boolean
function ADoor:IsDoorOpenable() end
---@return boolean
function ADoor:IsDoorOpen() end
---@return boolean
function ADoor:IsDoorFirstOpen() end
---@return boolean
function ADoor:IsAnyCharacterTouchingDoorTrigger() end
---@return boolean
function ADoor:Is2PersonDoor() end
---@param InteractingController AController
function ADoor:InteractFailure(InteractingController) end
function ADoor:HandleRespawned() end
---@param InteractingController AController
function ADoor:HandleGetInteractArgs(InteractingController) end
---@param OtherDoor ADoor
function ADoor:HackRoomInfo(OtherDoor) end
---@return float
function ADoor:GetDoorOpenPlayRate() end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function ADoor:BiomeStateChanged(Biome, NewBiomeState) end


---@class ADoubleJumpCollectible : ACollectibleBase
---@field DoubleJumpModifier UMetaModifierComponent
ADoubleJumpCollectible = {}



---@class ADropVolume : AActor
---@field Streamer ULevelGenStreamingFocus
---@field bCanStreamInLevels boolean
ADropVolume = {}



---@class ADummyAngenLevelGenActor : AAngenLevelGenActor
ADummyAngenLevelGenActor = {}


---@class AEnemyBase : ATouristCharacter
---@field bNeedToApplyDataAssetSettingsOnPossess boolean
---@field GroupId int32
---@field bIsPartOfEncounter boolean
---@field AggressionStateChanged FEnemyBaseAggressionStateChanged
---@field bHasEverBeenAggroed boolean
---@field bElite boolean
---@field AvengeForGhostName FName
---@field SplitRecursionDepth int32
---@field OnTeleportStart FEnemyBaseOnTeleportStart
---@field OnTeleportEnd FEnemyBaseOnTeleportEnd
---@field SettingsDataAsset UDataAsset_EnemyBase
---@field EliteDataAsset UDataAsset_EliteEnemyBase
---@field EnemyType EEnemyType
---@field AggressionGroup EAggressionGroup
---@field EnemyGroup UEnemyGroup
---@field bRelevantForRoomLockdown boolean
---@field bShowHudIndicator boolean
---@field CurrentTarget AActor
---@field ClientCachedCurrentTarget AActor
---@field FocusActor AActor
---@field bVisibleAsThreat boolean
---@field AimDir FRotator
---@field DamageFlashPhase float
---@field DamageFlashColor FColor
---@field MaterialInstances TArray<UMaterialInstanceDynamic>
---@field AggressionState EAggressionState
---@field CurrentAttackPhaseData FEnemyAttackPhaseData
---@field AttackWarningTimeOffset float
---@field bHasHandledAttackPhaseWarning boolean
---@field WolfpackState EEnemyWolfpackState
---@field WolfpackStateTimer float
---@field bProjectAnchorPointToNavigation boolean
---@field AnchorPoint FVector
---@field CachedController AEnemyControllerBase
---@field ImpactVelocityTransferPercentage float
---@field ImpactVelocityHeightAdd float
---@field MinImpactVelocityMagnitude float
---@field Weapons TArray<FEnemyWeaponInfo>
---@field CurrentGun AGunBase
---@field DamageFlashTime float
---@field bForceAggroWhenRoomNearlyEmpty boolean
---@field DeathMessageRadius float
---@field DamageMessageRadius float
---@field PlayerCollisionDamage float
---@field LockOnTargetComponent ULockOnTargetComponent
---@field ThreatComponent UThreatComponent
---@field WeaponManagerComponent UWeaponManagerComponent
---@field DespawnableActorComponent UDespawnableActorComponent
---@field HitReactionEffectSpawnerComponent UHitReactionEffectSpawnerComponent
---@field Sounds UAkComponent
---@field MinimapObject UMinimapObject
---@field PingableComponent UPingableComponent
---@field SpawnVisualComponent USpawnVisualComponent
---@field EliteComponent UEliteEnemyComponent
---@field DamageMultiplierManagerComponent UDamageMultiplierManagerComponent
---@field TimeDilationComponent UTimeDilationComponent
---@field DamageTargetListener UDamageTargetListenerComponent
---@field TouchDamageSettings FEnemyTouchDamageSettings
---@field DeathKnockbackForce float
---@field SpawnSfx UAkAudioEvent
---@field ActivationSfx UAkAudioEvent
---@field SpottedPlayerSfx UAkAudioEvent
---@field PassiveIdleLoopSfx UAkAudioEvent
---@field PassiveIdleLoopSfxStop UAkAudioEvent
---@field AggressiveIdleLoopSfx UAkAudioEvent
---@field AggressiveIdleLoopSfxStop UAkAudioEvent
---@field HitSfx UAkAudioEvent
---@field CritHitSfx UAkAudioEvent
---@field KilledSfx UAkAudioEvent
---@field bAutoPlayKilledSFXOnDeath boolean
---@field bUnpossessOnDeath boolean
---@field DeathPfx FName
---@field DeathPfxMeshResource FName
---@field VegetationDisplacer UVegetationDisplacerComponent
---@field DeathPC UNGParticleComponent
---@field PredatorVisionPC UNGParticleComponent
---@field bApplyDeathFluidImpact boolean
---@field DeathFluidImpactRadius float
---@field DeathFluidImpactStrength float
---@field PredatorVisionActivationLevel int32
---@field PredatorVisionEnabled boolean
---@field PredatorVisionActivationDistance float
---@field PredatorCheckInterval float
---@field MeshHideFrameCounter int32
---@field bAutoManageNavMovementMode boolean
---@field CurrentEnemyStatus FCurrentEnemyStatus
---@field LastTicketRequestTime float
---@field LastTicketUseTime float
---@field JumpAnimationRequest FTargetedAnimationRequestDescriptor
---@field ReloadAnimationRequest FTargetedAnimationRequestDescriptor
---@field HookShotAnimationRequest FTargetedAnimationRequestDescriptor
---@field DeathBehaviors TArray<UEnemyDeathBehaviorBase>
---@field bThreatIndicatorManuallyHidden boolean
---@field bIsCriticalDodgeAvailable boolean
---@field DamagedTargets TSet<AActor>
---@field CurrencySpawnerCount int32
---@field bForceWeaponAimAtTarget_Enabled boolean
---@field bForceWeaponAimAtTarget_TrackingTarget boolean
---@field ForceWeaponAimAtTarget_CurrentTarget FVector
---@field ParticleColors FEnemyParticleColorOverrideSettings
---@field LootComponent ULootComponent
---@field AppliedEliteModifiers TArray<UEliteModifier>
---@field CombatRole EEnemyCombatRole
---@field TickPriority float
---@field bCanUseEnemyTickManager boolean
---@field bOverridePhysicsEnableDetectionRadius boolean
---@field PhysicsEnableDetectionRadius float
---@field ClarityAwardedOnDeath int32
---@field bClampMeleeHitTimeDilation boolean
AEnemyBase = {}

function AEnemyBase:UpdateEnemySettings() end
---@param DurationRemaining float
function AEnemyBase:UpdateAttackPhaseDurationRemaining(DurationRemaining) end
---@param Type EEnemyParticleColorType
---@param OutColor FColor
---@param CustomColorName FName
---@return boolean
function AEnemyBase:TryGetParticleColorOverride(Type, OutColor, CustomColorName) end
function AEnemyBase:TriggerAttackWarning() end
---@param Color FColor
function AEnemyBase:StartDamageFlash(Color) end
---@param Location FVector
---@return float
function AEnemyBase:SquareDistanceTo(Location) end
---@param Location FVector
---@return float
function AEnemyBase:SquareDistance2DTo(Location) end
---@return boolean
function AEnemyBase:ShouldSkeletalMeshPhysicsBeOptimisedAway() end
---@return boolean
function AEnemyBase:ShouldShowThreatWarningRegardlessOfDistance() end
---@param State EEnemyWolfpackState
---@param Time float
function AEnemyBase:SetWolfpackState(State, Time) end
---@param bShow boolean
function AEnemyBase:SetShowThreatWarningRegardlessOfDistance(bShow) end
---@param ColorSet FEnemyParticleColorOverrideSettings
function AEnemyBase:SetParticleColors(ColorSet) end
---@param bSuppressed boolean
function AEnemyBase:SetMeshCollisionSuppressed(bSuppressed) end
---@param Group UEnemyGroup
function AEnemyBase:SetEnemyGroup(Group) end
---@param CritWindow float
function AEnemyBase:SetCriticalDodgeAvailableIfInWindow(CritWindow) end
---@param bAvailable boolean
function AEnemyBase:SetCriticalDodgeAvailable(bAvailable) end
---@param NewAnchorPoint FVector
function AEnemyBase:SetAnchorPoint(NewAnchorPoint) end
---@param DamageEvent FTouristDamageEvent
---@return UEnemyDeathBehaviorBase
function AEnemyBase:SelectDeathBehavior(DamageEvent) end
function AEnemyBase:ResetIsMovingCheck() end
function AEnemyBase:RequestHideHealthBar() end
---@param NumFrames int32
function AEnemyBase:RequestGuaranteedTickForFrames(NumFrames) end
function AEnemyBase:RequestGuaranteedTick() end
---@param AttackType EAttackTicketType
---@return boolean
function AEnemyBase:RequestAttackTicket(AttackType) end
function AEnemyBase:PlayFootstep() end
---@param Time float
function AEnemyBase:OverrideAllowTouchDamage(Time) end
---@param Target AActor
---@param DamageEvent FTouristDamageEvent
function AEnemyBase:OnTargetDamaged(Target, DamageEvent) end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function AEnemyBase:OnSerializeState(Serializer) end
---@param NewMainWeapon APlayerGun
---@param OldMainWeapon APlayerGun
function AEnemyBase:OnPlayerWeaponChanged(NewMainWeapon, OldMainWeapon) end
---@param OldLevel int32
---@param NewLevel int32
function AEnemyBase:OnPlayerAdrenalineLevelChanged(OldLevel, NewLevel) end
function AEnemyBase:OnLostLOS() end
---@param PlayerPos FVector
---@param TargetPlayer AActor
function AEnemyBase:OnGainLOS(PlayerPos, TargetPlayer) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function AEnemyBase:OnDeath(DamagedActor, DamageEvent) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function AEnemyBase:OnDamageTaken(DamagedActor, DamageEvent) end
function AEnemyBase:OnClientReceiveCurrentTarget() end
---@param NewAttackPhase EAttackPhase
---@param OldAttackPhase EAttackPhase
function AEnemyBase:OnAttackPhaseSet(NewAttackPhase, OldAttackPhase) end
---@param OldState EAggressionState
---@param NewState EAggressionState
function AEnemyBase:OnAggressionStateChanged(OldState, NewState) end
---@param NewAttackPhase EAttackPhase
---@param PhaseDuration float
---@param DodgeWindowLength float
function AEnemyBase:MulticastSetAttackPhase(NewAttackPhase, PhaseDuration, DodgeWindowLength) end
function AEnemyBase:MulticastLostLOS() end
---@param PlayerPos FVector
---@param TargetPlayer AActor
function AEnemyBase:MulticastGainLOS(PlayerPos, TargetPlayer) end
---@param OldState EAggressionState
---@param NewState EAggressionState
function AEnemyBase:MulticastAggressionStateChanged(OldState, NewState) end
---@return boolean
function AEnemyBase:IsVisibleAsThreat() end
---@return boolean
function AEnemyBase:IsThreatIndicatorManuallyHidden() end
---@param PlayerLoc FVector
---@param Point FVector
---@param ViewConeRadius float
---@param OutAwayVector FVector
---@return boolean
function AEnemyBase:IsPointInViewConeToEnemy(PlayerLoc, Point, ViewConeRadius, OutAwayVector) end
---@return boolean
function AEnemyBase:IsPartOfActiveCinematic() end
---@return boolean
function AEnemyBase:IsMoving() end
---@return boolean
function AEnemyBase:IsMeshCollisionSuppressed() end
---@return boolean
function AEnemyBase:IsInLockdownRoom() end
---@return boolean
function AEnemyBase:IsInDodgeWindow() end
---@param CritWindow float
---@return boolean
function AEnemyBase:IsInCriticalDodgeWindow(CritWindow) end
---@param ScaleFOV float
---@return boolean
function AEnemyBase:IsInCameraViewCone(ScaleFOV) end
---@return boolean
function AEnemyBase:IsEnemyAudioThreatDebugVarEnabled() end
---@return boolean
function AEnemyBase:IsBoss() end
---@return boolean
function AEnemyBase:IsBeamTargetingLineDisabled() end
function AEnemyBase:HideThreatIndicator() end
---@param Modifier UEliteModifier
---@return boolean
function AEnemyBase:HasModifierBeenApplied(Modifier) end
---@return boolean
function AEnemyBase:HasBeenActivated() end
function AEnemyBase:HandleUnusedTicketRemoved() end
function AEnemyBase:HandleEnemySettingsUpdate() end
---@return EEnemyWolfpackState
function AEnemyBase:GetWolfpackState() end
---@return UWeaponManagerComponent
function AEnemyBase:GetWeaponManagerComponent() end
---@return float
function AEnemyBase:GetTimeSeconds() end
---@return float
function AEnemyBase:GetTimeInAttackPhase() end
---@param Source EEnemyRotationSource
---@param OutSourceRotation FSourceRotationPair
---@return boolean
function AEnemyBase:GetSourceRotation(Source, OutSourceRotation) end
---@return UAkComponent
function AEnemyBase:GetSoundsComponent() end
---@return int32
function AEnemyBase:GetSignedEnemyID() end
---@return AActor
function AEnemyBase:GetShieldActor() end
---@param Source EEnemyRotationSource
---@param OutRotator FRotator
---@param OutAffectedByRequest boolean
---@return boolean
function AEnemyBase:GetRequestedRotationForSource(Source, OutRotator, OutAffectedByRequest) end
---@return float
function AEnemyBase:GetProgressInAttackPhase() end
---@return FEnemyParticleColorOverrideSettings
function AEnemyBase:GetParticleColors() end
---@param Killer AActor
---@return FVector
function AEnemyBase:GetLootDropLocation(Killer) end
---@return ULockOnTargetComponent
function AEnemyBase:GetLockOnTargetComponent() end
---@return float
function AEnemyBase:GetLastTicketUseTime() end
---@return float
function AEnemyBase:GetLastTicketRequestTime() end
---@return UTouristFlyingMovementComponent
function AEnemyBase:GetFlyingMovementComponent() end
---@return EEnemyType
function AEnemyBase:GetEnemyType() end
---@return UEnemyGroup
function AEnemyBase:GetEnemyGroup() end
---@return AEnemyControllerBase
function AEnemyBase:GetEnemyController() end
---@return EEnemyTargetDodgeEventType
function AEnemyBase:GetDodgeEventTypeForAttackPhase() end
---@return float
function AEnemyBase:GetDistanceToClosestPlayerBullet() end
---@return UDespawnableActorComponent
function AEnemyBase:GetDespawnableActorComponent() end
---@return UEnemyDeathBehaviorBase
function AEnemyBase:GetCurrentDeathBehavior() end
---@return FEnemyAttackPhaseData
function AEnemyBase:GetAttackPhaseData() end
---@return EAttackPhase
function AEnemyBase:GetAttackPhase() end
---@return FVector
function AEnemyBase:GetAnchorPoint() end
---@return EAggressionState
function AEnemyBase:GetAggressionState() end
---@return EAggressionGroup
function AEnemyBase:GetAggressionGroup() end
function AEnemyBase:EndGuaranteedTickRequest() end
function AEnemyBase:EnableEnemyAsThreat() end
---@return boolean
function AEnemyBase:EnableDeathRewards() end
function AEnemyBase:ClearCurrentTargetAfterDeath() end
---@return boolean
function AEnemyBase:CanUseEnemyTickManager() end
---@param Modifier UEliteModifier
function AEnemyBase:ApplyEliteModifier(Modifier) end


---@class AEnemyControllerBase : AAIController
---@field bLockActiveBehaviours boolean
---@field bExitBehavioursOnKnockback boolean
---@field ActivationDistance float
---@field CombatEnterDistance float
---@field CombatExitDistance float
---@field DamageForcedAggroDuration float
---@field bRequirePathForCombat boolean
---@field bHasEverSensedPlayer boolean
---@field bHasEverBeenSeenByPlayer boolean
---@field bIsVisibleByPlayer boolean
---@field VisibleByPlayerFOVScale float
---@field AimDirRotator FRotator
---@field CachedTargetValues FCachedEnemyTargetValues
---@field AnimationControlFlags ECharacterControlFlags
---@field BehaviorControlFlags ECharacterControlFlags
---@field EnemyAggressionComponent UEnemyAggressionComponent
---@field EnemyRotationComponent UEnemyRotationComponent
---@field EnemyPerceptionComponent UTouristEnemyPerceptionComponent
---@field bUseUnrealMovement boolean
---@field bSetTargetTrackingByAttackPhase boolean
---@field OnMessageReceived FEnemyControllerBaseOnMessageReceived
---@field OnControlFlagsChanged FEnemyControllerBaseOnControlFlagsChanged
---@field EnemyPathFollowing UEnemyPathFollowingComponent
---@field AnimationMessagingComponent UAnimationMessagingComponent
---@field TargetCharacter ATouristCharacter
---@field BehaviorLookup TMap<FString, UEnemyBehaviorBase>
---@field BehaviorExclusivityLookup TMap<EEnemyBehaviorType, UEnemyBehaviorBase>
---@field AllBehaviors TArray<UEnemyBehaviorBase>
---@field RunningBehaviors TSet<UEnemyBehaviorBase>
---@field BehaviorsToUseOnNextUpdate TSet<UEnemyBehaviorBase>
---@field ActiveBehaviorUpdateTimer float
---@field bTempLockActiveBehaviors boolean
---@field CommittedBehavior UEnemyBehaviorBase
---@field LastTimeWasVisibleByPlayer float
AEnemyControllerBase = {}

---@param Behaviour UEnemyBehaviorBase
---@param OutResult EBehaviorRunAttemptResult
---@param AttackTicketType EAttackTicketType
---@return boolean
function AEnemyControllerBase:UseBehaviour(Behaviour, OutResult, AttackTicketType) end
---@param Behavior UEnemyBehaviorBase
---@param OutResult EBehaviorRunAttemptResult
---@param AttackTicketType EAttackTicketType
---@return boolean
function AEnemyControllerBase:UseAndCommitToBehavior(Behavior, OutResult, AttackTicketType) end
---@param DeltaTime float
function AEnemyControllerBase:UpdatePlayerTracking(DeltaTime) end
function AEnemyControllerBase:UpdateEnemySettings() end
---@param DeltaTime float
function AEnemyControllerBase:UpdateBehaviorComponents(DeltaTime) end
---@param Key FName
function AEnemyControllerBase:UnsubscribeFromBlackboardValue(Key) end
---@param Key FName
function AEnemyControllerBase:SubscribeToBlackboardValue(Key) end
---@param InTurningSpeed float
function AEnemyControllerBase:SetTurningSpeed(InTurningSpeed) end
---@param InMovingSpeed float
function AEnemyControllerBase:SetMovingSpeed(InMovingSpeed) end
---@param InDeceleration float
function AEnemyControllerBase:SetDeceleration(InDeceleration) end
---@param Flags uint8
function AEnemyControllerBase:SetControlFlags(Flags) end
---@param InAcceleration float
function AEnemyControllerBase:SetAcceleration(InAcceleration) end
---@param CurrentNode FTouristPathNode
---@param TargetNode FTouristPathNode
---@return UBaseEnemyMovementBehaviour
function AEnemyControllerBase:SelectMovementBehaviour(CurrentNode, TargetNode) end
function AEnemyControllerBase:RequestBehaviorSelection() end
---@param Behavior UEnemyBehaviorBase
---@param bOverrideExisting boolean
---@return boolean
function AEnemyControllerBase:RequestBehaviorExclusivity(Behavior, bOverrideExisting) end
---@param Behavior UEnemyBehaviorBase
---@return boolean
function AEnemyControllerBase:RemoveBehaviorExclusivity(Behavior) end
---@param ChangedKey FName
function AEnemyControllerBase:OnSubscribedBlackboardValueChanged(ChangedKey) end
---@param Behavior UEnemyBehaviorBase
function AEnemyControllerBase:OnCommittedBehaviorExited(Behavior) end
---@param NewFlags ECharacterControlFlags
function AEnemyControllerBase:OnAnimationControlFlagsSet(NewFlags) end
---@param OldState EAggressionState
---@param NewState EAggressionState
function AEnemyControllerBase:OnAggressionStateChanged(OldState, NewState) end
---@param Location FVector
---@param OutHitPoint FVector
---@param NavmeshProjectionExtent float
---@param DistanceTolerance float
---@return boolean
function AEnemyControllerBase:NavMeshRaycastTo(Location, OutHitPoint, NavmeshProjectionExtent, DistanceTolerance) end
---@return boolean
function AEnemyControllerBase:IsInCombat() end
---@param Tolerance float
---@return boolean
function AEnemyControllerBase:IsFacingPlayer(Tolerance) end
---@return boolean
function AEnemyControllerBase:IsEnemyActivated() end
function AEnemyControllerBase:InterruptEnemyActions() end
---@param Actor AActor
---@param DistanceTolerance float
---@return boolean
function AEnemyControllerBase:HasValidSimplePathToActor(Actor, DistanceTolerance) end
---@param Location FVector
---@return boolean
function AEnemyControllerBase:HasPathToLocation(Location) end
---@param Actor AActor
---@return boolean
function AEnemyControllerBase:HasPathToActor(Actor) end
---@param Flags ECharacterControlFlags
---@return boolean
function AEnemyControllerBase:HasControlFlags(Flags) end
function AEnemyControllerBase:HandleNewTrackedPlayer() end
---@param Msg FEnemyMessage
function AEnemyControllerBase:HandleMessageReceived(Msg) end
function AEnemyControllerBase:HandleFirstSensingOfPlayer() end
function AEnemyControllerBase:HandleControlFlagsUpdated() end
---@return float
function AEnemyControllerBase:GetTimeSinceTargetWasDirectlyVisible() end
---@return float
function AEnemyControllerBase:GetTimeSinceLastVisibleByPlayer() end
---@param bReturnLastValidIfNull boolean
---@return ATouristCharacter
function AEnemyControllerBase:GetTargetCharacter(bReturnLastValidIfNull) end
---@return float
function AEnemyControllerBase:GetRemainingPathCost() end
---@return ANavigationData
function AEnemyControllerBase:GetRelevantNavigationData() end
---@return FVector
function AEnemyControllerBase:GetRelativeDirectionToTargetForward() end
---@param Location FVector
---@param OutPathCost float
---@return boolean
function AEnemyControllerBase:GetPathCostToLocation(Location, OutPathCost) end
---@param Actor AActor
---@param OutPathCost float
---@return boolean
function AEnemyControllerBase:GetPathCostToActor(Actor, OutPathCost) end
---@return boolean
function AEnemyControllerBase:GetIsVisibleByPlayer() end
---@return AActor
function AEnemyControllerBase:GetHighestPrioritySensedTarget() end
---@return boolean
function AEnemyControllerBase:GetHasEverBeenSeenByPlayer() end
---@param Type EEnemyBehaviorType
---@return UEnemyBehaviorBase
function AEnemyControllerBase:GetExclusiveBehaviorForType(Type) end
---@return UEnemyRotationComponent
function AEnemyControllerBase:GetEnemyRotationComponent() end
---@return UTouristEnemyPerceptionComponent
function AEnemyControllerBase:GetEnemyPerceptionComponent() end
---@return UEnemyPathFollowingComponent
function AEnemyControllerBase:GetEnemyPathFollowingComponent() end
---@return UEnemyAggressionComponent
function AEnemyControllerBase:GetEnemyAggressionComponent() end
---@return AEnemyBase
function AEnemyControllerBase:GetEnemy() end
---@return float
function AEnemyControllerBase:GetDotToTargetActorView() end
---@param OutDir FVector
---@param OutDist float
---@return boolean
function AEnemyControllerBase:GetDirAndDistToTrackedActor(OutDir, OutDist) end
---@return uint8
function AEnemyControllerBase:GetControlFlags() end
---@param Name FString
---@return UEnemyBehaviorBase
function AEnemyControllerBase:GetBehaviorByName(Name) end
---@param Class TSubclassOf<UEnemyBehaviorBase>
---@return UEnemyBehaviorBase
function AEnemyControllerBase:GetBehaviorByClass(Class) end
---@return UAnimationMessagingComponent
function AEnemyControllerBase:GetAnimationMessagingComponent() end
---@param Behaviour UEnemyBehaviorBase
function AEnemyControllerBase:ForceStopBehaviourIfRunning(Behaviour) end
---@param Behaviour UEnemyBehaviorBase
function AEnemyControllerBase:ForceStopBehaviour(Behaviour) end
function AEnemyControllerBase:ExitAllBehaviors() end
---@param OldTarget AActor
---@param NewTarget AActor
function AEnemyControllerBase:EventOnTargetChanged(OldTarget, NewTarget) end
---@param Time float
---@param Velocity FVector
function AEnemyControllerBase:EventOnKnockbackStart(Time, Velocity) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function AEnemyControllerBase:EventOnDeath(DamagedActor, DamageEvent) end
---@param bOnlySameClass boolean
---@param Distance float
function AEnemyControllerBase:DisablePerceptionDistanceLimitForNearbyEnemies(bOnlySameClass, Distance) end
function AEnemyControllerBase:DisablePerceptionDistanceLimit() end
function AEnemyControllerBase:ConfigureActiveBehaviors() end
---@return boolean
function AEnemyControllerBase:CanEnterCombat() end
---@param PlayerCharacter APlayerCharacter
---@return float
function AEnemyControllerBase:CalculatePlayerCameraToEnemyAngleDegrees2D(PlayerCharacter) end
---@param PlayerCharacter APlayerCharacter
---@return float
function AEnemyControllerBase:CalculatePlayerCameraToEnemyAngleDegrees(PlayerCharacter) end
function AEnemyControllerBase:BlockActiveBehaviors() end
function AEnemyControllerBase:AllowActiveBehaviors() end


---@class AEnemyManager : AInfo
---@field AttackTicketManager FEnemyAttackTicketManager
---@field AggressionTicketManager FEnemyAggressionTicketManager
---@field VanguardTicketManager FEnemyVanguardTicketManager
---@field KillComboInfo UDataTable
---@field bEnemyHighlightEnabled boolean
---@field EnemyGroupManager UEnemyGroupManager
---@field EnemyAudioThreatSettings FEnemyAudioThreatSettings
---@field FakeEnemyLightSettings FFakeEnemyLightSettings
---@field DamageShapeMaterialSettings FMaterialParameterCollectionBiomeSpecificSettings
---@field EnemySoftCappedDamageSources TArray<FSoftDamageCapDamageSourceEntry>
---@field BossSoftCappedDamageSources TArray<FSoftDamageCapDamageSourceEntry>
---@field bShouldSoftCapCountUndefinedDamageSources boolean
---@field MultiplayerHealthScaling float
---@field MultiplayerDamageScaling float
---@field TargetSharingCountThreshold int32
---@field TargetSharingMaxRatio float
---@field BossClass TSoftClassPtr<AEnemyBase>
---@field Enemies TArray<AEnemyBase>
---@field EnemyProximitySpawners TArray<AEnemyProximitySpawnerBase>
---@field EnemyMaterializers TArray<AEnemyMaterializerBase>
---@field KillComboEntries TArray<FKillComboInfo>
---@field GlobalTagCooldowns TMap<FGameplayTag, FEnemyGlobalTagCooldown>
---@field NavLinkTicketRequests TArray<FNavLinkTicket>
---@field NavLinkTickets TMap<uint32, FNavLinkTicket>
---@field SpeedModifier int32
---@field AggressionModifier float
---@field OnEnemyKilled FEnemyManagerOnEnemyKilled
---@field OnEnemyDeath FEnemyManagerOnEnemyDeath
---@field OnEnemyAdded FEnemyManagerOnEnemyAdded
---@field OnEliteEnemyAggroed FEnemyManagerOnEliteEnemyAggroed
---@field OnEnemyAggroCountChanged FEnemyManagerOnEnemyAggroCountChanged
---@field OnEnemyAudioThreatLevelChanged FEnemyManagerOnEnemyAudioThreatLevelChanged
---@field OnEnemyMultiplayerScalingApplied FEnemyManagerOnEnemyMultiplayerScalingApplied
---@field OnEnemyMultiplayerScalingRemoved FEnemyManagerOnEnemyMultiplayerScalingRemoved
---@field EnemiesToAddAfterLevelIsFinished TArray<AEnemyBase>
---@field CurrencySpawner TSubclassOf<AActor>
---@field BiggestThreatEnemy AEnemyBase
---@field BiggestThreatPhaseData FEnemyAttackPhaseData
---@field BiggestThreats TSet<AEnemyBase>
---@field ActiveCoverLocations TMap<AEnemyBase, FVector>
---@field EnemyDestinations TMap<AEnemyBase, FVector>
---@field EnemyAggroCounts TMap<AActor, int32>
---@field CurrentAudioThreatLevel int32
---@field CurrentAudioThreatValue float
---@field EnemyTickManager FEnemyTickManager
---@field NonEnemyThreatsAggroed TArray<AActor>
---@field TimelessTowerEnemyPhaseSpawns TSet<TSubclassOf<AEnemyBase>>
AEnemyManager = {}

---@param DeltaTime float
function AEnemyManager:UpdateNavLinkTickets(DeltaTime) end
function AEnemyManager:UpdateAudioThreatLevel() end
---@param Enemy AEnemyBase
---@param Target ATouristCharacter
---@return boolean
function AEnemyManager:TryUseAggressionTicket(Enemy, Target) end
---@param EnemyType TSubclassOf<AEnemyBase>
---@param bSetAsSpawned boolean
function AEnemyManager:SetTimelessTowerPhaseEnemyTypeAsSpawned(EnemyType, bSetAsSpawned) end
---@param Enemy AEnemyBase
---@param AttackType EAttackTicketType
---@return boolean
function AEnemyManager:RequestAttackTicket(Enemy, AttackType) end
---@param Enemy AEnemyBase
---@param VanguardType EVanguardTicketType
---@return boolean
function AEnemyManager:RequestAndUseVanguardTicket(Enemy, VanguardType) end
---@param Destination FVector
function AEnemyManager:RepositionNavMeshBounds_TTRoomChange(Destination) end
---@param Threat AActor
function AEnemyManager:RemoveNonEnemyThreatAggroed(Threat) end
---@param Actor AActor
function AEnemyManager:RemoveMultiplayerScalingFromActor(Actor) end
---@param Enemy AEnemyBase
function AEnemyManager:RemoveDestinationLocation(Enemy) end
---@param Enemy AEnemyBase
function AEnemyManager:RemoveCoverLocation(Enemy) end
---@param Enemy AEnemyBase
---@param VanguardType EVanguardTicketType
function AEnemyManager:ReleaseVanguardTicketImmediate(Enemy, VanguardType) end
---@param Enemy AEnemyBase
---@param VanguardType EVanguardTicketType
function AEnemyManager:ReleaseVanguardTicketAfterCooldown(Enemy, VanguardType) end
---@param Enemy AEnemyBase
---@param AttackType EAttackTicketType
function AEnemyManager:ReleaseAttackTicket(Enemy, AttackType) end
---@param Enemy AEnemyBase
function AEnemyManager:ReleaseAllAttackTicketsForEnemy(Enemy) end
function AEnemyManager:OnMultiplayerStatusChanged() end
---@param Enemy AEnemyBase
---@param PreviousTarget AActor
---@param NewTarget AActor
function AEnemyManager:OnEnemyTargetChanged(Enemy, PreviousTarget, NewTarget) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function AEnemyManager:OnBiomeStateChanged(Biome, NewBiomeState) end
---@param Enemy AEnemyBase
---@param AttackType EAttackTicketType
---@return boolean
function AEnemyManager:MarkAttackTicketAsActive(Enemy, AttackType) end
---@return boolean
function AEnemyManager:IsNonEnemyThreatAggroed() end
---@param Location FVector
---@param Distance float
---@param EnemyToIgnore AEnemyBase
---@return boolean
function AEnemyManager:IsLocationNearEnemyOrDestination(Location, Distance, EnemyToIgnore) end
---@param Location FVector
---@return boolean
function AEnemyManager:IsCoverLocationAvailable(Location) end
---@return boolean
function AEnemyManager:IsBossFightInProgress() end
---@param AttackType EAttackTicketType
---@param Target ATouristCharacter
---@return boolean
function AEnemyManager:IsAttackTicketAvailable(AttackType, Target) end
---@param Enemy AEnemyBase
---@param VanguardType EVanguardTicketType
---@param bOnlyCheckCurrentTarget boolean
---@return boolean
function AEnemyManager:HasVanguardTicket(Enemy, VanguardType, bOnlyCheckCurrentTarget) end
---@param EnemyType TSubclassOf<AEnemyBase>
---@return boolean
function AEnemyManager:HasTimelessTowerPhaseEnemySpawnedYet(EnemyType) end
---@param pos FVector
---@param MaxDist float
---@param MinCount int32
---@param bIgnoreInvulnerableEnemies boolean
---@return boolean
function AEnemyManager:HasNearbyEnemies(pos, MaxDist, MinCount, bIgnoreInvulnerableEnemies) end
---@param Enemy AEnemyBase
---@param AttackType EAttackTicketType
---@param bRequireTicketActive boolean
---@return boolean
function AEnemyManager:HasAttackTicket(Enemy, AttackType, bRequireTicketActive) end
---@param Player ATouristCharacter
function AEnemyManager:HandlePlayerKilled(Player) end
---@param Enemy AEnemyBase
function AEnemyManager:HandleEliteEnemyAggroed(Enemy) end
---@param Enemy AEnemyBase
---@param VanguardType EVanguardTicketType
---@param OutEverHadTicket boolean
---@return float
function AEnemyManager:GetTimeSinceLastVanguardTicket(Enemy, VanguardType, OutEverHadTicket) end
---@param RoomIndex int32
---@param IncludeMaterializers boolean
---@return float
function AEnemyManager:GetPercentageOfEnemiesRemainingInRoom(RoomIndex, IncludeMaterializers) end
---@param RoomIndex int32
---@return int32
function AEnemyManager:GetNumberOfUnspawnedEnemiesInRoom(RoomIndex) end
---@param RoomIndex int32
---@return int32
function AEnemyManager:GetNumberOfEnemiesAliveInRoom(RoomIndex) end
---@param EnemyClass TSoftClassPtr<AEnemyBase>
---@param TargetPlayer AActor
---@return int32
function AEnemyManager:GetNumAggroedEnemiesOfSoftClass(EnemyClass, TargetPlayer) end
---@param pos FVector
---@param MaxDist float
---@param ExcludedEnemy AEnemyBase
---@param bIgnoreInvulnerableEnemies boolean
---@return TArray<AEnemyBase>
function AEnemyManager:GetNearbyEnemiesSorted(pos, MaxDist, ExcludedEnemy, bIgnoreInvulnerableEnemies) end
---@param pos FVector
---@param MaxDist float
---@param ExcludedEnemy AEnemyBase
---@param bIgnoreInvulnerableEnemies boolean
---@return TArray<AEnemyBase>
function AEnemyManager:GetNearbyEnemies(pos, MaxDist, ExcludedEnemy, bIgnoreInvulnerableEnemies) end
---@param Actor AActor
---@param HealthScaling float
---@param DamageScaling float
function AEnemyManager:GetMultiplayerScalingValuesForActor(Actor, HealthScaling, DamageScaling) end
---@param KillCombo int32
---@param OutInfo FKillComboContextInfo
function AEnemyManager:GetKillComboInfo(KillCombo, OutInfo) end
---@param Tag FGameplayTag
---@return boolean
function AEnemyManager:GetGlobalEnemyTagCooldown(Tag) end
---@param WorldContextObject UObject
---@return AEnemyManager
function AEnemyManager:GetFromObject(WorldContextObject) end
---@return boolean
function AEnemyManager:GetEnemyHighlightEnabled() end
---@return UEnemyGroupManager
function AEnemyManager:GetEnemyGroupManager() end
---@param SphereCentre FVector
---@param SphereRadius float
---@param OutEnemies TArray<AEnemyBase>
function AEnemyManager:GetEnemiesWhoseCapsuleOverlapsSphere(SphereCentre, SphereRadius, OutEnemies) end
---@param Class UClass
---@param OutEnemies TArray<AEnemyBase>
function AEnemyManager:GetEnemiesOfClass(Class, OutEnemies) end
---@param RoomIndex int32
---@return int32
function AEnemyManager:GetEnemiesInRoomCount(RoomIndex) end
---@param RoomIndex int32
---@param OutEnemies TArray<AEnemyBase>
function AEnemyManager:GetEnemiesInRoom(RoomIndex, OutEnemies) end
---@return TArray<AEnemyBase>
function AEnemyManager:GetEnemies() end
---@param Location FVector
---@param EnemyToIgnore AEnemyBase
---@return float
function AEnemyManager:GetDistanceToNearestEnemyOrDestination(Location, EnemyToIgnore) end
---@return FLinearColor
function AEnemyManager:GetDamageShapeColor() end
---@param VanguardType EVanguardTicketType
---@param Target ATouristCharacter
---@param OutTicketHolders TArray<AEnemyBase>
function AEnemyManager:GetCurrentVanguardTicketHolders(VanguardType, Target, OutTicketHolders) end
---@param Actor AActor
---@param HealthScaling float
---@param DamageScaling float
function AEnemyManager:GetCurrentMultiplayerMultiplierForActor(Actor, HealthScaling, DamageScaling) end
---@return float
function AEnemyManager:GetCurrentAudioThreatValue() end
---@return int32
function AEnemyManager:GetCurrentAudioThreatLevel() end
---@param pos FVector
---@param bIgnoreInvulnerableEnemies boolean
---@return AEnemyBase
function AEnemyManager:GetClosestEnemy(pos, bIgnoreInvulnerableEnemies) end
---@return float
function AEnemyManager:GetBiggestThreatDodgeWindowLength() end
---@return float
function AEnemyManager:GetBiggestThreatAttackPhaseTimeLeft() end
---@return float
function AEnemyManager:GetBiggestThreatAttackPhasePercentage() end
---@return FEnemyAttackPhaseData
function AEnemyManager:GetBiggestThreatAttackPhaseData() end
---@return EAttackPhase
function AEnemyManager:GetBiggestThreatAttackPhase() end
---@return AEnemyBase
function AEnemyManager:GetBiggestThreat() end
---@param Enemy AEnemyBase
---@return float
function AEnemyManager:GetAudioThreatForEnemy(Enemy) end
---@param TargetPlayer AActor
---@param OutAggroedEnemies TArray<AEnemyBase>
function AEnemyManager:GetAggroedEnemies(TargetPlayer, OutAggroedEnemies) end
---@param WorldContextObject UObject
---@return AEnemyManager
function AEnemyManager:Get(WorldContextObject) end
---@param InEnemy AEnemyBase
---@param InDestination FVector
---@return boolean
function AEnemyManager:DoesEnemyPathCrossAnotherEnemyPath(InEnemy, InDestination) end
---@param Actor AActor
---@param HealthScale float
---@param DamageScale float
function AEnemyManager:DoApplyMultiplayerScalingToActor(Actor, HealthScale, DamageScale) end
function AEnemyManager:DescribeSelfToVisualLogger() end
function AEnemyManager:ClearTimelessTowerPhaseEnemySpawns() end
---@param Actor AActor
function AEnemyManager:ApplyMultiplayerScalingToActor(Actor) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function AEnemyManager:AddQueuedEnemiesToEnemyManager(Biome, NewBiomeState) end
---@param Threat AActor
function AEnemyManager:AddNonEnemyThreatAggroed(Threat) end
---@param Tag FGameplayTag
---@param Time float
---@param bAddToExisting boolean
function AEnemyManager:AddGlobalEnemyTagCooldown(Tag, Time, bAddToExisting) end
---@param Enemy AEnemyBase
---@param Location FVector
function AEnemyManager:AddDestinationLocation(Enemy, Location) end
---@param Enemy AEnemyBase
---@param Location FVector
function AEnemyManager:AddCoverLocation(Enemy, Location) end


---@class AEnemyMaterializerBase : AHMQActor
---@field RoomTrackerComponent_cpp URoomTrackerComponent
---@field CenterLocationComponent_cpp USceneComponent
---@field RoomLockDownComponent_cpp URoomLockdownControlComponent
---@field RootSceneComponent_cpp USceneComponent
---@field SkeletalMesh_cpp USkeletalMeshComponent
---@field NGParticleComponent_cpp UNGParticleComponent
---@field MaterializerLight_cpp UPointLightComponent
---@field PortalMesh_cpp UStaticMeshComponent
---@field MaterializerMaterial UMaterialInterface
---@field MaterializerEliteMaterial UMaterialInterface
---@field DespawnComponent UDespawnableActorComponent
---@field MaterializeMethod EMaterializeTriggerMethod
---@field SpawnActorClass TSubclassOf<AActor>
---@field bIsEliteEnemy boolean
---@field IdleEffectContainer_cpp TSubclassOf<AEffectContainer>
---@field MaterializeEffectContainer_cpp TSubclassOf<AEffectContainer>
---@field MaterializeMinTime float
---@field MaterializeMaxTime float
---@field TimeLeftUntilMaterialize float
---@field MaterializeRoomClearedPercentage float
---@field EnemiesLeftToMaterialize int32
---@field bOnlySpawnIfPlayerIsInRoom boolean
---@field bForceAggroOnEnemyWhenSpawned boolean
---@field OnMaterializeComplete FEnemyMaterializerBaseOnMaterializeComplete
---@field OnActorMaterializedComplete FEnemyMaterializerBaseOnActorMaterializedComplete
AEnemyMaterializerBase = {}

---@param DeltaTime float
---@param TimeForActorToMaterialize float
---@param TimeLeftUntilActorMaterialize float
function AEnemyMaterializerBase:UpdateVisuals(DeltaTime, TimeForActorToMaterialize, TimeLeftUntilActorMaterialize) end
function AEnemyMaterializerBase:TimedMaterialize() end
function AEnemyMaterializerBase:ShowDebugStatus() end
function AEnemyMaterializerBase:RoomPercentageMaterialize() end
---@param PlayerState APlayerState
---@param NewRoomIndex int32
---@param OldRoomIndex int32
function AEnemyMaterializerBase:OnPlayerRoomChanged(PlayerState, NewRoomIndex, OldRoomIndex) end
---@param RoomIndex int32
---@param NewEnemyCount int32
function AEnemyMaterializerBase:OnEnemyCountChanged(RoomIndex, NewEnemyCount) end
---@param MaterializedActor AActor
function AEnemyMaterializerBase:OnActorMaterialized(MaterializedActor) end
---@param OnMaterializeComplete FMaterializeActorOnMaterializeComplete
function AEnemyMaterializerBase:MaterializeActor(OnMaterializeComplete) end


---@class AEnemyMessageManager : AInfo
AEnemyMessageManager = {}


---@class AEnemyProximitySpawnerBase : AActor
---@field RoomTrackerComponent URoomTrackerComponent
---@field bForceAggroToSpawn boolean
---@field OnActorSpawnComplete FEnemyProximitySpawnerBaseOnActorSpawnComplete
AEnemyProximitySpawnerBase = {}

---@param Aggroer AActor
---@param AggroTarget AActor
---@param ForceTime float
function AEnemyProximitySpawnerBase:ForceAggro(Aggroer, AggroTarget, ForceTime) end
---@param SpawnedActor AActor
function AEnemyProximitySpawnerBase:BroadcastActorSpawned(SpawnedActor) end


---@class AEnemyWeapon : AGunBase
---@field OnStartFiring FEnemyWeaponOnStartFiring
---@field OnStopFiring FEnemyWeaponOnStopFiring
---@field RndSeed int32
---@field TimeDilationComponent UTimeDilationComponent
---@field ActorControllerComponent UActorControllerComponent
---@field bIsFiring boolean
---@field FiringSeed int32
---@field Has_SetupBulletSpawnData_Override boolean
---@field bLocalIsFiring boolean
AEnemyWeapon = {}

---@param SpawnData FBulletSpawnData
function AEnemyWeapon:SetupBulletSpawnData_Override(SpawnData) end
function AEnemyWeapon:RequestStopFiring_Local() end
---@param InSeed int32
function AEnemyWeapon:RequestStartFiring_Local(InSeed) end
function AEnemyWeapon:RequestSingleShot() end
function AEnemyWeapon:OnRep_bIsFiring() end
---@return int32
function AEnemyWeapon:MutateRandomSeed() end
---@param InSeed int32
function AEnemyWeapon:MulticastSingleShot(InSeed) end
---@return int32
function AEnemyWeapon:GetRandomSeed() end


---@class AFirstPersonPlayerCharacter : ABasePlayerCharacter
---@field CameraPitchMin float
---@field CameraPitchMax float
---@field MyCurrentRoomIndex int32
AFirstPersonPlayerCharacter = {}

---@param TrophyName FName
---@param Progress float
function AFirstPersonPlayerCharacter:UnlockTrophy(TrophyName, Progress) end
---@param OwnerController ATouristPlayerController
---@param SpawnTransform FTransform
---@param CharacterClass TSubclassOf<AFirstPersonPlayerCharacter>
---@return AFirstPersonPlayerCharacter
function AFirstPersonPlayerCharacter:SpawnAndPossessFirstPersonPlayerCharacter(OwnerController, SpawnTransform, CharacterClass) end
---@param bNewVisible boolean
function AFirstPersonPlayerCharacter:SetVisibility(bNewVisible) end
---@param bNewActive boolean
---@param Tag FName
function AFirstPersonPlayerCharacter:SetNGPFirstPersonModeActive(bNewActive, Tag) end
---@param bEnabled boolean
function AFirstPersonPlayerCharacter:SetMovementEnabledCounted(bEnabled) end
---@param SkeletalMeshComp USkeletalMeshComponent
---@param bNewCastHiddenShadow boolean
function AFirstPersonPlayerCharacter:SetMeshCastHiddenShadow(SkeletalMeshComp, bNewCastHiddenShadow) end
---@return boolean
function AFirstPersonPlayerCharacter:IsMovementEnabled() end
---@return boolean
function AFirstPersonPlayerCharacter:IsLookEnabled() end
---@return boolean
function AFirstPersonPlayerCharacter:IsInteractEnabled() end
---@return boolean
function AFirstPersonPlayerCharacter:GetFirstPersonDLCSuitToggle() end
---@return APawn
function AFirstPersonPlayerCharacter:DestroyAndReturnToPreviousCharacter() end
function AFirstPersonPlayerCharacter:DeactivateFirstPerson() end
function AFirstPersonPlayerCharacter:BP_HUDMenuOpened() end
function AFirstPersonPlayerCharacter:BP_DeactivateFirstPerson() end
function AFirstPersonPlayerCharacter:BP_ActivateFirstPerson() end
function AFirstPersonPlayerCharacter:ActivateFirstPerson() end


---@class AFirstPersonPlayerStart : ANavigationObjectBase
---@field FirstPersonStartTag FName
AFirstPersonPlayerStart = {}



---@class AFlyingEnemyBase : AEnemyBase
---@field bFlying boolean
---@field FlyingMovementComponent UTouristFlyingMovementComponent
AFlyingEnemyBase = {}



---@class AGameplayAbilityCollectible : ACollectibleBase
---@field AbilityCollectibleType EAbilityCollectibleTypes
---@field AbilityInfo FTouristGameplayAbilityBindInfo
---@field bSaveAbilityIntoSaveGame boolean
AGameplayAbilityCollectible = {}



---@class AGrenadeProjectile : AActor
---@field collision USphereComponent
---@field SkeletalMesh USkeletalMeshComponent
---@field RadiusIndicator URadiusIndicatorComponent
---@field TrailParticle UParticleSystemComponent
---@field TrailFirstSocketName FName
---@field TrailSecondSocketName FName
---@field ExplosionParticleName FName
---@field ExplodeSoundEvent UAkAudioEvent
---@field ThrowSoundEvent UAkAudioEvent
---@field BounceSoundEvent UAkAudioEvent
---@field LaunchForce float
---@field damage float
---@field ExplosionRadius float
---@field ExplodeOnImpactClasses TArray<UClass>
---@field DamageTypeClass TSubclassOf<UTouristDamageType>
---@field DamageTarget uint8
---@field bounciness float
---@field MaxBounces int32
---@field NumBounces int32
---@field LastImpactSoundTime float
---@field ExplosionRadiusDelta float
---@field HitNormal FVector
AGrenadeProjectile = {}

---@param HitComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param NormalImpulse FVector
---@param hit FHitResult
function AGrenadeProjectile:OnImpact(HitComponent, OtherActor, OtherComp, NormalImpulse, hit) end
---@param TargetActor AActor
---@return boolean
function AGrenadeProjectile:IsValidTargetForContactExplosion(TargetActor) end
---@return float
function AGrenadeProjectile:GetPreferredRange() end
---@return float
function AGrenadeProjectile:GetLaunchForce() end
---@return FVector
function AGrenadeProjectile:GetHitNormal() end
---@return float
function AGrenadeProjectile:GetExplosionRadius() end
function AGrenadeProjectile:DoExplode() end


---@class AGridGenLevelGenActor : AActor
AGridGenLevelGenActor = {}

---@param Rnd FRandomStream
---@param Settings FGridGenGeneratorSettings
---@param OutFloors TArray<FTransform>
---@param OutWallX TArray<FTransform>
---@param OutWallY TArray<FTransform>
function AGridGenLevelGenActor:GenerateLevel(Rnd, Settings, OutFloors, OutWallX, OutWallY) end


---@class AGridVolume : AActor
---@field GridCellSize FVector
---@field GridDimensions FIntVector
---@field CornerMarkerMesh UStaticMesh
---@field CornerMatHighlight UMaterialInterface
---@field CornerMatSample UMaterialInterface
---@field CornerMatLevel UMaterialInterface
---@field CornerMatVisualizer UMaterialInterface
---@field VolumeCornerMarkers TArray<UStaticMeshComponent>
AGridVolume = {}



---@class AGunBase : AActor
---@field CachedOwnerCharacter ATouristCharacter
---@field DefaultSceneRoot USceneComponent
---@field OnShotFired FGunBaseOnShotFired
---@field bIsAdrenalineWeapon boolean
---@field HomingTarget USceneComponent
---@field OnReloadStarted FGunBaseOnReloadStarted
---@field OnReloadDone FGunBaseOnReloadDone
AGunBase = {}

function AGunBase:StopFiring() end
---@param bImmediate boolean
---@param Percentage float
function AGunBase:StartReloading(bImmediate, Percentage) end
function AGunBase:StartFiring() end
---@param Target USceneComponent
function AGunBase:SetHomingTarget(Target) end
function AGunBase:RequestStopFiring() end
---@param bImmediate boolean
---@param Percentage float
function AGunBase:RequestStartReloading(bImmediate, Percentage) end
function AGunBase:RequestStartFiring() end
---@param DestroyedActor AActor
function AGunBase:OnOwnerDestroyed(DestroyedActor) end
---@param ReloadTime float
function AGunBase:NotifyReloadStarted(ReloadTime) end
function AGunBase:NotifyReloadDone() end
---@param SpawnData FBulletSpawnData
---@param Transform FTransform
function AGunBase:NotifyNewStreamOfBullets(SpawnData, Transform) end
function AGunBase:NotifyBulletFired() end
---@return boolean
function AGunBase:IsCurrentlyReloading() end
---@return boolean
function AGunBase:IsCurrentlyFiring() end
---@return float
function AGunBase:GetReloadTimeRemaining() end
---@return USceneComponent
function AGunBase:GetHomingTarget() end
---@return int32
function AGunBase:GetFiringEventId() end
---@return uint8
function AGunBase:GetDamageTarget() end
---@return float
function AGunBase:GetClipDisplayPercentage() end
---@return float
function AGunBase:GetClipDisplayNumber() end
---@return FVector
function AGunBase:GetBulletOutLocation() end
---@return FLinearColor
function AGunBase:GetBulletColor() end
---@return FRotator
function AGunBase:GetAimDir() end
---@return boolean
function AGunBase:CheckIfReadyToFire() end


---@class AHazardBase : AHMQActor
---@field DespawnableActor UDespawnableActorComponent
---@field PlayerProtectedIfHasTags FGameplayTagContainer
---@field GameplayEffectsToApply TArray<TSubclassOf<UGameplayEffect>>
---@field GameplayEffectsToApplyAlways TArray<TSubclassOf<UGameplayEffect>>
---@field VisualEffectsApplied TMap<ABasePlayerCharacter, AEffectContainerBase>
---@field VisualEffectsToApplyToAffectedPlayers TSubclassOf<AEffectContainer>
---@field HazardWorldVisualEffects TSubclassOf<AEffectContainer>
---@field WorldVisualEffect AEffectContainer
---@field CameraPresetToApply UHMQCameraPreset
---@field AddedEffects TArray<FTouristPlayerGameplayStateHandle>
---@field bDestroyWithOwner boolean
---@field AutoDestroyTimer float
---@field OnHazardDisabledStateChanged FHazardBaseOnHazardDisabledStateChanged
---@field DefaultRootComponent USceneComponent
---@field bHazardActive boolean
---@field bHazardDisabled boolean
---@field bRemoveVFXOnDeactivation boolean
---@field bRemoveGameplayEffectsOnDeactivation boolean
---@field OnEffectsAdded FHazardBaseOnEffectsAdded
---@field OnEffectsRemovedFromPlayer FHazardBaseOnEffectsRemovedFromPlayer
---@field OnActivateStateChanged FHazardBaseOnActivateStateChanged
AHazardBase = {}

---@param bActive boolean
function AHazardBase:SetHazardActive(bActive) end
---@param Actor AActor
function AHazardBase:RemoveGameplayEffectsFromActor(Actor) end
function AHazardBase:PopAllGameplayEffectsAddedByThisHazard() end
function AHazardBase:OnTimerDeath() end
function AHazardBase:OnRep_HazardDisabled() end
function AHazardBase:OnRep_bHazardActive() end
---@param DestroyedActor AActor
function AHazardBase:OnOwnerDestroyed(DestroyedActor) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function AHazardBase:OnDeath(DamagedActor, DamageEvent) end
---@return boolean
function AHazardBase:IsHazardDisabled() end
---@return boolean
function AHazardBase:IsHazardActive() end
---@param Actor AActor
---@return boolean
function AHazardBase:IsActorProtectedFromThisHazard(Actor) end
---@param PlayerCharacter AActor
---@return boolean
function AHazardBase:DoesPlayerHaveGameplayEffectsAddedByThisHazard(PlayerCharacter) end
---@param bDisable boolean
function AHazardBase:DisableHazardEntirely(bDisable) end
---@param Actor AActor
---@return boolean
function AHazardBase:ApplyGameplayEffectsToActor(Actor) end


---@class AHitReactionEffectContainerBase : AEffectContainer
---@field HitPosPropertyName FName
---@field HitDirPropertyName FName
---@field TimeSinceHitPropertyName FName
---@field MeshResourceName FName
---@field BoneIndexPropertyName FName
---@field HitTypePropertyName FName
---@field ColorPropertyName FName
---@field bDataInWorldSpace boolean
---@field DamageEvent FTouristDamageEvent
AHitReactionEffectContainerBase = {}

---@param Events TMap<FName, UAkAudioEvent>
function AHitReactionEffectContainerBase:SetParticleAudio(Events) end
---@param InDamageEvent FTouristDamageEvent
---@param HealthComp UHealthComponent
function AHitReactionEffectContainerBase:SetDamageEvent(InDamageEvent, HealthComp) end


---@class AHookShotTarget : AActor
---@field HookShotTargetComponent UHookShotTargetComponent
---@field MinimapObject UMinimapObject
---@field OrientationArrowComponent UArrowComponent
---@field LandingArrowComponent UArrowComponent
AHookShotTarget = {}

---@param bDuringGameplay boolean
function AHookShotTarget:PlayerHookshotEnabled(bDuringGameplay) end
---@param OutHitResult FHitResult
---@param OutWarning FString
---@return boolean
function AHookShotTarget:IsValidPlacement(OutHitResult, OutWarning) end


---@class AImmobilizingHazardEnemy : AEnemyBase
---@field MouthLocationOffset FVector
---@field PullSpeed float
---@field DamageInterval float
---@field DamageStartDelay float
---@field MaxDamageDistance float
---@field MaxHits int32
---@field GrabCooldownAfterMaxHits float
---@field GrabCooldownAfterSuccessfulGrab float
---@field damage TArray<FTouristDamageDescriptor>
---@field AttachEffect TSubclassOf<AEffectContainer>
---@field CauseDamageEffect TSubclassOf<AEffectContainer>
---@field DetachEffect TSubclassOf<AEffectContainer>
---@field PullProgress float
---@field CaughtCharacter ATouristCharacter
AImmobilizingHazardEnemy = {}

---@param Character APlayerCharacter
---@return boolean
function AImmobilizingHazardEnemy:TryCatchCharacter(Character) end
---@param OldCharacter ATouristCharacter
function AImmobilizingHazardEnemy:OnRep_CaughtCharacter(OldCharacter) end
---@param Character ATouristCharacter
function AImmobilizingHazardEnemy:MulticastDamageCharacter(Character) end
---@return boolean
function AImmobilizingHazardEnemy:IsGrabOnCooldown() end
---@return boolean
function AImmobilizingHazardEnemy:IsAlive_Implementation() end
function AImmobilizingHazardEnemy:HandleCaughtCharacterEscaped_Implementation() end
---@return FVector
function AImmobilizingHazardEnemy:GetMouthLocation() end
---@return TSubclassOf<AEffectContainer>
function AImmobilizingHazardEnemy:GetDetachEffect_Implementation() end
---@return ATouristCharacter
function AImmobilizingHazardEnemy:GetCaughtCharacter() end
---@return TSubclassOf<AEffectContainer>
function AImmobilizingHazardEnemy:GetAttachEffect_Implementation() end


---@class AInventoryCollectible : ACollectibleBase
---@field ItemClass TSoftClassPtr<AActor>
---@field MaxCollectCount int32
---@field TimelessTowerMaxCollectCount int32
---@field ItemActor AActor
AInventoryCollectible = {}



---@class ALevelGenBaseActor : AActor
---@field DebugGenerateLevelsUntilFailure int32
---@field bDebugShowCollisions boolean
---@field bDebugDoNotSpawnMap boolean
---@field DebugCollisionVisualizationMaterial UMaterialInterface
---@field StartLocationOverride ULevelGenStartLocationOverride
---@field BiomeId EBiome
---@field Random FRandomStream
---@field LevelGenReleventFlags TArray<FName>
---@field OnRoomStreamingInitialRoomsShown FLevelGenBaseActorOnRoomStreamingInitialRoomsShown
---@field bIsLevelGenCacheEnabled boolean
---@field bIsLevelGenReady boolean
---@field OnLevelGenReady FLevelGenBaseActorOnLevelGenReady
---@field OnLevelGenParametersLoaded FLevelGenBaseActorOnLevelGenParametersLoaded
---@field OnMapGeneratedOffline FLevelGenBaseActorOnMapGeneratedOffline
---@field RoomActors TArray<ALevelGenRoomStreamingActor>
---@field PrecalculatedMaps TArray<FLevelGenPrecalculatedMap>
---@field RoomInfos ULevelGenRoomInfos
---@field InitialLoadLevels TArray<ALevelGenRoomStreamingActor>
---@field GeneratorUpdateTimeslice float
---@field AllRoomInfoIds TArray<FPrimaryAssetId>
---@field AllRoomInfos TArray<ULevelGenRoomInfo>
---@field AllStreamingFocusObjects TArray<FLevelGenFocusObject>
---@field FinishedMap ULevelGenMapIngame
---@field NetworkActor ALevelGenNetworkActor
ALevelGenBaseActor = {}

function ALevelGenBaseActor:Shutdown() end
---@param SetIndex int32
---@param IndexWithinSet int32
---@return boolean
function ALevelGenBaseActor:SetTemplateByIndex(SetIndex, IndexWithinSet) end
---@param eLODBehavior EStreamingLODBehavior
function ALevelGenBaseActor:SetStreamingLODBehavior(eLODBehavior) end
---@param eHeuristic EStreamingHeuristic
function ALevelGenBaseActor:SetStreamingHeuristic(eHeuristic) end
---@param randomSeed int32
function ALevelGenBaseActor:SetRandomSeed(randomSeed) end
---@param Map ULevelGenMapIngame
function ALevelGenBaseActor:SetFinishedMap(Map) end
function ALevelGenBaseActor:RemoveAllRoomsFromWorld() end
---@param Room ALevelGenRoomStreamingActor
function ALevelGenBaseActor:PrepareAngenRoomDataOnTetraGridContainers(Room) end
function ALevelGenBaseActor:PopAllTemplateSets() end
---@param SetIndex int32
---@return int32
function ALevelGenBaseActor:PickTemplateIndex(SetIndex) end
---@param ThisObject USpatialGridObject
---@param OldCells TArray<int32>
---@param NewCells TArray<int32>
---@param InvZFilterFidelity float
---@param OldAABBMin FVector
---@param OldAABBMax FVector
function ALevelGenBaseActor:OnStreamFocusSpatialCellChanged(ThisObject, OldCells, NewCells, InvZFilterFidelity, OldAABBMin, OldAABBMax) end
---@param Room ALevelGenRoomStreamingActor
function ALevelGenBaseActor:OnRoomShutdown(Room) end
---@param PlayerState APlayerState
---@param NewRoomIndex int32
---@param OldRoomIndex int32
function ALevelGenBaseActor:OnPlayerRoomChanged(PlayerState, NewRoomIndex, OldRoomIndex) end
---@param PlayerState APlayerState
function ALevelGenBaseActor:OnPlayerLoggedOut(PlayerState) end
---@param Room ALevelGenRoomStreamingActor
function ALevelGenBaseActor:OnInitialRoomShown(Room) end
---@param Room ALevelGenRoomStreamingActor
function ALevelGenBaseActor:OnInitialRoomLoaded(Room) end
function ALevelGenBaseActor:OnAssetsLoaded() end
---@param ThisRoom ALevelGenRoomStreamingActor
---@param ThisChunk FLevelChunk
---@param ThisType int32
function ALevelGenBaseActor:MemoryReporting_Uncollect(ThisRoom, ThisChunk, ThisType) end
---@param ThisRoom ALevelGenRoomStreamingActor
---@param ThisChunk FLevelChunk
---@param ThisType int32
function ALevelGenBaseActor:MemoryReporting_Collect(ThisRoom, ThisChunk, ThisType) end
---@return boolean
function ALevelGenBaseActor:IsShuttingDown() end
---@return boolean
function ALevelGenBaseActor:IsShutDownInitiated() end
---@return boolean
function ALevelGenBaseActor:IsShutDownFinished() end
---@return boolean
function ALevelGenBaseActor:IsFinished() end
---@param SetIndex int32
---@return int32
function ALevelGenBaseActor:GetNumberOfTemplatesInSet(SetIndex) end
---@return int32
function ALevelGenBaseActor:GetNumberOfTemplateSets() end
---@return ULevelGenMapIngame
function ALevelGenBaseActor:GetFinishedMap() end
function ALevelGenBaseActor:GenerationDone() end
function ALevelGenBaseActor:ConsiderYieldToGameThread() end
---@param Caller ALevelGenBaseActor
function ALevelGenBaseActor:CompletionEvent__DelegateSignature(Caller) end
---@return boolean
function ALevelGenBaseActor:AreLODsReady() end
function ALevelGenBaseActor:AddAllRoomsToWorld() end


---@class ALevelGenLocatorActorLoader : AActor
---@field GroupId FGuid
---@field RoomIndex int32
---@field SpawnMode ELocatorSpawnMode
ALevelGenLocatorActorLoader = {}

function ALevelGenLocatorActorLoader:OnLocatorClassLoaded() end


---@class ALevelGenMinimapDataActor : AActor
---@field TriIndices TArray<int32>
---@field vertPos TArray<FVector>
---@field VertNormal TArray<FVector>
---@field VertColor TArray<FColor>
ALevelGenMinimapDataActor = {}



---@class ALevelGenMinimapVolume : ALevelGenVolumeBase
ALevelGenMinimapVolume = {}


---@class ALevelGenNetworkActor : AActor
---@field CachedLevelLoadsAndShows TArray<FLevelLoadNetworkCacheEntry>
ALevelGenNetworkActor = {}



---@class ALevelGenRoomAttributeActor : AActor
---@field Attributes ULevelGenRoomAttributes
---@field LevelSelector ULevelGenRoomSublevelSelector
ALevelGenRoomAttributeActor = {}



---@class ALevelGenRoomDoorActor : AActor
---@field Info ULevelGenRoomDoor
ALevelGenRoomDoorActor = {}



---@class ALevelGenRoomLocatorActor : AActor
---@field Info ULevelGenRoomLocator
ALevelGenRoomLocatorActor = {}



---@class ALevelGenRoomLocatorArrayActor : AActor
---@field Info ULevelGenRoomLocator
---@field WorldTransforms TArray<FTransform>
ALevelGenRoomLocatorArrayActor = {}



---@class ALevelGenRoomStreamingActor : AActor
---@field OnRoomBeginLoad FLevelGenRoomStreamingActorOnRoomBeginLoad
---@field OnRoomLoaded FLevelGenRoomStreamingActorOnRoomLoaded
---@field OnRoomBeginUnload FLevelGenRoomStreamingActorOnRoomBeginUnload
---@field OnRoomUnloaded FLevelGenRoomStreamingActorOnRoomUnloaded
---@field OnRoomBeginShow FLevelGenRoomStreamingActorOnRoomBeginShow
---@field OnRoomShown FLevelGenRoomStreamingActorOnRoomShown
---@field OnRoomBeginHide FLevelGenRoomStreamingActorOnRoomBeginHide
---@field OnRoomHidden FLevelGenRoomStreamingActorOnRoomHidden
---@field OnRoomBeginShutdown FLevelGenRoomStreamingActorOnRoomBeginShutdown
---@field OnRoomShutdown FLevelGenRoomStreamingActorOnRoomShutdown
---@field StreamingHandles TArray<FLevelChunk>
---@field HandleCountForStreamingPurposes int32
---@field LevelsForLODStreaming int32
---@field bNeverDecrementActiveCount boolean
---@field bNeverDecrementVisibleCount boolean
---@field Map ULevelGenMap
---@field InGameMap ULevelGenMapIngame
---@field SpatialGridObject USpatialGridObject
---@field Selector ULevelGenRoomSublevelSelector
---@field RoomIndex int32
---@field bContainsBootLayers boolean
---@field InitialLoadReason FName
---@field LoadStartTime double
---@field LoadEndTime double
---@field ActivateStartTime double
---@field ActivateEndTime double
---@field RequestLoadAt FString
---@field LoadedAt FString
---@field RequestVisibleAt FString
---@field VisibleAt FString
---@field RequestUnloadAt FString
---@field UnloadedAt FString
---@field NumTimesLoaded int32
---@field NumTimesUnloaded int32
---@field NetworkActor ALevelGenNetworkActor
ALevelGenRoomStreamingActor = {}

function ALevelGenRoomStreamingActor:TriggerForceReload() end
function ALevelGenRoomStreamingActor:Shutdown() end
---@param Context UObject
---@param Reason FName
function ALevelGenRoomStreamingActor:Show(Context, Reason) end
---@param SublevelName FString
---@param bNewVisibility boolean
function ALevelGenRoomStreamingActor:SetSublevelVisibility(SublevelName, bNewVisibility) end
function ALevelGenRoomStreamingActor:Reset() end
function ALevelGenRoomStreamingActor:ReactToPotentialNewDesiredState() end
function ALevelGenRoomStreamingActor:OnLODLevelUnloaded() end
function ALevelGenRoomStreamingActor:OnLODLevelLoaded() end
---@param LevelStreaming ULevelStreamingDynamic
function ALevelGenRoomStreamingActor:OnLevelUnloaded(LevelStreaming) end
---@param LevelStreaming ULevelStreamingDynamic
function ALevelGenRoomStreamingActor:OnLevelShown(LevelStreaming) end
---@param LevelStreaming ULevelStreamingDynamic
function ALevelGenRoomStreamingActor:OnLevelLoaded(LevelStreaming) end
---@param LevelStreaming ULevelStreamingDynamic
function ALevelGenRoomStreamingActor:OnLevelHidden(LevelStreaming) end
---@return boolean
function ALevelGenRoomStreamingActor:IsUnloading() end
---@return boolean
function ALevelGenRoomStreamingActor:IsUnloaded() end
---@return boolean
function ALevelGenRoomStreamingActor:IsShown() end
---@return boolean
function ALevelGenRoomStreamingActor:IsShowing() end
---@return boolean
function ALevelGenRoomStreamingActor:IsReadyToBeGarbageCollected() end
---@return boolean
function ALevelGenRoomStreamingActor:IsLoading() end
---@return boolean
function ALevelGenRoomStreamingActor:IsLoaded() end
---@return boolean
function ALevelGenRoomStreamingActor:IsHiding() end
---@return boolean
function ALevelGenRoomStreamingActor:IsForceReloadTriggered() end
---@return boolean
function ALevelGenRoomStreamingActor:IsBusy() end
---@param Context UObject
---@param Reason FName
function ALevelGenRoomStreamingActor:IncrementActiveCount(Context, Reason) end
---@param Context UObject
---@param Reason FName
function ALevelGenRoomStreamingActor:Hide(Context, Reason) end
---@return boolean
function ALevelGenRoomStreamingActor:HasLODs() end
---@return int32
function ALevelGenRoomStreamingActor:GetVisibleCount() end
---@return FColor
function ALevelGenRoomStreamingActor:GetStreamingStatusColor() end
---@return ERoomState
function ALevelGenRoomStreamingActor:GetDesiredTargetState() end
---@return int32
function ALevelGenRoomStreamingActor:GetCurrentLODLevel() end
---@return int32
function ALevelGenRoomStreamingActor:GetActiveCount() end
---@param Context UObject
---@param Reason FName
function ALevelGenRoomStreamingActor:DecrementActiveCount(Context, Reason) end
---@param Level ULevel
---@return boolean
function ALevelGenRoomStreamingActor:ContainsLevel(Level) end
function ALevelGenRoomStreamingActor:AddAllLevelsToWorld() end
---@param bActive boolean
function ALevelGenRoomStreamingActor:ActivateLODs(bActive) end


---@class ALevelGenRoomVolume : ALevelGenVolumeBase
ALevelGenRoomVolume = {}

---@param Point FVector
---@return boolean
function ALevelGenRoomVolume:BP_PointIntersection(Point) end
---@param Point FVector
---@param SphereRadius float
---@param OutDistanceToPoint float
---@return boolean
function ALevelGenRoomVolume:BP_EncompassesPoint(Point, SphereRadius, OutDistanceToPoint) end
---@param BoxMin FVector
---@param BoxMax FVector
---@param Transform FTransform
---@return boolean
function ALevelGenRoomVolume:BP_BoxIntersection(BoxMin, BoxMax, Transform) end


---@class ALevelGenVolumeBase : AVolume
---@field TriPositions TArray<FVector>
---@field Volumes FLevelGenRoomVolumes
---@field AABBMin FVector
---@field AABBMax FVector
---@field bIsGeometryVolume boolean
---@field bIsTraversalVolume boolean
ALevelGenVolumeBase = {}



---@class ALevelNote : AActor
---@field Content FString
---@field Author FString
---@field CreationDateTime FDateTime
---@field DepartmentName FString
ALevelNote = {}



---@class ALootBox : AHMQActor
---@field OnOpenLootBox FLootBoxOnOpenLootBox
---@field SpawnerComponent UMultiSpawnerComponent
---@field OnLootBoxPreSpawn FLootBoxOnLootBoxPreSpawn
---@field OnLootBoxPostSpawn FLootBoxOnLootBoxPostSpawn
---@field LootGroup ECollectibleDropGroup
---@field SpawnPolicy ECollectibleSpawnPolicy
---@field bDestroyWhenOpened boolean
---@field Trigger UInteractableSphereComponent
---@field Label UHUDLabel
---@field HUDDetails UHUDDetailsComponent
---@field MinimapObject UMinimapObject
---@field OpenSound UAkAudioEvent
---@field CannotOpenSound UAkAudioEvent
---@field ItemSpawnLocation FVector
---@field State FLootBoxState
ALootBox = {}

---@param OldState FLootBoxState
function ALootBox:Rep_State(OldState) end
---@param PlayerCharacter APlayerCharacter
function ALootBox:ReceivePreLootBoxSpawn(PlayerCharacter) end
function ALootBox:OpenLootBoxComplete() end
---@param PlayerCharacter APlayerCharacter
function ALootBox:OnLootBoxOpen(PlayerCharacter) end
---@param InteractingController AController
function ALootBox:OnComponentInteractFailure(InteractingController) end
---@param InteractingController AController
function ALootBox:OnComponentInteract(InteractingController) end
function ALootBox:MulticastOpenBoxFailed() end
function ALootBox:LootBoxTriggered() end
---@param PlayerCharacter APlayerCharacter
function ALootBox:LootBoxSpawn(PlayerCharacter) end
---@return boolean
function ALootBox:IsLootBoxOpen() end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function ALootBox:HandleSerializeState(Serializer) end
---@param Actor AActor
function ALootBox:HandleRespawn(Actor) end
---@return APlayerCharacter
function ALootBox:GetLootBoxPlayerCharacter() end


---@class AMaterialSubstitutionTable : AActor
---@field IsGlobal boolean
---@field AffectedBiomes TArray<EBiome>
---@field MappingOrder int32
---@field MaterialSubstitutionTable TMap<UMaterialInterface, UMaterialInterface>
---@field SurfaceTagSubstitutionTable TMap<FName, FName>
AMaterialSubstitutionTable = {}



---@class AMeleeWeaponBase : APlayerWeapon
---@field MeleeBeginDelegate FMeleeWeaponBaseMeleeBeginDelegate
---@field MeleeEndDelegate FMeleeWeaponBaseMeleeEndDelegate
---@field MeleeCooldownEndDelegate FMeleeWeaponBaseMeleeCooldownEndDelegate
---@field MeleeCheckAbilityQueueDelegate FMeleeWeaponBaseMeleeCheckAbilityQueueDelegate
---@field MeleeDamagedActorDelegate FMeleeWeaponBaseMeleeDamagedActorDelegate
---@field MeleeDamageWindowDelegate FMeleeWeaponBaseMeleeDamageWindowDelegate
---@field MeleeBladeWindowDelegate FMeleeWeaponBaseMeleeBladeWindowDelegate
---@field MeleeTrailWindowDelegate FMeleeWeaponBaseMeleeTrailWindowDelegate
---@field MeleeStopMontageSignature FMeleeWeaponBaseMeleeStopMontageSignature
---@field MeleeCancelSignature FMeleeWeaponBaseMeleeCancelSignature
---@field StrongSlashUpgradesFeatureFlag FName
---@field AttackSetMoving FMeleeAttackSet
---@field AttackSetIdle FMeleeAttackSet
---@field AttackSetAir FMeleeAttackSet
---@field AdrenalineAttackSetMoving FMeleeAttackSet
---@field AdrenalineAttackSetMovingShort FMeleeAttackSet
---@field AdrenalineAttackSetIdle FMeleeAttackSet
---@field AdrenalineAttackSetAir FMeleeAttackSet
---@field StrongSlashDamageDescriptor FTouristDamageDescriptor
---@field MaxElevationForGroundTargets float
---@field MaxHeightDifferenceForAirTargets float
---@field bAutomaticVisibility boolean
---@field cooldown float
---@field DefaultCancelBlendOutDuration float
---@field InterruptMontageBlendOutDuration float
---@field bUseConstantTraceFrameRate boolean
---@field ConstantTraceFrameRate float
---@field VariableTracePointInterval float
---@field PreviousAttackBlendOutTime float
---@field bCancelGroundAttackIfFall boolean
---@field bCanWalkOffLedgesDuringMelee boolean
---@field MaxHitEffectsPerSweep int32
---@field bUseTimeDilations boolean
---@field DashOffGameplayEffect TSubclassOf<UGameplayEffect>
---@field JumpOffGameplayEffect TSubclassOf<UGameplayEffect>
---@field ClearVelocityGameplayEffect TSubclassOf<UGameplayEffect>
---@field GroundSlamGameplayEffect TSubclassOf<UGameplayEffect>
---@field UntilInterruptGameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field CommitmentGameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field InputTresholdForMovingMelee float
---@field ComboInputQueueTime float
---@field MeleeHitDistance float
---@field bInterruptByAim boolean
---@field bInterruptByDash boolean
---@field bInterruptByVaulting boolean
---@field bInterruptByHookShot boolean
---@field bInterruptByScanning boolean
---@field bInterruptByComboButton boolean
---@field bCancelAirAttackOnLand boolean
---@field AirAttackCancelBlendOutDuration float
---@field MaxAirAttacksPerFlight int32
---@field AirAttackMinHeight float
---@field GravityOffGameplayEffect TSubclassOf<UGameplayEffect>
---@field FallingLateralFrictionGameplayEffect TSubclassOf<UGameplayEffect>
---@field HitEffect TSubclassOf<AEffectContainer>
---@field HitPauseHitEffect TSubclassOf<AEffectContainer>
---@field MaxComboLength int32
---@field DamageMultiplierDeltaPerAttack float
---@field bDebugDrawMeleeTrace boolean
---@field bDebugDrawMeleeHitLocation boolean
---@field DebugDrawLifetime float
---@field DebugThickness float
---@field InterruptNotifyName FName
---@field DamageWindowNotifyName FName
---@field ComboWindowNotifyName FName
---@field BladeWindowNotifyName FName
---@field GroundSlamNotifyName FName
---@field DiveAttackNotifyName FName
---@field AreaAttackNotifyName FName
---@field HitSectionName FName
---@field AttackSectionName FName
---@field AnimMoveCurveName FName
---@field AnimTimedGamePlayEffectsName FName
---@field MeleeTrailWindowNotifyName FName
---@field MovementLoopSectionName FName
---@field InvulnerabilityWindowNotifyName FName
---@field MeleeUpgradeData FMeleeWeaponUpgradeData
---@field DamageShapes TArray<USphereComponent>
---@field PreviousDamageShapePositions TArray<FVector>
---@field CurrentAttackIndex int32
---@field VDM UVegetationDisplacementManagerComponent
---@field CoolDownRemaining float
---@field Placement EMeleeWeaponPlacement
---@field DamagedActors TSet<TWeakObjectPtr<AActor>>
---@field MeleeAbilityLevel int32
AMeleeWeaponBase = {}

---@param PredictionKey FPredictionKey
function AMeleeWeaponBase:ServerPushAttackPredictionKey(PredictionKey) end
---@param hit FHitResult
function AMeleeWeaponBase:PlayerLandedOverride(hit) end
---@param LandedHit FHitResult
---@param Velocity FVector
---@param bHardLand boolean
function AMeleeWeaponBase:PlayerLanded(LandedHit, Velocity, bHardLand) end
---@param NotifyName FName
---@param BranchingPointNotifyPayload FBranchingPointNotifyPayload
function AMeleeWeaponBase:OnNotifyEndReceived(NotifyName, BranchingPointNotifyPayload) end
---@param NotifyName FName
---@param BranchingPointNotifyPayload FBranchingPointNotifyPayload
function AMeleeWeaponBase:OnNotifyBeginReceived(NotifyName, BranchingPointNotifyPayload) end
---@param Montage UAnimMontage
---@param bInterrupted boolean
function AMeleeWeaponBase:OnMontageEnded(Montage, bInterrupted) end
---@param Montage UAnimMontage
---@param bInterrupted boolean
function AMeleeWeaponBase:OnMontageBlendingOut(Montage, bInterrupted) end
---@param AbilityLevel int32
---@param bRemoteOnly boolean
function AMeleeWeaponBase:MulticastStartMelee(AbilityLevel, bRemoteOnly) end
---@param ImpactPoint FVector
function AMeleeWeaponBase:MulticastLanded(ImpactPoint) end
---@param bRemoteOnly boolean
---@param BlendOutDuration float
---@param bInterruptMontage boolean
function AMeleeWeaponBase:MulticastEndMelee(bRemoteOnly, BlendOutDuration, bInterruptMontage) end
---@param bRemoteOnly boolean
---@param AttackData FMeleeAttackData
function AMeleeWeaponBase:MulticastDoMeleeAttack(bRemoteOnly, AttackData) end
---@return float
function AMeleeWeaponBase:GetMetaModifierDamageMultiplier() end
function AMeleeWeaponBase:BlueprintChargeReady() end


---@class AMine : AActor
---@field collision UBoxComponent
---@field TargetDetector USphereComponent
---@field SkeletalMesh USkeletalMeshComponent
---@field ExplosionRadiusIndicator URadiusIndicatorComponent
---@field TriggerRadiusIndicator URadiusIndicatorComponent
---@field SpawnEffect TSubclassOf<AEffectContainer>
---@field ExplosionEffect TSubclassOf<AEffectContainer>
---@field BounceEffect TSubclassOf<AEffectContainer>
---@field ExplosionParticleName FName
---@field ExplodeSoundEvent UAkAudioEvent
---@field DropSoundEvent UAkAudioEvent
---@field BounceSoundEvent UAkAudioEvent
---@field damage float
---@field DamageTypeClass TSubclassOf<UTouristDamageType>
---@field DamageTarget uint8
---@field ExplosionRadius float
---@field ExplodeOnDetectClasses TArray<UClass>
---@field ExplosionTimer float
---@field LastImpactSoundTime float
AMine = {}

---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function AMine:OnTargetDetectorOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
---@param HitComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param NormalImpulse FVector
---@param hit FHitResult
function AMine:OnImpact(HitComponent, OtherActor, OtherComp, NormalImpulse, hit) end
---@param TargetActor AActor
---@return boolean
function AMine:IsValidTargetForExplosion(TargetActor) end
function AMine:DoExplode() end


---@class AMinimapIcon : AStaticMeshActor
---@field MinimapObject UMinimapObject
---@field CompassTexture UTexture2D
---@field SpriteColor FLinearColor
---@field BillboardMaterial UMaterialInstanceDynamic
---@field StaticMeshMaterial UMaterialInstanceDynamic
---@field TrailMeshes UInstancedStaticMeshComponent
---@field MinimapPainter AMinimapPainter
---@field SpringArmComponent USpringArmComponent
---@field BillboardTexture UTexture2D
---@field MeshTexture UTexture2D
---@field CachedRoomIndex int32
---@field LastTransformation FTransform
---@field OverrideIconSettings FMinimapIconSettings
AMinimapIcon = {}

function AMinimapIcon:UpdateLocation() end
---@param InOverrideIconSettings FMinimapIconSettings
function AMinimapIcon:SetOverrideIconSettings(InOverrideIconSettings) end
function AMinimapIcon:OnMinimapUpdated() end
---@return EMinimapDisplayMode
function AMinimapIcon:GetDisplayMode() end
function AMinimapIcon:DisableIconOverride() end
---@param NewBiome EBiome
function AMinimapIcon:BiomeChanged(NewBiome) end


---@class AMinimapPainter : AActor
---@field MapPanningSpeed float
---@field bCameraResetEnabled boolean
---@field OffscreenObjectives TArray<FVector>
---@field MinimapUpdated FMinimapPainterMinimapUpdated
---@field MinimapGenerated FMinimapPainterMinimapGenerated
---@field MinimapPanned FMinimapPainterMinimapPanned
---@field OnMapModeChanged FMinimapPainterOnMapModeChanged
---@field MinimapTargetGame UTextureRenderTarget2D
---@field MinimapTargetPause UTextureRenderTarget2D
---@field MinimapGridTexture UTexture2D
---@field bControllerUsed boolean
---@field CachedLeftDeadzoneLimit float
---@field CachedRightDeadzoneLimit float
---@field RoomBounds FBoxSphereBounds
---@field PathHighlightComponent UInstancedStaticMeshComponent
---@field UnknownObjectSettings FMinimapIconSettings
---@field MinimapObjectSettings TMap<EMinimapObjectType, UStaticMinimapIconSettings>
---@field MinimapCollectibleSettings TMap<ECollectibleType, UStaticMinimapIconSettings>
---@field MinimapObjectTrailMeshes TMap<EMinimapObjectType, UStaticMesh>
---@field BillboardIconMesh UStaticMesh
---@field BillboardIconMaterial UMaterialInterface
---@field MapQueryRadius float
---@field MapSize3d float
---@field OutlineSize3d float
---@field ActiveRoomIndex int32
---@field PathHighlightWorldDistBetweenDots float
---@field PathHighlightDotSize float
---@field PathHighlightHeightMult float
---@field PathHighlightIconSettings UStaticMinimapIconSettings
---@field PathHighlightParameterCollection UMaterialParameterCollection
---@field RoomMaterial UMaterialInterface
---@field RoomWallMaterial UMaterialInterface
---@field DefaultRoomColor FLinearColor
---@field MinimapObjects TArray<UMinimapObject>
---@field CachedPlayer APlayerCharacter
---@field CameraInitialRotation FRotator
---@field SpringArmComponent USpringArmComponent
---@field GameViewTransform USceneComponent
---@field PauseViewTransform USceneComponent
---@field GameViewSettings FMinimapRenderViewSettings
---@field PauseViewSettings FMinimapRenderViewSettings
---@field MinimapViewType EMinimapViewType
---@field PreviousMinimapViewType EMinimapViewType
---@field bIsPauseMenuOpen boolean
---@field bWasPauseMenuOpen boolean
---@field bLerpingTowardTarget boolean
---@field LerpDuration float
---@field LerpProgress float
---@field ZoomBounds FVector2D
---@field TouchpadInputOffset FVector
---@field TouchpadInterpolationSpeed float
---@field TouchpadDistanceMultiplier float
---@field bIsTouchInputActive boolean
---@field DefaultZoomMiniMap float
---@field DefaultZoomMiniMapMultiplier float
---@field DefaultZoomPauseMap float
---@field TouchStartingPoint FVector
---@field OffsetStartingPoint FVector
---@field bAllowMapPanning boolean
---@field MapIconScaling_MinimumMultiplier float
---@field MapIconScaling_AdjustmentRate float
---@field bHilightActiveRoomInPauseMapOnly boolean
---@field POITypes TSet<EMinimapObjectType>
---@field HiddenTypeRequests TArray<int32>
---@field CurrentRoomVisibleOnlyTypeRequests TArray<int32>
---@field bUseRoomColors boolean
---@field RoomColors TMap<FName, FLinearColor>
---@field RoomGroupTags TArray<FName>
---@field DebugTextMaterial UMaterialInterface
---@field DebugRoomNames TArray<UTextRenderComponent>
---@field MinimapAttachmentComponent USceneComponent
---@field CompassIcons TArray<AMinimapIcon>
AMinimapPainter = {}

---@param bForceRoomColors boolean
function AMinimapPainter:ShowAllRooms(bForceRoomColors) end
---@param SpringArmLength float
function AMinimapPainter:SetZoomDistance(SpringArmLength) end
---@param NewStartingPoint FVector
function AMinimapPainter:SetTouchStartingPoint(NewStartingPoint) end
---@param Active boolean
function AMinimapPainter:SetTouchPadInputActive(Active) end
---@param NewOffsetStartPoint FVector
function AMinimapPainter:SetOffsetStartingPoint(NewOffsetStartPoint) end
---@param bObjectiveDisplay boolean
function AMinimapPainter:SetMaterialParam_ObjectiveDisplay(bObjectiveDisplay) end
---@param NewDeltaLimitEnabled boolean
function AMinimapPainter:SetDeltaLimitEnabled(NewDeltaLimitEnabled) end
---@param SaveGame UTouristSaveGame
function AMinimapPainter:SaveGameLoaded(SaveGame) end
---@param RoomIndex int32
function AMinimapPainter:RoomDataReset(RoomIndex) end
---@param OverrideDurationLerp boolean
---@param OverridingDurationLerp float
function AMinimapPainter:ResetMinimapCameraTarget(OverrideDurationLerp, OverridingDurationLerp) end
function AMinimapPainter:ResetHiddenRooms() end
---@param MetaModifiers TArray<UMetaModifierComponent>
function AMinimapPainter:PlayerMetaModifiersChanged(MetaModifiers) end
---@param TargetPoint FVector
function AMinimapPainter:PanMinimapTouchpadOffsetTowardPoint(TargetPoint) end
function AMinimapPainter:MultiplayerStatusChanged() end
---@param Point FVector
---@return FVector
function AMinimapPainter:MinimapToWorld(Point) end
---@param Point FVector
---@return FVector
function AMinimapPainter:MapWorldToMinimap3d(Point) end
function AMinimapPainter:LookTowardPlayer() end
---@param DeltaTime float
function AMinimapPainter:LerpTowardTargetPointAndRotation(DeltaTime) end
---@return boolean
function AMinimapPainter:IsTouchInputActive() end
---@param Position FVector
---@param Range float
---@return boolean
function AMinimapPainter:IsPlayerOutOfRange(Position, Range) end
---@return boolean
function AMinimapPainter:IsMinimapModePaused() end
function AMinimapPainter:InitiateEntryDance() end
---@return FVector2D
function AMinimapPainter:GetZoomBounds() end
---@return FBoxSphereBounds
function AMinimapPainter:GetVisibleRoomBounds() end
---@return FVector
function AMinimapPainter:GetTouchStartingPoint() end
---@return FVector
function AMinimapPainter:GetPlayerLocation() end
---@return FVector
function AMinimapPainter:GetPlayerDirection() end
---@return FVector
function AMinimapPainter:GetOffsetStartingPoint() end
---@return FRotator
function AMinimapPainter:GetMinimapRotation() end
---@param WorldContext UObject
---@return AMinimapPainter
function AMinimapPainter:GetMinimapPainter(WorldContext) end
---@return float
function AMinimapPainter:GetMapIconScalingMinimumMultiplier() end
---@return float
function AMinimapPainter:GetMapIconScalingAdjustmentRate() end
---@return float
function AMinimapPainter:GetDefaultZoomMiniMap() end
---@return TArray<FMinimapCompassIcon>
function AMinimapPainter:GetCompassIcons() end
---@param Meshes TSet<UStaticMesh>
---@param Billboards TSet<UTexture2D>
function AMinimapPainter:GetAllIcons(Meshes, Billboards) end
---@return FVector
function AMinimapPainter:GetAdjustedTouchpadInputOffset() end
---@return FVector
function AMinimapPainter:GetAdjustedPS4TouchVector() end
---@param RoomName FString
---@param hidden boolean
function AMinimapPainter:ForceRoomHiddenFromGameMinimapByName(RoomName, hidden) end
---@param RoomIndex int32
---@param hidden boolean
function AMinimapPainter:ForceRoomHiddenFromGameMinimap(RoomIndex, hidden) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function AMinimapPainter:BiomeStateChanged(Biome, NewBiomeState) end
---@param PlayerState APlayerState
---@param NewRoomIndex int32
---@param OldRoomIndex int32
function AMinimapPainter:ActiveRoomChanged(PlayerState, NewRoomIndex, OldRoomIndex) end


---@class AMistElevatorPlayer : AHMQActor
AMistElevatorPlayer = {}


---@class AModularGun : APlayerGun
---@field bBarrelUsesAimingSpace boolean
---@field FiringBehavior UGunFiringBehavior
---@field FiringRotModifiers TArray<UGunFiringRotModifier>
---@field Barrel UGunBarrel
---@field Clip UGunClip
---@field bUseRawAimDirForShooting boolean
---@field bUseAiming boolean
---@field OriginalBarrelType UClass
---@field OriginalBulletType UClass
---@field bIgnoreVisuals boolean
---@field MechanicalSounds UAkComponent
---@field BarrelSounds UAkComponent
---@field ShootSoundEvent UAkAudioEvent
---@field ShootStartEvent UAkAudioEvent
---@field ShootStopEvent UAkAudioEvent
---@field ShootNotReadyEvent UAkAudioEvent
---@field HeatingRTPC FString
---@field StartReloadSound UAkAudioEvent
---@field EndReloadSound UAkAudioEvent
---@field ReloadMontage UAnimMontage
---@field ShootMontage UAnimMontage
---@field ShootingCameraShake TSubclassOf<UCameraShake>
---@field FireBulletEffect TSubclassOf<AEffectContainer>
---@field StartFireEffect TSubclassOf<AEffectContainer>
---@field StopFireEffect TSubclassOf<AEffectContainer>
---@field FailedFireEffect TSubclassOf<AEffectContainer>
---@field Bullet TSubclassOf<UBulletType>
---@field BulletPattern TSubclassOf<UBulletPatternType>
---@field bIsShootingSoundPlaying boolean
AModularGun = {}

---@return int32
function AModularGun:HUDGetPiercing() end
---@return float
function AModularGun:HUDGetFireRateModifier() end
---@return float
function AModularGun:HUDGetDamageRadius() end
---@return float
function AModularGun:HUDGetBulletSpeedMultiplier() end
---@return float
function AModularGun:HUDGetBulletSpeedDelta() end
---@return float
function AModularGun:HUDGetBulletSizeMultiplier() end
---@return float
function AModularGun:HUDGetBulletSizeDelta() end
---@return float
function AModularGun:HUDGetBulletDamageMultiplier() end
---@return float
function AModularGun:HUDGetBulletDamageDelta() end


---@class AMovingLaserHazard : AHazardBase
---@field StartPoint FVector
---@field EndPoint FVector
---@field bUseRoomVolumeToActivate boolean
---@field InitialMovementStartDelay float
---@field DefaultMovementSpeed float
---@field MinimumMovementSpeed float
---@field BreakingDistance float
---@field SpeedInterpolationSpeed float
---@field CurrentPoint FVector
---@field DefaultSceneRoot USceneComponent
---@field Scene USceneComponent
---@field Iris UStaticMeshComponent
---@field Trigger USphereComponent
---@field BeamType TSubclassOf<ABeamHazardBase>
---@field ActualBeamHazard ABeamHazardBase
---@field RoomVolumeActivateBehavior URoomVolumeHazardEnablerBehaviour
AMovingLaserHazard = {}

---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function AMovingLaserHazard:OnSerializeState(Serializer) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function AMovingLaserHazard:OnEndOverlapTrigger(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function AMovingLaserHazard:OnBeginOverlapTrigger(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
---@param CurrentPointIn FVector
---@param CurrentSpeedIn float
---@param bMovingUpIn boolean
function AMovingLaserHazard:Multi_UpdateCurrentPoint(CurrentPointIn, CurrentSpeedIn, bMovingUpIn) end


---@class AMultiPersonDoorController : AActor
---@field Opened boolean
AMultiPersonDoorController = {}



---@class AMultiPersonDoorInteractable : AActor
---@field Disabled boolean
AMultiPersonDoorInteractable = {}

---@param theChar APlayerCharacter
---@param atDevice boolean
function AMultiPersonDoorInteractable:SetCharacterPose(theChar, atDevice) end


---@class AOfflineLevelGenManager : AActor
---@field OnMapGenerated FOfflineLevelGenManagerOnMapGenerated
---@field OnOfflineLevelGenComplete FOfflineLevelGenManagerOnOfflineLevelGenComplete
---@field bAutomaticMode boolean
---@field BiomeConfigs TArray<UBiomeConfig>
AOfflineLevelGenManager = {}

---@param LevelGenerator ALevelGenBaseActor
function AOfflineLevelGenManager:OnGeneratorReady(LevelGenerator) end
---@param LevelGenerator ALevelGenBaseActor
---@param MapSeed int32
function AOfflineLevelGenManager:NewMapGenerated(LevelGenerator, MapSeed) end
function AOfflineLevelGenManager:KickoffOfflineGeneration() end
---@return TArray<EBiome>
function AOfflineLevelGenManager:InitializeOfflineLevelGenManager() end
---@param LevelGenInfoTable UDataTable
function AOfflineLevelGenManager:AddGenerationPatternsFromTable(LevelGenInfoTable) end
---@param BiomeType EBiome
---@param NumMaps int32
---@param Params TArray<FName>
---@param bChallengeMode boolean
function AOfflineLevelGenManager:AddGenerationPatternRaw(BiomeType, NumMaps, Params, bChallengeMode) end
---@param NewPattern FOfflineLevelGenPattern
function AOfflineLevelGenManager:AddGenerationPattern(NewPattern) end


---@class AOutOfBoundsManager : AActor
---@field BiomeToWaitForInitialize EBiome
---@field BoundsSplineClass TSubclassOf<AActor>
---@field Boundaries TArray<FBoundaryData>
---@field AlwaysOnGamePlayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field DamageStartDistance float
---@field EarlyWarningDistance float
---@field DoorSafetyRadius float
---@field DamageDescriptor FTouristDamageDescriptor
---@field HealthDrainRate float
---@field MinimumDamage float
---@field TickIntervalWhenSafe float
---@field TickIntervalWhenUnsafe float
---@field TimeFactorWeight float
---@field DistanceFactorWeight float
---@field MaxDamageDistance float
---@field MaxDamageAndVfxTime float
---@field AggressiveDamageStartDistance float
---@field AggressiveDamageKillDistance float
---@field MaxWindDirectionChange float
---@field MaxWindStrengthChange float
---@field MinVfxDistance float
---@field MaxVfxDistance float
---@field bShouldBeEnabled boolean
---@field WindDirection FVector
---@field WindStrength float
---@field bEarlyWarningActive boolean
---@field bDebugAlwaysActive boolean
---@field OnOutOfBoundsProcessingToggled FOutOfBoundsManagerOnOutOfBoundsProcessingToggled
---@field PlayerCharacter APlayerCharacter
---@field BoundsSplines TArray<USplineComponent>
AOutOfBoundsManager = {}

function AOutOfBoundsManager:Reset() end
---@param bAlwaysOnEffects boolean
function AOutOfBoundsManager:RemoveGameplayEffectsFromRemote(bAlwaysOnEffects) end
---@param PlayerState APlayerState
---@param NewRoomIndex int32
---@param OldRoomIndex int32
function AOutOfBoundsManager:OnRoomChanged(PlayerState, NewRoomIndex, OldRoomIndex) end
---@param NewBiome EBiome
function AOutOfBoundsManager:OnBiomeChanged(NewBiome) end
---@param Point FVector
---@param OutOutOfBoundSplines TArray<USplineComponent>
---@param OnlyTestClosest uint8
---@return boolean
function AOutOfBoundsManager:IsPointOutOfBounds(Point, OutOutOfBoundSplines, OnlyTestClosest) end
---@return boolean
function AOutOfBoundsManager:IsOutOfBounds() end
---@return boolean
function AOutOfBoundsManager:Initialize() end
---@param Biome EBiome
---@param State EBiomeState
function AOutOfBoundsManager:BiomeStateChanged(Biome, State) end
---@param PlayerController ATouristPlayerController
---@param EffectsToApply TArray<TSubclassOf<UGameplayEffect>>
---@param bAlwaysOnEffects boolean
function AOutOfBoundsManager:ApplyGameplayEffectsForRemote(PlayerController, EffectsToApply, bAlwaysOnEffects) end


---@class APhotoModeActor : AActor
---@field PreviousViewTarget AActor
---@field CameraComponent UCameraComponent
---@field SphereComponent USphereComponent
---@field LeashDistance float
---@field MoveSpeed float
---@field TurnSpeed float
---@field bBlockOtherInput boolean
---@field OrthographicModeWidth float
---@field RollSpeed float
---@field WasShouldPerformFullTickWhenPausedEnabledOnLocalPlayerController boolean
---@field DepthOfFieldIntensity int32
---@field DepthOfFieldDistance float
---@field FieldOfView int32
---@field VignetteIntensity int32
---@field DepthOfFieldIntensity_Remap_FromStart float
---@field DepthOfFieldIntensity_Remap_FromEnd float
---@field DepthOfFieldIntensity_Remap_ToStart float
---@field DepthOfFieldIntensity_Remap_ToEnd float
---@field DepthOfFieldIntensity_LerpA float
---@field DepthOfFieldIntensity_LerpB float
---@field VignetteIntensity_Remap_FromStart float
---@field VignetteIntensity_Remap_FromEnd float
---@field VignetteIntensity_Remap_ToStart float
---@field VignetteIntensity_Remap_ToEnd float
---@field CachedKillZComponent URuntimePlayerRoomKillZ
---@field CachedWorld UWorld
---@field CachedPlayerActor AActor
APhotoModeActor = {}

function APhotoModeActor:UpdateCameraSettings() end
---@param hidden boolean
function APhotoModeActor:SetThreatIndicatorHidden(hidden) end
---@param NewRollValue float
function APhotoModeActor:SetRollValue(NewRollValue) end
---@param Enabled boolean
function APhotoModeActor:SetPlayerModelEnabled(Enabled) end
---@param MovementSpeed float
---@param TurningSpeed float
---@param RollingSpeed float
function APhotoModeActor:SetNewSpeedValues(MovementSpeed, TurningSpeed, RollingSpeed) end
---@param visible boolean
function APhotoModeActor:SetModelVisibilities_Test(visible) end
---@param Enabled boolean
function APhotoModeActor:SetMeleeWeaponModelEnabled(Enabled) end
---@param Enabled boolean
function APhotoModeActor:SetMainWeaponModelEnabled(Enabled) end
---@param PerspectiveEnabled boolean
function APhotoModeActor:SetCameraProjectionMode(PerspectiveEnabled) end
---@param SaveGame UTouristSaveGame
function APhotoModeActor:SaveGameModified(SaveGame) end
function APhotoModeActor:OnMouseRotateReleased() end
function APhotoModeActor:OnMouseRotatePressed() end
---@param NewKillZ float
function APhotoModeActor:KillZChanged(NewKillZ) end
---@return boolean
function APhotoModeActor:IsPlayerModelEnabled() end
---@return boolean
function APhotoModeActor:IsMeleeWeaponModelEnabled() end
---@return boolean
function APhotoModeActor:IsMainWeaponModelEnabled() end
---@param value float
function APhotoModeActor:HandleTurnRateAxis(value) end
---@param value float
function APhotoModeActor:HandleMoveRightAxis(value) end
---@param value float
function APhotoModeActor:HandleMoveForwardAxis(value) end
---@param value float
function APhotoModeActor:HandleMouseYAxis(value) end
---@param value float
function APhotoModeActor:HandleMouseXAxis(value) end
---@param value float
function APhotoModeActor:HandleLookUpRateAxis(value) end
---@param value float
function APhotoModeActor:HandleDescendAxis(value) end
---@param value float
function APhotoModeActor:HandleAscendAxis(value) end
---@return USphereComponent
function APhotoModeActor:GetSphereComponent() end
---@return UInputComponent
function APhotoModeActor:GetInputComponent() end
---@return UCameraComponent
function APhotoModeActor:GetCameraComponent() end


---@class APhotoModeBlockerActor : AActor
---@field RootComp USceneComponent
APhotoModeBlockerActor = {}



---@class APlayerCharacter : ABasePlayerCharacter
---@field bShouldEnvironmentScan boolean
---@field OnVisibilityChangedEvent FPlayerCharacterOnVisibilityChangedEvent
---@field OnCinematicModeChanged FPlayerCharacterOnCinematicModeChanged
---@field OnPreStartCinematicEvent FPlayerCharacterOnPreStartCinematicEvent
---@field OnExtraLife FPlayerCharacterOnExtraLife
---@field OnExtraLifeTeleport FPlayerCharacterOnExtraLifeTeleport
---@field OnPossessionChanged FPlayerCharacterOnPossessionChanged
---@field OnDownedStateChanged FPlayerCharacterOnDownedStateChanged
---@field OnSimpleDownedStateChanged FPlayerCharacterOnSimpleDownedStateChanged
---@field OnDownedStateAboutToBeChanged FPlayerCharacterOnDownedStateAboutToBeChanged
---@field OnRevivingStateChanged FPlayerCharacterOnRevivingStateChanged
---@field OnPlayerBeganRevivingSomeone FPlayerCharacterOnPlayerBeganRevivingSomeone
---@field OnPlayerEndedRevivingSomeone FPlayerCharacterOnPlayerEndedRevivingSomeone
---@field DownedGameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field bForceClientAuthority boolean
---@field DownedState EDownedState
---@field DownedReviver APlayerCharacter
---@field bIsBeingRevived boolean
---@field ReviveProgress float
---@field ReviveProgressRate float
---@field bClientHasInitiatedRevive boolean
---@field bFellOffCliff boolean
---@field NotifyAnimLeftFootDown FPlayerCharacterNotifyAnimLeftFootDown
---@field NotifyAnimRightFootDown FPlayerCharacterNotifyAnimRightFootDown
---@field OnPlayerDashCooldownChanged FPlayerCharacterOnPlayerDashCooldownChanged
---@field OnDodgedEnemy FPlayerCharacterOnDodgedEnemy
---@field OnEnemyDamaged FPlayerCharacterOnEnemyDamaged
---@field OnEnemyDamagedRemoteAndLocal FPlayerCharacterOnEnemyDamagedRemoteAndLocal
---@field OnActorKilled FPlayerCharacterOnActorKilled
---@field OnEnemyKilled FPlayerCharacterOnEnemyKilled
---@field OnActorStaggered FPlayerCharacterOnActorStaggered
---@field OnPlayerLanded FPlayerCharacterOnPlayerLanded
---@field OnPlayerJumped FPlayerCharacterOnPlayerJumped
---@field OnFellOutOfWorld FPlayerCharacterOnFellOutOfWorld
---@field OnWeaponChanged FPlayerCharacterOnWeaponChanged
---@field OnMainWeaponChanged FPlayerCharacterOnMainWeaponChanged
---@field OnMeleeWeaponChanged FPlayerCharacterOnMeleeWeaponChanged
---@field OnSuperWeaponChanged FPlayerCharacterOnSuperWeaponChanged
---@field OnSelectedGunChanged FPlayerCharacterOnSelectedGunChanged
---@field OnWeaponUpgraded FPlayerCharacterOnWeaponUpgraded
---@field OnWeaponUpgradeRemoved FPlayerCharacterOnWeaponUpgradeRemoved
---@field OnWeaponWaitingForRelease FPlayerCharacterOnWeaponWaitingForRelease
---@field OnWeaponFired FPlayerCharacterOnWeaponFired
---@field TryAltFireToggleExit FPlayerCharacterTryAltFireToggleExit
---@field AltFireToggleMisfire FPlayerCharacterAltFireToggleMisfire
---@field OnItemCollected FPlayerCharacterOnItemCollected
---@field OnItemBought FPlayerCharacterOnItemBought
---@field OnEnvStatusHazardChange FPlayerCharacterOnEnvStatusHazardChange
---@field OnEnvStatusSandstormChange FPlayerCharacterOnEnvStatusSandstormChange
---@field OnEnvStatusUnderwaterChange FPlayerCharacterOnEnvStatusUnderwaterChange
---@field OnDashDebuffChanged FPlayerCharacterOnDashDebuffChanged
---@field bHasLeftStartRoom boolean
---@field bGiveDefaultPrimaryWeaponOnSpawn boolean
---@field MaxHealthIncreaseAmount float
---@field LowHealthGameplayEffect TSubclassOf<UGameplayEffect>
---@field OnHealthSacrificed FPlayerCharacterOnHealthSacrificed
---@field OnImmobilizedStateChanged FPlayerCharacterOnImmobilizedStateChanged
---@field ImmobilizedEnemyGameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field bIsRevivingCharacter boolean
---@field CharacterToRevive APlayerCharacter
---@field BeingRevivedByCharacter APlayerCharacter
---@field AIPathFollowingComponent UPathFollowingComponent
---@field AITargetCollectible ACollectibleBase
---@field AIMovementFilter TSubclassOf<UNavigationQueryFilter>
---@field OnGroundMovementChanged FPlayerCharacterOnGroundMovementChanged
---@field AimTriggerStateIndex int32
---@field FireTriggerStateIndex int32
---@field WarpDataVault1m UMotionWarpData
---@field WarpDataVault1mAndHalf UMotionWarpData
---@field WarpDataVault2m UMotionWarpData
---@field WarpDataVaultHardFall UMotionWarpData
---@field VaultMotionWarpData UMotionWarpData
---@field OnAimTriggerStateChanged FPlayerCharacterOnAimTriggerStateChanged
---@field OnFireTriggerStateChanged FPlayerCharacterOnFireTriggerStateChanged
---@field OnSprintInput FPlayerCharacterOnSprintInput
---@field OnSprintingChanged FPlayerCharacterOnSprintingChanged
---@field MoveDoublePressThreshold float
---@field bMoveDoublePressActive boolean
---@field bNoConsumableSwitchingActive boolean
---@field bWantsToSprint boolean
---@field bIsSprintingAllowed boolean
---@field PingHistory TArray<AActor>
---@field ReplicatedLobbyDeviceSpawn FLobbyDeviceSpawnLocation
---@field LocalLobbyDeviceSpawn FLobbyDeviceSpawnLocation
---@field LocationPingActor TSubclassOf<AActor>
---@field PingCooldown float
---@field MaterialParamIsInvulnerable FName
---@field DashAbilityComponent UDashAbilityComponent
---@field HookShotAbilityComponent UHookShotAbilityComponent
---@field LockOnComponent ULockOnComponent
---@field FocusAimComponent UFocusAimComponent
---@field AIPerceptionStimuliSource UAIPerceptionStimuliSourceComponent
---@field MinimapObject UMinimapObject
---@field AdrenalineComponent UAdrenalineComponent
---@field ReviveInteractor APlayerCharacterReviveInteractor
---@field ReviveInteractorClass TSubclassOf<APlayerCharacterReviveInteractor>
---@field Inventory UInventory
---@field FollowCameraActor APlayerFollowCamera
---@field AimingTraceStartLocation FVector
---@field AimingTraceEndLocation FVector
---@field AimingTraceHitLocation FVector
---@field AimingTraceHit FHitResult
---@field AimInputRaw FVector2D
---@field AimInput FVector2D
---@field AimInputRotation FVector2D
---@field MaxHealthIncreasedParticleComponent UPlayerNGParticleComponent
---@field AbilitySystemComponent UPlayerAbilitySystemComponent
---@field DamageTargetListenerComponent UDamageTargetListenerComponent
---@field SafeLocationComponent USafeLocationComponent
---@field MaxHealthUpgrade USimpleAttributeComponent
---@field ExtraLifeComponent UExtraLifeComponent
---@field MidAirLoopSfx UAkAudioEvent
---@field MidAirLoopStop UAkAudioEvent
---@field FallingSpeedRTPC FName
---@field DelayStuckRespawn float
---@field EnableStuckCheck boolean
---@field bLevelFullyGeneratedOnClient boolean
---@field DefaultGun TSubclassOf<APlayerGun>
---@field CurrentGun APlayerGun
---@field DefaultGunUpgradeSlots int32
---@field DefaultMeleeWeapon TSubclassOf<AMeleeWeaponBase>
---@field CurrentMeleeWeapon AMeleeWeaponBase
---@field DefaultMeleeWeaponUpgradeSlots int32
---@field CurrentSuperWeapon APlayerGun
---@field PlayerSanity UPlayerSanityComponent
---@field ProficiencyComponent UProficiencyComponent
---@field FallDuration float
---@field UpperBodyAimingRotation FRotator
---@field bWantsToFire boolean
---@field bIsFiring boolean
---@field AimEdgeAcceleratedTimer float
---@field AnimationControlFlags ECharacterControlFlags
---@field InvulnerabilityTimeAfterRevive float
---@field RevivingAllyGameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field DefaultAimProfile UAimProfileData
---@field OverrideAimProfile UAimProfileData
---@field CurrentAimProfile UAimProfileData
---@field MovementCurve UCurveFloat
---@field bCanBeSeenByEnemies boolean
---@field bIsEnemyGrabStartPending boolean
---@field bLootBoxOpenPending boolean
---@field bDoorUnlockPending boolean
---@field bIsGrounded boolean
---@field MovementCollisionNormal FVector
---@field MeshInitialTransform FTransform
---@field bWhatIsThisMode boolean
---@field DoubleJumpZVelocity float
---@field JumpStartTime float
---@field JumpStartLocation FVector
---@field CameraDefaultPitch float
---@field Sounds UAkComponent
---@field CurrentPlayerStatus FCurrentPlayerStatus
---@field ServerRoomIndex int32
---@field CachedGameState ATouristGameState
---@field CachedNGPMC UNGPManagerComponent
---@field GroundMovementType EGroundMovementType
---@field TargetGroundMovementType EGroundMovementType
---@field LastTargetGroundMovementType EGroundMovementType
---@field bHasGroundMovementInput boolean
---@field PlayerFootstepData FPlayerFootstepData
---@field InputMagnitudeCurve UCurveFloat
---@field MovementInputWorldSpace FVector
---@field PlayerAnimInstance UPlayerAnimInstance
---@field RemoteCameraLocation FVector
---@field RemoteCameraRotation FRotator
---@field WakeUpCinematicEndedEvent UAkAudioEvent
---@field bUpdateLedgesOnlyOnGround boolean
---@field LedgeDropSectionCount int32
---@field LedgeDropArcAngle float
---@field LedgeDropMinDistance float
---@field LedgeDropMaxDistance float
---@field LedgeDropHeightTraceLength float
---@field LedgeDrops TArray<FLedgeDropData>
---@field OnPlayerTeleported FPlayerCharacterOnPlayerTeleported
---@field TetherTeleportClass TSoftClassPtr<ATeleport>
---@field TetherTeleporter ATeleport
---@field TeleportGameplayEffect TSubclassOf<UGameplayEffect>
---@field TeleportDepartureSoundEvent UAkAudioEvent
---@field TeleportArrivalSoundEvent UAkAudioEvent
---@field TeleportPfx UNGParticleComponent
---@field CurrentTeleportOrigin UTeleporterHandler
---@field CurrentTeleportDestination UTeleporterHandler
---@field TeleportStreamFocus ULevelGenStreamingFocus
---@field ScanningGameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field LookAtComponent UV3LookAtComponent
---@field bReleasedJump boolean
---@field CurrentGravityScale float
---@field ActiveGravityScale float
---@field TimeDilationComponent UTimeDilationComponent
---@field ActorControllerComponent UActorControllerComponent
---@field bCinematicMode boolean
---@field bCinematicModeHidePlayer boolean
---@field AimState EAimState
---@field HealedAudioEvent UAkAudioEvent
---@field RemotePlayerCameraBlocker UCapsuleComponent
---@field bInFirstPerson boolean
---@field DefaultPlayerState TArray<uint8>
---@field InitialSetupData FPlayerInitialSetupData
---@field MeshResourceEnabled FPlayerCharacterMeshResourceEnabled
---@field OnDeathHandling FPlayerCharacterOnDeathHandling
---@field OnDeathHandled FPlayerCharacterOnDeathHandled
---@field OnSuitApplied FPlayerCharacterOnSuitApplied
---@field SuitAttachmentName FName
---@field AttachmentMeshComps TArray<UStaticMeshComponent>
---@field DefaultTriggerSettingsLeft UInputTriggerSettingsDataAsset
---@field DefaultTriggerSettingsRight UInputTriggerSettingsDataAsset
---@field DefaultTriggerSettingsLeftWithAltFire UInputTriggerSettingsDataAsset
---@field DefaultTriggerSettingsLeftWithoutAltFire UInputTriggerSettingsDataAsset
---@field TriggerDataLeft FInputTriggerData
---@field TriggerDataRight FInputTriggerData
---@field CurrentMotionWarpData UMotionWarpData
APlayerCharacter = {}

function APlayerCharacter:WhatIsThisRay() end
---@param DeltaSeconds float
function APlayerCharacter:UpdateLedgeVault(DeltaSeconds) end
---@param PressedDownAlpha float
function APlayerCharacter:UpdateFireTrigger(PressedDownAlpha) end
---@param DeltaT float
function APlayerCharacter:UpdateCharacterRotation(DeltaT) end
---@param PressedDownAlpha float
function APlayerCharacter:UpdateAimTrigger(PressedDownAlpha) end
---@param TrophyName FName
---@param Progress float
function APlayerCharacter:UnlockTrophy(TrophyName, Progress) end
function APlayerCharacter:UnlockClarityTrophy() end
---@param DestLocation FVector
---@param DestRotation FRotator
---@param bIsATest boolean
---@param bNoCheck boolean
---@return boolean
function APlayerCharacter:TeleportTo(DestLocation, DestRotation, bIsATest, bNoCheck) end
---@param IsReviving boolean
---@param ToRevive APlayerCharacter
---@param Progress float
---@param ProgressRate float
function APlayerCharacter:SyncedSetRevivingCharacter(IsReviving, ToRevive, Progress, ProgressRate) end
---@param Discoverable UDiscoverableComponent
function APlayerCharacter:StopScanning(Discoverable) end
function APlayerCharacter:StopLedgeVault() end
---@param Discoverable UDiscoverableComponent
function APlayerCharacter:StartScanning(Discoverable) end
---@param StartLocation FVector
---@param TargetLocation FVector
---@param RotationYaw float
---@param AnimationHeight float
---@param RealizedVelZ float
---@param bGroundVault boolean
function APlayerCharacter:StartLedgeVault(StartLocation, TargetLocation, RotationYaw, AnimationHeight, RealizedVelZ, bGroundVault) end
function APlayerCharacter:SprintReleased() end
function APlayerCharacter:SprintPressed() end
---@return boolean
function APlayerCharacter:ShouldDeathCauseDowning() end
---@param bNewWantsToFire boolean
function APlayerCharacter:SetWantsToFire(bNewWantsToFire) end
---@param bVisible boolean
function APlayerCharacter:SetVisibility(bVisible) end
---@param TriggerButton ETriggerButton
---@param TriggerSettings FInputTriggerSettings
function APlayerCharacter:SetTriggerSettings(TriggerButton, TriggerSettings) end
---@param MeshType EPlayerMeshTypes
---@param ParameterName FName
---@param ParamType EMaterialParamType
---@param ScalarValue float
---@param VectorValue FVector
---@param Vector4Value FLinearColor
---@param TextureValue UTexture
function APlayerCharacter:SetPlayerMaterialParam(MeshType, ParameterName, ParamType, ScalarValue, VectorValue, Vector4Value, TextureValue) end
function APlayerCharacter:SetNoConsumableSwitchingPrototypeActive() end
---@param bVisible boolean
function APlayerCharacter:SetLocalFirstPersonVisibility(bVisible) end
---@param IsBeingRevived boolean
---@param RevivedBy APlayerCharacter
---@param Progress float
---@param ProgressRate float
function APlayerCharacter:SetIsBeingRevived(IsBeingRevived, RevivedBy, Progress, ProgressRate) end
---@param State EPlayerGlitchState
---@param Target EPlayerGlitchTarget
function APlayerCharacter:SetGlitchState(State, Target) end
---@param bVisible boolean
function APlayerCharacter:SetGlitchedVisibility(bVisible) end
---@param bCollisionEnabled boolean
function APlayerCharacter:SetGlitchedCollision(bCollisionEnabled) end
---@param bVisible boolean
function APlayerCharacter:SetFirstPersonVisibility(bVisible) end
---@param DownState EDownedState
function APlayerCharacter:SetDownedState(DownState) end
---@param Reviver APlayerCharacter
function APlayerCharacter:SetDownedReviver(Reviver) end
---@param TriggerButton ETriggerButton
---@param TriggerSettingsAsset UInputTriggerSettingsDataAsset
function APlayerCharacter:SetDefaultTriggerSettings(TriggerButton, TriggerSettingsAsset) end
---@param Actor AActor
---@param stencilValue int32
---@param stencilMask ERendererStencilMask
---@param Enabled boolean
function APlayerCharacter:SetCustomDepthStencilVals(Actor, stencilValue, stencilMask, Enabled) end
---@param value boolean
function APlayerCharacter:SetConsumableNominationActive(value) end
---@param bCollisionEnabled boolean
function APlayerCharacter:SetCollision(bCollisionEnabled) end
---@param bVisible boolean
function APlayerCharacter:SetCinematicVisibility(bVisible) end
---@param AimProfile UAimProfileData
function APlayerCharacter:SetAimProfile(AimProfile) end
---@param bInterrupted boolean
function APlayerCharacter:ServerStopAiming(bInterrupted) end
---@param StartLocation FVector
---@param TargetLocation FVector
---@param RotationYaw float
---@param AnimationHeight float
---@param RealizedVelZ float
---@param bGroundVault boolean
function APlayerCharacter:ServerStartLedgeVault(StartLocation, TargetLocation, RotationYaw, AnimationHeight, RealizedVelZ, bGroundVault) end
function APlayerCharacter:ServerStartJump() end
---@param bQueueShot boolean
function APlayerCharacter:ServerStartAiming(bQueueShot) end
---@param bNewWantsToFire boolean
function APlayerCharacter:ServerSetWantsToFire(bNewWantsToFire) end
---@param IsReviving boolean
---@param ToRevive APlayerCharacter
---@param Progress float
---@param ProgressRate float
function APlayerCharacter:ServerSetRevivingCharacter(IsReviving, ToRevive, Progress, ProgressRate) end
---@param bNewValue boolean
function APlayerCharacter:ServerSetLevelFullyGeneratedOnClient(bNewValue) end
---@param NewGroundMovementType EGroundMovementType
function APlayerCharacter:ServerSetGroundMovementType(NewGroundMovementType) end
---@param NewState int32
function APlayerCharacter:ServerSetFireTriggerStateIndex(NewState) end
---@param NewState int32
function APlayerCharacter:ServerSetAimTriggerStateIndex(NewState) end
---@param Location FVector
---@param Normal FVector
---@param PingGuid FGuid
function APlayerCharacter:ServerPingLocation(Location, Normal, PingGuid) end
---@param Actor AActor
---@param PingGuid FGuid
function APlayerCharacter:ServerPingActor(Actor, PingGuid) end
---@param Target FTransform
function APlayerCharacter:ServerNetSetTransform(Target) end
function APlayerCharacter:ServerEndTeleport() end
---@param SetupData FPlayerInitialSetupData
function APlayerCharacter:ServerDoInitialSetup(SetupData) end
---@param PingGuid FGuid
function APlayerCharacter:ServerCancelPing(PingGuid) end
function APlayerCharacter:ServerCancelAllPings() end
---@param TeleportOrigin UTeleporterHandler
---@param TeleportDestination UTeleporterHandler
---@param OverrideDestinationLocation FVector
function APlayerCharacter:ServerBeginTeleport(TeleportOrigin, TeleportDestination, OverrideDestinationLocation) end
---@param index int32
function APlayerCharacter:SendServerRoomIndex(index) end
---@param Pockets UPocketsComponent
function APlayerCharacter:SelectAndConsume(Pockets) end
---@param SaveGame UTouristSaveGame
function APlayerCharacter:SaveGameReset(SaveGame) end
---@param SaveGame UTouristSaveGame
function APlayerCharacter:SaveGameModified(SaveGame) end
---@param SaveGame UTouristSaveGame
---@param Flag FName
function APlayerCharacter:SaveGameFlagChanged(SaveGame, Flag) end
---@param RoomIndex int32
function APlayerCharacter:RoomCleared(RoomIndex) end
---@param AfterReviveHealth float
---@param bTeleportRequired boolean
function APlayerCharacter:ReviveCharacter(AfterReviveHealth, bTeleportRequired) end
---@return boolean
function APlayerCharacter:RestoreSafeLocation() end
---@param TriggerButton ETriggerButton
function APlayerCharacter:ResetTriggerSettings(TriggerButton) end
function APlayerCharacter:RequestServerRoomIndex() end
---@param Discoverable UDiscoverableComponent
---@param isStarting boolean
function APlayerCharacter:RequestScanningStateUpdateMulticast(Discoverable, isStarting) end
---@param RemoteOnly boolean
---@return boolean
function APlayerCharacter:RemoteOnlyTest(RemoteOnly) end
---@return boolean
function APlayerCharacter:PlayerMayFireWeapon() end
---@param InteractingController AController
---@param InteractTarget AActor
function APlayerCharacter:PlayerInteract(InteractingController, InteractTarget) end
function APlayerCharacter:PingReleased() end
function APlayerCharacter:PingPressed() end
---@param Gun AGunBase
function APlayerCharacter:OnShotFired(Gun) end
---@param InteractingController AController
function APlayerCharacter:OnReviveInteract(InteractingController) end
function APlayerCharacter:OnRep_ServerRoomIndex() end
function APlayerCharacter:OnRep_LobbyDeviceSpawn() end
function APlayerCharacter:OnRep_InitialSetupData() end
function APlayerCharacter:OnRep_InFirstPerson() end
function APlayerCharacter:OnRep_FireTriggerStateIndex() end
---@param bOldValue EDownedState
function APlayerCharacter:OnRep_DownedState(bOldValue) end
---@param LastGun APlayerGun
function APlayerCharacter:OnRep_CurrentSuperWeapon(LastGun) end
function APlayerCharacter:OnRep_CurrentMeleeWeapon() end
---@param LastGun APlayerGun
function APlayerCharacter:OnRep_CurrentGun(LastGun) end
function APlayerCharacter:OnRep_CinematicModeHidePlayer() end
function APlayerCharacter:OnRep_AimTriggerStateIndex() end
---@param Weapon APlayerWeapon
function APlayerCharacter:OnMeleeWeaponUpgraded(Weapon) end
---@param HealthComp UHealthComponent
function APlayerCharacter:OnMaxHealthChanged(HealthComp) end
---@param Weapon APlayerWeapon
function APlayerCharacter:OnMainWeaponUpgraded(Weapon) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function APlayerCharacter:OnDamageTaken(DamagedActor, DamageEvent) end
---@param Flags ECharacterControlFlags
function APlayerCharacter:OnAnimationControlFlagsUpdated(Flags) end
---@param Dealer AActor
---@param ItemClass TSubclassOf<AActor>
---@param Price int32
function APlayerCharacter:NotifyServerItemBought(Dealer, ItemClass, Price) end
---@param Target FTransform
function APlayerCharacter:NetSetTransform(Target) end
---@param StartLocation FVector
---@param TargetLocation FVector
---@param RotationYaw float
---@param AnimationHeight float
---@param RealizedVelZ float
---@param bGroundVault boolean
function APlayerCharacter:MulticastStartLedgeVault(StartLocation, TargetLocation, RotationYaw, AnimationHeight, RealizedVelZ, bGroundVault) end
function APlayerCharacter:MulticastStartJump() end
---@param bVisible boolean
function APlayerCharacter:MulticastSetWeaponsVisibility(bVisible) end
---@param IsReviving boolean
---@param ToRevive APlayerCharacter
---@param Progress float
---@param ProgressRate float
function APlayerCharacter:MulticastSetRevivingCharacter(IsReviving, ToRevive, Progress, ProgressRate) end
---@param NewGroundMovementType EGroundMovementType
function APlayerCharacter:MulticastSetGroundMovementType(NewGroundMovementType) end
---@param Discoverable UDiscoverableComponent
---@param isStarting boolean
function APlayerCharacter:MulticastScanningStateUpdate(Discoverable, isStarting) end
---@param SafeLocation FVector
---@param bTeleportRequired boolean
function APlayerCharacter:MulticastReviveCharacter(SafeLocation, bTeleportRequired) end
---@param Location FVector
---@param Normal FVector
---@param PingGuid FGuid
function APlayerCharacter:MulticastPingLocation(Location, Normal, PingGuid) end
---@param Actor AActor
---@param PingGuid FGuid
function APlayerCharacter:MulticastPingActor(Actor, PingGuid) end
---@param Target FTransform
function APlayerCharacter:MulticastNetSetTransform(Target) end
---@param LootBox ALootBox
function APlayerCharacter:MulticastLootBoxOpened(LootBox) end
---@param TargetLocation FVector
function APlayerCharacter:MulticastEndTeleport(TargetLocation) end
---@param Door ADoor
---@param Key EInventoryKeyType
function APlayerCharacter:MulticastDoorUnlocked(Door, Key) end
---@param PingGuid FGuid
function APlayerCharacter:MulticastCancelPing(PingGuid) end
function APlayerCharacter:MulticastCancelAllPings() end
---@param TeleportOrigin UTeleporterHandler
---@param TeleportDestination UTeleporterHandler
---@param OverrideDestinationLocation FVector
function APlayerCharacter:MulticastBeginTeleport(TeleportOrigin, TeleportDestination, OverrideDestinationLocation) end
function APlayerCharacter:MoveReleased() end
function APlayerCharacter:MovePressed() end
function APlayerCharacter:MoveHold() end
---@param AttributeComp USimpleAttributeComponent
function APlayerCharacter:MaxHealthUpgradeMaxReached(AttributeComp) end
---@param HealthComp UHealthComponent
---@param bIsLowHealth boolean
function APlayerCharacter:LowHealthModeChanged(HealthComp, bIsLowHealth) end
---@param Montage UAnimMontage
---@param bInterrupted boolean
function APlayerCharacter:LootBoxOpenedMontageEnded(Montage, bInterrupted) end
---@param bIsLockedOn boolean
---@param bIsPointingAtTarget boolean
---@param LockOnComponent ULockOnComponent
function APlayerCharacter:LockOnStateChanged(bIsLockedOn, bIsPointingAtTarget, LockOnComponent) end
---@param bNewWantsToFire boolean
function APlayerCharacter:LocalSetWantsToFire(bNewWantsToFire) end
---@param IsReviving boolean
---@param ToRevive APlayerCharacter
---@param Progress float
---@param ProgressRate float
function APlayerCharacter:LocalSetRevivingCharacter(IsReviving, ToRevive, Progress, ProgressRate) end
function APlayerCharacter:LevelReset() end
---@return boolean
function APlayerCharacter:IsVisibleToEnemies() end
---@return boolean
function APlayerCharacter:IsVaulting() end
---@return boolean
function APlayerCharacter:IsSprinting() end
---@return boolean
function APlayerCharacter:IsRemoteHost() end
---@return boolean
function APlayerCharacter:IsRemoteClient() end
---@return boolean
function APlayerCharacter:IsPointingAtLockableTarget() end
---@return boolean
function APlayerCharacter:IsPlayerRoomReady() end
---@return boolean
function APlayerCharacter:IsPerfectDodgeActive() end
---@return boolean
function APlayerCharacter:IsLockOnAllowed() end
---@return boolean
function APlayerCharacter:IsLockedOnToTarget() end
---@return boolean
function APlayerCharacter:IsLocalHost() end
---@return boolean
function APlayerCharacter:IsLocalClient() end
---@return boolean
function APlayerCharacter:IsInCombat() end
---@return boolean
function APlayerCharacter:IsInCinematicMode() end
---@return boolean
function APlayerCharacter:IsImmobilized() end
---@return boolean
function APlayerCharacter:IsHost() end
---@return boolean
function APlayerCharacter:IsFocusAiming() end
---@return boolean
function APlayerCharacter:IsFocusAimAllowed() end
---@return boolean
function APlayerCharacter:IsFloorReady() end
---@return boolean
function APlayerCharacter:IsFireWeaponAllowed() end
---@return boolean
function APlayerCharacter:IsFallingHard() end
---@return boolean
function APlayerCharacter:IsDashing() end
---@return boolean
function APlayerCharacter:IsCurrentlyReloading() end
---@return boolean
function APlayerCharacter:IsCurrentlyFiring() end
---@return boolean
function APlayerCharacter:IsClient() end
---@return boolean
function APlayerCharacter:IsCinematicInCinematicMode() end
---@return boolean
function APlayerCharacter:IsAiming() end
---@return boolean
function APlayerCharacter:IsActiveInGame() end
---@param amount float
---@param HealType EHealType
function APlayerCharacter:Healed(amount, HealType) end
---@param Tag FGameplayTag
---@return boolean
function APlayerCharacter:HasMatchingGameplayTag(Tag) end
---@return boolean
function APlayerCharacter:HasDoubleJump() end
---@return boolean
function APlayerCharacter:HasBeenLocallyControlled() end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function APlayerCharacter:HandlePlayerDeath(DamagedActor, DamageEvent) end
---@param OwnerComp UMetaModifierOwnerComponent
---@param MetaModifierName FName
function APlayerCharacter:HandleMetaModifierAdded(OwnerComp, MetaModifierName) end
function APlayerCharacter:HandleMenuOpened() end
---@param Weapon APlayerWeapon
---@param UpgradeClass TSubclassOf<UGunSlotUpgrade>
function APlayerCharacter:HandleMainWeaponUpgradeRemoved(Weapon, UpgradeClass) end
---@param Actor AActor
---@param DamageEvent FTouristDamageEvent
function APlayerCharacter:HandleKilledActor(Actor, DamageEvent) end
---@param Actor AActor
---@param DamageEvent FTouristDamageEvent
function APlayerCharacter:HandleDamagedActor(Actor, DamageEvent) end
---@param bMainWeapon boolean
---@param bMeleeWeapon boolean
function APlayerCharacter:GiveDefaultWeapons(bMainWeapon, bMeleeWeapon) end
---@return ESprintInputType
function APlayerCharacter:GetSprintInputType() end
---@return FName
function APlayerCharacter:GetSkeletalMeshResourceName() end
---@return APlayerGun
function APlayerCharacter:GetSelectedGun() end
---@return UPlayerSanityComponent
function APlayerCharacter:GetPlayerSanity() end
---@return UAdrenalineComponent
function APlayerCharacter:GetPlayerAdrenaline() end
---@return ULockOnComponent
function APlayerCharacter:GetLockOnComponent() end
---@return float
function APlayerCharacter:GetJumpZVelocity() end
---@return boolean
function APlayerCharacter:GetIsGrounded() end
---@return boolean
function APlayerCharacter:GetIsConsumableNominationActive() end
---@return float
function APlayerCharacter:GetGravityScaleAttribute() end
---@param OutRotation FRotator
---@param InputThreshold float
---@return boolean
function APlayerCharacter:GetForwardIntention(OutRotation, InputThreshold) end
---@return FHitResult
function APlayerCharacter:GetFloorHitBelow() end
---@return float
function APlayerCharacter:GetFloorDistance() end
---@return EDownedState
function APlayerCharacter:GetDownedState() end
---@return APlayerCharacter
function APlayerCharacter:GetDownedReviver() end
---@param InCategory EWeaponCategory
---@return APlayerWeapon
function APlayerCharacter:GetCurrentWeapon(InCategory) end
---@return ESuitType
function APlayerCharacter:GetCurrentSuitType() end
---@return int32
function APlayerCharacter:GetCurrentRoomIndex() end
---@return FCurrentPlayerStatus
function APlayerCharacter:GetCurrentPlayerStatus() end
---@return UAimProfileData
function APlayerCharacter:GetCurrentAimProfile() end
---@return FVector2D
function APlayerCharacter:GetCrosshairOffset() end
---@param Location FVector
---@param Rotation FRotator
function APlayerCharacter:GetCameraTransform(Location, Rotation) end
---@return float
function APlayerCharacter:GetCameraFOV() end
---@return UAltFireComponent
function APlayerCharacter:GetAltFireComponent() end
---@return FVector
function APlayerCharacter:GetAimingTraceStartLocation() end
---@return FVector
function APlayerCharacter:GetAimingTraceEndLocation() end
---@return UHookShotTargetComponent
function APlayerCharacter:GetActiveHookShotTargetComponent() end
---@param value boolean
function APlayerCharacter:FreezePlayer(value) end
---@param WeaponObject APlayerWeapon
---@param LifeSpan float
function APlayerCharacter:ExpireSuperWeapon(WeaponObject, LifeSpan) end
---@param MetaMods TArray<UMetaModifierComponent>
function APlayerCharacter:EventOnMetaModifiersChanged(MetaMods) end
function APlayerCharacter:EscapeImmobilizingHazard() end
---@param RoomIndex int32
function APlayerCharacter:EnteredRoom(RoomIndex) end
---@param WeaponObject APlayerWeapon
---@param Transform FTransform
function APlayerCharacter:DropWeaponWithTransform(WeaponObject, Transform) end
---@param Montage UAnimMontage
---@param bInterrupted boolean
function APlayerCharacter:DoorUnlockedMontageEnded(Montage, bInterrupted) end
function APlayerCharacter:DoImgui() end
---@param TriggerSettingsAsset UInputTriggerSettingsDataAsset
function APlayerCharacter:DefaultTriggerSettingsChanged(TriggerSettingsAsset) end
---@param PressedDownAlpha float
function APlayerCharacter:DebugUpdateFireTrigger(PressedDownAlpha) end
---@return boolean
function APlayerCharacter:DebugToggleEnemiesCanSee() end
---@param bValue boolean
function APlayerCharacter:DebugSetCanBeSeenByEnemies(bValue) end
function APlayerCharacter:CreateTetherTeleporter() end
---@param Pockets UPocketsComponent
function APlayerCharacter:ConsumeReleased(Pockets) end
---@param WeaponObject APlayerWeapon
---@param bDestroyCurrentWeapon boolean
---@param PreviousWeapon APlayerWeapon
function APlayerCharacter:CollectWeaponObject(WeaponObject, bDestroyCurrentWeapon, PreviousWeapon) end
---@param WeaponClass TSubclassOf<APlayerWeapon>
---@param bDestroyCurrentWeapon boolean
function APlayerCharacter:CollectWeaponClass(WeaponClass, bDestroyCurrentWeapon) end
function APlayerCharacter:CheckLedgeVault() end
---@return boolean
function APlayerCharacter:CanFadeOutScreen() end
---@param Dealer AActor
---@param ItemClass TSubclassOf<AActor>
---@param Price int32
function APlayerCharacter:BroadcastItemBought(Dealer, ItemClass, Price) end
---@param SaveGame UTouristSaveGame
function APlayerCharacter:BlueprintSaveGameFlagChanged(SaveGame) end
---@param bEnabled boolean
function APlayerCharacter:BlueprintMeshResourceEnabled(bEnabled) end
function APlayerCharacter:BlueprintInitialSetupDone() end
---@param AbilityClass TSubclassOf<UGameplayAbility>
---@param NewLevel int32
function APlayerCharacter:BlueprintAbilityLevelChanged(AbilityClass, NewLevel) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function APlayerCharacter:BiomeStateChanged(Biome, NewBiomeState) end
---@param NewBiome EBiome
function APlayerCharacter:BiomeChanged(NewBiome) end
---@param Menu FName
---@param duration float
function APlayerCharacter:BeginMenuExitTransition(Menu, duration) end
---@param Menu FName
---@param duration float
function APlayerCharacter:BeginMenuEnterTransition(Menu, duration) end
---@param NewBiome EBiome
function APlayerCharacter:ApplyPerBiomeSettings(NewBiome) end
function APlayerCharacter:AnimationReportRightFootDown() end
function APlayerCharacter:AnimationReportLeftFootDown() end


---@class APlayerCharacterReviveInteractor : AActor
---@field TextReviveState FText
---@field PlayerCharacter APlayerCharacter
---@field InteractCollision USphereComponent
---@field Interactable UInteractableComponent
---@field HUDDetails UHUDDetailsComponent
---@field DeadPlayerPointerClass TSubclassOf<UDeadPlayerActorAdornmentWidget>
---@field DeadPlayerPointer UDeadPlayerActorAdornmentWidget
APlayerCharacterReviveInteractor = {}

---@param InteractingController AController
---@param Mode EInteractMode
---@param Progress float
function APlayerCharacterReviveInteractor:OnReportDelayedInteractProgress(InteractingController, Mode, Progress) end
---@param InteractingController ATouristPlayerController
function APlayerCharacterReviveInteractor:OnLoseFocus(InteractingController) end
---@param InteractingController AController
function APlayerCharacterReviveInteractor:OnInteract(InteractingController) end
---@param InteractingController ATouristPlayerController
function APlayerCharacterReviveInteractor:OnGetInteractionDelayRequired(InteractingController) end
---@param InteractingController ATouristPlayerController
function APlayerCharacterReviveInteractor:OnGetInteractionDelay(InteractingController) end
---@param InteractingController ATouristPlayerController
function APlayerCharacterReviveInteractor:OnGainFocus(InteractingController) end
---@param InteractingController AController
---@param Mode EInteractMode
---@param Complete boolean
function APlayerCharacterReviveInteractor:OnEndDelayedInteract(InteractingController, Mode, Complete) end
---@param InteractingController AController
---@param Mode EInteractMode
function APlayerCharacterReviveInteractor:OnBeginDelayedInteract(InteractingController, Mode) end
---@param Actor AActor
---@param EndPlayReason EEndPlayReason::Type
function APlayerCharacterReviveInteractor:OnAttachedPlayerDestroyed(Actor, EndPlayReason) end
---@param InteractingController AController
function APlayerCharacterReviveInteractor:HandleGetInteractArgs(InteractingController) end
---@return float
function APlayerCharacterReviveInteractor:GetProgress() end


---@class APlayerFluidManager : AInfo
---@field FluidComponent UPlayerFluidComponent
---@field MyFirstRoot USceneComponent
---@field LastAttachedTo APawn
---@field MeshData TMap<USkeletalMeshComponent, FFluidMeshData>
---@field ObstacleRadiusMultiplier float
APlayerFluidManager = {}

---@param Mesh USkeletalMeshComponent
function APlayerFluidManager:UnregisterFluidAffectMesh(Mesh) end
function APlayerFluidManager:TryToRegisterToController() end
---@return boolean
function APlayerFluidManager:ToggleFog() end
---@param Mesh USkeletalMeshComponent
function APlayerFluidManager:RegisterFluidAffectMesh(Mesh) end
---@return UPlayerFluidComponent
function APlayerFluidManager:GetFluidComponent() end
---@param WorldContextObject UObject
---@return APlayerFluidManager
function APlayerFluidManager:Get(WorldContextObject) end
---@param Target APawn
function APlayerFluidManager:AttachToPlayer(Target) end


---@class APlayerFollowCamera : ACameraActor
---@field bAimCameraEnabled boolean
---@field bFireCameraEnabled boolean
---@field bSprintCameraEnabled boolean
---@field bHookShotCameraEnabled boolean
---@field bEnemyCameraEnabled boolean
---@field bAutoRotateCameraEnabled boolean
---@field TweakableSettings TArray<FPlayerFollowCameraSettings>
---@field RequestedTweakableSet int32
---@field CurrentlyActiveTweakableSet int32
---@field CurrentSocketOffset FVector
---@field CurrentTraceStartLocation FVector
---@field CurrentTargetDistance float
---@field CurrentTraceRadius float
---@field CurrentCharacterTrackingSpeedXY float
---@field CurrentCharacterTrackingSpeedZ float
---@field CurrentTraceYawMod float
---@field CurrentMaxVelocityZTilt float
---@field CurrentTracePitchMod float
---@field CurrentFOV float
---@field SettingsInterpSpeed float
---@field SettingsInterpConstant boolean
---@field CameraStateInfo FCameraStateInfo
---@field bIsViewTarget boolean
---@field TracePercentLast float
---@field CurrentAdjustYawMod float
---@field CurrentAdjustPitchMod float
---@field CurrentVelocityZTilt float
---@field CurrentEnemiesAroundThreatWeight float
---@field AdjustAmounts UCurveVector
---@field PitchBoomApplyAmounts UCurveFloat
---@field PitchBoomLengthMultiplier UCurveFloat
---@field VelocityZTiltAmounts UCurveFloat
---@field EnemiesAroundOffsetCurve UCurveFloat
---@field OwnerPlayer APlayerCharacter
---@field AppliedControlRotation FRotator
---@field TrackingLocation FVector
---@field AcceptedTrackingLocation FVector
---@field AutoRotationSpeedSmooth float
---@field AutoRotationSpeedCap float
---@field AutoRotationRateCurve UCurveFloat
APlayerFollowCamera = {}

function APlayerFollowCamera:OptimizeTweakables() end
function APlayerFollowCamera:NotifyInitDone() end
---@param ViewPoint int32
function APlayerFollowCamera:ForceViewPoint(ViewPoint) end
---@param DeltaT float
function APlayerFollowCamera:DoCameraUpdate(DeltaT) end
---@param TargetViewPoint int32
---@param Speed float
---@param LinearInterp boolean
function APlayerFollowCamera:ChangeToViewPoint(TargetViewPoint, Speed, LinearInterp) end
---@param Selection int32
function APlayerFollowCamera:ChangeSelectedTweakableSet(Selection) end
---@param TargetStat ECameraState
---@param InterpSpeed float
function APlayerFollowCamera:ChangeCameraState(TargetStat, InterpSpeed) end
function APlayerFollowCamera:ApplyTargetSettingsInstantly() end


---@class APlayerGlitchProxy : AActor
---@field GlitchDuration float
---@field GlitchMaterial UMaterial
---@field BaseColor FLinearColor
---@field GlitchColor FLinearColor
---@field IndicatorColor FLinearColor
---@field MaterialInstance UMaterialInstanceDynamic
---@field MeshComponent UPoseableMeshComponent
---@field PoseCharacter APlayerCharacter
APlayerGlitchProxy = {}

---@param MeshComp UPoseableMeshComponent
---@param PlayerCharacter APlayerCharacter
function APlayerGlitchProxy:ApplyPose(MeshComp, PlayerCharacter) end


---@class APlayerGun : APlayerWeapon
---@field bApplyTriggerSettings boolean
---@field TriggerSettings FInputTriggerSettings
---@field CrosshairClass TSubclassOf<UCrosshairWidget>
---@field OverrideOwnerLockOnStartBehaviorDelegate FPlayerGunOverrideOwnerLockOnStartBehaviorDelegate
---@field OverrideOwnerLockOnEndBehaviorDelegate FPlayerGunOverrideOwnerLockOnEndBehaviorDelegate
---@field StockType EGunStockType
---@field PlayerShootAnimPlayRate float
---@field PlayerReloadAnimPlayRate float
---@field PlayerShootAnim UAnimMontage
---@field PlayerReloadAnim UAnimMontage
---@field PlayerActiveReloadAnim UAnimMontage
---@field bIsDefaultWeapon boolean
---@field OnTraitLevelUnlocked FPlayerGunOnTraitLevelUnlocked
---@field OnTraitUnlockProgress FPlayerGunOnTraitUnlockProgress
---@field OnTraitsReplicated FPlayerGunOnTraitsReplicated
---@field OnReloadMinigameFail FPlayerGunOnReloadMinigameFail
---@field OnReloadMinigameSuccess FPlayerGunOnReloadMinigameSuccess
APlayerGun = {}

function APlayerGun:SendTraitSetupAnalytics() end
function APlayerGun:PlayReloadMinigame() end
---@param bIsSelected boolean
function APlayerGun:OnSelectedGunStatusChanged(bIsSelected) end
---@return int32
function APlayerGun:GetTraitCount() end
---@return FMinMaxFloat
function APlayerGun:GetSpreadRange() end
---@return float
function APlayerGun:GetEstimatedBulletRange() end
---@return FVector2D
function APlayerGun:GetCurrentSpread() end
---@param Type FString
---@param Level int32
function APlayerGun:GetAltFireTraitType(Type, Level) end
---@return boolean
function APlayerGun:GetAimTraceIgnoresWalls() end
---@return float
function APlayerGun:GetAimAssistAutoHitAlpha() end
---@return boolean
function APlayerGun:GetAimAssistAllowed() end
---@param Player APlayerCharacter
---@return boolean
function APlayerGun:CanAdvanceTraits(Player) end


---@class APlayerWeapon : AGunBase
---@field OnCollectedDelegate FPlayerWeaponOnCollectedDelegate
---@field OnDroppedDelegate FPlayerWeaponOnDroppedDelegate
---@field CollectibleClass TSubclassOf<AWeaponCollectible>
---@field HUDIcon TSoftObjectPtr<UTexture2D>
---@field GunMesh USkeletalMeshComponent
---@field bOnlyFireOnButtonReleased boolean
---@field bDidFireShot boolean
---@field bFiringRequested boolean
---@field RndSeed int32
---@field OnClipStatusChanged FPlayerWeaponOnClipStatusChanged
---@field ProficiencyWeaponModifier UCurveFloat
---@field UpgradeSlots TArray<FGunSlotUpgrades>
---@field Upgrades FGunUpgrades
---@field NonremovableUpgrades FGunUpgrades
---@field ActiveUpgrades FGunUpgrades
---@field TimedUpgrades TArray<FTimedGunUpgrades>
---@field PendingTimedUpgrades TArray<FTimedGunUpgrades>
---@field OnGunUpgraded FPlayerWeaponOnGunUpgraded
---@field OnGunUpgradeRemoved FPlayerWeaponOnGunUpgradeRemoved
---@field OnTimedUpgradeActivated FPlayerWeaponOnTimedUpgradeActivated
---@field OnTimedUpgradePending FPlayerWeaponOnTimedUpgradePending
---@field ShopPriceForMod TArray<int32>
---@field ShopPriceForSlotPerMod TArray<int32>
---@field GunType EGunType
---@field WeaponCategory EWeaponCategory
---@field AmountOfStunPerDamage float
---@field HasBeenSetupForPlayer APlayerCharacter
---@field bHasBeenRerolled boolean
---@field TimeDilationComponent UTimeDilationComponent
---@field ActorControllerComponent UActorControllerComponent
---@field bApplyDamageCap boolean
APlayerWeapon = {}

---@param bNewVisibility boolean
function APlayerWeapon:SetVisibility(bNewVisibility) end
---@param Player APlayerCharacter
function APlayerWeapon:SetupWeaponForPlayer(Player) end
---@param SpawnData FBulletSpawnData
function APlayerWeapon:SetupBulletSpawnData_Override(SpawnData) end
function APlayerWeapon:ServerStopFiring() end
---@param bImmediate boolean
---@param Percentage float
function APlayerWeapon:ServerStartReloading(bImmediate, Percentage) end
---@param InRndSeed int32
function APlayerWeapon:ServerStartFiring(InRndSeed) end
---@param SlotUpgrade TSubclassOf<UGunSlotUpgrade>
function APlayerWeapon:ServerRemoveGunSlotUpgrade(SlotUpgrade) end
---@param NewUpgrades FGunUpgrades
---@param duration float
---@param DisplayName FText
---@param Type EGunUpgradeType
function APlayerWeapon:ServerAddGunUpgrade(NewUpgrades, duration, DisplayName, Type) end
---@param NewSlotUpgrade TSubclassOf<UGunSlotUpgrade>
function APlayerWeapon:ServerAddGunSlotUpgrade(NewSlotUpgrade) end
---@param WeaponData FSerializedWeaponData
---@param bSave boolean
---@return boolean
function APlayerWeapon:SerializeWeaponData(WeaponData, bSave) end
function APlayerWeapon:OnRep_HasBeenSetupForPlayer() end
function APlayerWeapon:OnRep_HasBeenRerolled() end
function APlayerWeapon:OnRep_GunUpgrades() end
function APlayerWeapon:OnRep_FiringRequested() end
---@param DelayedByAiming boolean
function APlayerWeapon:OnPreFire(DelayedByAiming) end
function APlayerWeapon:OnDropped() end
function APlayerWeapon:NotifyClipStatusChanged() end
---@return int32
function APlayerWeapon:MutateRandomSeed() end
---@param bRemoteOnly boolean
function APlayerWeapon:MulticastStopFiring(bRemoteOnly) end
---@param bImmediate boolean
---@param Percentage float
function APlayerWeapon:MulticastStartReloading(bImmediate, Percentage) end
---@param InRndSeed int32
---@param bRemoteOnly boolean
function APlayerWeapon:MulticastStartFiring(InRndSeed, bRemoteOnly) end
---@param Player APlayerCharacter
function APlayerWeapon:MulticastSetupWeaponForPlayer(Player) end
---@param NewUpgrades FGunUpgrades
---@param duration float
---@param DisplayName FText
---@param Type EGunUpgradeType
function APlayerWeapon:MulticastAddGunUpgrade(NewUpgrades, duration, DisplayName, Type) end
---@param cooldown float
---@return float
function APlayerWeapon:ModifyCooldown(cooldown) end
---@param UpgradeType TSubclassOf<UGunSlotUpgrade>
---@return boolean
function APlayerWeapon:HasSlotUpgrade(UpgradeType) end
---@return boolean
function APlayerWeapon:HasAnyModifiers() end
---@param Player APlayerCharacter
---@return float
function APlayerWeapon:GetWeaponPower(Player) end
---@return EWeaponCategory
function APlayerWeapon:GetWeaponCategory() end
---@param SlotType EGunUpgradeSlotType
---@return int32
function APlayerWeapon:GetUsedUpgradeSlots(SlotType) end
---@param SlotType EGunUpgradeSlotType
---@return int32
function APlayerWeapon:GetUpgradeSlots(SlotType) end
---@param SlotType EGunUpgradeSlotType
---@return TArray<UGunSlotUpgrade>
function APlayerWeapon:GetUpgradeSlotData(SlotType) end
---@return int32
function APlayerWeapon:GetRandomSeed() end
---@param ProficiencyLevel float
---@return float
function APlayerWeapon:GetProficiencyWeaponModifier(ProficiencyLevel) end
---@return int32
function APlayerWeapon:GetProficiencyLevel() end
---@param ModifierNames TArray<FText>
function APlayerWeapon:GetPositiveModifierNames(ModifierNames) end
---@return FGunUpgrades
function APlayerWeapon:GetPersistentUpgrades() end
---@return APlayerCharacter
function APlayerWeapon:GetOwningPlayer() end
---@param ModifierNames TArray<FText>
function APlayerWeapon:GetNegativeModifierNames(ModifierNames) end
---@param OutDatas TArray<FWeaponMetaModifierData>
---@param Types TSet<EMetaModifierType>
---@param PlayerCharacter APawn
function APlayerWeapon:GetModsOfTypes(OutDatas, Types, PlayerCharacter) end
---@param ModifierNames TArray<FText>
---@param Types TSet<EMetaModifierType>
function APlayerWeapon:GetModifierNamesOfTypes(ModifierNames, Types) end
---@param ModifierNames TArray<FText>
---@param Type EMetaModifierType
function APlayerWeapon:GetModifierNamesOfType(ModifierNames, Type) end
---@param ModifierNames TArray<FText>
function APlayerWeapon:GetModifierNames(ModifierNames) end
---@param SlotType EGunUpgradeSlotType
---@return int32
function APlayerWeapon:GetFreeUpgradeSlots(SlotType) end
---@return float
function APlayerWeapon:GetFireRateModifier() end
---@param ClassToCheck UClass
---@return EWeaponCategory
function APlayerWeapon:GetClassWeaponCategory(ClassToCheck) end
function APlayerWeapon:FailedFire() end
---@param damage float
---@return float
function APlayerWeapon:ApplyDamageModifiers(damage) end


---@class APylonLauncherPylon : AHMQActor
---@field TransientId int32
---@field bDying boolean
---@field BeamOriginName FName
---@field BeamOrigin USceneComponent
APylonLauncherPylon = {}



---@class ARoomEnvironmentActor : AHMQActor
---@field WetnessComponent UWetnessComponent
---@field ActivatorComponent UHMQActorActivatorComponent
---@field EnvironmentAttributes UEnvironmentAttributesAsset
---@field RainDataAsset UEnvironmentRainDataAsset
---@field WindDataAsset UEnvironmentWindDataAsset
---@field LightDataAsset UEnvironmentLightDataAsset
---@field SkyDataAsset UEnvironmentSkyDataAsset
---@field FogDataAsset UEnvironmentFogDataAsset
---@field RoomIndex int32
ARoomEnvironmentActor = {}



---@class ARoomModifier : AHMQActor
---@field bCantBeActiveInCombat boolean
---@field bApplyCameraMods boolean
---@field BlendEnterDistance float
---@field BlendExitDistance float
---@field CameraComponent UHMQCameraComponent
---@field OnEnterRoom FRoomModifierOnEnterRoom
---@field OnExitRoom FRoomModifierOnExitRoom
---@field ModifierRoomIndex int32
---@field ActiveRoomTrackers TArray<URoomTrackerComponent>
ARoomModifier = {}



---@class ARoomOverseer : AActor
---@field RoomActivation UAngenRoomActivationComponent
---@field bCombatRoom boolean
---@field ActiveBiomes TArray<EBiome>
---@field ActivationTypeWhitelist TArray<ERoomActivationEventType>
---@field ManagedRoomRegion AVolume
---@field ActiveSpawnerAreas TArray<ASpawnerSphereActor>
---@field bAutoActivateOnRoomActivation boolean
---@field bRoomActivatesAdjacentOpenAreas boolean
---@field bAutoDefaultSpawnAllowed boolean
---@field bSpawnEvenIfColliding boolean
---@field bDummySpawns boolean
---@field ForceSpawner ASpawnerSphereActor
---@field ForceSpawnerPruneReason FString
---@field SpawnEffects TMap<TSubclassOf<AActor>, TSubclassOf<AEffectContainerBase>>
---@field DebugRoomsSpawned int32
---@field bIsSingleRoomPIE boolean
---@field bDebugAutoIncreaseRoomsSpawned boolean
---@field bDebugTeleportPlayerToRandomDoor boolean
---@field CategorySpawns TArray<FCategorySpawnInfo>
---@field TrackedActorsTimerHandle FTimerHandle
ARoomOverseer = {}

---@param WorldContext UObject
---@param ActorClass TSubclassOf<AActor>
---@param SpawnLocation FVector
---@param SpawnRotation FRotator
---@param SpawnMaterializerInfo FCategoryMaterializerSpawnInfo
---@return AActor
function ARoomOverseer:SpawnRoomActor(WorldContext, ActorClass, SpawnLocation, SpawnRotation, SpawnMaterializerInfo) end
---@param SelectedCategory FName
---@param SpawnedPositions TArray<FTransform>
---@param bSetUsedCategoryWeightToZero boolean
---@param bTreatEveryAreaSeparately boolean
function ARoomOverseer:SpawnRandomCategory(SelectedCategory, SpawnedPositions, bSetUsedCategoryWeightToZero, bTreatEveryAreaSeparately) end
---@param CategoryToSpawn FCategorySpawnInfo
---@param SpawnedPositions TArray<FTransform>
---@param bSetUsedCategoryWeightToZero boolean
---@param bTreatEveryAreaSeparately boolean
function ARoomOverseer:SpawnCategory(CategoryToSpawn, SpawnedPositions, bSetUsedCategoryWeightToZero, bTreatEveryAreaSeparately) end
---@param bDisabled boolean
function ARoomOverseer:SetCompletionDisabled(bDisabled) end
---@param Category FName
---@param SelectionWeight float
function ARoomOverseer:SetCategoryWeight(Category, SelectionWeight) end
function ARoomOverseer:RoomCompletionTimer() end
---@param RoomIndex int32
function ARoomOverseer:RoomCleared(RoomIndex) end
---@param RoomIndex int32
---@param ActivationEventType ERoomActivationEventType
function ARoomOverseer:RoomActivated(RoomIndex, ActivationEventType) end
function ARoomOverseer:ResetHasSpawnStatus() end
---@param RemovePercent float
function ARoomOverseer:RemoveSpawnersPercent(RemovePercent) end
---@param Category FName
---@param RemovePercent float
function ARoomOverseer:RemoveSpawnersFromCategoryPercent(Category, RemovePercent) end
---@param Category FName
---@param Positions TArray<FVector>
function ARoomOverseer:RemoveSpawnersFromCategoryKeepFurthestOneMulti(Category, Positions) end
---@param Category FName
function ARoomOverseer:RemoveSpawnersFromCategoryKeepFurthestOneFromPlayers(Category) end
---@param Category FName
---@param Position FVector
function ARoomOverseer:RemoveSpawnersFromCategoryKeepFurthestOne(Category, Position) end
---@param Category FName
---@param MinDistanceBetweenSpawners float
function ARoomOverseer:RemoveSpawnersFromCategoryByProximity(Category, MinDistanceBetweenSpawners) end
---@param RemovePercent float
function ARoomOverseer:RemoveSpawnersFromAllCategoriesPercent(RemovePercent) end
---@param Radius float
function ARoomOverseer:RemoveSpawnersCloseToPlayer(Radius) end
---@param Location FVector
---@param Radius float
function ARoomOverseer:RemoveSpawnersAtLocation(Location, Radius) end
---@param Spawners TArray<ASpawnerSphereActor>
function ARoomOverseer:RemoveSpawners(Spawners) end
---@param Category FName
function ARoomOverseer:RemoveCategorySpawns(Category) end
function ARoomOverseer:RemoveAllCategorySpawns() end
function ARoomOverseer:PermanentlyEmptySpawnAreas() end
---@param DestroyedActor AActor
function ARoomOverseer:OnSpawnerSphereActorDestroyed(DestroyedActor) end
---@param Biome EBiome
---@param State EBiomeState
function ARoomOverseer:OnBiomeStateChangedInitializations(Biome, State) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function ARoomOverseer:OnBiomeStateChanged(Biome, NewBiomeState) end
---@param NewBiome EBiome
function ARoomOverseer:OnBiomeChanged(NewBiome) end
---@param Category FName
---@param MinAddAmount int32
---@param MinMultiplier float
---@param MaxAddAmount int32
---@param MaxMultiplier float
function ARoomOverseer:ModifyCategorySpawnsMinMax(Category, MinAddAmount, MinMultiplier, MaxAddAmount, MaxMultiplier) end
---@param MinAddAmount int32
---@param MinMultiplier float
---@param MaxAddAmount int32
---@param MaxMultiplier float
function ARoomOverseer:ModifyAllCategorySpawnsMinMax(MinAddAmount, MinMultiplier, MaxAddAmount, MaxMultiplier) end
function ARoomOverseer:MapCompleteInitializations() end
---@param WorldContextObject UObject
---@param RoomIndex int32
---@return boolean
function ARoomOverseer:IsAnyPlayerInsideRoomVolume(WorldContextObject, RoomIndex) end
---@param RoomIndex int32
---@param ActorToTest AActor
---@return boolean
function ARoomOverseer:IsActorInsideRoomVolumeByRoomIndex(RoomIndex, ActorToTest) end
---@param ActorToTest AActor
---@return boolean
function ARoomOverseer:IsActorInsideRoomVolume(ActorToTest) end
---@param ActivationEventType ERoomActivationEventType
function ARoomOverseer:HandleSpawning(ActivationEventType) end
---@param Enemy AEnemyBase
function ARoomOverseer:HandleEnemyCountChanged(Enemy) end
---@param OutTotalCategoryWeight float
---@return TArray<FName>
function ARoomOverseer:GetValidCategories(OutTotalCategoryWeight) end
---@param Category FName
---@return TArray<ASpawnerSphereActor>
function ARoomOverseer:GetSpawnerAreasByCategory(Category) end
---@return int32
function ARoomOverseer:GetSpawnCount() end
---@return int32
function ARoomOverseer:GetRoomIndex() end
---@param WorldContextObject UObject
---@param RoomInCluster int32
---@return TArray<int32>
function ARoomOverseer:GetOtherRoomIndexesFromRoomCluster(WorldContextObject, RoomInCluster) end
---@return int32
function ARoomOverseer:GetNumberOfEnemiesWaitingToSpawn() end
---@param ActivationEventType ERoomActivationEventType
---@return int32
function ARoomOverseer:GetNumberOfActivatedRoomsByActivationEventType(ActivationEventType) end
---@param bCountOnlyCombatRooms boolean
---@return int32
function ARoomOverseer:GetNumberOfActivatedRooms(bCountOnlyCombatRooms) end
---@return ALevelGenBaseActor
function ARoomOverseer:GetLevelGen() end
---@return float
function ARoomOverseer:GetEnemiesRemainingPercent() end
---@param OutTotalCategoryWeight float
---@return TArray<FName>
function ARoomOverseer:GetAllCategories(OutTotalCategoryWeight) end
---@param Actor AActor
---@return TArray<int32>
function ARoomOverseer:GetActorRoomIndexes(Actor) end
---@param Actor AActor
---@param PreferredRoomIndex int32
---@return int32
function ARoomOverseer:GetActorRoomIndex(Actor, PreferredRoomIndex) end
---@param Actor AActor
---@return int32
function ARoomOverseer:GetActorOriginRoomIndex(Actor) end
---@param Spawners TArray<ASpawnerSphereActor>
---@param Position FVector
---@param Radius float
---@param bKeepInside boolean
---@return TArray<ASpawnerSphereActor>
function ARoomOverseer:FilterSpawnersOnDistance(Spawners, Position, Radius, bKeepInside) end
---@param EnemiesRemainingPercent float
function ARoomOverseer:EnemyKilled(EnemiesRemainingPercent) end
function ARoomOverseer:DoDebugImgui() end
---@param Context UObject
---@param RoomIndex int32
---@return boolean
function ARoomOverseer:AreRoomEnemySpawnsBlocked(Context, RoomIndex) end
function ARoomOverseer:AllEnemiesKilled() end
---@param Category FName
---@param SpawnActor TSubclassOf<AActor>
---@param MaterializerSpawnInfo FCategoryMaterializerSpawnInfo
---@param MinAmount int32
---@param MaxAmount int32
---@param SelectionWeight float
function ARoomOverseer:AddCategorySpawn(Category, SpawnActor, MaterializerSpawnInfo, MinAmount, MaxAmount, SelectionWeight) end
---@param Actor AActor
function ARoomOverseer:ActorSpawned(Actor) end
---@param bIncreaseSpawnerActivationCount boolean
---@param ActivationEventType ERoomActivationEventType
function ARoomOverseer:ActivateSpawn(bIncreaseSpawnerActivationCount, ActivationEventType) end


---@class ARoomSpawnerDebugActor : AActor
---@field SpawnerDebugReports TArray<FString>
---@field bHasAddedImgui boolean
ARoomSpawnerDebugActor = {}

function ARoomSpawnerDebugActor:DoDebugImgui() end


---@class ARotatingDualLaserHazard : ARotatingLaserHazard
---@field bUseRoomVolumeToActivate boolean
---@field Scene2 USceneComponent
---@field Beam2 UHazardWeaponComponent
---@field RoomVolumeActivatorComponent URoomVolumeHazardEnablerBehaviour
ARotatingDualLaserHazard = {}



---@class ARotatingLaserHazard : AHazardBase
---@field CurrentRotation FRotator
---@field RotationSpeed float
---@field RotationSpeedSlow float
---@field RotationSpeedNormal float
---@field RotationSpeedFast float
---@field ClientInterpolationSpeed float
---@field DefaultSceneRoot USceneComponent
---@field RotationRoot USceneComponent
---@field Scene USceneComponent
---@field Beam UHazardWeaponComponent
---@field Trigger USphereComponent
---@field RotationSoundEvent UAkAudioEvent
---@field RotationStopSoundEvent UAkAudioEvent
---@field AkComponent UAkComponent
ARotatingLaserHazard = {}

---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function ARotatingLaserHazard:OnSerializeState(Serializer) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function ARotatingLaserHazard:OnEndOverlapTrigger(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function ARotatingLaserHazard:OnBeginOverlapTrigger(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end


---@class ASCEAutomationActor : AActor
---@field GetActorsContaining UGetActorsContaining
---@field GetActorInfo UGetActorInfo
---@field GetPlayerInfo UGetPlayerInfo
---@field GetSystemInfo UGetSystemInfo
---@field SetPositionBP USetPositionBP
---@field SetRelPositionBP USetRelPositionBP
---@field SetToActorPosition USetToActorPosition
---@field SetControllerRotation USetControllerRotation
---@field ExecuteConsoleCommand UExecuteConsoleCommand
---@field GetCurrentRoomInfo UGetCurrentRoomInfo
---@field GetGameState UGetGameState
---@field StartPlayerAI UStartPlayerAI
ASCEAutomationActor = {}

---@param Timer float
---@param DeltaTime float
function ASCEAutomationActor:TestEvent(Timer, DeltaTime) end
---@param Actor AActor
---@param Position FVector
---@param Rotation FRotator
function ASCEAutomationActor:SetPosition(Actor, Position, Rotation) end
---@param sceneInfo FString
function ASCEAutomationActor:SendSceneInfo(sceneInfo) end
function ASCEAutomationActor:DoTestingPlayground() end


---@class ASanityEvent : AHMQActor
ASanityEvent = {}


---@class ASanityState : AHMQActor
---@field PreviousStateIndex int32
---@field StateIndex int32
---@field StateDirection float
---@field StateName FName
---@field SanityValueMinimum float
---@field SanityValueMaximum float
---@field SanityValueMultiplierPos float
---@field SanityValueMultiplierNeg float
---@field CurrencyAdditionalLifeSpan float
---@field bPositiveDropGroupEnabled boolean
---@field StartAudioEvent UAkAudioEvent
---@field StopAudioEvent UAkAudioEvent
---@field bSimpleHealthBar boolean
---@field bDisableRoomLockdowns boolean
---@field PsychoticEpisodeChance float
---@field CursedChestChance float
---@field CursedChestCurseType ECurseType
---@field SpoiledHealthCollectibleChance float
---@field CursedLargeCurrencyCollectibleChance float
---@field CurrencyCollectibleSpawnerRangeMin int32
---@field CurrencyCollectibleSpawnerRangeMax int32
---@field SanityEventItemOccurence float
---@field XRaySideEffectChance float
---@field XRaySideEffectDamageChance float
---@field EnemyAltDropGroupChance float
---@field EnemyAltDropGroupKillsThreshold int32
---@field EnemyAltDropGroupKillsGuarantee int32
---@field DamageReceivedModifierPercent int32
---@field HiddenMinimapObjectTypes TArray<EMinimapObjectType>
---@field BlinkingMinimapObjectTypes TSet<EMinimapObjectType>
---@field CurrentRoomOnlyMinimapObjectTypes TArray<EMinimapObjectType>
---@field bLocalPlayerOwner boolean
---@field MinimapObjectBlinkPeriodMin float
---@field MinimapObjectBlinkPeriodMax float
---@field SpecialTeleportChance float
---@field SpecialTeleportTargetRoom FSoftObjectPath
---@field CavernEnemyChance float
---@field UnlockTags FGameplayTagContainer
---@field RainDataAsset UEnvironmentRainDataAsset
---@field WindDataAsset UEnvironmentWindDataAsset
---@field FogDataAsset UEnvironmentFogDataAsset
---@field LightDataAsset UEnvironmentLightDataAsset
---@field SkyDataAsset UEnvironmentSkyDataAsset
ASanityState = {}

---@return int32
function ASanityState:GetPositiveEventCount() end
---@return UPlayerSanityComponent
function ASanityState:GetPlayerSanity() end
---@return int32
function ASanityState:GetNegativeEventCount() end
---@param DirectionCount int32
---@return int32
function ASanityState:GetEventCount(DirectionCount) end
---@param DirectionCount int32
---@return int32
function ASanityState:CompareEventCount(DirectionCount) end
---@param Percentage float
function ASanityState:BP_SanityChanged(Percentage) end
function ASanityState:BP_EndSanity() end
function ASanityState:BP_BeginSanity() end


---@class ASaveBlockingVolume : AVolume
ASaveBlockingVolume = {}

---@param OverlappedActor AActor
---@param OtherActor AActor
function ASaveBlockingVolume:OnActorEndOverlapDelegate(OverlappedActor, OtherActor) end
---@param OverlappedActor AActor
---@param OtherActor AActor
function ASaveBlockingVolume:OnActorBeginOverlapDelegate(OverlappedActor, OtherActor) end


---@class ASequenceCinematicPlayer : AHMQActor
ASequenceCinematicPlayer = {}

---@param Cinematic ACinematicActor
---@param SequencePlayer ULevelSequencePlayer
function ASequenceCinematicPlayer:StopPlayer(Cinematic, SequencePlayer) end
---@param Cinematic ACinematicActor
---@param SequencePlayer ULevelSequencePlayer
function ASequenceCinematicPlayer:StartPlayer(Cinematic, SequencePlayer) end
---@param Cinematic ACinematicActor
---@param SequencePlayer ULevelSequencePlayer
---@return float
function ASequenceCinematicPlayer:GetSequencePosition(Cinematic, SequencePlayer) end


---@class AServerRelay : AInfo
---@field DetachedMinimapIcons TArray<FDetachedMinimapIconSettings>
AServerRelay = {}

---@param WeaponCollectible AWeaponCollectible
---@param DiscoveredPlayer APlayerCharacter
function AServerRelay:ServerTrySpawnWeaponObject(WeaponCollectible, DiscoveredPlayer) end
---@param Teleport ATeleport
---@param Destination ATeleport
function AServerRelay:ServerTeleportRegisterJointDestination(Teleport, Destination) end
---@param Teleport ATeleport
---@param InteractingCharacter APlayerCharacter
function AServerRelay:ServerTeleportNotInteracting(Teleport, InteractingCharacter) end
---@param Source AActor
---@param SourceClass TSubclassOf<AActor>
---@param InInstigator AController
---@param InstigatorClass TSubclassOf<AController>
---@param InstigatorActor AActor
---@param InstigatorActorClass TSubclassOf<AActor>
---@param Bullet TSubclassOf<UBulletType>
---@param BulletPattern TSubclassOf<UBulletPatternType>
---@param Location FVector
---@param Rotation FRotator
---@param AimDirection FVector
function AServerRelay:ServerSpawnBulletOrPattern(Source, SourceClass, InInstigator, InstigatorClass, InstigatorActor, InstigatorActorClass, Bullet, BulletPattern, Location, Rotation, AimDirection) end
function AServerRelay:ServerSkipCinematic() end
---@param PlayerCharacter APlayerCharacter
---@param bNewEnabled boolean
function AServerRelay:ServerSetTPPlayModeEnabled(PlayerCharacter, bNewEnabled) end
---@param Flag FName
function AServerRelay:ServerSetPersistentGameplayFlag(Flag) end
---@param Collectible ACollectibleBase
---@param bIsCollected boolean
function AServerRelay:ServerSetItemIsCollected(Collectible, bIsCollected) end
---@param DiscoverableComponent UDiscoverableComponent
---@param bIsDiscovered boolean
function AServerRelay:ServerSetItemDiscovered(DiscoverableComponent, bIsDiscovered) end
---@param LockOnComponent ULockOnComponent
---@param Target ULockOnTargetComponent
---@param IsPointingAtLockableTarget boolean
---@param IsHoldingLockOnButton boolean
function AServerRelay:ServerSendLockOnTarget(LockOnComponent, Target, IsPointingAtLockableTarget, IsHoldingLockOnButton) end
---@param SignalReceiver UObject
---@param value FString
function AServerRelay:ServerSendGenericSignalFromClient(SignalReceiver, value) end
---@param HealthComponent UHealthComponent
---@param DamageEvent FTouristDamageEvent
function AServerRelay:ServerSendDamage(HealthComponent, DamageEvent) end
---@param Ghost ASocialGhost
---@param Offset uint32
---@param length uint32
function AServerRelay:ServerRequestGhostReplayChunk(Ghost, Offset, length) end
---@param Interactable UInteractableComponent
function AServerRelay:ServerRequestDisable(Interactable) end
---@param Handle FTouristGameplayEffectHandle
function AServerRelay:ServerPopgameplayEffects(Handle) end
---@param PlayerCharacter APlayerCharacter
---@param ActorClass TSubclassOf<AActor>
function AServerRelay:ServerPlayerCollectActorOfClass(PlayerCharacter, ActorClass) end
---@param bAlwaysOnEffects boolean
function AServerRelay:ServerOutOfBoundsRemoveGameplayEffects(bAlwaysOnEffects) end
---@param PlayerController ATouristPlayerController
---@param EffectsToApply TArray<TSubclassOf<UGameplayEffect>>
---@param bAlwaysOnEffects boolean
function AServerRelay:ServerOutOfBoundsApplyGameplayEffects(PlayerController, EffectsToApply, bAlwaysOnEffects) end
---@param Player APawn
---@param Rooms TArray<int32>
function AServerRelay:ServerLoadedRoomsInfo(Player, Rooms) end
---@param AbilityClass TSubclassOf<UGameplayAbility>
---@param Level int32
function AServerRelay:ServerGiveAbilityToAllPlayers(AbilityClass, Level) end
function AServerRelay:ServerGetGeneratedMapDataSize() end
---@param StartOffset int32
---@param NumBytes int32
function AServerRelay:ServerGetGeneratedMapDataBytes(StartOffset, NumBytes) end
---@param Teleport ATeleport
function AServerRelay:ServerEnableTeleport(Teleport) end
---@param Teleport ATeleport
function AServerRelay:ServerDisableTeleport(Teleport) end
---@param ActorComponentToDestroy UActorComponent
function AServerRelay:ServerDestroyComponent(ActorComponentToDestroy) end
---@param WeaponObject APlayerWeapon
---@param WeaponClass TSubclassOf<APlayerWeapon>
---@param WeaponSpawnArgs TArray<FSpawnArg>
---@param WeaponMods TArray<FWeaponCollectibleMetaModifier>
function AServerRelay:ServerCollectWeaponCollectible(WeaponObject, WeaponClass, WeaponSpawnArgs, WeaponMods) end
---@param Collectible ACollectibleBase
---@param Collector APlayerCharacter
---@param bManually boolean
function AServerRelay:ServerCollectibleProcessCollect(Collectible, Collector, bManually) end
---@param Flag FName
function AServerRelay:ServerClearPersistentGameplayFlag(Flag) end
---@param Cinematic ACinematicActor
---@param PlayerTriggered APlayerController
---@param bRunConditions boolean
function AServerRelay:ServerCinematicEventTriggered(Cinematic, PlayerTriggered, bRunConditions) end
---@param Player APlayerCharacter
---@param bIsInteractingPlayer boolean
function AServerRelay:ServerCinematicEventEnded(Player, bIsInteractingPlayer) end
---@param Triggerer APlayerController
---@param Delay float
---@param duration float
function AServerRelay:ServerBeginHouseLeaveCountdown(Triggerer, Delay, duration) end
---@param OldDetachedMinimapIcons TArray<FDetachedMinimapIconSettings>
function AServerRelay:OnRep_DetachedMinimapIcons(OldDetachedMinimapIcons) end
---@param Handle FTouristGameplayEffectHandle
function AServerRelay:MutlicastPopgameplayEffects(Handle) end
---@param Cinematic ACinematicActor
---@param PlayerTriggered APlayerController
---@param bRunConditions boolean
function AServerRelay:MulticastStartCinematic(Cinematic, PlayerTriggered, bRunConditions) end
function AServerRelay:MulticastSkipCinematic() end
---@param Flag FName
function AServerRelay:MulticastSetPersistentGameplayFlag(Flag) end
---@param Interactable UInteractableComponent
function AServerRelay:MulticastRequestDisable(Interactable) end
---@param ActorComponentToDestroy UActorComponent
function AServerRelay:MulticastDestroyComponent(ActorComponentToDestroy) end
---@param Flag FName
function AServerRelay:MulticastClearPersistentGameplayFlag(Flag) end
---@param Player APlayerCharacter
---@param bIsInteractingPlayer boolean
function AServerRelay:MulticastCinematicEventEnded(Player, bIsInteractingPlayer) end
---@param Ghost ASocialGhost
---@param Offset uint32
---@param length uint32
---@param Data TArray<uint8>
function AServerRelay:MulticastChunkResponse(Ghost, Offset, length, Data) end
---@param Triggerer APlayerController
---@param Delay float
---@param duration float
function AServerRelay:MulticastBeginHouseLeaveCountdown(Triggerer, Delay, duration) end
---@param Flag FName
---@param bClear boolean
---@param bServer boolean
---@param bClient boolean
function AServerRelay:Multicast_SetPersistentFlag(Flag, bClear, bServer, bClient) end
---@param PlayerController APlayerController
---@return AServerRelay
function AServerRelay:GetPlayerControllerServerRelay(PlayerController) end
---@param PlayerCharacter APlayerCharacter
---@return AServerRelay
function AServerRelay:Get(PlayerCharacter) end
---@param CollectibleClass TSubclassOf<ACollectibleBase>
---@param SpawnArgs TArray<FSpawnArg>
---@param WeaponMods TArray<FWeaponCollectibleMetaModifier>
---@param SpawnCount int32
---@param Location FVector
---@param bShouldFlyOut boolean
---@param bTryInstaCollect boolean
---@param bIsShopSpawn boolean
---@param UserPolicy ECollectibleUserPolicy
function AServerRelay:ClientSpawnCollectible(CollectibleClass, SpawnArgs, WeaponMods, SpawnCount, Location, bShouldFlyOut, bTryInstaCollect, bIsShopSpawn, UserPolicy) end
---@param Source AActor
---@param SourceClass TSubclassOf<AActor>
---@param InInstigator AController
---@param InstigatorClass TSubclassOf<AController>
---@param InstigatorActor AActor
---@param InstigatorActorClass TSubclassOf<AActor>
---@param Bullet TSubclassOf<UBulletType>
---@param BulletPattern TSubclassOf<UBulletPatternType>
---@param Location FVector
---@param Rotation FRotator
---@param AimDirection FVector
function AServerRelay:ClientSpawnBulletOrPattern(Source, SourceClass, InInstigator, InstigatorClass, InstigatorActor, InstigatorActorClass, Bullet, BulletPattern, Location, Rotation, AimDirection) end
---@param ActorClass TSubclassOf<AActor>
---@param SpawnTransform FTransform
---@param CollisionHandlingOverride ESpawnActorCollisionHandlingMethod
---@param ActorOwner AActor
---@param ActorInstigator APawn
---@param MaterializerComponentClass TSubclassOf<UActorComponent>
---@param bPooled boolean
---@param bShouldFlyOut boolean
---@param bCollectDuringFlyOut boolean
---@param bAutoSuckAfterFlyOut boolean
---@param FlyOutMaxDistance float
function AServerRelay:ClientSpawnActor(ActorClass, SpawnTransform, CollisionHandlingOverride, ActorOwner, ActorInstigator, MaterializerComponentClass, bPooled, bShouldFlyOut, bCollectDuringFlyOut, bAutoSuckAfterFlyOut, FlyOutMaxDistance) end
---@param Rooms TArray<int32>
function AServerRelay:ClientShowMapRooms(Rooms) end
---@param NumBytes int32
function AServerRelay:ClientSetGeneratedMapDataSize(NumBytes) end
---@param StartOffset int32
---@param Bytes TArray<uint8>
function AServerRelay:ClientSetGeneratedMapDataBytes(StartOffset, Bytes) end
---@param value int32
function AServerRelay:ClientSetClarity(value) end
---@param value int32
function AServerRelay:ClientModifyMoney(value) end
---@param KeyType FString
---@param value int32
function AServerRelay:ClientModifyKeys(KeyType, value) end
---@param IconGUID FGuid
function AServerRelay:ClientMapIconDetached(IconGUID) end
function AServerRelay:ClientEndAct1() end
---@param DamageTarget AActor
---@param DamageSource AActor
---@param DamageAmount float
function AServerRelay:ClientApplySimpleDamage(DamageTarget, DamageSource, DamageAmount) end
---@param DamageTarget AActor
---@param DamageSourceComponent UActorComponent
---@param DamageDescriptor FTouristDamageDescriptor
function AServerRelay:ClientApplyDamage(DamageTarget, DamageSourceComponent, DamageDescriptor) end
function AServerRelay:Client_Interact() end
---@param value float
function AServerRelay:Client_AdjustClarity(value) end
---@param Biome EBiome
---@param BiomeState EBiomeState
function AServerRelay:BiomeStateChanged(Biome, BiomeState) end


---@class AShopBox : AHMQActor
---@field OnItemBought FShopBoxOnItemBought
---@field bConfigured boolean
---@field bUsed boolean
---@field bBuying boolean
---@field RoomIndex int32
---@field bUniqueItemTypesOnly boolean
---@field bAutoRestock boolean
---@field KeyCurrencyType EInventoryKeyType
---@field ItemClass TSubclassOf<AActor>
---@field ItemType ECollectibleType
---@field ItemName FText
---@field ItemPrice int32
---@field ItemSpawnArgs TArray<FSpawnArg>
---@field WeaponMods TArray<FWeaponCollectibleMetaModifier>
---@field ItemVisuals USceneComponent
---@field ItemMeshComponent UStaticMeshComponent
---@field RotatingMovement URotatingMovementComponent
---@field Trigger UInteractableSphereComponent
---@field ActivatorComponent UHMQActorActivatorComponent
---@field Label UHUDLabel
---@field ItemAvailableMaterial UMaterialInterface
---@field ItemUnvailableMaterial UMaterialInterface
---@field LootGroup ECollectibleDropGroup
---@field MinimapObject UMinimapObject
---@field BuySound UAkAudioEvent
---@field InsufficientFundsSound UAkAudioEvent
---@field CachedLocalPlayer APlayerCharacter
---@field CachedLocalController ATouristPlayerController
---@field DummyCollectible ACollectibleBase
---@field Description FText
---@field Prompt FText
---@field bCanInteract boolean
---@field DefaultAnimatedContainerWidgetClass TSubclassOf<UAnimatedLabelContainerWidget>
---@field DefaultLabelWidgetClass TSubclassOf<UHUDLabelWidget>
---@field FocusPlrController ATouristPlayerController
---@field ItemAvailable int32
---@field CurrencyType EShopCurrencyType
AShopBox = {}

---@param NewItemUnavailableMaterial UMaterialInterface
function AShopBox:SetItemUnavailableMaterial(NewItemUnavailableMaterial) end
---@param NewItemAvailableMaterial UMaterialInterface
function AShopBox:SetItemAvailableMaterial(NewItemAvailableMaterial) end
---@param ReasonForReconfigure FString
function AShopBox:Reconfigure(ReasonForReconfigure) end
---@param Price int32
---@param Buyer AActor
function AShopBox:ProcessItemBought(Price, Buyer) end
---@param PlayerState APlayerState
---@param NewRoomIndex int32
---@param OldRoomIndex int32
function AShopBox:OnPlayerRoomChanged(PlayerState, NewRoomIndex, OldRoomIndex) end
---@param Weapon APlayerWeapon
function AShopBox:OnLocalPlayerWeaponUpgraded(Weapon) end
---@param NewWeapon APlayerWeapon
---@param OldWeapon APlayerWeapon
function AShopBox:OnLocalPlayerWeaponChanged(NewWeapon, OldWeapon) end
---@param Pawn APawn
function AShopBox:OnLocalPlayerUnpossessed(Pawn) end
---@param Pawn APawn
function AShopBox:OnLocalPlayerPossessed(Pawn) end
---@param KeyType EInventoryKeyType
---@param amount int32
---@param Delta int32
function AShopBox:OnLocalPlayerKeysChanged(KeyType, amount, Delta) end
---@param CodeName FName
function AShopBox:OnLocalPlayerArtefactCollected(CodeName) end
---@param InteractingController ATouristPlayerController
function AShopBox:OnComponentWantsFocus(InteractingController) end
---@param InteractingController ATouristPlayerController
function AShopBox:OnComponentLoseFocus(InteractingController) end
function AShopBox:OnComponentInteractionStateChanged() end
---@param InteractingController AController
function AShopBox:OnComponentInteract(InteractingController) end
---@param InteractingController ATouristPlayerController
function AShopBox:OnComponentGainFocus(InteractingController) end
---@param InteractingController AController
---@param bTemporaryDisabledUntilEveryoneExit boolean
function AShopBox:OnComponentBecomeUninteractable(InteractingController, bTemporaryDisabledUntilEveryoneExit) end
---@param InteractingController AController
function AShopBox:OnComponentBecomeInteractable(InteractingController) end
---@param ActivatorComponent UHMQActorActivatorComponent
function AShopBox:OnActorActivated(ActivatorComponent) end
---@param Player APlayerCharacter
function AShopBox:ItemBought(Player) end
---@param bNewItemAvailable boolean
function AShopBox:ItemAvailabilityChanged(bNewItemAvailable) end
---@param Buyer ATouristCharacter
---@return boolean
function AShopBox:IsDepleted(Buyer) end
---@return boolean
function AShopBox:HasBuyableItem() end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function AShopBox:HandleSerializeState(Serializer) end
---@param InteractingController AController
function AShopBox:HandleGetInteractArgs(InteractingController) end
---@param Buyer ATouristCharacter
---@return int32
function AShopBox:GetPrice(Buyer) end
---@return UStaticMesh
function AShopBox:GetItemMesh() end
---@param Buyer ATouristCharacter
---@return int32
function AShopBox:GetDiscount(Buyer) end
---@param Buyer ATouristCharacter
---@return boolean
function AShopBox:CanRestock(Buyer) end
---@param Price int32
---@param Buyer AActor
function AShopBox:BuyItemProcess(Price, Buyer) end
---@param Price int32
---@param Buyer AActor
function AShopBox:BuyItemComplete(Price, Buyer) end


---@class ASkillNodeCollectible : ACollectibleBase
---@field SkillNode FName
ASkillNodeCollectible = {}



---@class ASocialCapsule : AActor
---@field CapsuleIndex int32
---@field HasState boolean
---@field HasBeenUsed boolean
---@field TextRetrievingState FText
---@field TextIsDisabled FText
---@field TextToMuchHealthToTakeAll FText
---@field TextToLittleResourcesToTakeAll FText
---@field TextFullHealth FText
---@field TextGoOnline FText
---@field TextConnecting FText
---@field TakeEffect TSubclassOf<AEffectContainer>
---@field CapsuleManager USocialCapsuleManager
---@field SocialManager UTouristSocialManager
---@field InteractCollision USphereComponent
---@field RefreshStateTrigger USphereComponent
---@field Interactable UInteractableComponent
---@field MinimapObject UMinimapObject
---@field HUDLabel UHUDLabel
---@field HUDDetails UHUDDetailsComponent
ASocialCapsule = {}

---@param InteractingController AController
function ASocialCapsule:OnSecondaryInteract(InteractingController) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function ASocialCapsule:OnRefreshTrigerEndOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function ASocialCapsule:OnRefreshTrigerBeginOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
---@param InteractingController AController
function ASocialCapsule:OnInteract(InteractingController) end
---@param Manager USocialCapsuleManager
function ASocialCapsule:OnDataRefreshed(Manager) end
function ASocialCapsule:OnConnectionStateChanged() end
---@param InteractingController AController
function ASocialCapsule:HandleGetInteractArgs(InteractingController) end
---@return float
function ASocialCapsule:GetMaxResource() end
---@return float
function ASocialCapsule:GetAvailableResource() end


---@class ASocialChallengeFallenCorpse : AActor
---@field TextTitle FText
---@field TextDescription FText
---@field RagdollPhysicsAsset UPhysicsAsset
---@field MeshComponent USkeletalMeshComponent
---@field AtRestMeshComponent UPoseableMeshComponent
---@field InteractCollision USphereComponent
---@field Interactable UInteractableComponent
---@field HUDLabel UHUDLabel
---@field HUDDetails UHUDDetailsComponent
---@field PrimitiveComponents TArray<UPrimitiveComponent>
ASocialChallengeFallenCorpse = {}

---@param InteractingController AController
function ASocialChallengeFallenCorpse:HandleGetInteractArgs(InteractingController) end


---@class ASocialGhost : AActor
---@field GhostMaterial UMaterial
---@field GhostPropMaterial UMaterialInstance
---@field AvengeSpawnQuery UEnvQuery
---@field TextAvenge FText
---@field TextDismiss FText
---@field TextLoot FText
---@field TextAnalyze FText
---@field TextAvengeInProgress FText
---@field TextDescription FText
---@field TextAnalyzeDescription FText
---@field TextAnalyzeTitle FText
---@field OverrideUsername FString
---@field TextCauseOfDeath TMap<ESocialGhostCauseOfDeath, FText>
---@field AvengeEnemyRoomSpawner TSoftClassPtr<ASocialGhostRoomSpawner>
---@field AvengeEnemyAdornment TSubclassOf<UActorAdornmentWidget>
---@field ClarityLootDropProbabilityCurve UCurveFloat
---@field PotentialTraps TArray<TSoftClassPtr<ASocialGhostTrap>>
---@field CenterBoneName FName
---@field LootDropBoneName FName
---@field DisappearEffectName FName
---@field DisappearEffectMeshResources FName
---@field PresenceNotification TSubclassOf<UNotificationWidget>
---@field AvengeSpawnNotification TSubclassOf<UNotificationWidget>
---@field AvengeCompleteNotification TSubclassOf<UNotificationWidget>
---@field ZombieActor TSoftClassPtr<AEnemyBase>
---@field ClarityAvengeQuantity int32
---@field ClarityLootQuantity int32
---@field ScanOffset FVector
---@field ZombieScanOffset FVector
---@field accountId FString
---@field UserName FString
---@field OnPlayerNotified FSocialGhostOnPlayerNotified
---@field OnModeChanged FSocialGhostOnModeChanged
---@field OnLootSpawned FSocialGhostOnLootSpawned
---@field GhostDynamicMaterial UMaterialInstanceDynamic
---@field GhostPropDynamicMaterial UMaterialInstanceDynamic
---@field PreSwapMaterials TArray<UMaterialInterface>
---@field SwappedMaterialComponents TArray<UPrimitiveComponent>
---@field LockdownComponent URoomLockdownControlComponent
---@field CorpseMeshComponent UPoseableMeshComponent
---@field MeshComponent UPoseableMeshComponent
---@field DiscoverableComponent UDiscoverableComponent
---@field DeathMeshComponent USkeletalMeshComponent
---@field PlaybackComponent USocialGhostPlaybackComponent
---@field InteractCollision USphereComponent
---@field Interactable UInteractableComponent
---@field MinimapObject UMinimapObject
---@field HUDLabel UHUDLabel
---@field HUDDetails UHUDDetailsComponent
---@field AmbientSoundComponent UAkAmbientSoundComponent
---@field LootComponent ULootComponent
---@field SocialManager UTouristSocialManager
---@field GhostNumber int32
---@field ReplayData TArray<uint8>
---@field ReplayDataLength uint32
---@field ReplayDataRecieved uint32
---@field ReplicatedMode ESocialGhostMode
---@field ReplayRootTransform FTransform
---@field ReplayPosition float
---@field ReplayPlayRate float
---@field AvengeInstigator APlayerCharacter
---@field Mode ESocialGhostMode
---@field LabelExtendedData USocialGhostLabelExtendedData
---@field ZombieCorpse AEnemyBase
---@field bHasZombie boolean
---@field LazyLoadedClasses TArray<UClass>
ASocialGhost = {}

function ASocialGhost:SpawnZombie() end
---@param Zombie AEnemyBase
function ASocialGhost:SetNewZombieRef(Zombie) end
function ASocialGhost:OnZombieKilled() end
---@param InteractingController AController
function ASocialGhost:OnSecondaryInteract(InteractingController) end
---@param RoomIndex int32
---@param ActivationEventType ERoomActivationEventType
function ASocialGhost:OnRoomActivated(RoomIndex, ActivationEventType) end
function ASocialGhost:OnRep_ReplayPosition() end
---@param Asset TSoftClassPtr<UObject>
function ASocialGhost:OnLoadedAsset(Asset) end
---@param InteractingController AController
function ASocialGhost:OnInteract(InteractingController) end
---@param NewBiome EBiome
function ASocialGhost:OnBiomeChanged(NewBiome) end
---@param Enemy AEnemyBase
function ASocialGhost:OnAvengeEnemySpawned(Enemy) end
---@param InteractionInstigator APlayerCharacter
---@param TrapRandomIndex int32
function ASocialGhost:MulticastSpawnTrap(InteractionInstigator, TrapRandomIndex) end
---@param InteractionInstigator APlayerCharacter
function ASocialGhost:MulticastSpawnLoot(InteractionInstigator) end
---@param InteractionInstigator APlayerCharacter
---@param amount float
function ASocialGhost:MulticastAdjustClarity(InteractionInstigator, amount) end
---@param LootComp ULootComponent
---@param Notification FLootSpawnNotification
function ASocialGhost:HandleSpawnLootInternal(LootComp, Notification) end
---@param InteractingController AController
function ASocialGhost:HandleGetInteractArgs(InteractingController) end
---@return FVector
function ASocialGhost:GetVisualLookAtLocation() end


---@class ASocialGhostBlockingVolume : AActor
ASocialGhostBlockingVolume = {}


---@class ASocialGhostReply : AActor
---@field CorpseMaterial UMaterial
---@field AvengeSpawnQuery UEnvQuery
---@field TextAvenge FText
---@field TextDismiss FText
---@field TextLoot FText
---@field TextAnalyze FText
---@field TextAvengeInProgress FText
---@field TextDescription FText
---@field TextAnalyzeDescription FText
---@field TextAnalyzeTitle FText
---@field OverrideUsername FString
---@field TextCauseOfDeath TMap<ESocialGhostCauseOfDeath, FText>
---@field AvengeEnemyRoomSpawner TSoftClassPtr<ASocialGhostRoomSpawner>
---@field AvengeEnemyAdornment TSubclassOf<UActorAdornmentWidget>
---@field ClarityLootDropProbabilityCurve UCurveFloat
---@field CenterBoneName FName
---@field DisappearEffectName FName
---@field DisappearEffectMeshResources FName
---@field PresenceNotification TSubclassOf<UNotificationWidget>
---@field AvengeSpawnNotification TSubclassOf<UNotificationWidget>
---@field accountId FString
---@field OnPlayerNotified FSocialGhostReplyOnPlayerNotified
---@field PreSwapMaterials TArray<UMaterialInterface>
---@field SwappedMaterialComponents TArray<UPrimitiveComponent>
---@field CorpseMeshComponent UPoseableMeshComponent
---@field MeshComponent UPoseableMeshComponent
---@field DeathMeshComponent USkeletalMeshComponent
---@field PlaybackComponent USocialGhostPlaybackComponent
---@field InteractCollision USphereComponent
---@field Interactable UInteractableComponent
---@field MinimapObject UMinimapObject
---@field HUDLabel UHUDLabel
---@field HUDDetails UHUDDetailsComponent
---@field SocialManager UTouristSocialManager
---@field GhostNumber int32
---@field ReplyData FSocialCorpseReplyData
---@field ReplayData TArray<uint8>
---@field ReplayRootTransform FTransform
---@field InteractInstigator APlayerCharacter
---@field LabelExtendedData USocialGhostLabelExtendedData
---@field Completed boolean
---@field LazyLoadedClasses TArray<UClass>
ASocialGhostReply = {}

function ASocialGhostReply:OnRep_ReplayPosition() end
function ASocialGhostReply:OnRep_ReplayData() end
---@param Asset TSoftClassPtr<UObject>
function ASocialGhostReply:OnLoadedAsset(Asset) end
---@param InteractingController AController
function ASocialGhostReply:OnInteract(InteractingController) end
---@param Enemy AEnemyBase
function ASocialGhostReply:OnEnemySpawned(Enemy) end
---@param NewBiome EBiome
function ASocialGhostReply:OnBiomeChanged(NewBiome) end
---@param InteractionInstigator APlayerCharacter
function ASocialGhostReply:MulticastSpawnLoot(InteractionInstigator) end
---@param InteractionInstigator APlayerCharacter
---@param amount float
function ASocialGhostReply:MulticastAdjustClarity(InteractionInstigator, amount) end
---@param InteractingController AController
function ASocialGhostReply:HandleGetInteractArgs(InteractingController) end


---@class ASocialGhostRoomSpawner : ARoomOverseer
---@field InitiatingGhost ASocialGhost
ASocialGhostRoomSpawner = {}



---@class ASocialGhostTrap : AActor
---@field InitiatorGhost ASocialGhost
---@field InitiatorPlayer APlayerCharacter
---@field TrapNotification TSubclassOf<UNotificationWidget>
ASocialGhostTrap = {}



---@class ASocialGhostTrap_Ambush : ASocialGhostTrap
---@field EnemyRoomSpawner TSoftClassPtr<ASocialGhostRoomSpawner>
ASocialGhostTrap_Ambush = {}

---@param Asset TSoftClassPtr<UObject>
function ASocialGhostTrap_Ambush:OnLoadedSpawner(Asset) end


---@class ASocialGhostTrap_Bile : ASocialGhostTrap
---@field BileClass TSubclassOf<AActor>
---@field SpawnRadius float
---@field SpawnCount float
ASocialGhostTrap_Bile = {}



---@class ASocialGhostTrap_Infestation : ASocialGhostTrap
---@field Parasites TArray<TSubclassOf<AArtefactCollectible>>
ASocialGhostTrap_Infestation = {}



---@class ASocialLobbyDevice : AActor
---@field TextGoOnline FText
---@field TextConnecting FText
---@field TextInMultiplayer FText
---@field TextNotUnlockedMultiplayer FText
---@field TextFindingWorld FText
---@field TextLeftStartRoom FText
---@field TextAlreadyUsed FText
---@field TextDisabledGameplayTag FText
---@field TextDownloadNotComplete FText
---@field MenuClass TSubclassOf<USocialLobbyDeviceScreenWidget>
---@field ReuseGracePeriod float
---@field ClientLoadout FSocialLobbyDevicePlayerLoadout
---@field DisabledGameplayTags TArray<FGameplayTag>
---@field SocialManager UTouristSocialManager
---@field InteractCollision USphereComponent
---@field Interactable UInteractableComponent
---@field MinimapObject UMinimapObject
---@field HUDLabel UHUDLabel
---@field HUDDetails UHUDDetailsComponent
---@field Despawnable UDespawnableActorComponent
---@field CurrentState ESocialLobbyDeviceState
ASocialLobbyDevice = {}

function ASocialLobbyDevice:ShowLobbyScreen() end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function ASocialLobbyDevice:SerializeState(Serializer) end
---@param InteractingController ATouristPlayerController
function ASocialLobbyDevice:OnWantsFocus(InteractingController) end
function ASocialLobbyDevice:OnMultiplayerStatusChanged() end
function ASocialLobbyDevice:OnLobbyDeviceStateChanged() end
function ASocialLobbyDevice:OnLeaveDevice() end
---@param InteractingController AController
function ASocialLobbyDevice:OnInteract(InteractingController) end
function ASocialLobbyDevice:OnEnterDevice() end
function ASocialLobbyDevice:OnEndInteract() end
function ASocialLobbyDevice:OnConnectionStateChanged() end
function ASocialLobbyDevice:OnBeginInteract() end
function ASocialLobbyDevice:NotifyLeft() end
function ASocialLobbyDevice:NotifyEntered() end
---@param bEnter boolean
function ASocialLobbyDevice:Multicast_PerformEnterExit(bEnter) end
function ASocialLobbyDevice:ManualEnterExit() end
---@return boolean
function ASocialLobbyDevice:IsSwampFirstPlay() end
---@return boolean
function ASocialLobbyDevice:IsSimulationMode() end
---@return boolean
function ASocialLobbyDevice:IsNewCinematicsMode() end
---@param TestIndex int32
---@return boolean
function ASocialLobbyDevice:IsDevTesting(TestIndex) end
function ASocialLobbyDevice:HideLobbyScreen() end
---@param InteractingController AController
function ASocialLobbyDevice:HandleGetInteractArgs(InteractingController) end
---@return FTransform
function ASocialLobbyDevice:GetJoinSpawnTransform() end
---@return FTransform
function ASocialLobbyDevice:GetFloorCorrectedJoinSpawnTransform() end
---@param alpha float
function ASocialLobbyDevice:ApplyMaterialParameters(alpha) end


---@class ASocialPedestal : AActor
---@field PedestalIndex int32
---@field HasState boolean
---@field HasBeenUsed boolean
---@field TextRetrievingState FText
---@field TextContributionRecorded FText
---@field TextNoResources FText
---@field TextFullResourceCapacity FText
---@field TextPedestalLowResources FText
---@field TextNotEnoughClarity FText
---@field TextGoOnline FText
---@field TextConnecting FText
---@field RewardSpawnDistance float
---@field ItemMaterial UMaterialInterface
---@field PedestalManager USocialPedestalManager
---@field SocialManager UTouristSocialManager
---@field ItemVisuals USceneComponent
---@field ItemMeshComponent UStaticMeshComponent
---@field RotatingMovement URotatingMovementComponent
---@field InteractCollision USphereComponent
---@field RefreshStateTrigger USphereComponent
---@field Interactable UInteractableComponent
---@field RewardSpawnLocation USceneComponent
---@field MinimapObject UMinimapObject
---@field HUDLabel UHUDLabel
---@field HUDDetails UHUDDetailsComponent
---@field SpawnedRewardCollectible ACollectibleBase
ASocialPedestal = {}

---@param StateAvailable boolean
---@param WasUsed boolean
---@param CurrentValue float
---@param TargetValue float
---@param PendingRewardCount int32
---@param IsRewardSpawned boolean
function ASocialPedestal:OnStateRefreshed(StateAvailable, WasUsed, CurrentValue, TargetValue, PendingRewardCount, IsRewardSpawned) end
---@param InteractingController AController
function ASocialPedestal:OnSecondaryInteract(InteractingController) end
---@param Interactor APlayerCharacter
---@param Reward ACollectibleBase
function ASocialPedestal:OnRewardSpawned(Interactor, Reward) end
---@param Interactor APlayerCharacter
---@param Reward ACollectibleBase
function ASocialPedestal:OnRewardCollected(Interactor, Reward) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function ASocialPedestal:OnRefreshTrigerEndOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function ASocialPedestal:OnRefreshTrigerBeginOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
---@param Interactor APlayerCharacter
function ASocialPedestal:OnPlayerTake(Interactor) end
---@param Interactor APlayerCharacter
function ASocialPedestal:OnPlayerGive(Interactor) end
---@param InteractingController AController
function ASocialPedestal:OnInteract(InteractingController) end
---@param Manager USocialPedestalManager
function ASocialPedestal:OnDataRefreshed(Manager) end
function ASocialPedestal:OnConnectionStateChanged() end
---@param InteractingController AController
function ASocialPedestal:HandleGetInteractArgs(InteractingController) end
---@return float
function ASocialPedestal:GetTargetResources() end
---@return UClass
function ASocialPedestal:GetNextRewardClass() end
---@return int32
function ASocialPedestal:GetAvailableRewardCount() end
---@return float
function ASocialPedestal:GetAvailableResources() end
---@param InteractingController AController
---@param Mode EInteractMode
---@param Complete boolean
function ASocialPedestal:EndDelayedInteract(InteractingController, Mode, Complete) end
---@param InteractingController AController
---@param Mode EInteractMode
function ASocialPedestal:BeginDelayedInteract(InteractingController, Mode) end


---@class ASocialRewardPedestal : AActor
---@field TextRetrievingState FText
---@field TextNoRewardsAvailable FText
---@field TextGoOnline FText
---@field TextConnecting FText
---@field SpawnEffectClass TSubclassOf<AEffectContainer>
---@field PedestalManager USocialPedestalManager
---@field SocialManager UTouristSocialManager
---@field InteractCollision USphereComponent
---@field RefreshStateTrigger USphereComponent
---@field Interactable UInteractableComponent
---@field MinimapObject UMinimapObject
---@field HUDLabel UHUDLabel
---@field HUDDetails UHUDDetailsComponent
---@field RewardSpawnLocation USceneComponent
ASocialRewardPedestal = {}

---@param Manager USocialPedestalManager
function ASocialRewardPedestal:OnRewardsRefreshed(Manager) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function ASocialRewardPedestal:OnRefreshTrigerEndOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function ASocialRewardPedestal:OnRefreshTrigerBeginOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
---@param InteractingController AController
function ASocialRewardPedestal:OnInteract(InteractingController) end
---@param Manager USocialPedestalManager
function ASocialRewardPedestal:OnDataRefreshed(Manager) end
function ASocialRewardPedestal:OnConnectionStateChanged() end
---@param InteractingController AController
function ASocialRewardPedestal:HandleGetInteractArgs(InteractingController) end
---@return int32
function ASocialRewardPedestal:GetAvailableRewardCount() end


---@class ASpawnerSphereActor : AActor
---@field Sphere USphereComponent
---@field Category FName
---@field VisibilityCheckType ESpawnerVisibilityCheckType
ASpawnerSphereActor = {}



---@class ATeleport : AActor
---@field JointTeleportWaitingNotification TSubclassOf<UNotificationWidget>
---@field InteractingPlayers TArray<APawn>
---@field JointTeleportTargetTeleporter ATeleport
---@field OnJointTeleportSelected FTeleportOnJointTeleportSelected
---@field JointTeleportPingId FGuid
---@field EnableTimeStamp float
---@field bIsEnabled boolean
---@field bOnlyPlayerCanEnable boolean
---@field bEnableByProximity boolean
---@field bShowsOnMap boolean
---@field bDestinationOnly boolean
---@field TextPromptActivate FText
---@field TextPromptNeedMore FText
---@field TextPromptTeleportInProgress FText
---@field TextPromptActivateJointTeleport FText
---@field TextPromptWaitingForJointTeleport FText
---@field TextPromptTeleportToCompanion FText
---@field Trigger UBoxComponent
---@field InteractTrigger UBoxComponent
---@field Interactable UInteractableComponent
---@field MinimapObject UMinimapObject
---@field HUDLabel UHUDLabel
---@field HUDDetails UHUDDetailsComponent
---@field Sounds UAkComponent
---@field EnabledIcon UStaticMesh
---@field DisabledIcon UStaticMesh
---@field PowerupSound UAkAudioEvent
---@field PowerdownSound UAkAudioEvent
---@field ActivationSound UAkAudioEvent
---@field DestinationSelectionSound UAkAudioEvent
---@field TeleporterHandler UTeleporterHandler
---@field FixedDestination UTeleporterHandler
---@field TeleportLocation USceneComponent
---@field TeleportMenuClass TSubclassOf<UTeleportMenu>
---@field ThisLevelGen ALevelGenBaseActor
---@field RegisteredGridObject USpatialGridObject
---@field RoomTrackerComp URoomTrackerComponent
---@field DespawnComp UDespawnableActorComponent
---@field RoomActivationComp UAngenRoomActivationComponent
ATeleport = {}

function ATeleport:UpdateTeleportLocation() end
---@param TargetTeleporter ATeleport
---@param Player APlayerCharacter
function ATeleport:TeleportPlayer(TargetTeleporter, Player) end
---@param Destination ATeleport
function ATeleport:SetFixedDestination(Destination) end
function ATeleport:ReceiveEnableTeleport() end
function ATeleport:ReceiveDisableTeleport() end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function ATeleport:OnSerializeState(Serializer) end
function ATeleport:OnRep_InteractingPlayers() end
---@param NewDownedState EDownedState
function ATeleport:OnDownedStateChanged(NewDownedState) end
---@param TargetTeleporter ATeleport
function ATeleport:MulticastTeleportTo(TargetTeleporter) end
---@param InteractingPawn APawn
---@param DestinationOverride FVector
---@param JointTeleportOwner boolean
---@param IsJointTeleport boolean
function ATeleport:MulticastInteract(InteractingPawn, DestinationOverride, JointTeleportOwner, IsJointTeleport) end
---@param InteractingController ATouristPlayerController
function ATeleport:HandleWantsFocus(InteractingController) end
---@param InteractingController AController
function ATeleport:HandleSecondaryInteract(InteractingController) end
---@param RoomIndex int32
---@param ActivationEventType ERoomActivationEventType
function ATeleport:HandleRoomDeactivated(RoomIndex, ActivationEventType) end
---@param RoomIndex int32
---@param ActivationEventType ERoomActivationEventType
function ATeleport:HandleRoomActivated(RoomIndex, ActivationEventType) end
---@param PlayerState APlayerState
---@param NewRoomIndex int32
---@param OldRoomIndex int32
function ATeleport:HandlePlayerRoomChanged(PlayerState, NewRoomIndex, OldRoomIndex) end
---@param InteractingController ATouristPlayerController
function ATeleport:HandleLoseFocus(InteractingController) end
---@param InteractingController AController
function ATeleport:HandleInteract(InteractingController) end
---@param InteractingController AController
function ATeleport:HandleGetInteractArgs(InteractingController) end
---@param InteractingController ATouristPlayerController
function ATeleport:HandleGainFocus(InteractingController) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function ATeleport:HandleEndOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function ATeleport:HandleBeginOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
---@return FVector
function ATeleport:GetTeleportLocation() end
---@return UTeleporterHandler
function ATeleport:GetTeleporterHandler() end
function ATeleport:EnableTeleport() end
function ATeleport:DisableTeleport() end
---@param Actor AActor
---@return boolean
function ATeleport:CanEnableTeleport(Actor) end
---@param Player APlayerCharacter
function ATeleport:CancelTeleportPlayer(Player) end


---@class ATouristAmbientSound : AActor
---@field AkAudioEvent UAkAudioEvent
---@field AkComponent UAkAmbientSoundComponent
---@field StopWhenOwnerIsDestroyed boolean
---@field AutoPost boolean
---@field UseEventMaxDistanceAsTrigger boolean
ATouristAmbientSound = {}

function ATouristAmbientSound:StopAmbientSound() end
function ATouristAmbientSound:StartAmbientSound() end


---@class ATouristCharacter : ACharacter
---@field bAllowHazardPull boolean
---@field bCanBeKnockedback boolean
---@field bIsKnockback boolean
---@field bKnockbackKeepsGravity boolean
---@field CurrentKnockbackVelocity FVector
---@field OnKnockbackStart FTouristCharacterOnKnockbackStart
---@field OnKnockbackEnd FTouristCharacterOnKnockbackEnd
---@field OnMetaModifiersChanged FTouristCharacterOnMetaModifiersChanged
---@field MovementSpeedMetaMultiplier float
---@field SprintSpeedMetaMultiplier float
---@field MovementAccelerationMultiplier float
---@field MovementDecelerationMultiplier float
---@field DisplayName FText
---@field ClientSidePredictableLocation FVector
---@field HealthComponent UHealthComponent
---@field AnimationMessagingComponent UAnimationMessagingComponent
---@field CharacterAnimInstance UTouristCharacterAnimInstance
---@field RootMotionMovementComponent URootMotionMovementComponent
---@field SoftCollisionComponent UCharacterSoftCollisionComponent
---@field HitboxManagerComponent UHitboxManagerComponent
---@field MetaModifierOwnerComponent UMetaModifierOwnerComponent
---@field MetaModifierConnectionComponent UMetaModifierConnectionComponent
---@field SlowdownComponent USlowdownComponent
---@field AnimEffectTracker UTouristCharacterAnimEffectTracker
---@field LocomotionData FTouristCharacterLocomotionData
---@field SpecialLocomotionDataClasses TSet<TSubclassOf<ULocomotionSpecialCharacterInfo_Base>>
---@field CurrentAffectingHazard UObject
---@field bIsAffectedByHazard boolean
---@field ControlFlags ECharacterControlFlags
---@field RealizedVelocity FVector
---@field CharacterMovementVelocity FVector
---@field PiercingSound UAkAudioEvent
---@field EyePointSocketName FName
---@field MetaModifiersInternal TArray<UMetaModifierComponent>
ATouristCharacter = {}

---@param NewMultiplier float
function ATouristCharacter:SetDamageDealtMultiplier(NewMultiplier) end
---@param Time float
---@param Velocity FVector
---@param MaintainGravity boolean
---@return boolean
function ATouristCharacter:RequestKnockback(Time, Velocity, MaintainGravity) end
---@param DeltaSeconds float
---@param OldLocation FVector
---@param OldVelocity FVector
function ATouristCharacter:PostCharacterMovementUpdate(DeltaSeconds, OldLocation, OldVelocity) end
function ATouristCharacter:OnRep_DisplayName() end
---@param Time float
---@param Velocity FVector
---@param MaintainGravity boolean
function ATouristCharacter:MulticastStartKnockback(Time, Velocity, MaintainGravity) end
---@param NewFlags ECharacterControlFlags
function ATouristCharacter:MulticastControlFlagsChanged(NewFlags) end
---@param ModToIgnore UMetaModifierComponent
---@return boolean
function ATouristCharacter:IsHealingAllowed(ModToIgnore) end
---@return boolean
function ATouristCharacter:IsFiring() end
---@return boolean
function ATouristCharacter:InAir() end
---@param CodeName FName
---@return boolean
function ATouristCharacter:HasMetaModifier(CodeName) end
---@param Flags ECharacterControlFlags
---@return boolean
function ATouristCharacter:HasControlFlags(Flags) end
function ATouristCharacter:HandleMetaModifiersUpdated() end
---@param ConnectionComp UMetaModifierConnectionComponent
function ATouristCharacter:HandleMetaModifierConnectionsChanged(ConnectionComp) end
---@param ConnectionComp UMetaModifierConnectionComponent
---@param MetaModifier UMetaModifierBaseComponent
function ATouristCharacter:HandleMetaModifierChanged(ConnectionComp, MetaModifier) end
---@param Hazard UObject
function ATouristCharacter:HandleLeftImmobilizingHazard(Hazard) end
---@param Hazard UObject
---@return boolean
function ATouristCharacter:HandleEnteredImmobilizingHazard(Hazard) end
---@return boolean
function ATouristCharacter:GetWantsToFire() end
---@param Class TSubclassOf<ULocomotionSpecialCharacterInfo_Base>
---@return ULocomotionSpecialCharacterInfo_Base
function ATouristCharacter:GetSpecialLocomotionInfoOfClass(Class) end
---@return FVector
function ATouristCharacter:GetRealizedVelocity() end
---@param MetaModifierType EMetaModifierType
---@param OutMetaModifiers TArray<UMetaModifierComponent>
function ATouristCharacter:GetMetaModifiersOfType(MetaModifierType, OutMetaModifiers) end
---@return UMetaModifierOwnerComponent
function ATouristCharacter:GetMetaModifierOwner() end
---@return UMetaModifierConnectionComponent
function ATouristCharacter:GetMetaModifierConnection() end
---@return FTouristCharacterLocomotionData
function ATouristCharacter:GetLocomotionData() end
---@return float
function ATouristCharacter:GetFireRateModifier() end
---@return float
function ATouristCharacter:GetDamageDealtMultiplier() end
---@param Location FVector
---@param Rotation FRotator
function ATouristCharacter:GetCustomEyesViewPoint(Location, Rotation) end
---@return ECharacterControlFlags
function ATouristCharacter:GetControlFlags() end
---@return FVector
function ATouristCharacter:GetCharacterMovementVelocity() end
---@param BoneName FName
---@return FVector
function ATouristCharacter:GetBoneWorldLocation(BoneName) end
---@return FVector
function ATouristCharacter:GetAimingTraceHitLocation() end
---@param ViewPoint FVector
---@return FRotator
function ATouristCharacter:GetAimDirRotAtPosition(ViewPoint) end
---@return FRotator
function ATouristCharacter:GetAimDirRot() end
---@return UObject
function ATouristCharacter:GetAffectingHazard() end
function ATouristCharacter:EndKnockback() end
---@param Hazard UObject
---@return boolean
function ATouristCharacter:CanBeCaughtByImmobilizingHazard(Hazard) end
---@param MetaModifier UMetaModifierComponent
---@param CodeName FName
---@param VisibleName FText
function ATouristCharacter:AttachMetaModifier(MetaModifier, CodeName, VisibleName) end
---@param Gun AActor
function ATouristCharacter:AttachGun(Gun) end


---@class ATouristDebugCameraController : ADebugCameraController
ATouristDebugCameraController = {}


---@class ATouristDummyRoomAudioVolume : ATouristRoomAudioVolume
ATouristDummyRoomAudioVolume = {}


---@class ATouristEnemyRepelVolume : AVolume
ATouristEnemyRepelVolume = {}


---@class ATouristEnvironmentManager : AEnvironmentManager
ATouristEnvironmentManager = {}

---@param WorldContextObject UObject
---@return ATouristEnvironmentManager
function ATouristEnvironmentManager:GetTouristEnvironmentManager(WorldContextObject) end


---@class ATouristGameMode : AGameMode
---@field StartingOptionsString FString
---@field DebugEnemySpawnerComponent UDebugEnemySpawnerComponent
---@field DebugCollectibleSpawnerComponent UDebugEnemySpawnerComponent
---@field PlayerJoinTimes TMap<AController, float>
---@field NextLevel TSoftObjectPtr<UWorld>
ATouristGameMode = {}

---@param BootScreenClass TSubclassOf<UHMQScreenWidget>
function ATouristGameMode:OnBootLevelReady(BootScreenClass) end
---@param GameTransitionScreen UGameTransitionScreenComponent
function ATouristGameMode:HandleGameTransitionScreenFinish(GameTransitionScreen) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function ATouristGameMode:HandleBiomeStateChanged(Biome, NewBiomeState) end
---@return int32
function ATouristGameMode:GetNumPlayerControllers() end
function ATouristGameMode:BiomeRestartGameTimer() end


---@class ATouristGameState : AHMQGameState
---@field GeneratedMap_Real ULevelGenMapIngame
---@field GeneratedMap ULevelGenMapIngame
---@field OnMapReady_Immediate FTouristGameStateOnMapReady_Immediate
---@field OnBiomeReady FTouristGameStateOnBiomeReady
---@field OnMapComplete FTouristGameStateOnMapComplete
---@field MatchID FString
---@field OnPlayerInteract FTouristGameStateOnPlayerInteract
---@field OnPlayerSecondaryInteract FTouristGameStateOnPlayerSecondaryInteract
---@field OnCancelLocalPlayerInteraction FTouristGameStateOnCancelLocalPlayerInteraction
---@field OnCancelLocalPlayerCinematics FTouristGameStateOnCancelLocalPlayerCinematics
---@field MinimapPainterClass TSubclassOf<AMinimapPainter>
---@field EnemyManagerClass TSubclassOf<AEnemyManager>
---@field AudioManagerClass TSubclassOf<AAudioManager>
---@field PlayerFluidManagerClass TSubclassOf<APlayerFluidManager>
---@field MinimapPainter AMinimapPainter
---@field RoomActivationManager UAngenRoomActivationManager
---@field MasterOverseer UMasterOverseer
---@field ProgressManager UProgressManager
---@field CurrentGameState EGameState
---@field LevelGenParameters FLevelGenParameters
---@field HeightFogPresets UDataTable
---@field TimeDilationManager UTimeDilationManagerComponent
---@field BiomeTransitionManager UBiomeTransitionManager
---@field BiomeManager UBiomeManager
---@field HouseManager UHouseManager
---@field EnemyMessageManager AEnemyMessageManager
---@field RoomSpawnerDebug ARoomSpawnerDebugActor
---@field HostTransitionInfo FBiomeTransitionInfo
---@field HostLoadTransitionInfo FBiomeTransitionInfo
---@field HostUnloadTransitionInfo FBiomeTransitionInfo
---@field bHostEnteringDelayed boolean
---@field CriticalTransitionMutex FName
---@field bContinueNextLevelImmediately boolean
---@field DebugString FString
ATouristGameState = {}

function ATouristGameState:UnlockMapCompletion() end
function ATouristGameState:TriggerGameOver() end
---@param StartTransform FTransform
---@param bAlwaysTeleport boolean
function ATouristGameState:StartPlayers(StartTransform, bAlwaysTeleport) end
---@param ActorToReset AActor
---@return boolean
function ATouristGameState:ShouldReset(ActorToReset) end
---@param NewGameState EGameState
function ATouristGameState:SetCurrentGameState(NewGameState) end
function ATouristGameState:ResetCycle() end
---@param bComplete boolean
function ATouristGameState:ResetBiome(bComplete) end
---@param String FString
---@param duration float
function ATouristGameState:PushDebugString(String, duration) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function ATouristGameState:ProcessBiomeStateChanged(Biome, NewBiomeState) end
function ATouristGameState:OnRep_MatchId() end
function ATouristGameState:OnRep_HostUnloadTransitionInfo() end
function ATouristGameState:OnRep_HostTransitionInfo() end
function ATouristGameState:OnRep_HostLoadTransitionInfo() end
function ATouristGameState:OnRep_CurrentGameState() end
function ATouristGameState:OnPlayerReadyAtLobby() end
---@param NewGeneratedMap ULevelGenMapIngame
---@param StartTransform FTransform
---@param PlayerCorpseClass TSubclassOf<AActor>
function ATouristGameState:OnMapGenerated(NewGeneratedMap, StartTransform, PlayerCorpseClass) end
---@param NextLevel TSoftObjectPtr<UWorld>
---@param bContinueImmediately boolean
function ATouristGameState:OnFinishLevel(NextLevel, bContinueImmediately) end
---@param NewGameState EGameState
function ATouristGameState:OnCurrentGameStateChanged(NewGameState) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function ATouristGameState:OnBiomeStateChanged(Biome, NewBiomeState) end
---@param NewBiome EBiome
function ATouristGameState:OnBiomeChanged(NewBiome) end
function ATouristGameState:NotifyGameStarting() end
function ATouristGameState:LockMapCompletion() end
---@return boolean
function ATouristGameState:IsResumedCycle() end
---@return boolean
function ATouristGameState:IsMapReadyNEW() end
---@return boolean
function ATouristGameState:IsMapComplete() end
---@return boolean
function ATouristGameState:IsGeneratedMap() end
---@return boolean
function ATouristGameState:IsGameplayReady() end
---@return boolean
function ATouristGameState:IsFastBooting() end
---@param GameTransitionScreen UGameTransitionScreenComponent
function ATouristGameState:HandleGameTransitionScreenFinish(GameTransitionScreen) end
---@return UAngenRoomActivationManager
function ATouristGameState:GetRoomActivationManager() end
---@return AMinimapPainter
function ATouristGameState:GetMinimapPainter() end
---@return FLevelGenParameters
function ATouristGameState:GetLevelGenParameters() end
---@return int32
function ATouristGameState:GetLevelGenerationSeed() end
---@param OutString FString
---@param OutNeedsToUpdateEveryFrame boolean
function ATouristGameState:GetDebugString(OutString, OutNeedsToUpdateEveryFrame) end
function ATouristGameState:CompleteTimer() end
---@return boolean
function ATouristGameState:CheckMapComplete() end
function ATouristGameState:BiomeRestartGameTimer() end


---@class ATouristHUD : AHMQHUD
---@field OnHUDInitialized FTouristHUDOnHUDInitialized
---@field OnTutorialQueued FTouristHUDOnTutorialQueued
---@field PauseMenuClass TSubclassOf<UPauseMenu>
---@field TeleportMenuClass TSubclassOf<UPauseMenu>
---@field SystemMenuClass TSubclassOf<UPauseMenu>
---@field PhotoModeMenuClass TSubclassOf<UPauseMenu>
---@field PeripheralDisconnectClass TSubclassOf<UPauseMenu>
---@field HUDWidgetClass TSubclassOf<UGameHUDWidget>
---@field OverlayWidgetClass TSubclassOf<UOverlayHUD_Base>
---@field DebugHUDWidgetClass TSubclassOf<UHMQScreenWidget>
---@field TutorialScreenClass TSubclassOf<UTouristTutorialPanel>
---@field MessageNotificationClass TSubclassOf<UNotificationWidget>
---@field LargeMessageNotificationClass TSubclassOf<UNotificationWidget>
---@field WindowsPerformanceClass TSubclassOf<UUserWidget>
---@field bUninitializeOnSeamlessTravel boolean
---@field HMQDebugMenuRenderComponent UHMQDebugMenuRenderComponent
---@field HUDWidget UGameHUDWidget
---@field OverlayWidget UOverlayHUD_Base
---@field UserWidget UUserWidget
---@field TimeDilation UTimeDilationComponent
---@field CachedPlayer APlayerCharacter
---@field bIsInitialized boolean
---@field DebugScreen UHMQScreenWidget
---@field SettingsMenu USystemSettingsMenu
---@field CommunicationQueue TArray<FCommunicationQueueEntry>
---@field ActiveCommunication UNotificationWidget
---@field ActiveTutorial UTouristTutorialPanel
---@field NextCommunicationLoadingId int32
ATouristHUD = {}

---@param TutorialWidget UTouristTutorialWidget
function ATouristHUD:TutorialWidgetSignature__DelegateSignature(TutorialWidget) end
---@param TutorialWidget UTouristTutorialWidget
function ATouristHUD:TutorialQueueSignature__DelegateSignature(TutorialWidget) end
function ATouristHUD:ToggleIndicatorHUDVisibility() end
function ATouristHUD:ToggleDebugHUD() end
---@param Screen UHMQScreenWidget
---@param NewScreenName FName
function ATouristHUD:SystemMenuExit(Screen, NewScreenName) end
---@param Screen UHMQScreenWidget
function ATouristHUD:SystemMenuDestroyed(Screen) end
---@param Tag FName
---@param bNewShowHUD boolean
function ATouristHUD:ShowHUDByTag(Tag, bNewShowHUD) end
---@param Visibility boolean
---@param InteractableCount int32
function ATouristHUD:SetInteractableSelectorControlGuideWidgetVisibility(Visibility, InteractableCount) end
---@param PlayerState APlayerState
---@param NewRoomIndex int32
---@param OldRoomIndex int32
function ATouristHUD:PlayerRoomChanged(PlayerState, NewRoomIndex, OldRoomIndex) end
---@param Screen UHMQScreenWidget
---@param NewScreenName FName
function ATouristHUD:PhotoModeMenuExit(Screen, NewScreenName) end
---@param Screen UHMQScreenWidget
function ATouristHUD:PhotoModeMenuDestroyed(Screen) end
---@param Screen UHMQScreenWidget
---@param NewScreenName FName
function ATouristHUD:PauseMenuExit(Screen, NewScreenName) end
---@param Screen UHMQScreenWidget
function ATouristHUD:PauseMenuDestroyed(Screen) end
---@return boolean
function ATouristHUD:IsHUDWidgetInitialized() end
---@return boolean
function ATouristHUD:IsHUDEnabled() end
---@return boolean
function ATouristHUD:IsCombatHUDEnabled() end
---@return boolean
function ATouristHUD:IsBossHealthVisible() end
---@param WorldContextObject UObject
---@return boolean
function ATouristHUD:HUDWasTutorialActivatedInCurrentRoom(WorldContextObject) end
---@param WorldContextObject UObject
---@param TutorialClass TSoftClassPtr<UTouristTutorialWidget>
---@param LatentInfo FLatentActionInfo
function ATouristHUD:HUDShowTutorialAsync(WorldContextObject, TutorialClass, LatentInfo) end
---@param WorldContextObject UObject
---@param Tutorial TSubclassOf<UTouristTutorialWidget>
---@param Widget UTouristTutorialWidget
function ATouristHUD:HUDShowTutorial(WorldContextObject, Tutorial, Widget) end
---@param WorldContextObject UObject
---@param Message FText
---@param duration float
function ATouristHUD:HUDShowOverlayNotification(WorldContextObject, Message, duration) end
---@param WorldContextObject UObject
---@param Message FText
---@param bLargeComms boolean
function ATouristHUD:HUDShowNotificationMessage(WorldContextObject, Message, bLargeComms) end
---@param WorldContextObject UObject
---@param NotificationClass TSubclassOf<UNotificationWidget>
---@return UNotificationWidget
function ATouristHUD:HUDShowNotificationByClass(WorldContextObject, NotificationClass) end
---@param WorldContextObject UObject
---@param Notification UNotificationWidget
function ATouristHUD:HUDShowNotification(WorldContextObject, Notification) end
---@param WorldContextObject UObject
---@param bVisible boolean
function ATouristHUD:HUDSetLabelVisibility(WorldContextObject, bVisible) end
---@param WorldContextObject UObject
---@param bVisible boolean
function ATouristHUD:HUDSetContentVisibility(WorldContextObject, bVisible) end
---@param WorldContextObject UObject
---@param Message FText
---@param Type EHUDLogMessageType
function ATouristHUD:HUDLogMessage(WorldContextObject, Message, Type) end
---@param WorldContextObject UObject
function ATouristHUD:HUDLanguageSettingsChanged(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function ATouristHUD:HUDIsTutorialQueued(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function ATouristHUD:HUDIsTutorialActive(WorldContextObject) end
---@param WorldContextObject UObject
---@param NotificationClass TSoftClassPtr<UNotificationWidget>
---@return boolean
function ATouristHUD:HUDIsNotificationActive(WorldContextObject, NotificationClass) end
function ATouristHUD:HUDInitialized__DelegateSignature() end
---@param WorldContextObject UObject
---@return float
function ATouristHUD:HUDGetNotificationDurationModifier(WorldContextObject) end
---@param WorldContextObject UObject
---@param EffectRetainerBox URetainerBox
function ATouristHUD:HUDGetFullScreenEffectBox(WorldContextObject, EffectRetainerBox) end
---@param WorldContextObject UObject
---@return UVerticalBox
function ATouristHUD:HUDGetCurseListBox(WorldContextObject) end
---@param WorldContextObject UObject
---@return UTouristTutorialPanel
function ATouristHUD:HUDGetActiveTutorial(WorldContextObject) end
---@param WorldContextObject UObject
---@return UNotificationWidget
function ATouristHUD:HUDGetActiveNotification(WorldContextObject) end
---@param WorldContextObject UObject
function ATouristHUD:HUDControllerSettingsChanged(WorldContextObject) end
---@param WorldContextObject UObject
---@param NotificationClass TSoftClassPtr<UNotificationWidget>
function ATouristHUD:HUDCancelNotificationByClass(WorldContextObject, NotificationClass) end
---@return UUserWidget
function ATouristHUD:GetWindowsPerformanceWidget() end
---@param WorldContextObject UObject
---@return ATouristHUD
function ATouristHUD:GetTouristHUD(WorldContextObject) end
---@param WorldContextObject UObject
---@return USystemSettingsMenu
function ATouristHUD:GetSystemSettingsMenu(WorldContextObject) end
---@return UHMQScreenWidget
function ATouristHUD:GetPhotoModeScreen() end
---@return UOverlayHUD_Base
function ATouristHUD:GetOverlayWidget() end
---@return UGameHUDWidget
function ATouristHUD:GetHUDWidget() end
---@return UHMQDebugMenuRenderComponent
function ATouristHUD:GetHMQDebugMenuRenderComponent() end
function ATouristHUD:GameplayStarted() end
function ATouristHUD:GameplayEnded() end
function ATouristHUD:EndTutorial() end
function ATouristHUD:EnableHUD() end
function ATouristHUD:EnableCombatHUD() end
function ATouristHUD:DisableHUD() end
function ATouristHUD:DisableCombatHUD() end
---@param Widget UUserWidget
function ATouristHUD:CommunicationComplete(Widget) end
---@param WorldContextObject UObject
function ATouristHUD:CancelAllTutorials(WorldContextObject) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function ATouristHUD:BiomeStateChanged(Biome, NewBiomeState) end


---@class ATouristLevelScriptActor : ALevelScriptActor
---@field LevelGenRoomStreamingActor ALevelGenRoomStreamingActor
ATouristLevelScriptActor = {}



---@class ATouristMeshVariantActor : AVariantActor
---@field StaticMeshComponent UStaticMeshComponent
ATouristMeshVariantActor = {}



---@class ATouristNavLinkProxy : ANavLinkProxy
---@field bConvertToSmartLinks boolean
ATouristNavLinkProxy = {}

---@param Enemy AEnemyBase
function ATouristNavLinkProxy:HandleEnemyStopCustomLinkMovement(Enemy) end
---@param Enemy AEnemyBase
function ATouristNavLinkProxy:HandleEnemyStartCustomLinkMovement(Enemy) end
---@param OutLeftPoint FVector
---@param OutRightPoint FVector
---@param OutDirection int32
function ATouristNavLinkProxy:GetNavLinkData(OutLeftPoint, OutRightPoint, OutDirection) end


---@class ATouristPlayerAIController : AAIController
---@field PlayerController ATouristPlayerController
ATouristPlayerAIController = {}

---@param NewPlayerController ATouristPlayerController
function ATouristPlayerAIController:SetPlayerController(NewPlayerController) end
---@return ATouristPlayerController
function ATouristPlayerAIController:GetPlayerController() end


---@class ATouristPlayerController : APlayerController
---@field FocusLost TSubclassOf<UFocusLostWidget>
---@field FocusLostEvent UAkAudioEvent
---@field FocusGainEvent UAkAudioEvent
---@field OnFirstPersonCharacterChanged FTouristPlayerControllerOnFirstPersonCharacterChanged
---@field bUserIsFocused boolean
---@field bIsDebugDrawAudioListener boolean
---@field bForceListenerToCamera boolean
---@field FirstPersonCharacterClass TSoftClassPtr<AFirstPersonPlayerCharacter>
---@field PlayerTetheringComponentClass TSubclassOf<UPlayerTetheringComponent>
---@field MouseSensitivityDA UMouseSensitivityDataAsset
---@field bIsControllerUsed boolean
---@field MouseSensitivity float
---@field ADSMouseSensitivity float
---@field MouseInputXDir float
---@field MouseInputYDir float
---@field AimInputXDir float
---@field AimInputYDir float
---@field AimInputXSensitivity float
---@field AimInputYSensitivity float
---@field LookInputXSensitivity float
---@field LookInputYSensitivity float
---@field LeftDeadzoneLimit float
---@field LeftOuterDeadzoneLimit float
---@field RightDeadzoneLimit float
---@field RightOuterDeadzoneLimit float
---@field MinimapViewType EMinimapViewType
---@field bIsMovingCamera boolean
---@field randomSeed int32
---@field TouristSaveInstance UTouristSaveGame
---@field OnPossessDelegate FTouristPlayerControllerOnPossessDelegate
---@field OnUnpossessDelegate FTouristPlayerControllerOnUnpossessDelegate
---@field OnPlayerStateReplicatedDelegate FTouristPlayerControllerOnPlayerStateReplicatedDelegate
---@field OnNominationInRangeOfConsumable FTouristPlayerControllerOnNominationInRangeOfConsumable
---@field OnInputTypeChanged FTouristPlayerControllerOnInputTypeChanged
---@field OnMenuOpened FTouristPlayerControllerOnMenuOpened
---@field CachedControllers TArray<FCachedControllerData>
---@field bFirstCachedControllerIdSet boolean
---@field bWasVideoPlaying boolean
---@field bIsInScreenspace boolean
---@field bIsLevelLoaded boolean
---@field ThirdPersonPawn APlayerCharacter
---@field FirstPersonPawn AFirstPersonPlayerCharacter
---@field AimAssistComponent UAimAssistComponent
---@field HUDInfo UPlayerHUDInfo
---@field CinematicManagerComponent UCinematicManagerComponent
---@field CinematicSkipComponent UCinematicSkipControllerComponent
---@field PhotoModeManagerComponent UPhotoModeManagerComponent
---@field TimeDilationComponent UTimeDilationComponent
---@field ServerRelay AServerRelay
---@field pAkComponent UAkComponent
---@field TetheringComponent UPlayerTetheringComponent
---@field PresentableBiomeRooms TArray<ALevelGenRoomStreamingActor>
---@field PauseMenuDisabled TSet<FName>
---@field bClientInCinematicMode boolean
---@field GameReadyRooms TArray<int32>
ATouristPlayerController = {}

---@param SaveGame UTouristSaveGame
function ATouristPlayerController:WarningNewController(SaveGame) end
---@param PlayerController ATouristPlayerController
---@param PawnClass TSubclassOf<APawn>
---@param LatentInfo FLatentActionInfo
function ATouristPlayerController:WaitUntilPossessedPawnOfClass(PlayerController, PawnClass, LatentInfo) end
---@param PlayerController ATouristPlayerController
---@param LatentInfo FLatentActionInfo
function ATouristPlayerController:WaitUntilHasFirstPersonPawn(PlayerController, LatentInfo) end
---@param PlayerController ATouristPlayerController
---@param LatentInfo FLatentActionInfo
function ATouristPlayerController:WaitUntilFirstPersonPawnDestroyed(PlayerController, LatentInfo) end
---@param PlayerController ATouristPlayerController
---@param LatentInfo FLatentActionInfo
function ATouristPlayerController:SwitchToThirdPerson(PlayerController, LatentInfo) end
---@param PlayerController ATouristPlayerController
---@param LatentInfo FLatentActionInfo
function ATouristPlayerController:SwitchToFirstPerson(PlayerController, LatentInfo) end
---@param NewSuitType ESuitType
function ATouristPlayerController:StartSwitchSuit(NewSuitType) end
---@param PawnClass TSubclassOf<AFirstPersonPlayerCharacter>
---@param SpawnLocationTag FName
function ATouristPlayerController:SpawnFirstPersonPawnByTag(PawnClass, SpawnLocationTag) end
---@param PawnClass TSubclassOf<AFirstPersonPlayerCharacter>
---@param Location FVector
---@param Rotation FRotator
---@param bVisible boolean
function ATouristPlayerController:SpawnFirstPersonPawn(PawnClass, Location, Rotation, bVisible) end
---@return AFirstPersonPlayerCharacter
function ATouristPlayerController:SpawnAndPossessFirstPersonPawn() end
function ATouristPlayerController:ShowCursor() end
---@param bGameOnly boolean
function ATouristPlayerController:SetupInputMode(bGameOnly) end
---@param Context FName
---@param bEnabled boolean
function ATouristPlayerController:SetPauseMenuEnabled(Context, bEnabled) end
---@param bActive boolean
function ATouristPlayerController:SetPadSpeakerState(bActive) end
---@param ControllerId int32
---@param ControllerInterfaceName FString
function ATouristPlayerController:SetLastUsedController(ControllerId, ControllerInterfaceName) end
---@param bSystemMenuEnabled boolean
function ATouristPlayerController:SetIsSystemMenuEnabled(bSystemMenuEnabled) end
---@param ParentWidget UUserWidget
---@param MouseCursorStyle EMouseCursorStyle
function ATouristPlayerController:SetCursor(ParentWidget, MouseCursorStyle) end
---@param aspectRatioConstraint EAspectRatioAxisConstraint
function ATouristPlayerController:SetCurrentAspectRatioConstrainy(aspectRatioConstraint) end
---@param bNewEnabled boolean
function ATouristPlayerController:SetAutoManageViewTargetEnabled(bNewEnabled) end
---@param PawnClass TSubclassOf<AFirstPersonPlayerCharacter>
---@param Location FVector
---@param Rotation FRotator
---@param bVisible boolean
function ATouristPlayerController:ServerSpawnFirstPersonPawn(PawnClass, Location, Rotation, bVisible) end
---@param NewPawn APawn
function ATouristPlayerController:ServerRequestPossession(NewPawn) end
function ATouristPlayerController:ServerPossessFirstPersonPawn() end
function ATouristPlayerController:ServerOnDismissGameOver() end
function ATouristPlayerController:ServerDestroyFirstPersonPawn() end
---@param bNewCinematicMode boolean
function ATouristPlayerController:Server_ClientInCinematicMode(bNewCinematicMode) end
---@param RoomIndex int32
---@param bGameReady boolean
---@param Announcer ATouristPlayerController
function ATouristPlayerController:Server_AnnounceRoomGameplayReady(RoomIndex, bGameReady, Announcer) end
---@param MouseCursorStyle EMouseCursorStyle
function ATouristPlayerController:SelectMouseCursorStyle(MouseCursorStyle) end
---@param SaveGame UTouristSaveGame
function ATouristPlayerController:SaveGameReset(SaveGame) end
---@param SaveGame UTouristSaveGame
function ATouristPlayerController:SaveGameLoaded(SaveGame) end
---@param InPawn APawn
function ATouristPlayerController:RequestPossession(InPawn) end
---@param ControllerId int32
---@param InterfaceName FString
function ATouristPlayerController:RemoveControllerFromCache(ControllerId, InterfaceName) end
function ATouristPlayerController:RecreateNavigationConfig() end
function ATouristPlayerController:PossessThirdPersonPawn() end
function ATouristPlayerController:PossessFirstPersonPawn() end
function ATouristPlayerController:OnTreegenFinished() end
---@param RoomIndex int32
function ATouristPlayerController:OnRoomGameUnready(RoomIndex) end
---@param RoomOverseer ARoomOverseer
---@param RoomIndex int32
function ATouristPlayerController:OnRoomGameReady(RoomOverseer, RoomIndex) end
function ATouristPlayerController:OnRep_GameReadyRooms() end
function ATouristPlayerController:OnRep_FirstPersonPawn() end
function ATouristPlayerController:OnInputBindingsUpdated() end
---@param bIsOpen boolean
function ATouristPlayerController:OnExternalUIOverlayOpened(bIsOpen) end
---@param RestartGame boolean
function ATouristPlayerController:OnDismissGameOver(RestartGame) end
---@param Biome EBiome
---@param NewState EBiomeState
function ATouristPlayerController:OnBiomeStateChanged(Biome, NewState) end
---@param index int32
function ATouristPlayerController:OnAudioOutputChanged(index) end
---@param prog float
function ATouristPlayerController:MulticastUpdateInteractionProgress(prog) end
---@return boolean
function ATouristPlayerController:IsInFirstPerson() end
---@param bIncludeClient boolean
---@return boolean
function ATouristPlayerController:IsInCinematicMode(bIncludeClient) end
function ATouristPlayerController:HideCursor() end
---@return boolean
function ATouristPlayerController:HasPossessedPawn() end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function ATouristPlayerController:HandlePlayerDeath(DamagedActor, DamageEvent) end
---@return APlayerCharacter
function ATouristPlayerController:GetThirdPersonPawn() end
---@return AServerRelay
function ATouristPlayerController:GetServerRelay() end
---@return int32
function ATouristPlayerController:GetRandomSeed() end
---@return UPlayerTetheringComponent
function ATouristPlayerController:GetPlayerTetheringComponent() end
---@return AFirstPersonPlayerCharacter
function ATouristPlayerController:GetFirstPersonPawn() end
---@param Default UUserWidget
---@param Hand UUserWidget
---@param Slider UUserWidget
function ATouristPlayerController:GetCursor(Default, Hand, Slider) end
---@return ESuitType
function ATouristPlayerController:GetCurrentSuitType() end
---@return EAspectRatioAxisConstraint
function ATouristPlayerController:GetCurrentAspectRatioConstrainy() end
---@return TArray<FCachedControllerData>
function ATouristPlayerController:GetCachedControllers() end
---@param ControllerId int32
---@param InterfaceName FString
---@return FCachedControllerData
function ATouristPlayerController:GetCachedController(ControllerId, InterfaceName) end
---@return UAimAssistComponent
function ATouristPlayerController:GetAimAssistComponent() end
function ATouristPlayerController:DestroyFirstPersonPawn() end
---@param HostGameState FPersistentGameState
---@param HostGameplayAbilities TArray<FInventoryGameplayAbility>
function ATouristPlayerController:ClientReceiveSaveState(HostGameState, HostGameplayAbilities) end
function ATouristPlayerController:ClientHandleRestartGame() end
---@param bNewShowHUD boolean
function ATouristPlayerController:Client_CinematicShowHUD(bNewShowHUD) end
function ATouristPlayerController:ClearNavigationConfig() end
function ATouristPlayerController:ClearAutoManageViewTargetOnThirdPerson() end
---@return boolean
function ATouristPlayerController:CanShowTutorial() end
---@param Controller FCachedControllerData
function ATouristPlayerController:CacheController(Controller) end


---@class ATouristPlayerState : APlayerState
---@field AltLootSpawnCounter int32
---@field LoadedRooms TArray<int32>
---@field bIsLevelPresentable boolean
---@field bIsPauseMenuOpen boolean
---@field bReadyToPlay boolean
---@field bWaitingForReady boolean
---@field Stats FPlayerStats
---@field OnArtefactCollected FTouristPlayerStateOnArtefactCollected
---@field OnWeaponUpgradeCollected FTouristPlayerStateOnWeaponUpgradeCollected
---@field OnRoomsPresentableStateChanged FTouristPlayerStateOnRoomsPresentableStateChanged
---@field Clarity float
---@field CinematicPlayerStateComponent UCinematicPlayerStateComponent
ATouristPlayerState = {}

---@param amount float
function ATouristPlayerState:StatsAddHealthCollected(amount) end
function ATouristPlayerState:ServerSetReadyToPlay() end
---@param DeathLocation FVector
function ATouristPlayerState:ServerOnCharacterDeath(DeathLocation) end
---@param NewClarity float
function ATouristPlayerState:Server_SetClarity(NewClarity) end
---@param RoomIndex int32
function ATouristPlayerState:RoomCleared(RoomIndex) end
function ATouristPlayerState:ResetStats() end
---@param RoomIndex int32
function ATouristPlayerState:OnRoomGameUnready(RoomIndex) end
---@param Overseer ARoomOverseer
---@param RoomIndex int32
function ATouristPlayerState:OnRoomGameReady(Overseer, RoomIndex) end
function ATouristPlayerState:OnRep_ReadyToPlay() end
function ATouristPlayerState:OnReadyToPlay() end
function ATouristPlayerState:MulticastRecordLastCharacterDeath() end
---@param RequiredClarity float
---@return boolean
function ATouristPlayerState:HasEnoughClarity(RequiredClarity) end
---@param Delta float
---@param Total float
function ATouristPlayerState:HandleClarityChanged(Delta, Total) end
---@return boolean
function ATouristPlayerState:GetIsLevelPresentable() end
---@param StatName FString
---@param WeaponCategory EWeaponCategory
---@param DisplayName FText
function ATouristPlayerState:ClientStatsAddWeaponUpgradeCollected(StatName, WeaponCategory, DisplayName) end


---@class ATouristRoomAudioVolume : AAkSpatialAudioVolume
ATouristRoomAudioVolume = {}


---@class ATouristSpectatorPawn : ASpectatorPawn
---@field CameraArm UHMQCameraSpringArmComponent
---@field Camera ACameraActor
ATouristSpectatorPawn = {}

---@return FText
function ATouristSpectatorPawn:GetSpectatedCharName() end


---@class ATreeGenerator : AHMQActor
---@field RunMode ETreeGeneratorRunMode
---@field randomSeed int32
---@field bSwapGenerationOrder boolean
---@field TreeDefinitions TArray<FTreeDefinition>
---@field TreeMinOffset FVector
---@field TreeMaxOffset FVector
---@field NearElements TArray<FTreeDefinitionReference>
---@field MaxNearElementCount int32
---@field NearAdditiveExtent FVector2D
---@field TreeBaseProbabilityMapBounds float
---@field MinTreeProbabilityMapBounds float
---@field MaxTreeProbabilityMapBounds float
---@field NearTreeDensityModifier float
---@field NearTreeFailureModifier float
---@field NearRandomElements TArray<FTreeDefinitionReference>
---@field MinNearRandomTreeCount int32
---@field MaxNearRandomTreeCount int32
---@field TreeBaseProbabilityNearRandom float
---@field MinTreeProbabilityNearRandom float
---@field MaxTreeProbabilityNearRandom float
---@field NearRandomTreeBaseOffset float
---@field NearRandomTreeOffsetMinMultiplier float
---@field NearRandomTreeOffsetMaxMultiplier float
---@field FarElements TArray<FTreeDefinitionReference>
---@field TreeBaseProbabilityBackground float
---@field MinTreeProbabilityBackground float
---@field MaxTreeProbabilityBackground float
---@field MinFarElementCount int32
---@field MaxFarElementCount int32
---@field FarExtent FVector2D
---@field MinClusterRadius float
---@field MaxClusterRadius float
---@field MinClusterTreeCount int32
---@field MaxClusterTreeCount int32
---@field MaxClusterCount int32
---@field InstancedMeshComponentCreated FTreeGeneratorInstancedMeshComponentCreated
---@field TreeGeneratorFinished FTreeGeneratorTreeGeneratorFinished
---@field MapLandscapeComponent UMapLandscapeComponent
---@field GeneratorComponents TArray<UTreeGeneratorComponent>
---@field HierarchicalInstancedMeshComponents TArray<UHierarchicalInstancedStaticMeshComponent>
---@field SpawnedActors TArray<AActor>
---@field AngenMapIngame ULevelGenMapIngame
---@field RuntimeLandscape AHMQRuntimeLandscape
---@field RuntimeDefinitions TArray<UTreeDefinitionAsset>
ATreeGenerator = {}

---@param IsMapCompletionLockedForUs boolean
function ATreeGenerator:Run(IsMapCompletionLockedForUs) end
---@param HISM UHierarchicalInstancedStaticMeshComponent
function ATreeGenerator:ReceiveHierarchicalInstancedMeshCreated(HISM) end
---@return boolean
function ATreeGenerator:IsComplete() end
---@param MapLandscapeComp UMapLandscapeComponent
function ATreeGenerator:HandleLandscapeReady(MapLandscapeComp) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function ATreeGenerator:HandleBiomeStateChanged(Biome, NewBiomeState) end
---@return EBiome
function ATreeGenerator:GetTreegenBiome() end


---@class AWaveGenLevel : AGridVolume
---@field PatternSize int32
---@field randomSeed int32
---@field EmptyPatternWeightMultiplier float
---@field DistributionsDataLogging boolean
---@field DistributionUpdateInterval int32
---@field ErrorDerivativeSmoothing float
---@field CorrectorPidParams FVector
---@field PatternCount int32
---@field VisualizedPatternWeight float
---@field VisualizationMode boolean
---@field VisualizerSpacing float
---@field VisualizeNthPattern int32
---@field VisualizeNthCompatiblePatterns int32
---@field ProgressLoggingInterval float
---@field StepCount int32
AWaveGenLevel = {}

function AWaveGenLevel:C_Benchmark() end
function AWaveGenLevel:B_Step() end
function AWaveGenLevel:B_GenerateLevel() end
function AWaveGenLevel:B_GenerateAll() end
function AWaveGenLevel:A_InitializeWave() end
function AWaveGenLevel:A_GeneratePatternData() end
function AWaveGenLevel:A_ClearAll() end


---@class AWaveGenSample : AGridVolume
---@field IsEnabled boolean
---@field weight float
---@field WeightNormalizeBySize boolean
---@field AugmentWithXMirrorings boolean
---@field AugmentWithYMirrorings boolean
---@field AugmentWithZRotations boolean
AWaveGenSample = {}



---@class AWeaponCollectible : ACollectibleBase
---@field WeaponObject APlayerWeapon
---@field SpawnProfile FName
---@field MetaModifiers TArray<FWeaponCollectibleMetaModifier>
---@field UpgradeSlots int32
---@field WeaponSpawnArgs TArray<FSpawnArg>
---@field WeaponClass TSubclassOf<APlayerWeapon>
---@field WeaponSpawnPolicy EWeaponSpawnPolicy
---@field bDestroyExistingWeaponWhenCollected boolean
---@field CollectionDelayWhenCurrentWeaponIsFullyUpgraded float
AWeaponCollectible = {}

---@param InteractingController AController
function AWeaponCollectible:SecondaryInteract(InteractingController) end
function AWeaponCollectible:OnRep_WeaponObject() end
---@param NewGun APlayerGun
---@param OldGun APlayerGun
function AWeaponCollectible:OnPlayerMainWeaponChanged(NewGun, OldGun) end
---@param Discoverable UDiscoverableComponent
---@param DiscoveryPawn APawn
function AWeaponCollectible:HandleDiscovery(Discoverable, DiscoveryPawn) end
---@param Player APlayerCharacter
---@return float
function AWeaponCollectible:GetWeaponPower(Player) end
---@return int32
function AWeaponCollectible:GetUpgradeSlotCount() end
---@param OutDatas TArray<FWeaponMetaModifierData>
---@param InTypes TSet<EMetaModifierType>
---@param PlayerCharacter APawn
function AWeaponCollectible:GetModsOfTypes(OutDatas, InTypes, PlayerCharacter) end
---@param CodeName FName
---@return FWeaponMetaModifierData
function AWeaponCollectible:GetModByCodeName(CodeName) end


---@class AWeaponSlotUpgradeCollectible : ACollectibleBase
---@field bFirstRandomUpgradeHack boolean
---@field Upgrades TMap<TSoftClassPtr<APlayerWeapon>, FGunSlotUpgrades>
---@field UpgradeCategory EWeaponCategory
---@field bRandomUpgrade boolean
---@field AltCollectible TSubclassOf<ACollectibleBase>
---@field TextSubPrompt FText
---@field Upgrade UGunSlotUpgrade
---@field CachedLocalPlayer APlayerCharacter
AWeaponSlotUpgradeCollectible = {}

---@param Weapon APlayerWeapon
function AWeaponSlotUpgradeCollectible:OnLocalPlayerWeaponUpgraded(Weapon) end
---@param Pawn APawn
function AWeaponSlotUpgradeCollectible:OnLocalPlayerUnpossessed(Pawn) end
---@param Pawn APawn
function AWeaponSlotUpgradeCollectible:OnLocalPlayerPossessed(Pawn) end
---@param NewMeleeWeapon AMeleeWeaponBase
---@param OldMeleeWeapon AMeleeWeaponBase
function AWeaponSlotUpgradeCollectible:OnLocalPlayerMeleeWeaponChanged(NewMeleeWeapon, OldMeleeWeapon) end
---@param NewMainWeapon APlayerGun
---@param OldMainWeapon APlayerGun
function AWeaponSlotUpgradeCollectible:OnLocalPlayerMainWeaponChanged(NewMainWeapon, OldMainWeapon) end


---@class AWeaponUpgradeCollectible : ACollectibleBase
---@field Upgrades FGunUpgrades
---@field duration float
---@field UpgradeCategory EWeaponCategory
AWeaponUpgradeCollectible = {}



---@class FAchievementsSection
---@field Section FText
---@field Tasks TArray<FAchievementsTask>
---@field bIsWide boolean
FAchievementsSection = {}



---@class FAchievementsSubTask
---@field SubName FText
---@field TaskType ESubTaskType
---@field TaskID FName
FAchievementsSubTask = {}



---@class FAchievementsTask
---@field Name FText
---@field Description FText
---@field ActivityId FName
---@field WeaponID FName
---@field Type EAchievementType
---@field Texture TSoftObjectPtr<UTexture2D>
---@field BackgroundTexture TSoftObjectPtr<UTexture2D>
---@field SizeMultiplier float
---@field bHasTrophy boolean
---@field bShowText boolean
---@field TrophyData FTrophyData
---@field SubTasks TArray<FAchievementsSubTask>
---@field bSpoilerAchievement boolean
FAchievementsTask = {}



---@class FActionDirection
---@field ActionName FName
---@field bIsPositive boolean
FActionDirection = {}



---@class FActionMappingPriority
---@field Priority int32
---@field InputAction FHMQInputAction
FActionMappingPriority = {}



---@class FActivatorReasonCount
---@field ContextName FName
---@field Reason FName
---@field ActivateCount int32
---@field VisibleCount int32
FActivatorReasonCount = {}



---@class FActivators
---@field ContextName FName
---@field Reasons TMap<FName, FActivatorReasonCount>
FActivators = {}



---@class FActiveRoomData
FActiveRoomData = {}


---@class FActivitiesData
---@field Activities TMap<FName, FActivityData>
FActivitiesData = {}



---@class FActivityBaseTask
---@field TaskID FName
---@field TrophyID FName
---@field Event EConditionEvent
FActivityBaseTask = {}



---@class FActivityCondition : FActivityBaseTask
---@field TaskType EConditionType
---@field Flag FName
---@field Stat FName
---@field MinValue int32
---@field ResetValue int32
FActivityCondition = {}



---@class FActivityData
---@field ActivityStatus EActivityStatus
---@field TaskStatus TMap<FName, EActivityStatus>
FActivityData = {}



---@class FActivitySubTask : FActivityBaseTask
---@field SubTasks TArray<FActivityCondition>
FActivitySubTask = {}



---@class FAdrenalineComponentSaveData
---@field AdrenalineLevel int32
---@field AdrenalineProgression int32
---@field HitsTaken int32
FAdrenalineComponentSaveData = {}



---@class FAdrenalineLevelRewards
---@field AdrenalineLevel int32
---@field MetaModifiers TArray<FString>
FAdrenalineLevelRewards = {}



---@class FAimAssistSettings
---@field bEnableAimAssist boolean
---@field MagnetismMultiplier float
---@field FrictionMultiplier float
FAimAssistSettings = {}



---@class FAimSettings
---@field MaxAimSpeedHorizontal float
---@field MaxAimSpeedVertical float
---@field MouseSpeedBoost float
---@field MouseADSDampening float
---@field AimingCurve UCurveFloat
---@field AimAccelerationCurve UCurveFloat
---@field AimSpreadMultiplier float
---@field bDynamicAimSpeedEnabled boolean
---@field DiagonalMultiplierMax float
---@field DiagonalSlowdownHorizontalPow float
---@field bDiagonalSlowdownHorizontalReduction boolean
---@field bAimSmoothingEnabled boolean
---@field AimSmoothingDuration float
---@field bAimAxisHelperEnabled boolean
---@field AimAxisHelperRange FVector2D
FAimSettings = {}



---@class FAlienForestLevelGenInfo : FLevelGenInfoBase
---@field FirstPlay boolean
---@field BladeIntro boolean
---@field ActComplete02 boolean
---@field ChaserIntro EFlagOption
---@field FirstTimeSecondPlay EFlagOption
---@field AltFireIntroduced EFlagOption
---@field SeenMaterializer EFlagOption
---@field MistIntroduced EFlagOption
---@field ParasiteIntro EFlagOption
---@field MistGatePassed EFlagOption
---@field CitadelGateVO EFlagOption
---@field HouseKeyFound EFlagOption
FAlienForestLevelGenInfo = {}



---@class FAltFireSettings
---@field CameraFOVOffset float
---@field CameraDistanceMultiplier float
---@field CameraLocationOffset FVector
---@field bExitModeWhenUsed boolean
---@field bAllowEnterDuringCooldown boolean
---@field AltFireGameplayEffect TSubclassOf<UGameplayEffect>
---@field ExitGameplayEffect TSubclassOf<UGameplayEffect>
---@field ExitDuration float
---@field CooldownGameplayEffect TSubclassOf<UGameplayEffect>
---@field TimeDilationDelta float
---@field TimeDilationIn float
---@field TimeDilationOut float
---@field TimeDilationStay float
---@field TimeDilationCooldown float
---@field bEndTimeDilationOnFire boolean
---@field RecoilOverride FVector2D
---@field RecoilSettings FSpringRecoilSettings
---@field CostType EAltFireCostTypes
---@field cooldown float
---@field FuelAmount float
---@field FuelDrainSpeedPassive float
---@field FuelDrainSpeedActive float
---@field FuelFillSpeed float
---@field MaxAmmo float
---@field AmmoFillSpeed float
FAltFireSettings = {}



---@class FAngenDebugLocatorSelectRule
---@field Rule UAngenLocatorSelectRule
---@field RuleDescription FString
---@field SelectedLocators TSet<int32>
FAngenDebugLocatorSelectRule = {}



---@class FAngenDebugMapDoorSelectRule
---@field Rule UAngenMapDoorSelectRule
---@field RuleDescription FString
---@field SelectedMapDoors TSet<int32>
FAngenDebugMapDoorSelectRule = {}



---@class FAngenDebugRoomDoorSelectRule
---@field Rule UAngenRoomDoorSelectRule
---@field RuleDescription FString
---@field SelectedRoomDoors TSet<int32>
FAngenDebugRoomDoorSelectRule = {}



---@class FAngenDebugRoomSelectRule
---@field Rule UAngenRoomSelectRule
---@field RuleDescription FString
---@field SelectedRooms TSet<FString>
FAngenDebugRoomSelectRule = {}



---@class FAngenLandscapeModifierProperties
---@field ModifierPriority int32
---@field OverrideBiomeProperties boolean
---@field FalloffDistance float
---@field FalloffSubdivisionCount int32
---@field MinFalloffNoiseDistance float
---@field MaxFalloffNoiseDistance float
---@field FalloffEaseFunction EMathEaseFunction::Type
---@field ThresholdTop float
---@field ThresholdBottom float
---@field VertexSmoothCount int32
---@field ModifierAlpha FVector2D
---@field bConsiderForSeamFix boolean
---@field bMaskRead boolean
---@field bMaskWrite boolean
---@field bWriteSmaller boolean
---@field bWriteLarger boolean
FAngenLandscapeModifierProperties = {}



---@class FAngenLevelGenState
---@field Map ULevelGenMap
---@field GlobalPreMapDoorSelectRules TArray<UAngenMapDoorSelectRule>
---@field GlobalPostMapDoorSelectRules TArray<UAngenMapDoorSelectRule>
---@field GlobalPreRoomSelectRules TArray<UAngenRoomSelectRule>
---@field GlobalPostRoomSelectRules TArray<UAngenRoomSelectRule>
---@field GlobalPreRoomDoorSelectRules TArray<UAngenRoomDoorSelectRule>
---@field GlobalPostRoomDoorSelectRules TArray<UAngenRoomDoorSelectRule>
---@field GlobalPreLocatorSelectRules TArray<UAngenLocatorSelectRule>
---@field GlobalPostLocatorSelectRules TArray<UAngenLocatorSelectRule>
FAngenLevelGenState = {}



---@class FAngenLocatorSelectRuleContext
---@field RoomInfos ULevelGenRoomInfos
---@field CurrentMap ULevelGenMap
---@field SelectedMapLocators TSet<int32>
FAngenLocatorSelectRuleContext = {}



---@class FAngenMapDoorSelectRuleContext
---@field RoomInfos ULevelGenRoomInfos
---@field CurrentMap ULevelGenMap
---@field SelectedMapDoors TSet<int32>
FAngenMapDoorSelectRuleContext = {}



---@class FAngenRoomActivationManagerData
---@field SpawnedRooms TSet<int32>
FAngenRoomActivationManagerData = {}



---@class FAngenRoomDoorSelectRuleContext
---@field RoomInfos ULevelGenRoomInfos
---@field CurrentMap ULevelGenMap
---@field SelectedMapDoor int32
---@field SelectedRoom ULevelGenRoomInfo
---@field SelectedRoomDoors TSet<int32>
FAngenRoomDoorSelectRuleContext = {}



---@class FAngenRoomSelectRuleContext
---@field RoomInfos ULevelGenRoomInfos
---@field CurrentMap ULevelGenMap
---@field SelectedMapDoor int32
---@field SelectedRooms TSet<FString>
FAngenRoomSelectRuleContext = {}



---@class FAngenRulePool
---@field ActiveAngenRules TArray<UAngenRule>
---@field PooledAngenRules TArray<UAngenRule>
FAngenRulePool = {}



---@class FAnimDeltaCorrectionWindow
---@field TargetReachPoint float
---@field CorrectionWindowStart float
---@field CorrectionWindowEnd float
---@field MinRootMotionDistance float
---@field MaxRootMotionDistance float
---@field MinSpeedPreservationScalingFactor float
---@field MaxSpeedPreservationScalingFactor float
---@field bCorrectLocation boolean
---@field bScaleCorrectionWithRootSpeed boolean
---@field bAllowRootMotionZ boolean
---@field bConstrainRootMotionStretching boolean
---@field MaxRootMotionStretchDeviation float
FAnimDeltaCorrectionWindow = {}



---@class FAnimHitboxAttackRequest
---@field HitboxName FName
---@field Time float
---@field EventType EHitboxEventType
FAnimHitboxAttackRequest = {}



---@class FAnimNode_AnimActionSubInstances : FAnimNode_TouristBase
---@field InPose FPoseLink
---@field ActionAnimInstance UCharacterActionAnimInstance
---@field ActionForInstance UCharacterAnimAction_SubInstance
---@field LastActionID int32
---@field BoneTransforms TArray<FTransform>
FAnimNode_AnimActionSubInstances = {}



---@class FAnimNode_HitReaction : FAnimNode_TouristSkeletalControlBase
---@field HitDirectionBaseBone FBoneReference
---@field Bones TArray<FHitReactionBone>
---@field HitDirectionMaxAngle float
---@field MinImpactType EDamageImpactType
---@field MaxImpactType EDamageImpactType
---@field HitReactionInstances TArray<FHitReactionInstance>
---@field CachedLocalBaseBonePos FVector
---@field CachedMaxHitReactionPhase float
FAnimNode_HitReaction = {}



---@class FAnimNode_TouristBase : FAnimNode_Base
FAnimNode_TouristBase = {}


---@class FAnimNode_TouristSkeletalControlBase : FAnimNode_SkeletalControlBase
FAnimNode_TouristSkeletalControlBase = {}


---@class FAnimNode_VelocityTransfer : FAnimNode_SkeletalControlBase
---@field Bone FBoneReference
---@field MeshForwardVector FVector
---@field LocalVelocity FVector
---@field MinRotationOffset FRotator
---@field MaxRotationOffset FRotator
---@field FirstOrderSmoothing float
---@field SecondOrderSmoothing float
---@field LastVelocity FVector
---@field SmoothedAcceleration FVector
---@field TargetAcceleration FVector
---@field CachedRotationOffset FRotator
FAnimNode_VelocityTransfer = {}



---@class FAnimationRequest
---@field Source TScriptInterface<IAnimationRequestSource>
---@field DescriptionData UAnimRequestDescriptionData_Base
---@field RuntimeData UAnimRequestRuntimeData_Base
---@field LogicObjectClass TSubclassOf<UAnimRequestLogicObject_Base>
---@field Priority int32
---@field RequestID int32
---@field AnimationMessagingComponent UAnimationMessagingComponent
---@field LogicObject UAnimRequestLogicObject_Base
---@field CreationTime float
FAnimationRequest = {}



---@class FAnimationRequestDescriptor
---@field DescriptionData UAnimRequestDescriptionData_Base
---@field RuntimeDataClass TSubclassOf<UAnimRequestRuntimeData_Base>
---@field LogicObjectClass TSubclassOf<UAnimRequestLogicObject_Base>
---@field Priority int32
FAnimationRequestDescriptor = {}



---@class FArcHitIndicatorData
---@field bShowIndicator boolean
---@field IndicatorMesh UStaticMesh
---@field IndicatorMaterial UMaterialInterface
---@field IndicatorTransform FTransform
---@field bRotateToImpactNormal boolean
FArcHitIndicatorData = {}



---@class FAsyncRaycast
---@field Start FVector
---@field End FVector
---@field HitResult FHitResult
---@field HitReturn boolean
FAsyncRaycast = {}



---@class FAttackRequestInstance
---@field Attack FHitboxAttack
---@field Source UObject
---@field TiedAnimation UAnimMontage
---@field ActiveTimer float
---@field DamageCooldownTimer float
---@field bFirstFrame boolean
---@field bPendingKill boolean
FAttackRequestInstance = {}



---@class FAudioSettingsCache
FAudioSettingsCache = {}


---@class FAudioSettingsEventNames
---@field DynRangeEventNames TArray<FString>
---@field MidnightModeEventNames TArray<FString>
---@field SpeakerChannelEventNames TArray<FString>
---@field MonoMixEventName TArray<FString>
---@field AudioOutputSystemEventNames TArray<FString>
FAudioSettingsEventNames = {}



---@class FAxisMappingPriority
---@field Priority int32
---@field InputAction FHMQInputAxis
FAxisMappingPriority = {}



---@class FBeamSpawnParameters : FDamageParams
---@field BeamType EBeamType
---@field bDestroyWhenSourceDies boolean
---@field BeamPfx FName
---@field MuzzleFlashEffect TSubclassOf<AEffectContainer>
---@field BeamImpactPfx FName
---@field BeamImpactEffect TSubclassOf<AEffectContainer>
---@field BeamSoundEvent UAkAudioEvent
---@field BeamStopEvent UAkAudioEvent
---@field BeamSoundPositionBufferPercent float
---@field MuzzleSoundEvent UAkAudioEvent
---@field MuzzleSoundStopEvent UAkAudioEvent
---@field ImpactSoundEvent UAkAudioEvent
---@field ImpactSoundStopEvent UAkAudioEvent
---@field DeactivationSoundEvent UAkAudioEvent
---@field origin FVector
---@field direction FRotator
---@field MaxDistance float
---@field ExtendSpeed float
---@field PreviewDuration float
---@field DisappearSpeed float
---@field bGeneratesThreat boolean
---@field Color FLinearColor
---@field bExtendBeamUntilLineHit boolean
---@field bExtendBeamFromHighestZ boolean
---@field FiringEventId int32
FBeamSpawnParameters = {}



---@class FBehaviorFireWeaponSettings
---@field WeaponIndex int32
---@field bRequireAnimationRequest boolean
---@field AnimationRequest FAnimationRequestDescriptor
---@field bSyncFiringToAnimation boolean
---@field bCheckVisibilityFromWeaponSocket boolean
---@field bAutoFireWeapon boolean
FBehaviorFireWeaponSettings = {}



---@class FBehaviorFlyFigureOfEightSettings
---@field Radius float
---@field TimeToRetestAfterFailure float
FBehaviorFlyFigureOfEightSettings = {}



---@class FBehaviorFlyOnFlightPathSettings
---@field Speed float
---@field bTurnToFaceVelocity boolean
FBehaviorFlyOnFlightPathSettings = {}



---@class FBehaviorFlyToQueryResultSettings
---@field DistanceTolerance float
---@field HysteresisPercentage float
---@field RotateToTargetDistanceThreshold float
FBehaviorFlyToQueryResultSettings = {}



---@class FBehaviorFlyingFollowPlayerSettings
---@field PreferredDistanceFromEnemies float
---@field MinPreferredTargetAngleDifference float
---@field MaxEnemyRepelForce float
---@field bAttemptToKeepDistanceInRange boolean
---@field bRotateToTargetWhileMovingBackwards boolean
---@field TargetDistanceToPlayer FMinMaxFloat
---@field bAttemptToKeepAngleInRange boolean
---@field TargetAngleToPlayer FMinMaxFloat
---@field HysteresisPercent float
FBehaviorFlyingFollowPlayerSettings = {}



---@class FBehaviorFlyingQuickStrafeSettings
---@field StrafeDistance FMinMaxFloat
---@field DistanceTolerance float
---@field MaxAngleVariance float
FBehaviorFlyingQuickStrafeSettings = {}



---@class FBehaviorFlyingStrafeAroundPlayerSettings
---@field bKeepInView boolean
---@field StrafingEnemyAvoidanceRadius float
FBehaviorFlyingStrafeAroundPlayerSettings = {}



---@class FBehaviorFlyingWanderSettings
---@field AnchorDistanceZ float
---@field AnchorDistanceXY float
---@field MinDistanceToWallXY float
---@field bUseEnemyAnchor boolean
FBehaviorFlyingWanderSettings = {}



---@class FBehaviorFollowPlayerSettings
---@field FollowingSpeed float
---@field FollowingAcceleration float
---@field PathCheckInterval float
FBehaviorFollowPlayerSettings = {}



---@class FBehaviorInactiveHideSettings
---@field bIsInvulnDuringHiding boolean
---@field bIsInvisibleDuringHiding boolean
---@field bAutoExitIfNotHiding boolean
FBehaviorInactiveHideSettings = {}



---@class FBehaviorKeepDistanceFromPlayerSettings
---@field bUseDistanceXY boolean
---@field MinPreferredDistance float
---@field MaxPreferredDistance float
---@field MovementSpeed float
---@field StrafeSpeed float
---@field Acceleration float
---@field TargetDotToPlayerFront float
---@field MinPreferredDistanceFromEnemies float
---@field MaxPreferredDistanceFromEnemies float
---@field MinStrafingPriority float
---@field MaxStrafingPriority float
FBehaviorKeepDistanceFromPlayerSettings = {}



---@class FBehaviorMoveToQueryResultSettings
---@field EnvQuery UEnvQuery
---@field MovementSpeed float
---@field StartSound UAkAudioEvent
FBehaviorMoveToQueryResultSettings = {}



---@class FBehaviorSendAnimationRequestSettings
---@field Request FAnimationRequestDescriptor
FBehaviorSendAnimationRequestSettings = {}



---@class FBehaviorSettings_FlyingDive
---@field DiveRequest FAnimationRequestDescriptor
---@field WorldHitBehaviorExitDot float
---@field DiveSpeed float
---@field DiveAcceleration float
---@field PlayerTrackingSpeed float
---@field MinDiveHeight float
---@field MinDiveDistanceXY float
---@field MaxDiveDistanceXY float
---@field DiveTargetHeightOffset float
---@field ChargeUpTime float
---@field RecoveryTime float
---@field bRotatePitchDuringRecovery boolean
---@field AttackTime float
---@field AttackStartDistance float
---@field bUseAttackDownwardsCurve boolean
---@field AttackDownwardsCurveScaling float
---@field AttackDownwardsCurvePow float
FBehaviorSettings_FlyingDive = {}



---@class FBehaviorStrafeToTargetSettings
---@field PreferredStrafeDistance float
---@field MinStrafeDistance float
---@field MaxStrafeDistance float
---@field NumPointsToTest int32
---@field DistanceTolerance float
FBehaviorStrafeToTargetSettings = {}



---@class FBehaviorTreeDataAsset
---@field DataAsset UDataAsset_EnemyBehaviorBase
---@field BlackboardKey FName
FBehaviorTreeDataAsset = {}



---@class FBehaviorTurnAtPlayerSettings
---@field bOverrideTurningSpeed boolean
---@field TurningSpeed float
---@field RotationSource EEnemyRotationSource
FBehaviorTurnAtPlayerSettings = {}



---@class FBehaviorWanderSettings
---@field MinDist float
---@field MaxDist float
---@field WanderingSpeed float
---@field WanderingTime float
---@field bGetPointsAroundAnchor boolean
---@field bKeepPlayerInLineOfSight boolean
FBehaviorWanderSettings = {}



---@class FBenchmarkZoneImpactTableRow : FTableRowBase
---@field Zone int32
---@field Impacts TArray<FImpactTableRow>
FBenchmarkZoneImpactTableRow = {}



---@class FBiolayoutReport : FTableRowBase
---@field LevelGenTable FString
---@field LevelGenRow FName
---@field NumLayouts int32
---@field NumFlagVariations int32
---@field NumFlagTemplateVariations int32
---@field LowestVariationCount int32
---@field SeedConflicts TArray<FString>
---@field LowestVariations TArray<FString>
FBiolayoutReport = {}



---@class FBiomeData
---@field Biome EBiome
---@field UsedTemplateCardDeck TSet<int32>
---@field AllowedTemplateCardDeck TSet<int32>
---@field BiomeDifficulty int32
---@field RoomPersistenceDatas TArray<FRoomPersistenceData>
FBiomeData = {}



---@class FBiomeRuntimeLandscapeProperties
---@field FalloffDistance float
---@field FalloffSubdivisionCount int32
---@field VertexSmoothCount int32
---@field ThresholdBottom float
---@field bApplyLandscapeOffset boolean
---@field LandscapeOffset float
FBiomeRuntimeLandscapeProperties = {}



---@class FBiomeSpecificScalarParameterValue
---@field ParameterName FName
---@field ParameterValues TMap<EBiome, float>
FBiomeSpecificScalarParameterValue = {}



---@class FBiomeSpecificVectorParameterValue
---@field ParameterName FName
---@field ParameterValues TMap<EBiome, FLinearColor>
FBiomeSpecificVectorParameterValue = {}



---@class FBiomeTransitionData
---@field BiomeBinIndex int32
---@field StartRoomTransform FTransform
---@field BiomeConfig UBiomeConfig
---@field LayoutPath FString
---@field LayoutSeed int32
FBiomeTransitionData = {}



---@class FBiomeTransitionInfo
---@field Config UBiomeConfig
---@field TransitionId FName
---@field TransitionType EBiomeTransitionType
---@field RequestedBiomeBinIndex int32
---@field RequestedStartRoomTransform FTransform
---@field BiomeBootEnvironmentId int32
---@field bInitiallyHidden boolean
---@field bTeleportPlayerToStartRoom boolean
---@field TransitionGuid FString
FBiomeTransitionInfo = {}



---@class FBootLayerConfig
---@field Level TSoftObjectPtr<UWorld>
---@field bShouldStartVisible boolean
---@field RequiredGameTag FName
---@field IgnoredGameTag FName
FBootLayerConfig = {}



---@class FBossEventDescriptor
---@field DescriptionData UBossEventDescriptor_Base
FBossEventDescriptor = {}



---@class FBoundaryData
---@field DistanceThreshold float
---@field GameplayEffects TArray<TSubclassOf<UGameplayEffect>>
FBoundaryData = {}



---@class FBulletAttachedActorData
FBulletAttachedActorData = {}


---@class FBulletDamage
---@field DamageType TSubclassOf<UTouristDamageType>
---@field DamageMultiplier float
---@field DamagePfx FName
---@field damage float
---@field DamageDuration float
---@field MaxDoTStacks int32
---@field InstantlyTickAtStart boolean
---@field DamageDelay float
---@field ImpactType EDamageImpactType
---@field Impulse float
FBulletDamage = {}



---@class FBulletDataPerMaterial
---@field bRicochet boolean
FBulletDataPerMaterial = {}



---@class FBulletLightSettings
---@field IntensityUnits ELightUnits
---@field Intesity float
---@field IndirectLightingIntensity float
---@field AttenuationRadius float
---@field LightFalloffExponent float
---@field bCastShadows boolean
FBulletLightSettings = {}



---@class FBulletPatternEvent
---@field EventType EBulletPatternEventType
---@field Time float
---@field duration float
---@field TargetDirectionType EBulletDirectionType
---@field TargetDirection FVector
---@field TargetValue float
---@field BulletPatternSpawnEvent FBulletPatternSpawnEvent
FBulletPatternEvent = {}



---@class FBulletPatternModifier
---@field BulletCount int32
---@field BulletDelay float
---@field BulletSpawnerRepeatCount int32
---@field BulletSpawnerRepeatDelay float
---@field OnKillEvents TArray<FBulletPatternOnKillSpawnEvent>
FBulletPatternModifier = {}



---@class FBulletPatternOnKillSpawnEvent
---@field KillReasonFlags uint8
---@field SpawnEvent FBulletPatternSpawnEvent
FBulletPatternOnKillSpawnEvent = {}



---@class FBulletPatternSpawnEvent
---@field SpawnDirectionType EBulletDirectionType
---@field SpawnDirection FVector
---@field BulletPattern TSubclassOf<UBulletPatternType>
---@field BulletType TSubclassOf<UBulletType>
---@field BulletSpawner TSubclassOf<UBulletSpawnerType>
---@field BulletPatternSpawnParticleFx FName
---@field BulletPatternSpawnSoundFx UAkAudioEvent
FBulletPatternSpawnEvent = {}



---@class FBulletSizeDamageModifier
---@field InitialSizeMul float
---@field FinalSizeMul float
---@field InitialDamageMul float
---@field FinalDamageMul float
---@field StartInterpolationAt float
---@field InterpolationLength float
---@field bLoopingSinWave boolean
---@field bOverDistance boolean
---@field Speed float
---@field DamageScaler float
FBulletSizeDamageModifier = {}



---@class FBulletSpawnData : FDamageParams
---@field StaticMesh TSubclassOf<UBulletStaticMesh>
---@field StaticMeshRotationSpeed FRotator
---@field FluidData TSubclassOf<UBulletFluidData>
---@field PerMaterialData TMap<EPhysicalSurface, FBulletDataPerMaterial>
---@field MeshScale FVector
---@field BulletPfx FName
---@field BulletPfxPhaseLength float
---@field FizzlePfx FName
---@field MuzzlePfx FName
---@field MuzzleEffect TSubclassOf<AEffectContainer>
---@field CollisionEffect TSubclassOf<AEffectContainer>
---@field DamageEffect TSubclassOf<AEffectContainer>
---@field PiercingEffect TSubclassOf<AEffectContainer>
---@field FizzleEffect TSubclassOf<AEffectContainer>
---@field TravelStartSfx UAkAudioEvent
---@field PassByTailSFX UAkAudioEvent
---@field TravelStopSfx UAkAudioEvent
---@field CollisionSfx UAkAudioEvent
---@field DamageSfx UAkAudioEvent
---@field CharacterCollisionSfx UAkAudioEvent
---@field BounceSfx UAkAudioEvent
---@field AudioRTPCs TMap<FName, float>
---@field AudioClosestInQuadrantRTPC FName
---@field DeadzoneRadiusOverride float
---@field MaxBulletLeadersOverride int32
---@field CullingDistanceOverride float
---@field CollisionsSizeModifier float
---@field bScaleOnCreationDuration float
---@field bScaleOnExpireDuration float
---@field MaxLifetime float
---@field MaxDistance float
---@field Speed float
---@field MaxSpeed float
---@field Acceleration float
---@field Gravity FVector
---@field bIsLockedOn boolean
---@field bExplodeOnExpire boolean
---@field bExplodeOnDeath boolean
---@field bExplodeOnPierce boolean
---@field bKillOnActorDestruct boolean
---@field ExplodeVfx FName
---@field ExplodeEffect TSubclassOf<AEffectContainer>
---@field ExplodeDamageMultiplier float
---@field ExplosionDamageRadius float
---@field Bounce int32
---@field BounceDamping float
---@field BounceCosThreshold float
---@field Slide boolean
---@field SlideCosThreshold float
---@field SizeDamageModifier TArray<FBulletSizeDamageModifier>
---@field TargetTrackingMode EBulletTargetTrackingMode
---@field TargetTrackingTurnSpeed float
---@field TargetTrackingTurnSpeedMin float
---@field TargetTrackingTurnSpeedLerpTime float
---@field TargetTrackingStartTime float
---@field TargetTrackingEndTime float
---@field TrackingAxisMultiplier FVector
---@field TargetTrackingConeAngle float
---@field TargetTrackingConeDist float
---@field bAllowBackTracking boolean
---@field TrackingTarget TWeakObjectPtr<USceneComponent>
---@field BulletActor TSubclassOf<AActor>
---@field AttachedToParentStrength float
---@field AttachedToParentTime float
---@field AttachedToParentFadeTime float
---@field Color FLinearColor
---@field LightPreset EBulletLightPreset
---@field AllowEnemyBulletColorOverride boolean
---@field Tag FName
---@field Priority uint8
---@field FiringEventId int32
FBulletSpawnData = {}



---@class FCachedControllerData
---@field Guid FGuid
---@field isSonyController boolean
---@field ControllerInterface FString
---@field ControllerId int32
---@field inUse boolean
FCachedControllerData = {}



---@class FCachedEnemyTargetValues
---@field DirToTargetActor FVector
---@field DistToTargetActor float
---@field DotToTargetActorView float
---@field DirectionToTargetActorViewForward FVector
---@field bIsTargetDodging boolean
---@field bIsTargetDirectlyVisible boolean
---@field TimeThatTargetWasLastDirectlyVisible float
---@field DodgeEventType EEnemyTargetDodgeEventType
---@field TargetActor AActor
FCachedEnemyTargetValues = {}



---@class FCachedWeaponData
---@field WeaponName FName
---@field TraitsData TArray<FCachedWeaponTraitData>
FCachedWeaponData = {}



---@class FCachedWeaponTraitData
---@field Name FName
---@field UnlockedLevel int32
---@field NextLevelProgress float
FCachedWeaponTraitData = {}



---@class FCameraStateInfo
---@field CurrentState ECameraState
---@field StateChanged boolean
---@field LastFightTime float
FCameraStateInfo = {}



---@class FCategoryMaterializerSpawnInfo
---@field bUseMaterializerSpawnInfo boolean
---@field bMaterializerHasLockdownComponent boolean
---@field bLockdownComponentIsAutoLockdown boolean
---@field bLockdownComponentLocksdownWhenPlayerSeen boolean
---@field EnabledInBiomes int32
---@field MaterializeMethod EMaterializeTriggerMethod
---@field MinSpawnTime int32
---@field MaxSpawnTime int32
---@field MaterializePercentage float
FCategoryMaterializerSpawnInfo = {}



---@class FCategorySpawnInfo
---@field Category FName
---@field Actor TSubclassOf<AActor>
---@field MinAmount int32
---@field MaxAmount int32
---@field weight float
---@field MaterializerSpawnInfo FCategoryMaterializerSpawnInfo
FCategorySpawnInfo = {}



---@class FChallengeModifierSpawnInfo
---@field Name FName
---@field Type EMetaModifierType
---@field ModTags TSet<FName>
---@field ModBlockedTags TSet<FName>
---@field ModAlwaysPairWithTags TSet<FName>
---@field ModPreferPairWithTags TSet<FName>
---@field SpawnArgs TArray<FSpawnArg>
FChallengeModifierSpawnInfo = {}



---@class FCharacterStunSettings
---@field StunDamageMultiplier float
---@field StunRecoverySpeed float
---@field StunRecoveryCooldown float
---@field MinTimeSpentStunned float
---@field PostStunImmunityTime float
---@field HitReactionAnimRequest FAnimationRequestDescriptor
---@field NonBlockingHitReactionAnimRequest FAnimationRequestDescriptor
---@field bSendNonBlockingHitReactionWhenStunned boolean
---@field NonBlockingHitReactionCooldown float
---@field StunEffectContainer TSubclassOf<AEffectContainer>
FCharacterStunSettings = {}



---@class FCharacterStunStatus
---@field StunState ECharacterStunState
---@field TimeSpentStunned float
---@field StunImmunityTime float
---@field MeleeHitsDuringStagger int32
---@field bStunAnimRequestRunning boolean
---@field bStunAnimRequestDelayed boolean
---@field bTriggeredStunAnimRequest boolean
---@field StaggerDamageEvent FTouristDamageEvent
FCharacterStunStatus = {}



---@class FCinematicSequenceBinding
---@field BindingName FName
---@field Actor TWeakObjectPtr<AActor>
---@field ActorReference TSoftObjectPtr<AActor>
---@field ActorTag FName
---@field ActorClass TSubclassOf<AActor>
---@field bAttachmentEnabled boolean
---@field bAttachmentSnapLocation boolean
---@field AttachmentSnapRelativeLocation FVector
---@field bAttachmentSnapRotation boolean
---@field AttachmentSnapRelativeRotation FRotator
---@field bKeepTransform boolean
---@field bKeepUsesMeshTransform boolean
---@field bKeepUsesSocketTransform boolean
FCinematicSequenceBinding = {}



---@class FCitadelLevelGenInfo : FLevelGenInfoBase
---@field CitadelFirstplay boolean
FCitadelLevelGenInfo = {}



---@class FCollectibleBeamColours
---@field health FLinearColor
---@field Weapon FLinearColor
---@field Currency FLinearColor
---@field Other FLinearColor
---@field Curse FLinearColor
---@field CurseNoHologram FLinearColor
---@field Disabled FLinearColor
---@field Story FLinearColor
---@field Consumables FLinearColor
FCollectibleBeamColours = {}



---@class FCollectibleInfo
---@field CollectibleClass TSubclassOf<ACollectibleBase>
---@field CollectibleType ECollectibleType
---@field Price int32
---@field DropWeight float
---@field CollectibleClassName FName
FCollectibleInfo = {}



---@class FCollectibleInfoGroup
---@field TotalSpawnWeight float
---@field Collectibles TArray<FCollectibleInfo>
---@field UsedWeapons TArray<UClass>
FCollectibleInfoGroup = {}



---@class FCommunicationQueueEntry
---@field LoadingId int32
---@field bLoadingTutorial boolean
---@field Notification UNotificationWidget
---@field Tutorial UTouristTutorialWidget
FCommunicationQueueEntry = {}



---@class FConnectorLineData
---@field Horizontal boolean
---@field length float
---@field StartDistance float
---@field direction FVector2D
FConnectorLineData = {}



---@class FCrimsonDesertLevelGenInfo : FLevelGenInfoBase
---@field DesertIntro boolean
---@field TankIntro boolean
---@field CDCave boolean
FCrimsonDesertLevelGenInfo = {}



---@class FCurrentEnemyStatus
---@field AggressionState EAggressionState
---@field TargetActor AActor
---@field RequestedRotations TArray<FSourceRotationPair>
---@field TargetRootRotation FRotator
---@field bAimVectorValid boolean
---@field AimVector FVector
FCurrentEnemyStatus = {}



---@class FCurrentPlayerStatus
---@field Velocity FVector
---@field WalkSpeed float
---@field WalkSpeedForward float
---@field WalkSpeedRight float
---@field bWantsToMove boolean
---@field MovementInputWorldSpace FVector
---@field LookAtTarget FVector
---@field CameraDot float
---@field AimingDeltaHorizontal float
---@field AimingDeltaVertical float
---@field bIsAiming boolean
---@field AimAlpha float
---@field bJumpStarted boolean
---@field bDoubleJumpStarted boolean
---@field bIsDashing boolean
---@field bWasDashInterrupted boolean
---@field bIsPerfectDodging boolean
---@field bIsSprinting boolean
---@field bIsLedgeVaulting boolean
---@field bIsHookShotting boolean
---@field HookShotEndLocation FVector
---@field HookShotPhase float
---@field bIsInMelee boolean
---@field bIsMeleeMontageActive boolean
---@field bDamageReceived boolean
---@field bIsGrounded boolean
---@field bIsReloading boolean
---@field bShotFired boolean
---@field bIsAlive boolean
---@field DownedState EDownedState
---@field ChargePistolCharging float
---@field CurrentGunType EGunType
---@field CurrentGunStockType EGunStockType
---@field CurrentGunReloadTime float
---@field bTeleportDeparting boolean
---@field bTeleportArriving boolean
---@field WallDetect TArray<FWallDetectResult>
---@field ClosestValidWallDetectIndex int32
---@field GroundMovementType EGroundMovementType
---@field CurrentSanityState ASanityState
---@field bRotateTowardsAimDir boolean
---@field DesiredRotation FRotator
---@field bTurnOnSpot boolean
---@field bTurnOnSpotCW boolean
---@field bIsScanning boolean
---@field ScanningTarget UDiscoverableComponent
---@field bIsRevivingCharacter boolean
---@field MovementInputAndVelocityDirDiff float
---@field bHardTurning boolean
---@field bHardTurnCW boolean
---@field bInCinematic boolean
---@field bInSandstorm boolean
---@field bUnderwater boolean
---@field bInPlayerInteract boolean
---@field bMovementAllowed boolean
---@field bMovementAbilitiesAllowed boolean
---@field SlopeAngleForward float
---@field SlopeAngleRight float
---@field FloorDistance float
---@field FloorNormal FVector
---@field FloorImpactPoint FVector
FCurrentPlayerStatus = {}



---@class FCustomParticleColorOverride : FParticleColorOverride
---@field Name FName
FCustomParticleColorOverride = {}



---@class FDamageParams
---@field ImpactPfx FName
---@field CollisionRadius float
---@field CollisionProfile FName
---@field CollisionChannel ECollisionChannel
---@field bSecondaryCollision boolean
---@field SecondaryCollisionRadiusMultiplier float
---@field SecondaryCollisionProfile FName
---@field SecondaryCollisionChannel ECollisionChannel
---@field DamageTarget uint8
---@field DamageMultiplier float
---@field damage TArray<FBulletDamage>
---@field DamageRadius float
---@field Piercing int32
---@field bPierceBlocking boolean
---@field PiercedDamageMultiplier float
---@field bIgnoreSourceHits boolean
---@field bIgnoreInstigatorActorHits boolean
---@field Source TWeakObjectPtr<AActor>
---@field SourceClass TSubclassOf<AActor>
---@field Instigator TWeakObjectPtr<AController>
---@field InstigatorClass TSubclassOf<AController>
---@field InstigatorActor TWeakObjectPtr<AActor>
---@field InstigatorActorClass TSubclassOf<AActor>
---@field bBeam boolean
FDamageParams = {}



---@class FDamageShapeAudioTracking
---@field Emitters TArray<UAkComponent>
FDamageShapeAudioTracking = {}



---@class FDamageShapeDamage
---@field DamageType TSubclassOf<UTouristDamageType>
---@field DamageMultiplier float
---@field DamagePfx FName
FDamageShapeDamage = {}



---@class FDamageShapeSplinePoint
FDamageShapeSplinePoint = {}


---@class FDecorationEntry
---@field DecorationTitle FText
---@field Decoration TSoftObjectPtr<UTexture2D>
---@field Color FLinearColor
---@field CustomBounds FVector2D
FDecorationEntry = {}



---@class FDeltaCorrectionInstance
---@field Action UCharacterAnimAction_Montage
---@field Target FRootMotionTarget
---@field ProcessedTarget FRootMotionDelta
---@field CorrectionWindow FAnimDeltaCorrectionWindow
---@field RootMotionStretchFactor float
---@field SpeedPreservationSpeedModifier float
---@field AverageLocationDelta float
---@field AverageRotationDelta float
---@field ConsumedRootMotionDelta FRootMotionDelta
FDeltaCorrectionInstance = {}



---@class FDespawnedActorInfo
---@field ActorClass TSubclassOf<AActor>
---@field ActorTransform FTransform
---@field RoomIndex int32
---@field EnemyID uint32
---@field Owner TWeakObjectPtr<AActor>
---@field StateVersion int32
---@field State TArray<uint8>
---@field SerializationCallCount int32
---@field UniqueActorGUID FGuid
---@field bConsiderForSuspendAndResume boolean
---@field bConsiderForPersistence boolean
---@field bCanBeDespawned boolean
---@field bLoadedFromAPackage boolean
---@field bActorWasInNeverLODLevel boolean
---@field AngenSpawnRoomIndex int32
---@field bMinimapIconWasVisible boolean
---@field IconGUID FGuid
FDespawnedActorInfo = {}



---@class FDetachedMinimapIconSettings
---@field IconSettings FMinimapIconSettings
---@field DetachedIconGuid FGuid
---@field Transform FTransform
---@field ObjectType EMinimapObjectType
---@field bVisible boolean
---@field bValid boolean
FDetachedMinimapIconSettings = {}



---@class FDetermineLootProperties
---@field LootGroup ECollectibleDropGroup
---@field SpawnPolicy ECollectibleSpawnPolicy
---@field bExcludeChildClasses boolean
---@field bTreatAllAsUnlocked boolean
---@field bAllowUsedMetaModifiers boolean
---@field bModifyUsedEntries boolean
---@field ExcludeClasses TSet<TSubclassOf<AActor>>
---@field RequiredTags TSet<FName>
---@field BlockedTags TSet<FName>
FDetermineLootProperties = {}



---@class FDifficultyEffect : FDifficultyElement
---@field effectType EDifficultyEffectType
---@field Condition FDifficultyEffectCondition
---@field bMultiplierMode boolean
---@field BaseValue float
---@field StepValue float
---@field AllowedActorClasses TSet<TSoftClassPtr<AActor>>
---@field AllowedActorTags TSet<FName>
---@field BlockedActorTags TSet<FName>
---@field FeatureTags TSet<FName>
---@field PlayerFeatureTags TSet<FName>
FDifficultyEffect = {}



---@class FDifficultyEffectCondition
---@field ConditionType EDifficultyEffectConditionType
---@field ConditionValue int32
FDifficultyEffectCondition = {}



---@class FDifficultyEffectLimit : FDifficultyElement
---@field effectType EDifficultyEffectType
---@field bMultiplierMode boolean
---@field MinValue float
---@field MaxValue float
FDifficultyEffectLimit = {}



---@class FDifficultyElement
---@field Name FName
---@field Tags TSet<FName>
---@field RequiredTags TSet<FName>
---@field IgnoredTags TSet<FName>
---@field BlockedTags TSet<FName>
---@field GameTags TSet<FName>
---@field RequiredGameTags TSet<FName>
---@field IgnoredGameTags TSet<FName>
FDifficultyElement = {}



---@class FDifficultyEvent
---@field RequiredTags TSet<FName>
---@field IgnoredTags TSet<FName>
---@field Bullet TSubclassOf<UBulletType>
---@field BulletPattern TSubclassOf<UBulletPatternType>
FDifficultyEvent = {}



---@class FEliteModifierGroupEntry
---@field Modifier UEliteModifier
---@field weight float
FEliteModifierGroupEntry = {}



---@class FEliteModifierSlot
---@field Modifiers UEliteModifierSlotFiller
---@field ChosenModifier UEliteModifier
FEliteModifierSlot = {}



---@class FEnemyAggressionInfo
---@field AggressionState EAggressionState
---@field bDecayWithTime boolean
---@field DecayTime float
---@field StateToDecayTo EAggressionState
FEnemyAggressionInfo = {}



---@class FEnemyAggressionTicketManager : FEnemyTargetedTicketManager
---@field PerGroupScoringFunctions TMap<EAggressionGroup, FTicketScoreFunctionArray>
---@field MaxAggroedEnemies TMap<EAggressionGroup, int32>
FEnemyAggressionTicketManager = {}



---@class FEnemyAttackPhaseData
---@field phase EAttackPhase
---@field duration float
---@field DodgeWindowLengthOverride float
---@field CurrentTime float
FEnemyAttackPhaseData = {}



---@class FEnemyAttackSettings
---@field HitboxAttacks TArray<FHitboxAttack>
FEnemyAttackSettings = {}



---@class FEnemyAttackTicketGroupSettings
---@field GroupRedistributionDelay float
---@field SingleEnemyRedistributionDelay float
---@field MaxTickets int32
---@field MaxTicketFunction UEnemyMaxTicketFunction
---@field ScoringFunctions TArray<UEnemyTicketScoringFunction>
---@field bBlockSimultaneousAttacks boolean
---@field bAutoReleaseTicket boolean
---@field bAllowIfEnemyHasOtherTicket boolean
FEnemyAttackTicketGroupSettings = {}



---@class FEnemyAttackTicketManager : FEnemyTargetedTicketManager
---@field PerTypeSettings TMap<EAttackTicketType, FEnemyAttackTicketGroupSettings>
---@field PerTypeScoringFunctions TMap<EAttackTicketType, FTicketScoreFunctionArray>
---@field UnusedTicketTimeout float
FEnemyAttackTicketManager = {}



---@class FEnemyAudioThreatLevel
---@field EnterThreshold float
---@field ExitThreshold float
FEnemyAudioThreatLevel = {}



---@class FEnemyAudioThreatSettings
---@field LevelSettings TArray<FEnemyAudioThreatLevel>
---@field GroupThreatSettings TArray<FEnemyAudioThreatSettingsGroup>
FEnemyAudioThreatSettings = {}



---@class FEnemyAudioThreatSettingsEntry
---@field BaseThreatValuePerEnemy float
---@field MaxTotalThreatFromEnemyType float
---@field MaxThreatDistance float
---@field ZeroThreatDistance float
---@field LineOfSightDecayStartTime float
---@field LineOfSightDecayEndTime float
FEnemyAudioThreatSettingsEntry = {}



---@class FEnemyAudioThreatSettingsGroup
---@field Enemies TSet<TSoftClassPtr<AEnemyBase>>
---@field Settings FEnemyAudioThreatSettingsEntry
FEnemyAudioThreatSettingsGroup = {}



---@class FEnemyBehaviorConditionSettings
---@field bUseDistToTarget boolean
---@field EnterMaxDistToTarget float
---@field ExitMinDistToTarget float
---@field bUseHealthRange boolean
---@field HealthRangeMin float
---@field HealthRangeMax float
---@field bUseVisibility boolean
---@field bUseTrueVisibility boolean
---@field MinTargetVisibilityTime float
---@field bAllowWhileUsingNavLink boolean
---@field bAllowWhileOwnerStunned boolean
---@field CustomConditions TArray<UEnemyBehaviorConditionBase>
FEnemyBehaviorConditionSettings = {}



---@class FEnemyBehaviorRunSettings
---@field bUseMaxActiveTime boolean
---@field MaxActiveTime float
---@field bUsePostExitCooldown boolean
---@field PostExitCooldown float
FEnemyBehaviorRunSettings = {}



---@class FEnemyCategorizedTicketSets
---@field TicketSets TMap<uint8, FEnemyTargetTicketSet>
FEnemyCategorizedTicketSets = {}



---@class FEnemyDeathParticleAudioParams
---@field CollisionEventRadius float
---@field ContinuousEventRadius float
---@field VelocityThreshold float
---@field EventAmount float
---@field bDebugDraw boolean
FEnemyDeathParticleAudioParams = {}



---@class FEnemyEliteSettings
---@field ModifierSlots TArray<FEliteModifierSlot>
FEnemyEliteSettings = {}



---@class FEnemyGlobalTagCooldown
---@field GameplayTag FGameplayTag
---@field Time float
FEnemyGlobalTagCooldown = {}



---@class FEnemyHealthSettings
---@field MaxHealth float
---@field bCanBeStunned boolean
---@field StunSettings FCharacterStunSettings
---@field SoftDamageCapSettings FSoftDamageCapSettings
FEnemyHealthSettings = {}



---@class FEnemyLocalDamageMultiplierSettings
---@field LocalDamageMultipliers TArray<FLocalDamageMultiplier>
FEnemyLocalDamageMultiplierSettings = {}



---@class FEnemyMessage
---@field Sender AEnemyBase
---@field Receivers TArray<AEnemyBase>
---@field RelevantActors TArray<AActor>
---@field MsgType EEnemyMessageType
FEnemyMessage = {}



---@class FEnemyMultiplayerScalingSettings
---@field bOverrideDefaultHealthScaling boolean
---@field HealthScalingOverride float
---@field bOverrideDefaultDamageScaling boolean
---@field DamageScalingOverride float
FEnemyMultiplayerScalingSettings = {}



---@class FEnemyParticleColorOverrideSettings
---@field Colors TMap<EEnemyParticleColorType, FParticleColorOverride>
---@field CustomColors TArray<FCustomParticleColorOverride>
---@field bDisableMeleeParticles boolean
FEnemyParticleColorOverrideSettings = {}



---@class FEnemyRotationPivotingSettings
---@field bEnablePivoting boolean
---@field bRequireOneGroundedLimbToPivot boolean
FEnemyRotationPivotingSettings = {}



---@class FEnemyRotationRequest
---@field SourceId EEnemyRotationSource
---@field Rotation FRotator
---@field TargetActor AActor
---@field TargetVectorValid boolean
---@field TargetVector FVector
---@field duration float
FEnemyRotationRequest = {}



---@class FEnemyRotationSettings
---@field SourceId EEnemyRotationSource
---@field RotationSpeed float
---@field bApplyToCharacterRoot boolean
---@field IgnoreRequestsSmallerThan float
---@field MidRequestRotationThreshold float
---@field RotationTargetPredictionFactor float
---@field Priority int32
FEnemyRotationSettings = {}



---@class FEnemySpawnVisualSettings
---@field SpawnVisuals TArray<FSpawnVisual>
FEnemySpawnVisualSettings = {}



---@class FEnemyTargetTicketSet
---@field MaxTickets int32
---@field MaxTicketsFrame int32
---@field PendingTickets TArray<FPendingTicket>
---@field ActiveTickets TArray<FEnemyTicket>
---@field CachedTicketHolders TSet<AEnemyBase>
---@field LowestTicketHolderScore float
---@field LowestTicketHolderIndex int32
---@field LastTicketAssignedTime float
FEnemyTargetTicketSet = {}



---@class FEnemyTargetedTicketManager : FEnemyTicketManagerBase
---@field TicketRequests TSet<FTicketRequest>
---@field TicketHolderLookup TMap<ATouristCharacter, FEnemyCategorizedTicketSets>
FEnemyTargetedTicketManager = {}



---@class FEnemyTickManager
---@field EnemyTickTrackerList TArray<FEnemyTickTrackerEntry>
---@field PendingEnemyRemovals TArray<AEnemyBase>
FEnemyTickManager = {}



---@class FEnemyTickTrackerEntry
---@field Enemy AEnemyBase
FEnemyTickTrackerEntry = {}



---@class FEnemyTicket
---@field Enemy AEnemyBase
---@field State EEnemyTicketState
---@field Time float
FEnemyTicket = {}



---@class FEnemyTicketManagerBase
---@field TicketUpdateInterval float
---@field ScoringFunctions TArray<UEnemyTicketScoringFunction>
---@field EnemyManager AEnemyManager
---@field TicketUpdateTimer float
FEnemyTicketManagerBase = {}



---@class FEnemyTouchDamageSettings
---@field bAllowTouchDamage boolean
---@field bDamagePlayer boolean
---@field bDamageEnemies boolean
---@field VelocityThreshold float
---@field AllowDamageOverrideTimer float
FEnemyTouchDamageSettings = {}



---@class FEnemyVanguardTicketGroupSettings
---@field LostTargetCooldown float
---@field DeathCooldown float
---@field MaxTickets int32
---@field MaxTicketFunction UEnemyMaxTicketFunction
---@field ScoringFunctions TArray<UEnemyTicketScoringFunction>
FEnemyVanguardTicketGroupSettings = {}



---@class FEnemyVanguardTicketManager : FEnemyTargetedTicketManager
---@field PerTypeSettings TMap<EVanguardTicketType, FEnemyVanguardTicketGroupSettings>
---@field PerTypeScoringFunctions TMap<EVanguardTicketType, FTicketScoreFunctionArray>
FEnemyVanguardTicketManager = {}



---@class FEnemyWeaponInfo
---@field WeaponName FName
---@field WeaponType TSubclassOf<AGunBase>
---@field AttachToSocketName FName
---@field Weapon TWeakObjectPtr<AGunBase>
FEnemyWeaponInfo = {}



---@class FEnemyWeaponSettings
---@field Weapons TArray<FEnemyWeaponInfo>
FEnemyWeaponSettings = {}



---@class FEnvironmentAttributesInfo
---@field Rain UEnvironmentRainDataAsset
---@field wind UEnvironmentWindDataAsset
---@field Fog UEnvironmentFogDataAsset
---@field Light UEnvironmentLightDataAsset
---@field Sky UEnvironmentSkyDataAsset
FEnvironmentAttributesInfo = {}



---@class FEnvironmentDataElement
---@field ID int32
---@field Priority int32
---@field AttributesAsset TWeakObjectPtr<UEnvironmentAttributesAsset>
---@field RainAsset TWeakObjectPtr<UEnvironmentRainDataAsset>
---@field WindAsset TWeakObjectPtr<UEnvironmentWindDataAsset>
---@field FogAsset TWeakObjectPtr<UEnvironmentFogDataAsset>
---@field LightAsset TWeakObjectPtr<UEnvironmentLightDataAsset>
---@field SkyAsset TWeakObjectPtr<UEnvironmentSkyDataAsset>
FEnvironmentDataElement = {}



---@class FFakeEnemyLightSettings
---@field MaterialParameterCollection UMaterialParameterCollection
---@field VectorValues TArray<FBiomeSpecificVectorParameterValue>
FFakeEnemyLightSettings = {}



---@class FFluidMeshData
FFluidMeshData = {}


---@class FFlyingDriftSettings
---@field DriftPeriod FVector2D
---@field DriftStrength FVector2D
FFlyingDriftSettings = {}



---@class FFlyingMovementSettings
---@field MaxSpeedXY float
---@field AccelerationXY float
---@field DecelerationXY float
---@field MaxSpeedZ float
---@field AccelerationZ float
---@field DecelerationZ float
---@field DriftSettings FFlyingDriftSettings
---@field TiltSettings FFlyingTiltSettings
FFlyingMovementSettings = {}



---@class FFlyingTiltSettings
---@field SpeedThreshold float
---@field RotationSpeedThreshold float
---@field AccelerationThreshold float
---@field bApplyTiltAsDirectRotation boolean
---@field TiltAngle float
---@field TiltLerpSpeed float
FFlyingTiltSettings = {}



---@class FFocusAimCameraSettings
---@field CameraData FHMQCameraData
---@field AlphaOutEasingExp float
---@field AlphaOutEasingExp_AltFireButton float
---@field AlphaOutDuration_AltFireButton float
FFocusAimCameraSettings = {}



---@class FFootData
---@field FootLockValue float
---@field SockectLocation FVector
---@field TraceHit FHitResult
---@field bInFront boolean
---@field IKOffset FVector
---@field LimitsMin FVector
---@field LimitsMax FVector
FFootData = {}



---@class FFriendWidgetList
---@field FriendWidgets TArray<USocialInviteItemWidget>
FFriendWidgetList = {}



---@class FGameActivityParams
---@field Params TMap<FName, FString>
FGameActivityParams = {}



---@class FGameLanguageDataTableRow : FTableRowBase
---@field OptionText FText
---@field PreviewText FText
---@field LanguageCode FString
---@field LocaleCode FString
---@field Font FName
FGameLanguageDataTableRow = {}



---@class FGameTransitionScreenRepState
---@field Mode EGameTransitionMode
---@field ReadyState int32
---@field State EGameTransitionScreenState
---@field BiomeConfig TWeakObjectPtr<UBiomeConfig>
---@field bHasBiomeTransition boolean
---@field BiomeTransitionType EBiomeTransitionType
---@field BiomeTransitionId FName
---@field bMultiplayerTransition boolean
FGameTransitionScreenRepState = {}



---@class FGraphicsPreset
---@field AntiAliasQuality int32
---@field ShadowQuality int32
---@field TextureQuality int32
---@field LODQuality int32
---@field VolumetricFog int32
---@field ReflectionQuality int32
---@field LightingQuality int32
---@field AmbientOcclusion int32
---@field ParticleQuality int32
FGraphicsPreset = {}



---@class FGridGenGeneratorSettings
---@field room_weight_min float
---@field room_weight_pow float
---@field big_room_count int32
---@field big_room_placement_size int32
---@field random_shaped_room_percent float
---@field remove_doors_percent float
---@field map_room_border_size int32
---@field total_start_end_times int32
---@field allow_reuse_of_single_cell_rooms boolean
---@field dist_between_loop_rooms int32
FGridGenGeneratorSettings = {}



---@class FGuaranteedTickRequest
FGuaranteedTickRequest = {}


---@class FGunClipUpgrades
---@field MaxBullets float
---@field OverheatingReloadTimeActive float
---@field OverheatingReloadTimePassive float
---@field ReloadingReloadTime float
FGunClipUpgrades = {}



---@class FGunFiringRotModifierUpgrades
---@field SimpleSpreadPitch float
---@field SimpleSpreadYaw float
---@field SimpleSpreadAccurateSpreadMultiplier float
FGunFiringRotModifierUpgrades = {}



---@class FGunSlotUpgrades
---@field Slots TArray<TSubclassOf<UGunSlotUpgrade>>
FGunSlotUpgrades = {}



---@class FGunUpgrades
---@field FireRateModifier float
---@field FireRateDelta float
---@field DamageModifier float
---@field DamageDelta float
---@field DamageList TArray<FBulletDamage>
---@field SizeDamageModifier TArray<FBulletSizeDamageModifier>
---@field BulletSpeedModifier float
---@field BulletSpeedDelta float
---@field BulletMaxSpeedModifier float
---@field BulletMaxSpeedDelta float
---@field Acceleration float
---@field BulletSizeModifier float
---@field BulletSizeDelta float
---@field Piercing int32
---@field Bounce int32
---@field DamageRadius float
---@field TargetTrackingMode EBulletTargetTrackingMode
---@field TargetTrackingTurnSpeed float
---@field Gravity FVector
---@field BarrelType TSubclassOf<UGunBarrel>
---@field BulletType TSubclassOf<UBulletType>
---@field FiringRotModifierUpgrades FGunFiringRotModifierUpgrades
---@field ClipUpgrades FGunClipUpgrades
---@field BulletPattern TSubclassOf<UBulletPatternType>
---@field BulletPatternModifier FBulletPatternModifier
---@field OverwriteBulletColor boolean
---@field BulletColor FColor
---@field CollisionEffectOverride TSubclassOf<AEffectContainer>
---@field MuzzleEffectOverride TSubclassOf<AEffectContainer>
---@field FizzleEffectOverride TSubclassOf<AEffectContainer>
---@field ProficiencyBullet TSubclassOf<UBulletType>
---@field ProficiencyBulletPattern TSubclassOf<UBulletPatternType>
FGunUpgrades = {}



---@class FHUDDetailsData : FTableRowBase
---@field bCanInteract boolean
---@field bCanInteractSecondary boolean
---@field Title FText
---@field Prompt FText
---@field PromptSecondary FText
---@field Description FText
---@field KeyboardDescription FText
---@field Price int32
---@field Icon TSoftObjectPtr<UTexture2D>
---@field Widget TSoftClassPtr<UUserWidget>
---@field BlockedInfos TArray<FText>
---@field ExtendedData UObject
FHUDDetailsData = {}



---@class FHealthComponentSaveData
---@field MaxHealth float
---@field health float
FHealthComponentSaveData = {}



---@class FHitBoxShapeData
---@field OldPosition FVector
---@field OldRotation FQuat
FHitBoxShapeData = {}



---@class FHitReactionBone
---@field Bone FBoneReference
---@field RotationWeightCurve UCurveFloat
---@field CurveMultiplier float
---@field CurveTimeMultiplier float
---@field CurveTimeOffset float
---@field MinRotationOffset FRotator
---@field MaxRotationOffset FRotator
---@field CachedFrameRotationOffset FQuat
FHitReactionBone = {}



---@class FHitReactionEvent
---@field bIsAreaDamage boolean
---@field ImpactType EDamageImpactType
---@field LocalHitPoint FVector
---@field MeshSpaceHitPoint FVector
---@field LocalHitDirection FVector
---@field MeshSpaceHitDirection FVector
---@field Impulse float
---@field KnockdownImpulse float
---@field KnockdownAngle float
---@field damage float
---@field EventTime float
FHitReactionEvent = {}



---@class FHitReactionInstance
---@field RotationAxes FRotator
---@field phase float
FHitReactionInstance = {}



---@class FHitboxAttack
---@field AttackName FName
---@field HitboxGroups TArray<FName>
---@field duration float
---@field ImpactSound UAkAudioEvent
---@field DamageDescriptors_OLD_USE_DAMAGESLIST TArray<FTouristDamageDescriptor>
---@field DamagesList TArray<FMeleeDamage>
---@field bUseDamageTarget boolean
---@field DamageTarget EDamageTarget
---@field PostDamageCooldown float
---@field CriticalDashDistance float
---@field bSweepTrace boolean
---@field bOnlyHitOneActor boolean
FHitboxAttack = {}



---@class FHitboxGroup
---@field GroupName FName
---@field HitboxComponents TArray<FComponentReference>
---@field CachedShapeComponents TArray<UShapeComponent>
FHitboxGroup = {}



---@class FHookShotAbilitySettings
---@field bInvulnerableDuringHookShot boolean
---@field PostInvulnerabilityTime float
---@field BeginMuzzleEffect TSubclassOf<AEffectContainer>
---@field EndMuzzleEffect TSubclassOf<AEffectContainer>
---@field ImpactEffect TSubclassOf<AEffectContainer>
---@field HookShotShootSound UAkAudioEvent
---@field HookShotPullingLoopSound UAkAudioEvent
---@field HookShotDisengageSound UAkAudioEvent
---@field HookshotMeshOffsetCurve UCurveFloat
FHookShotAbilitySettings = {}



---@class FHouseManagerData
---@field InHouse boolean
---@field bBeenInHouse boolean
---@field HouseLocked boolean
FHouseManagerData = {}



---@class FIceComplexLevelGenInfo : FLevelGenInfoBase
---@field IceFirstPlay boolean
FIceComplexLevelGenInfo = {}



---@class FImmobilizedSanityDelta
---@field Frequency float
---@field SanityDelta FMinMaxFloat
FImmobilizedSanityDelta = {}



---@class FImpactTableRow : FTableRowBase
---@field ImpactName FText
---@field CPU int32
---@field GPU int32
FImpactTableRow = {}



---@class FInputTriggerData
---@field Settings FInputTriggerSettings
---@field StateIndex int32
---@field TriggerValue float
FInputTriggerData = {}



---@class FInputTriggerEffect
---@field Type ETriggerEffectType
---@field StartPosition uint8
---@field Strength uint8
---@field WeaponStartPosition uint8
---@field WeaponEndPosition uint8
---@field VibrationFrequency uint8
FInputTriggerEffect = {}



---@class FInputTriggerSettings
---@field RTPCName FName
---@field States TArray<FInputTriggerState>
FInputTriggerSettings = {}



---@class FInputTriggerState
---@field EnterThreshold float
---@field ExitThreshold float
---@field TriggerEffect FInputTriggerEffect
---@field StateFlags uint8
---@field bActive boolean
FInputTriggerState = {}



---@class FInteractableFirstPersonData
---@field InteractDistance float
---@field InteractRadius float
---@field InteractAngle float
---@field ControlRotationMinYaw float
---@field ControlRotationMaxYaw float
---@field ControlRotationAngle float
FInteractableFirstPersonData = {}



---@class FInteractableForCharacter
---@field Score float
---@field Interactable UObject
---@field CollisionComponent UPrimitiveComponent
FInteractableForCharacter = {}



---@class FInteractableThirdPersonData
---@field CharacterAngle float
---@field CharacterAngleBaseOffset float
---@field ControlRotationAngle float
FInteractableThirdPersonData = {}



---@class FInteractionArgs
---@field Mode EInteractionMode
---@field ModeSecondary EInteractionMode
---@field bTitleOverride boolean
---@field Title FText
---@field bDescriptionOverride boolean
---@field Description FText
---@field bPromptOverride boolean
---@field Prompt FText
---@field bPromptSecondaryOverride boolean
---@field PromptSecondary FText
---@field BlockedInfos TArray<FText>
---@field bExtendedDataOverride boolean
---@field ExtendedData UObject
---@field bDoNotInterceptSecondaryInteractInput boolean
FInteractionArgs = {}



---@class FInventoryGameplayAbility
---@field AbilityName FName
---@field AbilityLevel int32
FInventoryGameplayAbility = {}



---@class FInventorySaveData
---@field PendingUnlockItems TArray<FName>
---@field UnlockedItems TArray<FName>
---@field NewItems TArray<FName>
---@field MoneyBank FLargeInteger
---@field Keys TArray<int32>
---@field KeysBank TArray<int32>
---@field UnlockedMetaModifiers TArray<FName>
---@field NewMetaModifiers TArray<FName>
---@field UsedMetaModifiers TArray<FName>
---@field FutureMetaModifiers TArray<FName>
---@field GameplayAbilities TArray<FInventoryGameplayAbility>
---@field WeaponTraits TArray<FInventoryWeaponTraitData>
FInventorySaveData = {}



---@class FInventorySkillData
---@field nodes TArray<FSkillNodeInfo>
FInventorySkillData = {}



---@class FInventoryThingDestruction
---@field Type EInventoryThingDestructionType
---@field MetaModifierCodeName FName
---@field WeaponUpgradeClass TSubclassOf<UGunSlotUpgrade>
---@field WeaponClass TSubclassOf<APlayerWeapon>
---@field value float
FInventoryThingDestruction = {}



---@class FInventoryWeaponTraitData
---@field Name FName
---@field UnlockedLevel int32
---@field NextLevelProgress int32
FInventoryWeaponTraitData = {}



---@class FInviteFriendDetail
---@field DisplayName FText
---@field ProfileID UTexture2D
---@field Status FText
---@field GamePlatform EGamePlatform
---@field Rank int32
FInviteFriendDetail = {}



---@class FJudgeBossOcclusionData
---@field Occluder AActor
FJudgeBossOcclusionData = {}



---@class FJudgeBossPlatformData
FJudgeBossPlatformData = {}


---@class FJudgeBossPlatformOscillationCurveData
---@field curve UCurveFloat
---@field MinRndTime float
---@field MaxRndTime float
---@field bPitchOrRoll boolean
FJudgeBossPlatformOscillationCurveData = {}



---@class FKeyConflicts
---@field ConflictActions TArray<FActionDirection>
FKeyConflicts = {}



---@class FKeyMappingPresets
---@field InputActionPriority TArray<FKeyboardActionPresets>
---@field InputAxisPriority TArray<FKeyboardAxisPresets>
FKeyMappingPresets = {}



---@class FKeyboardActionPresets
---@field Action FName
---@field InputAction TArray<FActionMappingPriority>
FKeyboardActionPresets = {}



---@class FKeyboardAxisPresets
---@field Action FName
---@field bIsPositive boolean
---@field InputAction TArray<FAxisMappingPriority>
FKeyboardAxisPresets = {}



---@class FKillComboContextInfo
---@field CurrentInfo FKillComboInfo
---@field NextKillCount int32
FKillComboContextInfo = {}



---@class FKillComboInfo : FTableRowBase
---@field KillCount int32
---@field CollectiblesToSpawn int32
FKillComboInfo = {}



---@class FLanguageCodesDataTableRow : FTableRowBase
---@field OptionText FText
---@field PreviewText FText
---@field LanguageCode FString
---@field SubtitleRegion ESKURegion
---@field bAudio boolean
FLanguageCodesDataTableRow = {}



---@class FLedgeDropData
---@field EdgeLocation FVector
---@field EdgeNormal FVector
---@field EdgeDistance float
---@field YawToEdge float
---@field DropLocation FVector
---@field DropDistance float
---@field DropHeight float
FLedgeDropData = {}



---@class FLevelChunk
---@field LevelName FString
---@field FullLevel ULevelStreamingDynamic
---@field FullLevelEventProxy ULevelStreamingEventProxy
---@field HLODLevel ULevelStreamingDynamic
---@field NeverLODs boolean
---@field bPendingVisibility boolean
FLevelChunk = {}



---@class FLevelDressing
---@field LevelName FString
---@field DressingType EDressingType
---@field AllowedInBiomes int32
---@field RequiredGameplayFlags TArray<FString>
---@field ForbiddenGameplayFlags TArray<FString>
---@field RequiredGameInstanceFlags TSet<FName>
---@field ForbiddenGameInstanceFlags TSet<FName>
---@field OccurrenceWeight float
FLevelDressing = {}



---@class FLevelGenBoxVolume : FLevelGenVolumeData
---@field dimensions FVector4
FLevelGenBoxVolume = {}



---@class FLevelGenCapsuleVolume : FLevelGenVolumeData
---@field dimensions FVector4
FLevelGenCapsuleVolume = {}



---@class FLevelGenConvexVolume : FLevelGenVolumeData
---@field Planes TArray<FVector4>
FLevelGenConvexVolume = {}



---@class FLevelGenFocusObject
---@field GridObject USpatialGridObject
---@field CurrentCentre FVector
---@field LastPlayerPos FVector
---@field Description FName
---@field CurrMode EStreamerFocusMode
---@field NextMode EStreamerFocusMode
---@field bPlayerObject boolean
FLevelGenFocusObject = {}



---@class FLevelGenInfoBase : FTableRowBase
---@field NumberOfMaps int32
---@field bChallengeMode boolean
FLevelGenInfoBase = {}



---@class FLevelGenLODBuildParams
---@field DiffuseSize int32
---@field NormalSize int32
---@field VoxelSize int32
---@field GenerationType LevelLODGenerationType
FLevelGenLODBuildParams = {}



---@class FLevelGenMapData
---@field Locators TArray<FLevelGenMapLocatorInstance>
---@field LocatorSpawnExclusions TArray<FTransform>
---@field DoorSpecialCaseSuspendSerializations TMap<FVector, FDespawnedActorInfo>
FLevelGenMapData = {}



---@class FLevelGenMapDoorInstance
---@field Door ULevelGenRoomDoor
---@field RoomIndex int32
---@field RoomIndexDest int32
---@field Transform FMatrix
FLevelGenMapDoorInstance = {}



---@class FLevelGenMapLoadingOverlayParams
FLevelGenMapLoadingOverlayParams = {}


---@class FLevelGenMapLocatorInstance
---@field Locator ULevelGenRoomLocator
---@field RoomIndex int32
---@field ReferredRoomIndex int32
---@field Transform FTransform
---@field SelectedActorClass TSoftClassPtr<AActor>
---@field CollisionHandlingMethod ESpawnActorCollisionHandlingMethod
---@field SpawnBehavior ELevelGenLocatorSpawnBehavior
FLevelGenMapLocatorInstance = {}



---@class FLevelGenMapRoomInstance
---@field Room ULevelGenRoomInfo
---@field RoomTrn FMatrix
---@field Transform FTransform
---@field InvTransform FTransform
---@field ParentRoom int32
---@field bShouldInitialLoad boolean
---@field collision FMeshCollision
---@field MinimapMesh FMinimapMeshData
---@field LandscapeVertices TArray<FVector>
---@field LandscapeVertexCounts TArray<int32>
---@field LandscapeProperties TArray<FAngenLandscapeModifierProperties>
---@field GenerationTags TSet<FName>
---@field DebugColor FColor
FLevelGenMapRoomInstance = {}



---@class FLevelGenMapRoomObjectDataHandle
---@field ID int32
---@field RoomIndex int32
---@field SourceComp TWeakObjectPtr<ULevelGenRoomObjectDataComponent>
---@field SourceGuid FGuid
FLevelGenMapRoomObjectDataHandle = {}



---@class FLevelGenMapRoomObjectDataInstance
---@field ObjectData ULevelGenRoomObjectData
---@field RoomIndex int32
---@field Transform FTransform
---@field Parameters TMap<FName, FString>
---@field Comp TWeakObjectPtr<ULevelGenRoomObjectDataComponent>
---@field ActorEvents TArray<FName>
FLevelGenMapRoomObjectDataInstance = {}



---@class FLevelGenParameters
---@field bInitialized boolean
---@field randomSeed int32
---@field InventoryData FInventorySaveData
---@field GameState FPersistentGameState
FLevelGenParameters = {}



---@class FLevelGenPrecalculatedMap
---@field seed int32
---@field MapData ULevelGenMap
FLevelGenPrecalculatedMap = {}



---@class FLevelGenRestorableLocation
---@field LevelGenParams FLevelGenParameters
---@field Transform FTransform
---@field MapURL FString
FLevelGenRestorableLocation = {}



---@class FLevelGenRoomActorIterator
FLevelGenRoomActorIterator = {}


---@class FLevelGenRoomActors
FLevelGenRoomActors = {}


---@class FLevelGenRoomBoundsTree
---@field MapData ULevelGenMap
FLevelGenRoomBoundsTree = {}



---@class FLevelGenRoomVolumes
---@field BoxVolumes TArray<FLevelGenBoxVolume>
---@field SphereVolumes TArray<FLevelGenSphereVolume>
---@field CapsuleVolumes TArray<FLevelGenCapsuleVolume>
---@field ConvexVolumes TArray<FLevelGenConvexVolume>
FLevelGenRoomVolumes = {}



---@class FLevelGenSphereVolume : FLevelGenVolumeData
---@field RadiusSq FVector4
FLevelGenSphereVolume = {}



---@class FLevelGenVolumeData
---@field InverseTransform FTransform
FLevelGenVolumeData = {}



---@class FLevelLoadNetworkCacheEntry
---@field RoomIndex int32
---@field LevelNameHash uint32
---@field bLoadLevel boolean
---@field bShowLevel boolean
---@field bFullyCalculated boolean
FLevelLoadNetworkCacheEntry = {}



---@class FLobbyDeviceSpawnLocation
---@field LobbyDevice ASocialLobbyDevice
---@field DeviceID FString
---@field WillSpawn boolean
FLobbyDeviceSpawnLocation = {}



---@class FLocalDamageMultiplier
---@field ShapeComponentName FString
---@field DamageMultiplierValue float
---@field bActiveByDefault boolean
---@field Comment FString
---@field ShapeComponent UShapeComponent
FLocalDamageMultiplier = {}



---@class FLocatorSpawnGroup
---@field RoomIndex int32
---@field SpawnMode ELocatorSpawnMode
---@field LocatorActorLoaders TArray<ALevelGenLocatorActorLoader>
FLocatorSpawnGroup = {}



---@class FLockdownRoomInfo
---@field RoomIndex int32
---@field LockdownMode FString
---@field Source UObject
FLockdownRoomInfo = {}



---@class FLocomotionAnim
---@field AnimSequence UAnimSequence
---@field Variants TArray<UAnimSequence>
---@field Data FLocomotionAnimData
---@field Settings FLocomotionAnimSettings
FLocomotionAnim = {}



---@class FLocomotionAnimData
---@field AnimSequence UAnimSequence
---@field StartInfo FLocomotionAnimInfo
---@field EndInfo FLocomotionAnimInfo
---@field AverageInfo FLocomotionAnimInfo
---@field SpecialInfo TArray<ULocomotionSpecialCharacterInfo_Base>
---@field AnimType ELocomotionAnimType
---@field AnimMovementType ELocomotionAnimMovementType
FLocomotionAnimData = {}



---@class FLocomotionAnimInfo
---@field AnimInfo FLocomotionCharacterInfo
---@field bOverrideInfo boolean
---@field AnimInfoOverride FLocomotionCharacterInfo
FLocomotionAnimInfo = {}



---@class FLocomotionAnimQueryResult
---@field LocomotionAnim FLocomotionAnim
---@field PlayRate float
FLocomotionAnimQueryResult = {}



---@class FLocomotionAnimScoringContext
---@field AnimProgress float
---@field bPreventRotationToRotationTransitions boolean
FLocomotionAnimScoringContext = {}



---@class FLocomotionAnimScoringResult
---@field CurrentVelocityScore float
---@field TargetVelocityScore float
---@field TargetRotationScore float
---@field SpecialInfoScore float
FLocomotionAnimScoringResult = {}



---@class FLocomotionAnimScoringSettings
---@field ZeroVectorDifferenceScale float
---@field NonZeroVectorDifferenceScale float
---@field DirectionMismatchScoreMultiplier float
---@field RotationUndershootScoreMultiplier float
---@field ContinuousRotationScoringScale float
---@field CurrentVelocityWeight float
---@field TargetVelocityWeight float
---@field TargetRotationWeight float
---@field SpecialRequirementsWeight float
FLocomotionAnimScoringSettings = {}



---@class FLocomotionAnimSettings
---@field bCanDeltaCorrectRotation boolean
---@field bCanBeInterrupted boolean
---@field AllowInterruptAfterTime float
---@field bAlwaysStartFromBeginning boolean
---@field bOverrideAnimType boolean
---@field AnimTypeOverride ELocomotionAnimType
---@field bAllowExternalRotation boolean
---@field bShuffleVariants boolean
---@field bPoseMatchVariants boolean
---@field bOverrideMinMaxStretchOverrides boolean
---@field MinTimeStretchOverride float
---@field MaxTimeStretchOverride float
---@field bOverrideBlendOutTime boolean
---@field BlendOutTimeOverride float
FLocomotionAnimSettings = {}



---@class FLocomotionCharacterInfo
---@field Velocity FVector
---@field Rotation FRotator
FLocomotionCharacterInfo = {}



---@class FLootBoxState
---@field InteractionState ELootBoxInteractionState
---@field bServerPlayer boolean
FLootBoxState = {}



---@class FLootResult
---@field ActorClassName FName
---@field ActorClass TSubclassOf<AActor>
---@field Price int32
---@field count int32
---@field bPoolable boolean
---@field Probability float
---@field Usability ECollectibleUserPolicy
FLootResult = {}



---@class FLootSpawnDefinition
---@field LootGroup ECollectibleDropGroup
---@field AltLootGroup ECollectibleDropGroup
---@field LootProbability float
---@field LootCount int32
---@field Transform FTransform
---@field Source TWeakObjectPtr<AActor>
---@field SourceClass TSubclassOf<AActor>
---@field bSourceReplicated boolean
---@field SourceGuid FGuid
---@field Instigator TWeakObjectPtr<AActor>
---@field DamagedTargets TArray<AActor>
---@field bFlyOut boolean
---@field bRandomSpawnOffset boolean
---@field SpawnPolicy ECollectibleSpawnPolicy
FLootSpawnDefinition = {}



---@class FLootSpawnEntry
---@field LootGroup ECollectibleDropGroup
---@field AltLootGroup ECollectibleDropGroup
---@field LootProbability float
---@field LootCount int32
FLootSpawnEntry = {}



---@class FLootSpawnNotification
---@field ID uint32
---@field Source TWeakObjectPtr<AActor>
---@field SourceClass TSubclassOf<AActor>
---@field bSourceReplicated boolean
---@field SourceGuid FGuid
---@field LootGroup ECollectibleDropGroup
---@field SpawnedActorClass TSubclassOf<AActor>
---@field SpawnedActor TWeakObjectPtr<AActor>
---@field Instigator TWeakObjectPtr<AActor>
FLootSpawnNotification = {}



---@class FMaterialOverride
---@field index int32
---@field Material UMaterialInterface
FMaterialOverride = {}



---@class FMaterialParameterCollectionBiomeSpecificSettings
---@field MaterialParameterCollection UMaterialParameterCollection
---@field ScalarValues TArray<FBiomeSpecificScalarParameterValue>
---@field VectorValues TArray<FBiomeSpecificVectorParameterValue>
FMaterialParameterCollectionBiomeSpecificSettings = {}



---@class FMeleeAttackData
---@field Attack UMeleeAttack
---@field DamageMultiplier float
---@field bDisableFurtherComboAttacks boolean
FMeleeAttackData = {}



---@class FMeleeAttackSet
---@field bEnabled boolean
---@field AttackData TArray<FMeleeAttackData>
---@field MoveMaxDistance float
---@field MoveSpeedWithTarget float
---@field MoveSpeedNoTarget float
---@field MoveMaxDistanceWithoutTarget float
---@field AttackStartDistance float
---@field AttackReach float
---@field TargetingDistanceWeight float
---@field TargetingAngleWeight float
---@field TargetingMaxAngleHorizontal float
---@field MoveWithOutTarget boolean
---@field TurnOffGravityWhileMoving boolean
---@field ClearVelocityWhenMovingToTarget boolean
---@field ChargedAttackEnabled boolean
---@field ChargedAttack FMeleeAttackData
---@field ChargeMinTime float
---@field ChargeMaxTime float
---@field bWaitForOrientationBeforeAttack boolean
---@field OrientationRotationSpeed float
FMeleeAttackSet = {}



---@class FMeleeDamage
---@field DamageType TSubclassOf<UTouristDamageType>
---@field DamageMultiplier float
---@field DamagePfx FName
FMeleeDamage = {}



---@class FMeleeWeaponUpgradeData
---@field bOverrideMeleeAttacksGround boolean
---@field MeleeAttacksGroundOverride FMeleeAttackSet
---@field bOverrideMeleeAttacksIdle boolean
---@field MeleeAttacksIdleOverride FMeleeAttackSet
---@field bOverrideMeleeAttacksAir boolean
---@field MeleeAttacksAirOverride FMeleeAttackSet
---@field bOverrideAttacksDashGround boolean
---@field MeleeAttacksDashGroundOverride FMeleeAttackSet
---@field bOverrideMeleeAttacksDashAir boolean
---@field MeleeAttacksDashAirOverride FMeleeAttackSet
---@field CooldownDelta float
---@field MaxComboLengthDelta int32
---@field DamageMultiplierDeltaPerAttackOverride float
---@field bIsStrongSlashEnabled boolean
FMeleeWeaponUpgradeData = {}



---@class FMeshCollision
---@field AABB FBox
---@field Tris TArray<FVector>
FMeshCollision = {}



---@class FMeshMaterialBiomeVariation
---@field Mesh TSoftObjectPtr<UStaticMesh>
---@field BiomeMaterials TMap<FString, FMeshMaterialBiomeVariationMaterials>
FMeshMaterialBiomeVariation = {}



---@class FMeshMaterialBiomeVariationMaterials
---@field Materials TArray<TSoftObjectPtr<UMaterialInterface>>
FMeshMaterialBiomeVariationMaterials = {}



---@class FMetaModifierBulletEvent
---@field bOwnerAsInstigator boolean
---@field Probability float
---@field ProbabilityIncrease float
---@field ProbabilityIncreaseDuration float
---@field BulletPattern TSubclassOf<UBulletPatternType>
---@field Bullet TSubclassOf<UBulletType>
---@field DamageShapeActorClass TSubclassOf<AActor>
---@field DamageShapeTypeClass TSubclassOf<UDamageShapeType>
---@field direction EMetaModifierBulletEventDirType
FMetaModifierBulletEvent = {}



---@class FMetaModifierChainDamage
---@field damage float
---@field DamageTypeClass TSubclassOf<UTouristDamageType>
---@field Radius float
---@field count int32
---@field SourceEffect TSubclassOf<AEffectContainer>
---@field DestinationEffect TSubclassOf<AEffectContainer>
FMetaModifierChainDamage = {}



---@class FMetaModifierCombinationEvent
---@field Type EMetaModifierEventType
---@field Probability float
---@field OtherTypes TSet<EMetaModifierType>
---@field ChildNamesTypes TSet<EMetaModifierType>
---@field ChildNames TArray<FName>
---@field bPruneExistingChildNames boolean
---@field ModifySanityType EMetaModifierType
---@field ModifySanity float
---@field ModifyMaxSanityType EMetaModifierType
---@field ModifyMaxSanity float
---@field ModifyHealthType EMetaModifierType
---@field ModifyHealth float
---@field ModifyProficiencyType EMetaModifierType
---@field ModifyProficiency float
---@field ModifyMaxHealthTypes TSet<EMetaModifierType>
---@field ModifyMaxHealth float
---@field ModifyPropertyType EMetaModifierModifyPropertyType
---@field ModifyPropertyModType EMetaModifierType
---@field ModifyPropertyValue float
---@field bDamageOther boolean
---@field damage float
---@field DamageDuration float
---@field DamageDelay float
---@field MaxDamageOverTimeStackCount int32
---@field DamageNGPEffect FName
---@field DamageTypeClass TSubclassOf<UTouristDamageType>
---@field DestroyThingEventProbability float
---@field SpawnRandomMetaModifierModType EMetaModifierType
---@field SpawnRandomMetaModifierMinCount int32
---@field SpawnRandomMetaModifierMaxCount int32
---@field Explosion FMetaModifierExplosion
---@field Effect TSubclassOf<AEffectContainer>
---@field EffectSharedTag FName
---@field bConsumeActivation boolean
---@field RequiredTags TArray<FName>
---@field SufficientTags TArray<FName>
---@field ExcludedTags TArray<FName>
---@field bDestroyMetaModifier boolean
FMetaModifierCombinationEvent = {}



---@class FMetaModifierExplosion
---@field damage float
---@field DamageTypeClass TSubclassOf<UTouristDamageType>
---@field Radius float
---@field PlayerCapsuleVOffset float
---@field Effect TSubclassOf<AEffectContainer>
---@field EffectSharedTag FName
FMetaModifierExplosion = {}



---@class FMetaModifierInfo
---@field CodeName FName
---@field Type EMetaModifierType
---@field Description1 FText
---@field Description2 FText
---@field Icon1 TSoftObjectPtr<UTexture2D>
---@field Icon2 TSoftObjectPtr<UTexture2D>
---@field bIsEnabled boolean
FMetaModifierInfo = {}



---@class FMetaModifierLootData
---@field GroupIn ECollectibleDropGroup
---@field GroupOut ECollectibleDropGroup
---@field Probability float
---@field SpawnCount int32
---@field SwitchProbability float
---@field SwitchProbabilityValue FMetaModifierValueData
FMetaModifierLootData = {}



---@class FMetaModifierRepData
---@field CodeName FName
---@field randomSeed int32
FMetaModifierRepData = {}



---@class FMetaModifierSpawnArgsInfo
---@field CodeName FName
---@field SpawnArgs TArray<FSpawnArg>
FMetaModifierSpawnArgsInfo = {}



---@class FMetaModifierSpawnParams
---@field SpawnActor TWeakObjectPtr<AActor>
---@field SpawnActorClass TSubclassOf<AActor>
---@field SpawnActorTransform FTransform
FMetaModifierSpawnParams = {}



---@class FMetaModifierValueData
---@field Type EMetaModifierValueDataType
---@field KeyType EInventoryKeyType
---@field Situation EMetaModifierSituationType
---@field Divisor int32
---@field Min float
---@field Max float
---@field amount float
FMetaModifierValueData = {}



---@class FMinMaxFloat
---@field Min float
---@field Max float
FMinMaxFloat = {}



---@class FMinimapCompassIcon
---@field MinimapObject UMinimapObject
---@field Texture UTexture2D
---@field SpriteColor FLinearColor
---@field Heading float
---@field OnScreen boolean
FMinimapCompassIcon = {}



---@class FMinimapIconSettings
---@field StaticMesh UStaticMesh
---@field StaticMeshMaterial UMaterialInterface
---@field BillboardTexture UTexture2D
---@field MeshTexture UTexture2D
---@field SpriteScale float
---@field SpriteColor FLinearColor
---@field IgnoresActorRotation boolean
---@field CompassTexture UTexture2D
---@field ShowInCompass boolean
---@field scale FVector
---@field bUseActorScale boolean
---@field DisplayMode EMinimapDisplayMode
---@field bIsPointOfInterest boolean
---@field bIsBossDoor boolean
---@field bHookshotHint boolean
---@field bTest1 boolean
---@field bTest2 boolean
---@field bTest3 boolean
---@field bTest4 boolean
---@field bTest5 boolean
FMinimapIconSettings = {}



---@class FMinimapMeshData
---@field indices TArray<int32>
---@field pos TArray<FVector>
---@field Normal TArray<FVector>
---@field Color TArray<FLinearColor>
FMinimapMeshData = {}



---@class FMinimapRenderViewSettings
---@field Transform FTransform
---@field FOV float
FMinimapRenderViewSettings = {}



---@class FMontageActionSegment
---@field Type EAnimationActionSegmentType
---@field StartTime float
---@field EndTime float
---@field index int32
---@field IndexForType int32
---@field bOverrideLength boolean
---@field TargetLength float
---@field ShortenMode EAnimationSegmentTimeCorrectionMode
---@field LengthenMode EAnimationSegmentTimeCorrectionMode
FMontageActionSegment = {}



---@class FMotionWarpPoint
---@field bEnabled boolean
---@field PointName FName
---@field PointTime float
---@field CorrectionAlpha float
---@field PointTransform FTransform
---@field FacingMaxYawDifference float
---@field FacingTimeRange FVector2D
---@field TranslationTimeRange FVector2D
---@field RotationTimeRange FVector2D
---@field GameplayEffects TArray<TSubclassOf<UGameplayEffect>>
FMotionWarpPoint = {}



---@class FMovementParameterModifier
---@field Multiplier float
---@field EntryTime float
---@field duration float
---@field ExitTime float
FMovementParameterModifier = {}



---@class FMovementParameterModifierInstance
---@field Modifier FMovementParameterModifier
---@field Time float
FMovementParameterModifierInstance = {}



---@class FMultiplayerPersistentData
---@field Rank int32
---@field RankPoints int32
---@field ClientRewardTier int32
---@field ClientRewardProgress int32
FMultiplayerPersistentData = {}



---@class FMusicInfo
---@field GameFlowState EAudioGameFlowState
---@field BiomeName FString
---@field AngenRoomName FString
---@field AudioRoomName FString
---@field MusicGameplayType FString
---@field GameplayType FString
---@field CombatLevel FString
---@field RoomSize FString
---@field fPlayerHealth float
FMusicInfo = {}



---@class FMusicStack
---@field MusicEvent UAkAudioEvent
---@field StopEvent UAkAudioEvent
---@field SwitchGroup FName
---@field NoMusicSwitch FName
---@field CurrentSwitch FName
---@field Elements TArray<FMusicStackElement>
FMusicStack = {}



---@class FMusicStackElement
---@field Actor TWeakObjectPtr<AActor>
---@field Switch FName
FMusicStackElement = {}



---@class FMusicianMovementDescriptor
---@field Destination FVector
---@field Priority float
---@field MovementCurve UCurveFloat
---@field MoveSpeed float
FMusicianMovementDescriptor = {}



---@class FMusicianNavigationQueryData
---@field Generator UMusicianNavigationGenerator
---@field Tests TArray<UMusicianNavigationTest>
---@field Normalizer UMusicianNavigationScoreNormalizer
---@field Sampler UMusicianNavigationSampler
FMusicianNavigationQueryData = {}



---@class FMusicianNavigationQueryResult
---@field Position FVector
---@field Score float
FMusicianNavigationQueryResult = {}



---@class FNavLinkTicket
---@field Holder AEnemyBase
---@field Link uint32
---@field SegmentLocation FVector
---@field bIsLocked boolean
FNavLinkTicket = {}



---@class FNightmareLevelGenInfo : FLevelGenInfoBase
FNightmareLevelGenInfo = {}


---@class FObjectiveSystemComponentSaveData
---@field Objectives TArray<FSerializedObjectiveComponent>
---@field BlockedObjectiveNames TSet<FName>
FObjectiveSystemComponentSaveData = {}



---@class FOfflineLevelGenPattern
---@field Biome EBiome
---@field NumberOfMaps int32
---@field Parameters TArray<FName>
---@field bChallengeMode boolean
FOfflineLevelGenPattern = {}



---@class FOpenAreaConnectome
FOpenAreaConnectome = {}


---@class FOverridableFlyingMovementParameter
---@field BaseValue float
---@field OverrideValue float
---@field OverrideTimer float
FOverridableFlyingMovementParameter = {}



---@class FPOIProximityParams
---@field bShowHealth boolean
FPOIProximityParams = {}



---@class FPSNLinkData
---@field LinkState EPSNLinkState
---@field LinkedAccountId FString
---@field accountId FString
---@field DisplayName FString
---@field bIsChild boolean
FPSNLinkData = {}



---@class FParticleAudioEmitterInfo
---@field Emitter UAkComponent
---@field PlayingID int32
FParticleAudioEmitterInfo = {}



---@class FParticleColorOverride
---@field bUseOverride boolean
---@field Color FColor
FParticleColorOverride = {}



---@class FPatternFireElement
---@field DelayBefore float
---@field Bullet TSubclassOf<UBulletType>
---@field BulletPattern TSubclassOf<UBulletPatternType>
FPatternFireElement = {}



---@class FPendingFreedTravelSound
---@field TravelSound UAkComponent
FPendingFreedTravelSound = {}



---@class FPendingTicket
---@field Enemy AEnemyBase
---@field Score float
FPendingTicket = {}



---@class FPersistentGameState
---@field bNextShopClosed boolean
---@field BiomesCompleted TArray<EBiome>
---@field BiomesEntered TArray<EBiome>
---@field Tutorials TArray<FTutorialState>
---@field GameplayFlags TArray<FName>
FPersistentGameState = {}



---@class FPersistentStatistics
---@field DeathCount int32
---@field DeathStats TArray<FPlayerDeathStatistics>
---@field ThingStats TArray<FPersistentThingStatistics>
---@field RoomsExplored TArray<FName>
---@field MoneyCollected int64
---@field MaxAdrenalineReached int32
---@field SuccessfulReloadMinigames int32
---@field CurseCount int32
---@field ParasiteCount int32
---@field PlayTimeSeconds int32
FPersistentStatistics = {}



---@class FPersistentThingStatistics
---@field ThingName FName
---@field ThingType EPersistentThingType
---@field Timestamp FDateTime
---@field TimePlayedDataPoints TArray<int32>
---@field CounterDataPoints TArray<int32>
---@field Counter int32
---@field bNew boolean
---@field bUpdated boolean
FPersistentThingStatistics = {}



---@class FPlayerCharacterExtMoveData
---@field PawnYawPitch uint32
---@field CameraLocation FVector_NetQuantize100
---@field CameraRotation FRotator
---@field AimingTraceHitLocation FVector_NetQuantize100
---@field AimingTraceEndLocation FVector_NetQuantize100
---@field AimingTraceStartLocation FVector_NetQuantize100
---@field MoveInputInWorldSpace FVector_NetQuantizeNormal
---@field ActiveGravityScale float
---@field ActorWorldOffset FVector
---@field ClientSidePredictableLocation FVector
---@field TransformIsClientAuthorative boolean
FPlayerCharacterExtMoveData = {}



---@class FPlayerDeathLocation
---@field RoomName FString
---@field RoomRelativeLocation FVector
FPlayerDeathLocation = {}



---@class FPlayerDeathStatistics
---@field Instigator FName
---@field Counter int32
FPlayerDeathStatistics = {}



---@class FPlayerFollowCameraSettings
---@field Name FName
FPlayerFollowCameraSettings = {}



---@class FPlayerFootstepData
---@field FootStepCounter_AF float
---@field FootStepCounter_SW float
---@field FootStepCounter_CI float
---@field FootStepCounter_CD float
---@field FootStepCounter_UR float
---@field FootStepCounter_IC float
---@field FootStepCounter_TT float
---@field FootStepReset_AF float
---@field FootStepReset_SW float
---@field FootStepReset_CI float
---@field FootStepReset_CD float
---@field FootStepReset_UR float
---@field FootStepReset_IC float
---@field FootStepReset_TT float
---@field IsReseting boolean
FPlayerFootstepData = {}



---@class FPlayerInitialSetupData
---@field bInitialSetupReady boolean
---@field SelectedSuitType ESuitType
FPlayerInitialSetupData = {}



---@class FPlayerSoftCollisionSettings : FTableRowBase
---@field ReceivedForceMultiplier float
---@field ResponseCategories TMap<ECharacterCollisionCategory, FSoftCollisionResponseData>
---@field DefaultResponse FSoftCollisionResponseData
FPlayerSoftCollisionSettings = {}



---@class FPlayerStateSaveData
---@field HealthComponent FHealthComponentSaveData
---@field MaxHealthUpgrade float
---@field ReloadMinigameInSuccessionCompleted int32
---@field ProficiencyComponent FProficiencyComponentSaveData
---@field AdrenalineComponent FAdrenalineComponentSaveData
---@field ObjectiveSystemComponent FObjectiveSystemComponentSaveData
---@field MetaModifiers TArray<FSerializedMetaModifierData>
---@field PlayerWeapon FSerializedWeaponData
---@field InventoryData FSerializedInventoryData
---@field SafeLocationData FSafeLocationData
---@field SerializedFootstepData FSerializedPlayerFootstepData
FPlayerStateSaveData = {}



---@class FPlayerStats
---@field EnemiesKilled int32
---@field SmallEnemiesKilled int32
---@field MediumEnemiesKilled int32
---@field LargeEnemiesKilled int32
---@field BossEnemiesKilled int32
---@field EnemiesKilledByDamageType TMap<UClass, int32>
---@field EnemiesKilledByMeleeMidAir int32
---@field MeleeKills int32
---@field WeakPointKills int32
---@field AdrenalineResets int32
---@field PeakAdrenaline int32
---@field MaxKillCombo int32
---@field MoneyCollected int32
---@field KeysCollected int32
---@field HealthCollected int32
---@field HealthItemsCollected int32
---@field RoomsExplored TSet<int32>
---@field RoomsCleared TSet<int32>
---@field NoDamageRooms TMap<int32, int32>
---@field TeleportsUsed int32
---@field ImpossibleFragmentsCollected int32
---@field ArtefactsCollected TArray<FName>
---@field WeaponsCollected TArray<FString>
---@field WeaponPickupCount int32
---@field WeaponUpgradesCollected TArray<FString>
---@field WeaponUpgradePickupCount int32
---@field DamageTaken float
---@field DamageTakenInstances int32
---@field CrystalLizardsKilledTT int32
FPlayerStats = {}



---@class FPlayerSuitAsset
---@field LoadedPlayerSuitData UPlayerSuitData
FPlayerSuitAsset = {}



---@class FPlayerTetheringSettings
---@field WarningDistanceHorizontal float
---@field WarningDistanceVertical float
---@field TriggerDistanceHorizontal float
---@field TriggerDistanceVertical float
FPlayerTetheringSettings = {}



---@class FPlayerTetheringStatus
---@field TetheringState EPlayerTetheringState
---@field TetheringReason EPlayerTetheringReason
FPlayerTetheringStatus = {}



---@class FPreviewPanelsDataTableRow : FTableRowBase
---@field Type PreviewPanelType
---@field PreviewSampleObject TSubclassOf<UUserWidget>
FPreviewPanelsDataTableRow = {}



---@class FProficiencyComponentSaveData
---@field Level int32
---@field LevelPoints float
---@field LevelPercent float
---@field CurrentProficiencyDeltaMod int32
FProficiencyComponentSaveData = {}



---@class FProficiencyDefault
---@field RestartBiome EBiome
---@field Level int32
---@field OverrideMaxLevel int32
---@field PointMultipliers TMap<FName, float>
FProficiencyDefault = {}



---@class FProgressManagerSaveData
---@field CombatRoomActivations int32
---@field ExploredRooms TSet<int32>
---@field ExitedRooms TSet<int32>
---@field ClearedRooms TSet<int32>
---@field GameplayStartTime float
---@field GameplayEndTime float
---@field bResetGameplayTimePending boolean
---@field CurrentPlayerRoomIndex int32
FProgressManagerSaveData = {}



---@class FPylonConnection
---@field A APylonLauncherPylon
---@field B APylonLauncherPylon
---@field ConnectionEffect UNGParticleComponent
---@field Mode EPylonConnectionMode
FPylonConnection = {}



---@class FPylonConnectionAudio
---@field ConnectionEffect UNGParticleComponent
---@field AkComponent UAkComponent
FPylonConnectionAudio = {}



---@class FPylonDamageEntry
---@field Target AActor
---@field Location FVector
---@field damage float
FPylonDamageEntry = {}



---@class FQueuedGhostReplySubmission
---@field CorpseOwnerAccountId FString
---@field ReplyData FSocialCorpseReplyData
FQueuedGhostReplySubmission = {}



---@class FRainDropResult
---@field Location FVector
---@field PhysicalSurface EPhysicalSurface
FRainDropResult = {}



---@class FRainState
---@field Playback UAkComponent
---@field PhysicalSurface EPhysicalSurface
---@field direction FVector
---@field bRainStarted boolean
---@field TargetHeight float
FRainState = {}



---@class FResumePointCreationResult
---@field bSuccess boolean
---@field FailureReasons TArray<FString>
FResumePointCreationResult = {}



---@class FRogueControllerButtonDataTableRow : FTableRowBase
---@field ButtonKey FKey
---@field ControllerButtonIcon UTexture2D
FRogueControllerButtonDataTableRow = {}



---@class FRoomAmbienceState
---@field AudioVolume ATouristRoomAudioVolume
---@field AkRoom UAkRoomComponent
---@field bIsPlayingAmbienceSound boolean
---@field bIsPlayingTimeTravelVariant boolean
---@field RandomisedRoomParams TMap<FName, float>
FRoomAmbienceState = {}



---@class FRoomAudioParam
---@field RTPCName FName
---@field value float
FRoomAudioParam = {}



---@class FRoomDoorConnection
---@field RoomIndex int32
---@field DoorIndex int32
FRoomDoorConnection = {}



---@class FRoomDoorConnectionGraph
---@field ConnectedRoomsDoors TArray<FRoomDoorConnection>
FRoomDoorConnectionGraph = {}



---@class FRoomExtraActorSpawn
---@field SpawnClass TSubclassOf<AActor>
---@field SpawnMode EExtraActorSpawnMode
---@field bDestroyOnRoomUnload boolean
FRoomExtraActorSpawn = {}



---@class FRoomLevelStreamInfo
---@field StreamName FString
---@field BaseFileName FString
---@field LongPackageName FString
FRoomLevelStreamInfo = {}



---@class FRoomPersistenceData
---@field RoomIndex int32
---@field RoomName FString
---@field StreamingActor TSoftObjectPtr<ALevelGenRoomStreamingActor>
---@field RoomAttributesActor TSoftObjectPtr<ALevelGenRoomAttributeActor>
---@field OwningOverseer ARoomOverseer
---@field bIsCombatRoom boolean
---@field SpawnHandledActivationEvents TArray<ERoomActivationEventType>
---@field bAllSpawnsBlocked boolean
---@field SubLevelSnapshots TArray<FRoomSnapshot>
---@field bSnapshotCapturedAtLeastOnce boolean
---@field bRoomHiddenAtLeastOnce boolean
---@field TimesRoomLoaded uint32
---@field TrackedActors TArray<TWeakObjectPtr<AActor>>
---@field RoomSpawns TMap<UClass, int32>
---@field RuntimeSpawnedTrackerlessActors TArray<TWeakObjectPtr<AActor>>
---@field CachedEnemyCount int32
---@field bRoomActivatesAdjacentOpenAreas boolean
---@field bLoadStateIsFaulty boolean
---@field bRoomIsGameReady boolean
---@field DeactivationTimerHandle FTimerHandle
---@field EnemiesConsideredAsThreatsInRoom TArray<TSoftObjectPtr<AEnemyBase>>
---@field bDataRestoredFromSaveGame boolean
FRoomPersistenceData = {}



---@class FRoomSnapshot
---@field RoomIndex int32
---@field RoomName FString
---@field bOnRoomBeginHideSnapshotCapturedOnce boolean
---@field Snapshot TArray<FDespawnedActorInfo>
---@field SnapshotFingerprint Fingerprint
FRoomSnapshot = {}



---@class FRootMotionDelta
---@field LocationDelta FVector
---@field RotationDelta FRotator
FRootMotionDelta = {}



---@class FRootMotionTarget
---@field ActorTarget AActor
---@field TargetDelta FRootMotionDelta
FRootMotionTarget = {}



---@class FSafeLocationData
---@field SafeLocation FVector
---@field SafeRotation FRotator
FSafeLocationData = {}



---@class FSanityAudioInfo
---@field StartEvent UAkAudioEvent
---@field StopEvent UAkAudioEvent
FSanityAudioInfo = {}



---@class FSayEntry : FTableRowBase
---@field Actor TWeakObjectPtr<AActor>
---@field ActorName FName
---@field LocSpeaker FString
---@field RawSpeaker FString
---@field Text FText
---@field PlayAudioEvent TWeakObjectPtr<UAkAudioEvent>
---@field StopAudioEvent TWeakObjectPtr<UAkAudioEvent>
---@field bIgnoreAudioEventComplete boolean
---@field FacialAnimationMode ESayFacialAnimationMode
---@field StartDelay float
---@field StopDelay float
---@field duration float
---@field Radius float
---@field Channel int32
---@field bHearingImpaired boolean
FSayEntry = {}



---@class FSaySequence
---@field Actor TWeakObjectPtr<AActor>
---@field Channel int32
---@field SequenceName FName
---@field SequenceContext FName
---@field startIndex int32
FSaySequence = {}



---@class FSequenceBehavior
---@field BehaviorName FString
---@field bBypassBehaviorRunConditions boolean
---@field bBlockSequenceUntilFinished boolean
---@field ActionOnFinished FSequenceBranchingAction
---@field BranchingConditions TArray<FSequenceBehaviorConditionGroup>
---@field EnemyBehavior UEnemyBehaviorBase
FSequenceBehavior = {}



---@class FSequenceBehaviorConditionGroup
---@field Conditions TArray<UEnemyBehaviorConditionBase>
---@field Action FSequenceBranchingAction
FSequenceBehaviorConditionGroup = {}



---@class FSequenceBranchingAction
---@field Action EBehaviorSequenceConditionalAction
---@field ActionTarget int32
FSequenceBranchingAction = {}



---@class FSerializedConsumableData
---@field Item TSubclassOf<AActor>
---@field Collectible TSubclassOf<AActor>
FSerializedConsumableData = {}



---@class FSerializedInventoryData
---@field Keys TArray<int32>
---@field PendingUnlockItems TArray<FName>
---@field Consumables TArray<FSerializedConsumableData>
FSerializedInventoryData = {}



---@class FSerializedMetaModifierData
---@field CodeName FName
---@field MetaModifierBlobData TArray<uint8>
FSerializedMetaModifierData = {}



---@class FSerializedObjectiveComponent
---@field ObjectiveClass TSubclassOf<UObjectiveComponent>
---@field ObjectiveName FName
---@field ParentIndex int32
---@field SelfState uint8
---@field bBlocked boolean
---@field CurrentCounter int32
---@field MaxCounter int32
FSerializedObjectiveComponent = {}



---@class FSerializedPlayerFootstepData
---@field FootStepCounter_AF float
---@field FootStepCounter_SW float
---@field FootStepCounter_CI float
---@field FootStepCounter_CD float
---@field FootStepCounter_UR float
---@field FootStepCounter_IC float
---@field FootStepCounter_TT float
---@field IsReseting boolean
FSerializedPlayerFootstepData = {}



---@class FSerializedWeaponData
---@field WeaponClass TSubclassOf<APlayerWeapon>
---@field WeaponLevel int32
---@field Traits TArray<FSerializedWeaponTraitData>
---@field StatBlocks TArray<FSerializedWeaponStatBlockData>
FSerializedWeaponData = {}



---@class FSerializedWeaponStatBlockData
---@field Type uint8
---@field Level int32
FSerializedWeaponStatBlockData = {}



---@class FSerializedWeaponTraitData
---@field Type uint8
---@field Slot uint8
---@field Level int32
---@field UnlockGoal int32
---@field UnlockProgress int32
FSerializedWeaponTraitData = {}



---@class FSettingHideUIElements
---@field bHideMinimap boolean
---@field bHideHealth boolean
---@field bHideProficiency boolean
---@field bHideConsumable boolean
---@field bHideAltFire boolean
---@field bHideAdrenalineBar boolean
---@field bHideCollectibles boolean
---@field bHideSessionTime boolean
---@field bHideBossHealthBar boolean
---@field bHideEnemyHealthBar boolean
---@field bHideWeaponTrait boolean
---@field bHideMultiplayerName boolean
FSettingHideUIElements = {}



---@class FSettingPage
---@field SettingItems TArray<UWidget>
FSettingPage = {}



---@class FSettingShowWindowsPerformance
---@field bShowFPS boolean
---@field bShowCPUPercent boolean
---@field bShowGPUPercent boolean
---@field bShowGPUTemp boolean
---@field bShowGPUClock boolean
---@field bShowVRAM boolean
---@field bShowNetworkLatency boolean
FSettingShowWindowsPerformance = {}



---@class FShipLogEntryTier
---@field Tier int32
---@field Description FText
---@field AdditionalText FText
---@field Voice TSoftObjectPtr<UAkAudioEvent>
---@field duration float
---@field StaticMesh TSoftObjectPtr<UStaticMesh>
---@field Texture TSoftObjectPtr<UTexture2D>
---@field LocalizedKeyValues TArray<FShipLogTextPair>
---@field StringData FString
FShipLogEntryTier = {}



---@class FShipLogTextPair
---@field KeyName FName
---@field Key FText
---@field value FText
FShipLogTextPair = {}



---@class FSimpleAttributeValueUpdate
---@field SequenceNumber uint32
---@field UpdateType uint8
---@field value float
FSimpleAttributeValueUpdate = {}



---@class FSkillNodeInfo
---@field CodeName FName
---@field Mode ESkillNodeMode
---@field Slot int32
FSkillNodeInfo = {}



---@class FSkillTreeNode
---@field ID FName
---@field Category ESkillNodeCategory
---@field VisibleName FText
---@field VisibleDescription FText
---@field Icon TSoftObjectPtr<UTexture2D>
---@field EquipCost int32
---@field SuperId FName
---@field SuperCostKeyType EInventoryKeyType
---@field SuperCost int32
---@field SuperVisibleName FText
---@field SuperVisibleDescription FText
---@field CurseId FName
---@field CurseVisibleName FText
---@field CurseVisibleDescription FText
FSkillTreeNode = {}



---@class FSliceData
---@field WallEffect AEffectContainer
FSliceData = {}



---@class FSliderControls
---@field MappingCurve UCurveFloat
---@field Min int32
---@field Max int32
---@field StepSize int32
FSliderControls = {}



---@class FSocialChallenge
FSocialChallenge = {}


---@class FSocialChallengeBiomeSetup
---@field Abilities TMap<TSubclassOf<UGameplayAbility>, int32>
---@field GameplayFlags TArray<FName>
FSocialChallengeBiomeSetup = {}



---@class FSocialChallengeBonusCalculateResult
---@field Bonus int32
---@field InstanceCount int32
FSocialChallengeBonusCalculateResult = {}



---@class FSocialChallengeData
---@field Challenges TArray<FSocialChallenge>
FSocialChallengeData = {}



---@class FSocialChallengeGeneratedLoadoutState
---@field StartingWeapon TSoftClassPtr<UObject>
---@field AltFireTrait FSocialChallengeGeneratedWeaponTrait
---@field Traits TArray<FSocialChallengeGeneratedWeaponTrait>
---@field StatLevels TArray<int32>
---@field Proficiency int32
FSocialChallengeGeneratedLoadoutState = {}



---@class FSocialChallengeGeneratedState
---@field Name FString
---@field Challenge FSocialChallenge
---@field Biome EBiome
---@field PositiveModifierNames TArray<FName>
---@field NegativeModifierNames TArray<FName>
---@field Loadout FSocialChallengeGeneratedLoadoutState
FSocialChallengeGeneratedState = {}



---@class FSocialChallengeGeneratedWeaponTrait
---@field TraitType int32
---@field Level int32
FSocialChallengeGeneratedWeaponTrait = {}



---@class FSocialChallengeScore
---@field accountId FString
---@field UserName FString
---@field SerialRank int64
---@field Rank int64
---@field Score int64
---@field AdditionaData FSocialChallengeScoreData
---@field Provisional boolean
FSocialChallengeScore = {}



---@class FSocialChallengeScoreBonus
---@field Archetype USocialChallengeScoreBonusArchetype
---@field Bonus int32
---@field InstanceCount int32
FSocialChallengeScoreBonus = {}



---@class FSocialChallengeScoreCache
FSocialChallengeScoreCache = {}


---@class FSocialChallengeScoreData
---@field Version int32
---@field MoneyObtained int64
---@field ChallengeTime int64
---@field TimeRemaining int64
---@field PeakAdrenaline int32
---@field MeleeKills int32
---@field HealthItemsCollected int32
---@field WeakPointKills int32
---@field MidAirMeleeKills int32
---@field AdrenalineResets int32
---@field EnemiesKilled int32
---@field SmallEnemiesKilled int32
---@field MediumEnemiesKilled int32
---@field LargeEnemiesKilled int32
---@field BossEnemiesKilled int32
---@field RoomsExplored int32
---@field RoomsUnexplored int32
---@field RoomsCleared int32
---@field NoDamageRooms TMap<int32, int32>
---@field DamageTaken float
---@field DamageTakenInstances int32
---@field KeysCollected int32
---@field TTNormalProficiencyCollectionCount int32
---@field TTExtraProficiencyCollectionCount int32
---@field TTBossKillsPerPhase TArray<int32>
---@field TTphase int32
---@field TTRoom int32
---@field CorpseLocation FVector
---@field FinishType EChallengeFinishType
---@field TimeOfCompletion double
---@field CrystalLizardsKilledTT int32
FSocialChallengeScoreData = {}



---@class FSocialChallengeScoreInstance
---@field Timestamp float
---@field Archetype USocialChallengeScoreBonusArchetype
---@field BaseScore int32
---@field InstanceCount int32
---@field Multiplier float
---@field FinalScore int32
FSocialChallengeScoreInstance = {}



---@class FSocialChallengeSubmission
---@field ChallengeId int64
---@field Score FSocialChallengeScore
FSocialChallengeSubmission = {}



---@class FSocialChallengeTier
---@field RequiredBiomes TArray<EBiome>
---@field RequiredThings TArray<FName>
---@field BiomePool TArray<EBiome>
FSocialChallengeTier = {}



---@class FSocialCorpse
---@field ID FString
---@field accountId FString
---@field RoomId int64
---@field PayloadId FString
---@field RelativeLocation FVector
---@field GhostAvailable boolean
---@field GhostRetrieved boolean
---@field GhostReplay TArray<uint8>
---@field GhostReplyType ECorpseReplyType
---@field GhostReplyAccountId int64
---@field GhostLastShownTimestamp double
---@field RetrievedTimestamp double
---@field UnsupportedReplay boolean
---@field UnsupportedReplayVersion int32
FSocialCorpse = {}



---@class FSocialCorpseData
---@field Corpses TArray<FSocialCorpse>
FSocialCorpseData = {}



---@class FSocialCorpseDataCache
---@field Rooms TMap<int64, FSocialRoomCorpseData>
FSocialCorpseDataCache = {}



---@class FSocialCorpseReplyData
---@field CorpseID int32
---@field ReplyType ECorpseReplyType
---@field Slot uint8
---@field LastModifiedTime FDateTime
---@field LastModifiedAccountId FString
---@field HasBeenActedOn boolean
FSocialCorpseReplyData = {}



---@class FSocialCorpseScore
---@field Version int32
---@field Corpses TArray<FSocialCorpse>
FSocialCorpseScore = {}



---@class FSocialDummyPlayerStateState
---@field PedestalValues TArray<float>
---@field PedestalCycles TArray<float>
---@field CapsuleValues TArray<float>
FSocialDummyPlayerStateState = {}



---@class FSocialGhostEnemies
---@field EnemyTypes TArray<TSoftClassPtr<AEnemyBase>>
FSocialGhostEnemies = {}



---@class FSocialGhostInventoryState
---@field Money int32
---@field MainWeapon UClass
---@field SubWeapon UClass
---@field Curses TArray<UClass>
FSocialGhostInventoryState = {}



---@class FSocialGhostManagerData
---@field VisitedRoomIndices TArray<int32>
---@field SpawnedGhostRoomIndices TArray<int32>
---@field GhostSpawnLocations TArray<FVector>
FSocialGhostManagerData = {}



---@class FSocialGhostReplay
---@field Version int32
---@field TimeOfDeath double
---@field CauseOfDeath ESocialGhostCauseOfDeath
---@field InventoryState FSocialGhostInventoryState
---@field RoomId int64
---@field accountId FString
---@field Snapshots TArray<FSocialGhostReplaySnapshot>
---@field BoneNames TArray<FName>
---@field Biome EBiome
FSocialGhostReplay = {}



---@class FSocialGhostReplaySnapshot
---@field Timestamp double
---@field RootTransform FTransform
---@field FloorOffset float
---@field BoneTransforms TArray<FTransform>
---@field AttachedMeshes TArray<FSocialGhostReplaySnapshotAttachedMesh>
---@field Flags uint16
FSocialGhostReplaySnapshot = {}



---@class FSocialGhostReplaySnapshotAttachedMesh
---@field SocketName FString
---@field Transform FTransform
---@field MeshName FString
---@field bSkeletalMesh boolean
FSocialGhostReplaySnapshotAttachedMesh = {}



---@class FSocialLobbyDevicePlayerLoadout
---@field MaxHealth float
---@field ProficiencyLevel int32
---@field ConsumableSlots int32
FSocialLobbyDevicePlayerLoadout = {}



---@class FSocialPlayerCorpseData
---@field RoomCorpseData TMap<int64, FSocialCorpseData>
FSocialPlayerCorpseData = {}



---@class FSocialPlayerState
---@field Clarity float
---@field LastClarityChangeTime FDateTime
---@field UsedPedestals TArray<FSocialUsePedestalRecord>
---@field ChallengeSubmissions TArray<FSocialChallengeSubmission>
---@field TimelessTowerSubmission FSocialChallengeSubmission
---@field StartedChallengeIds TArray<int64>
---@field RemoteCorpseCache FSocialCorpseDataCache
---@field LocalCorpseList TArray<FSocialGhostReplay>
---@field CorpseReplyList TArray<FSocialCorpseReplyData>
---@field RoomStates TMap<int64, FSocialRoomState>
---@field DummyState FSocialDummyPlayerStateState
---@field OrphanMatchId FString
---@field LocalCorpseListDirty boolean
---@field bHasSeenGhost boolean
---@field TimeSinceLastZombieSpawn float
FSocialPlayerState = {}



---@class FSocialRecentCorpseData
---@field PlayerData TMap<FString, FSocialPlayerCorpseData>
FSocialRecentCorpseData = {}



---@class FSocialRoomCorpseData
---@field RoomId int64
---@field Corpses TArray<FSocialCorpse>
FSocialRoomCorpseData = {}



---@class FSocialRoomState
---@field LastSubmittedCorpseTimestamp double
FSocialRoomState = {}



---@class FSocialUsePedestalRecord
---@field ID int32
---@field cycle int32
---@field TookFromPedestal boolean
FSocialUsePedestalRecord = {}



---@class FSoftCollisionInstance
---@field OverlappingComponent USoftCollisionComponent
---@field DepenetrationDir FVector
---@field DepenetrationDist float
FSoftCollisionInstance = {}



---@class FSoftCollisionResponseData
---@field DepenetrationForceMagnitude float
---@field AllowedOverlap float
---@field PercentageAppliedToPlayer float
---@field MovementAssistPercentage float
FSoftCollisionResponseData = {}



---@class FSoftDamageCapDamageSourceEntry
---@field DamageSource TSoftClassPtr<AActor>
---@field bAcceptDamageFromSource boolean
FSoftDamageCapDamageSourceEntry = {}



---@class FSoftDamageCapSettings
---@field bOverrideDefaultSettings boolean
---@field DamageCap float
---@field TimeInterval float
---@field DamageMultiplierAboveCap float
---@field bAllDamageContributesToCap boolean
FSoftDamageCapSettings = {}



---@class FSourceRotationPair
---@field Source EEnemyRotationSource
---@field Rotation FRotator
---@field LocomotionRotation FRotator
---@field TargetLocation FVector
---@field bIsTargetLocationValid boolean
---@field bIsAffectedByRequest boolean
FSourceRotationPair = {}



---@class FSpawnArg
FSpawnArg = {}


---@class FSpawnVisual
---@field Category FName
---@field bHideMesh boolean
---@field Anim FAnimationRequestDescriptor
---@field VFXComponent FName
---@field SkeletalMeshName FName
---@field DurationType ESpawnVisualDurationType
---@field CustomDuration float
---@field bBlockControllerBehaviors boolean
FSpawnVisual = {}



---@class FSpawnerBulletInstance
FSpawnerBulletInstance = {}


---@class FSpringRecoilSettings
---@field bUseRecoilPattern boolean
---@field RecoilPattern TArray<FVector2D>
---@field FixedHorizontalRecoilRange FVector2D
---@field FixedVerticalRecoil float
---@field RecoilDuration float
---@field SpringConstantShooting float
---@field SpringConstantRecovery float
---@field FocusAimMultiplier FVector2D
FSpringRecoilSettings = {}



---@class FSubInstanceActionSegment
---@field Type EAnimationActionSegmentType
---@field duration float
---@field index int32
FSubInstanceActionSegment = {}



---@class FSublevelSelectorSaveData
---@field SelectedSublevelDressing FLevelDressing
---@field bSublevelSelected boolean
---@field SavedSelectedLevels TSet<FString>
---@field bLevelWasLoaded boolean
FSublevelSelectorSaveData = {}



---@class FSuitAttachmentData
---@field AttachmentName FName
---@field Mesh UStaticMesh
---@field SocketName FName
---@field RelativeTransform FTransform
---@field bCastShadow boolean
---@field TranslucentSortPriority int32
FSuitAttachmentData = {}



---@class FSuitSceneComponentData
---@field ComponentTagName FName
---@field RelativeTransform FTransform
FSuitSceneComponentData = {}



---@class FSupportedResolutionsTableRow : FTableRowBase
---@field AspectRatioText FText
---@field AspectRatioValue float
---@field Resolutions TArray<FIntPoint>
FSupportedResolutionsTableRow = {}



---@class FSurfaceToAudioMaterial : FTableRowBase
---@field Surface EPhysicalSurface
---@field AudioMaterialName FName
FSurfaceToAudioMaterial = {}



---@class FSuspendAndResumeData
---@field ResumePointCreationTime FDateTime
---@field PersistenceBiomeData TArray<FBiomeData>
---@field ProgressManagerData FProgressManagerSaveData
---@field SublevelSelectorData TMap<int32, FSublevelSelectorSaveData>
---@field BiomeTransitionData FBiomeTransitionData
---@field AngenRoomActivationData FAngenRoomActivationManagerData
---@field LevelGenMapData FLevelGenMapData
---@field PlayerStateData FPlayerStateSaveData
---@field HouseData FHouseManagerData
---@field CycleFlags TSet<FName>
---@field SocialGhostManagerData FSocialGhostManagerData
FSuspendAndResumeData = {}



---@class FSwampLevelGenInfo : FLevelGenInfoBase
---@field FirstPlayInSwamp boolean
FSwampLevelGenInfo = {}



---@class FTargetInfo
---@field Target TWeakObjectPtr<AActor>
---@field Invisible boolean
---@field DirectlyVisible boolean
---@field RelativePos FVector
---@field LastKnownPos FVector
---@field DistSq float
---@field InsideActivationRange boolean
---@field bAlive boolean
---@field PathCheckPassed boolean
---@field RoomIndex int32
---@field TimeFirstSeen float
---@field TimeLastSeen float
FTargetInfo = {}



---@class FTargetedAnimationRequestDescriptor
---@field RequestDescriptor FAnimationRequestDescriptor
---@field LocalTargetOffset FVector
FTargetedAnimationRequestDescriptor = {}



---@class FTentacleStateAudioEntry
---@field States TArray<ETentacleState>
---@field StatesWithIds TArray<FTentacleStatePlusId>
---@field OnEnterAudio UAkAudioEvent
---@field OnLeaveAudio UAkAudioEvent
FTentacleStateAudioEntry = {}



---@class FTentacleStatePlusId
---@field State ETentacleState
---@field ID int32
FTentacleStatePlusId = {}



---@class FThreatData
---@field OwnerObject UObject
---@field TargetObject UObject
FThreatData = {}



---@class FTicketRequest
---@field Enemy AEnemyBase
---@field Category uint8
FTicketRequest = {}



---@class FTicketScoreFunctionArray
---@field ScoringFunctions TArray<UEnemyTicketScoringFunction>
FTicketScoreFunctionArray = {}



---@class FTimedGunUpgrades
---@field Upgrades FGunUpgrades
---@field duration float
---@field DisplayName FText
---@field Type EGunUpgradeType
FTimedGunUpgrades = {}



---@class FTimelessTowerData
---@field BestRoom int32
---@field BestPhase int32
---@field BestScore int64
---@field UsedLeaderboardIndex int64
FTimelessTowerData = {}



---@class FTimelessTowerLevelGenInfo : FLevelGenInfoBase
---@field TTPersistentStage1 EFlagOption
---@field TT_Trailer_Run EFlagOption
FTimelessTowerLevelGenInfo = {}



---@class FTimelessTower_OpenLevelGenInfo : FLevelGenInfoBase
---@field TTPersistentStage2 EFlagOption
---@field TT_Trailer_Run EFlagOption
FTimelessTower_OpenLevelGenInfo = {}



---@class FTouristAnimInstanceProxy : FAnimInstanceProxy
FTouristAnimInstanceProxy = {}


---@class FTouristBlueprintAnalyticsEventAttribute
---@field Name FString
---@field value FString
FTouristBlueprintAnalyticsEventAttribute = {}



---@class FTouristCharacterLocomotionData
---@field Character ATouristCharacter
---@field CurrentLocomotionInfo FLocomotionCharacterInfo
---@field TargetLocomotionInfo FLocomotionCharacterInfo
---@field SpecialInfo TMap<TSubclassOf<ULocomotionSpecialCharacterInfo_Base>, ULocomotionSpecialCharacterInfo_Base>
FTouristCharacterLocomotionData = {}



---@class FTouristDamageDescriptor
---@field damage float
---@field DamageDuration float
---@field MaxDoTStacks int32
---@field InstantlyTickAtStart boolean
---@field DamageDelay float
---@field Impulse float
---@field DamageTypeClass TSubclassOf<UTouristDamageType>
---@field DamageTarget uint8
---@field ImpactType EDamageImpactType
---@field SourceType EDamageSourceType
---@field ForceLocationMultiplierProcessing boolean
---@field RadialData FTouristRadialDamageDescriptor
---@field ExplosionData FTouristExplosionDamageDescriptor
---@field DamagePfx FName
---@field bIgnoreInvulnerability boolean
---@field bIgnoreAbsorbers boolean
FTouristDamageDescriptor = {}



---@class FTouristDamageEvent
---@field EventID int32
---@field FiringEventId int32
---@field Descriptor FTouristDamageDescriptor
---@field ImpactPoint FVector
---@field Component TWeakObjectPtr<UPrimitiveComponent>
---@field BoneName FName
---@field DamageSource TWeakObjectPtr<AActor>
---@field DamageSourceClass TSoftClassPtr<AActor>
---@field DamageSourceComponent TWeakObjectPtr<UActorComponent>
---@field DamageInstigator TWeakObjectPtr<AController>
---@field DamageInstigatorActor TWeakObjectPtr<AActor>
---@field DamageInstigatorActorClass TSoftClassPtr<AActor>
---@field DamageDirection FVector
---@field LocalDamageMultiplier float
---@field HealthLost float
---@field bFromClient boolean
FTouristDamageEvent = {}



---@class FTouristExplosionDamageDescriptor
---@field ParticleName FName
---@field AudioEvent UAkAudioEvent
---@field FluidForce float
FTouristExplosionDamageDescriptor = {}



---@class FTouristGameplayAbilityBindInfo
---@field GameplayAbilityClass TSubclassOf<UGameplayAbility_Tourist>
---@field AbilityLevel int32
FTouristGameplayAbilityBindInfo = {}



---@class FTouristGameplayEffectHandle
---@field AbilityActor TWeakObjectPtr<AActor>
---@field EffectClasses TArray<TSubclassOf<UGameplayEffect>>
FTouristGameplayEffectHandle = {}



---@class FTouristIKLimbResult
---@field SocketName FName
---@field SuggestedLocation FVector
---@field SuggestedRotation FRotator
---@field ImpactNormal FVector
---@field VerticalOffset float
FTouristIKLimbResult = {}



---@class FTouristIKQueryResult
---@field Results TArray<FTouristIKLimbResult>
---@field SuggestedLocalCharacterOffset FVector
---@field SuggestedPelvisRotation FRotator
FTouristIKQueryResult = {}



---@class FTouristIKQuerySettings
---@field IKTraceOffsetUp float
---@field IKTraceOffsetDown float
---@field SphereRadius float
---@field ResultTransformSpace ERelativeTransformSpace
---@field VerticalOffsetMode ETouristIKPelvisVerticalOffsetMode
FTouristIKQuerySettings = {}



---@class FTouristPathNode
---@field Location FVector
---@field AreaFlags ETouristNavAreaFlags
---@field CustomLink TScriptInterface<INavLinkCustomInterface>
---@field bIsNavLink boolean
FTouristPathNode = {}



---@class FTouristPlayerGameplayStateHandle
---@field PlayerCharacter TWeakObjectPtr<ACharacter>
---@field PlayerController TWeakObjectPtr<APlayerController>
---@field CameraModifier TWeakObjectPtr<UCameraModifier_HMQCamera>
---@field EffectHandle FTouristGameplayEffectHandle
FTouristPlayerGameplayStateHandle = {}



---@class FTouristRadialDamageDescriptor
---@field DamageRadius float
---@field OuterDamage float
---@field Falloff float
---@field CollisionChannel ECollisionChannel
FTouristRadialDamageDescriptor = {}



---@class FTouristSavedPose
FTouristSavedPose = {}


---@class FTourist_AnimNode_SavePose : FAnimNode_Base
---@field InPose FPoseLink
---@field PoseName FName
---@field bComponentSpace boolean
FTourist_AnimNode_SavePose = {}



---@class FTrackedAnimActionInstance_Base
---@field BaseAction UCharacterAnimAction_Base
---@field TiedRequest UAnimRequestDescriptionData_Base
---@field ActionSegmentIndex int32
---@field ActionSegmentTimer float
FTrackedAnimActionInstance_Base = {}



---@class FTrackedAnimActionInstance_Composite : FTrackedAnimActionInstance_Base
---@field CompositeAction UCharacterAnimAction_Composite
---@field CurrentMontageAction UCharacterAnimAction_Montage
---@field PreviousMontageAction UCharacterAnimAction_Montage
---@field bIsActive boolean
---@field bMarkedForAdvance boolean
FTrackedAnimActionInstance_Composite = {}



---@class FTrackedAnimActionInstance_Montage : FTrackedAnimActionInstance_SingleBase
---@field CachedActionSegment FMontageActionSegment
---@field MontageAction UCharacterAnimAction_Montage
---@field MontageInstanceID int32
---@field bAllowTargetTracking boolean
FTrackedAnimActionInstance_Montage = {}



---@class FTrackedAnimActionInstance_SingleBase : FTrackedAnimActionInstance_Base
---@field Action UCharacterAnimAction_SingleBase
---@field ControlFlags ECharacterControlFlags
---@field bUseOverrideControlFlags boolean
---@field OverrideControlFlags ECharacterControlFlags
FTrackedAnimActionInstance_SingleBase = {}



---@class FTrackedAnimActionInstance_SubInstance : FTrackedAnimActionInstance_SingleBase
---@field SubInstanceAction UCharacterAnimAction_SubInstance
---@field InstanceId int32
FTrackedAnimActionInstance_SubInstance = {}



---@class FTrackedCharacterBoneData
---@field BoneName FName
---@field BoneLocation FVector
---@field BoneVelocity FVector
FTrackedCharacterBoneData = {}



---@class FTrackedCharacterLimb
---@field SocketName FName
---@field GroundedCheckDistance float
---@field WorldLocation FVector
---@field RelativeLocation FVector
---@field WorldVelocity FVector
---@field RelativeVelocity FVector
---@field bIsGrounded boolean
FTrackedCharacterLimb = {}



---@class FTreeDefinition
---@field Mesh UStaticMesh
---@field ActorClass TSubclassOf<AActor>
---@field ActorExtent FVector
---@field ActorRelativeTransform FTransform
---@field TrunkRadius float
---@field TrunkHeight float
---@field CanopyRadius float
---@field LandscapeNormalAngle float
---@field bAllowTrunkCanopyIntersection boolean
---@field bMeshAffectDistanceFieldLighting boolean
---@field bCollision boolean
FTreeDefinition = {}



---@class FTreeDefinitionReference
---@field Asset UTreeDefinitionAsset
---@field Mesh UStaticMesh
---@field weight float
---@field MinScale float
---@field MaxScale float
---@field MinOffset FVector
---@field MaxOffset FVector
---@field ScaleZOffset boolean
---@field MaxCount int32
FTreeDefinitionReference = {}



---@class FTrophyData
---@field TrophyName FText
---@field TrophyID FName
---@field Texture UTexture2D
FTrophyData = {}



---@class FTutorialState
---@field TutorialName FName
---@field Timestamp FDateTime
---@field bNew boolean
FTutorialState = {}



---@class FUnderwaterRuinsLevelGenInfo : FLevelGenInfoBase
---@field UR_FirstPlay boolean
---@field EyeOfTruthIntro boolean
FUnderwaterRuinsLevelGenInfo = {}



---@class FUpdateThingStatsParams
---@field Thing AActor
FUpdateThingStatsParams = {}



---@class FWallDetectResult
---@field bHit boolean
---@field HitLocation FVector
---@field Distance2D float
---@field angle float
---@field Material UMaterialInterface
FWallDetectResult = {}



---@class FWeaponCollectibleMetaModifier
---@field CodeName FName
---@field SpawnArgs TArray<FSpawnArg>
FWeaponCollectibleMetaModifier = {}



---@class FWeaponMetaModifierData
---@field CodeName FName
---@field Type EMetaModifierType
---@field Description1 FText
---@field Description2 FText
---@field Icon1 TSoftObjectPtr<UTexture2D>
---@field Icon2 TSoftObjectPtr<UTexture2D>
---@field bIsEnabled boolean
FWeaponMetaModifierData = {}



---@class FWeaponMetaModifierSpawnInfo
---@field Type EMetaModifierType
---@field SpawnWeight float
---@field SpawnArgs TArray<FSpawnArg>
---@field DisabledClasses TArray<FString>
---@field ModTags TSet<FName>
---@field ModBlockedTags TSet<FName>
---@field ModRequiredTags TSet<FName>
FWeaponMetaModifierSpawnInfo = {}



---@class Fingerprint
---@field SublevelFingerprint TArray<FString>
Fingerprint = {}



---@class IAimingActor : IInterface
IAimingActor = {}

---@param AimDir FRotator
---@return boolean
function IAimingActor:GetAimDirInterface(AimDir) end


---@class IAnimationRequestSource : IInterface
IAnimationRequestSource = {}

---@param RequestData UAnimRequestDescriptionData_Base
---@param ActionInstance FTrackedAnimActionInstance_Base
---@param SegmentType EAnimationActionSegmentType
function IAnimationRequestSource:OnRequestActionSegmentReached(RequestData, ActionInstance, SegmentType) end
---@param RequestData UAnimRequestDescriptionData_Base
---@param outNewTarget FRootMotionTarget
---@return boolean
function IAnimationRequestSource:HandleDeltaCorrectionTargetTracking(RequestData, outNewTarget) end
---@param RequestData UAnimRequestDescriptionData_Base
---@param TotalDuration float
---@param TimeRemaining float
function IAnimationRequestSource:HandleDeltaCorrectionProgress(RequestData, TotalDuration, TimeRemaining) end
---@param RequestData UAnimRequestDescriptionData_Base
---@param Event EDeltaCorrectionEvent
function IAnimationRequestSource:HandleDeltaCorrectionEvent(RequestData, Event) end
---@param RequestData UAnimRequestDescriptionData_Base
---@param EventType EAnimationRequestEventType
function IAnimationRequestSource:HandleAnimationRequestEvent(RequestData, EventType) end


---@class IBulletSpawnDataReceiver : IInterface
IBulletSpawnDataReceiver = {}

---@param BulletSpawnData FBulletSpawnData
function IBulletSpawnDataReceiver:SetBulletSpawnData(BulletSpawnData) end
---@param BulletInstance FSpawnerBulletInstance
function IBulletSpawnDataReceiver:SetBulletInstance(BulletInstance) end


---@class ICinematicActorInterface : IInterface
ICinematicActorInterface = {}

---@param EventName FName
function ICinematicActorInterface:CallCinematicEvent(EventName) end


---@class ICinematicBindingInterface : IInterface
ICinematicBindingInterface = {}

---@param Cinematic ACinematicActor
---@param Source UObject
function ICinematicBindingInterface:BindingStopCinematic(Cinematic, Source) end
---@param Cinematic ACinematicActor
---@param Source UObject
function ICinematicBindingInterface:BindingStartCinematic(Cinematic, Source) end
---@param Cinematic ACinematicActor
---@param Source UObject
---@param SkipGate FName
function ICinematicBindingInterface:BindingSkipCinematic(Cinematic, Source, SkipGate) end


---@class ICinematicLauncherInterface : IInterface
ICinematicLauncherInterface = {}

---@param InPlayerController APlayerController
---@param InInitiatorActor AActor
---@param bRunConditions boolean
---@return boolean
function ICinematicLauncherInterface:LaunchCinematic(InPlayerController, InInitiatorActor, bRunConditions) end


---@class ICinematicObjectInterface : IInterface
ICinematicObjectInterface = {}

---@param Cinematic ACinematicActor
function ICinematicObjectInterface:StopCinematic(Cinematic) end
---@param Cinematic ACinematicActor
function ICinematicObjectInterface:StartCinematic(Cinematic) end
---@param Cinematic ACinematicActor
function ICinematicObjectInterface:SkipCinematic(Cinematic) end
---@param Cinematic ACinematicActor
function ICinematicObjectInterface:RunCinematic(Cinematic) end
---@param Cinematic ACinematicActor
function ICinematicObjectInterface:PreStartCinematic(Cinematic) end


---@class IClientGenericSignalReceiver : IInterface
IClientGenericSignalReceiver = {}

---@param value FString
function IClientGenericSignalReceiver:ReceiveGenericSignal(value) end


---@class IConnectedActor : IInterface
IConnectedActor = {}

---@return AActor
function IConnectedActor:GetConnectedActor() end


---@class ICustomCommandScriptComponentInterface : IInterface
ICustomCommandScriptComponentInterface = {}

---@param SpawnData FBulletSpawnData
function ICustomCommandScriptComponentInterface:SetupBulletSpawnData(SpawnData) end


---@class IDamageShapeActorInterface : IInterface
IDamageShapeActorInterface = {}

---@param DamageShapeTypeClass TSubclassOf<UDamageShapeType>
function IDamageShapeActorInterface:SetDamageShapeTypeClass(DamageShapeTypeClass) end


---@class IDebugCommands_Interface : IInterface
IDebugCommands_Interface = {}


---@class IDespawnableActorSerializer : IInterface
IDespawnableActorSerializer = {}

---@param Vector FVector
function IDespawnableActorSerializer:SerializeVector(Vector) end
---@param UInt uint32
function IDespawnableActorSerializer:SerializeUInt(UInt) end
---@param String FString
function IDespawnableActorSerializer:SerializeString(String) end
---@param Rotator FRotator
function IDespawnableActorSerializer:SerializeRotator(Rotator) end
---@param Name FName
function IDespawnableActorSerializer:SerializeName(Name) end
---@param Int int32
function IDespawnableActorSerializer:SerializeInt(Int) end
---@param Guid FGuid
function IDespawnableActorSerializer:SerializeGuid(Guid) end
---@param Float float
function IDespawnableActorSerializer:SerializeFloat(Float) end
---@param DataAsset UDataAsset
function IDespawnableActorSerializer:SerializeDataAsset(DataAsset) end
---@param Color FLinearColor
function IDespawnableActorSerializer:SerializeColor(Color) end
---@param Byte uint8
function IDespawnableActorSerializer:SerializeByte(Byte) end
---@param Bool boolean
function IDespawnableActorSerializer:SerializeBool(Bool) end
---@param ActorClass TSubclassOf<AActor>
function IDespawnableActorSerializer:SerializeActorClass(ActorClass) end
---@param Texture UTexture2D
function IDespawnableActorSerializer:Serialize2DTexture(Texture) end
---@return boolean
function IDespawnableActorSerializer:IsRespawn() end
---@return boolean
function IDespawnableActorSerializer:IsDespawn() end
---@return int32
function IDespawnableActorSerializer:GetSerializedVersion() end


---@class IDiscoveryNameInterface : IInterface
IDiscoveryNameInterface = {}

---@return FName
function IDiscoveryNameInterface:GetDiscoveryName() end


---@class IEnemyShieldInterface : IInterface
IEnemyShieldInterface = {}

---@return boolean
function IEnemyShieldInterface:WillMeleeHitKillAttachedEnemy() end


---@class IEnvironmentSkyDataAssetInterface : IInterface
IEnvironmentSkyDataAssetInterface = {}

---@param NewIntensity float
function IEnvironmentSkyDataAssetInterface:SetStormIntensity(NewIntensity) end


---@class IHasHealthBar : IInterface
IHasHealthBar = {}

---@return boolean
function IHasHealthBar:WasRequestedToHideHealthBar() end
---@return boolean
function IHasHealthBar:ShouldShowHealthBar() end
---@return TArray<float>
function IHasHealthBar:GetHealthBarDivisors() end


---@class IImmobilizingHazard : IInterface
IImmobilizingHazard = {}

---@return boolean
function IImmobilizingHazard:ShouldShowDashPrompt() end
---@return boolean
function IImmobilizingHazard:IsAlive() end
---@return boolean
function IImmobilizingHazard:HasStrongCatch() end
function IImmobilizingHazard:HandleCaughtCharacterEscaped() end
---@return TSubclassOf<AEffectContainer>
function IImmobilizingHazard:GetDetachEffect() end
---@return TSubclassOf<AEffectContainer>
function IImmobilizingHazard:GetAttachEffect() end


---@class IInteractable : IInterface
IInteractable = {}

---@param InteractingController ATouristPlayerController
---@return boolean
function IInteractable:WantsFocus(InteractingController) end
---@return boolean
function IInteractable:ShouldInputBeDelayed() end
---@param InteractingController AController
---@return boolean
function IInteractable:SecondaryInteract(InteractingController) end
---@param InteractingController AController
---@param Mode EInteractMode
---@param Progress float
function IInteractable:ReportDelayedInteractProgress(InteractingController, Mode, Progress) end
---@param InteractingController ATouristPlayerController
function IInteractable:LoseFocus(InteractingController) end
---@return boolean
function IInteractable:IsSecondaryInteractionAllowed() end
---@param InteractingController ATouristPlayerController
---@return boolean
function IInteractable:IsAllowedWhenJumping(InteractingController) end
---@param InteractingController AController
---@return boolean
function IInteractable:Interact(InteractingController) end
---@return float
function IInteractable:GetInteractionScoreBias() end
---@param InteractingController ATouristPlayerController
---@return boolean
function IInteractable:GetInteractionDelayRequired(InteractingController) end
---@param InteractingController ATouristPlayerController
---@return float
function IInteractable:GetInteractionDelay(InteractingController) end
---@param InteractingController AController
---@return FInteractionArgs
function IInteractable:GetInteractArgs(InteractingController) end
---@param InteractingController ATouristPlayerController
function IInteractable:GainFocus(InteractingController) end
---@param InteractingController AController
---@param Mode EInteractMode
---@param Complete boolean
function IInteractable:EndDelayedInteract(InteractingController, Mode, Complete) end
---@param InteractingController ATouristPlayerController
function IInteractable:EndAnalysing(InteractingController) end
---@param InteractingController AController
---@param Mode EInteractMode
function IInteractable:BeginDelayedInteract(InteractingController, Mode) end
---@param InteractingController AController
function IInteractable:BecomeUninteractable(InteractingController) end
---@param InteractingController AController
function IInteractable:BecomeInteractable(InteractingController) end


---@class IInteractableCondition : IInterface
IInteractableCondition = {}

---@param Interactable UObject
---@param InteractingController AController
---@return boolean
function IInteractableCondition:WantsInteractableFocus(Interactable, InteractingController) end
---@param Args FInteractionArgs
---@param Interactable UObject
---@param InteractingController AController
---@return boolean
function IInteractableCondition:SatisfyInteract(Args, Interactable, InteractingController) end
---@return int32
function IInteractableCondition:GetInteractConditionPriority() end
---@param Interactable UObject
---@param InteractingController AController
---@return FInteractionArgs
function IInteractableCondition:GetInteractArgs(Interactable, InteractingController) end


---@class ILevelGenLocatorSpawnInfoInterface : IInterface
ILevelGenLocatorSpawnInfoInterface = {}

---@param RoomIndex int32
---@param ReferredRoomIndex int32
---@param OriginalLocator ULevelGenRoomLocator
function ILevelGenLocatorSpawnInfoInterface:SetAngenSpawnInfo(RoomIndex, ReferredRoomIndex, OriginalLocator) end


---@class IMaterializerInterface : IInterface
IMaterializerInterface = {}

---@param SpawnInfo FCategoryMaterializerSpawnInfo
function IMaterializerInterface:SetupMaterializerSpawnInfo(SpawnInfo) end


---@class IMeleeReactionInterface : IInterface
IMeleeReactionInterface = {}

---@param Instigator AActor
function IMeleeReactionInterface:TriggerMeleeReaction(Instigator) end


---@class IMetaModifierVisualActorInterface : IInterface
IMetaModifierVisualActorInterface = {}

---@param MetaModifier UMetaModifierComponent
function IMetaModifierVisualActorInterface:UpdateParasiteState(MetaModifier) end
---@param MetaModifier UMetaModifierComponent
function IMetaModifierVisualActorInterface:ReferenceVisualActor(MetaModifier) end
---@param MetaModifier UMetaModifierComponent
---@return boolean
function IMetaModifierVisualActorInterface:IsVisualActorAutoAttachDisabled(MetaModifier) end
---@param MetaModifier UMetaModifierComponent
function IMetaModifierVisualActorInterface:InitializeVisualActor(MetaModifier) end
---@param MetaModifier UMetaModifierComponent
function IMetaModifierVisualActorInterface:DisconnectVisualActor(MetaModifier) end
---@param MetaModifier UMetaModifierComponent
---@param DetachActor AActor
function IMetaModifierVisualActorInterface:DetachVisualActor(MetaModifier, DetachActor) end
---@param MetaModifier UMetaModifierComponent
function IMetaModifierVisualActorInterface:DestroyVisualActor(MetaModifier) end
---@param MetaModifier UMetaModifierComponent
function IMetaModifierVisualActorInterface:DereferenceVisualActor(MetaModifier) end
---@param MetaModifier UMetaModifierComponent
function IMetaModifierVisualActorInterface:ConnectVisualActor(MetaModifier) end
---@param MetaModifier UMetaModifierComponent
---@param AttachActor AActor
function IMetaModifierVisualActorInterface:AttachVisualActor(MetaModifier, AttachActor) end


---@class INamedActor : IInterface
INamedActor = {}

---@return FText
function INamedActor:GetDisplayName() end


---@class IPenetrable : IInterface
IPenetrable = {}

---@return UAkAudioEvent
function IPenetrable:GetPiercingSound() end
---@param DamageTarget int32
---@return int32
function IPenetrable:GetPiercingCost(DamageTarget) end


---@class IPersistentNameInterface : IInterface
IPersistentNameInterface = {}

---@return EPersistentThingType
function IPersistentNameInterface:GetPersistentType() end
---@return FName
function IPersistentNameInterface:GetPersistentName() end


---@class IPhotoModeInterface : IInterface
IPhotoModeInterface = {}

---@param hidden boolean
function IPhotoModeInterface:SetModelHidden(hidden) end
---@param EnteredFromSystemMenu boolean
function IPhotoModeInterface:SetEnteredState(EnteredFromSystemMenu) end
---@return boolean
function IPhotoModeInterface:GetModelHidden() end


---@class IPlayerInputInterface : IInterface
IPlayerInputInterface = {}


---@class IPreviewSampleInterface : IInterface
IPreviewSampleInterface = {}

function IPreviewSampleInterface:OnUpdatedPlayerProfileInfo() end
function IPreviewSampleInterface:OnStopDisplaying() end
function IPreviewSampleInterface:OnStartDisplaying() end


---@class ISayAnimInstanceInterface : IInterface
ISayAnimInstanceInterface = {}

function ISayAnimInstanceInterface:SayEnd() end
function ISayAnimInstanceInterface:SayBegin() end
---@param bNewAnimate boolean
function ISayAnimInstanceInterface:SayAnimate(bNewAnimate) end


---@class ISoftCappedDamageSource : IInterface
ISoftCappedDamageSource = {}

---@return boolean
function ISoftCappedDamageSource:ShouldApplySoftDamageCap() end


---@class ISoftCollisionActor : IInterface
ISoftCollisionActor = {}

---@return boolean
function ISoftCollisionActor:UseCustomSoftCollisionPushOrigin() end
---@return boolean
function ISoftCollisionActor:IsCollisionValid() end
---@return UPrimitiveComponent
function ISoftCollisionActor:GetSoftCollisionPrimitive() end
---@param OtherActor AActor
---@return FVector
function ISoftCollisionActor:GetCustomSoftCollisionPushOrigin(OtherActor) end


---@class ISpecialDamageCollisionObject : IInterface
ISpecialDamageCollisionObject = {}

---@param DamageParams FDamageParams
---@return boolean
function ISpecialDamageCollisionObject:CanHit(DamageParams) end


---@class ITouristPersistentDataInterface : IInterface
ITouristPersistentDataInterface = {}


---@class UAchievementsDataAsset : UDataAsset
---@field bBackgroundInPreview boolean
---@field Sections TArray<FAchievementsSection>
UAchievementsDataAsset = {}



---@class UAcousticTheme : UDataAsset
---@field AuxBus FSoftObjectPath
---@field AuxBusObj UAkAuxBus
---@field TimeTravelBiome FName
---@field AuxBus_TTVariant FSoftObjectPath
---@field AuxBus_TTVariantObj UAkAuxBus
---@field SendLevel float
---@field FadeRate float
---@field Priority float
UAcousticTheme = {}



---@class UActivitiesManager : UObject
---@field MaxUpdateTime float
---@field ActivitiesClass TArray<TSubclassOf<UActivity>>
---@field Activities TArray<UActivity>
---@field BiomeMasteryTrophyIDs TArray<FName>
---@field HiddenTrophyIDs TArray<FName>
---@field CachedIntentActivities TArray<FString>
UActivitiesManager = {}

---@param NewMainWeapon APlayerWeapon
---@param OldMainWeapon APlayerWeapon
function UActivitiesManager:WeaponChanged(NewMainWeapon, OldMainWeapon) end
---@param TrophyID FName
function UActivitiesManager:ToggleTrophyStatus(TrophyID) end
---@param TrophyID FName
---@return boolean
function UActivitiesManager:SeenTrophy(TrophyID) end
---@param ActivityId FName
---@return boolean
function UActivitiesManager:SeenActivity(ActivityId) end
---@param Pawn APawn
function UActivitiesManager:OnPlayerUnpossessed(Pawn) end
---@param Pawn APawn
function UActivitiesManager:OnPlayerPossessed(Pawn) end
---@return boolean
function UActivitiesManager:NewActivityOrTrophy() end
---@param TrophyID FName
---@return boolean
function UActivitiesManager:IsTrophyUnlocked(TrophyID) end
---@param TrophyID FName
---@return boolean
function UActivitiesManager:IsTrophyHidden(TrophyID) end
---@param WeaponID FName
---@param TraitName FName
---@return boolean
function UActivitiesManager:HasDiscoveredWeaponTrait(WeaponID, TraitName) end
---@param ActivityId FName
---@return boolean
function UActivitiesManager:HasActivityStarted(ActivityId) end
---@param WeaponID FName
---@param TraitName FName
---@return float
function UActivitiesManager:GetWeaponTraitCompletionPercentage(WeaponID, TraitName) end
---@param WeaponID FName
---@param TraitNames TArray<FName>
---@return float
function UActivitiesManager:GetWeaponMasteryCompletionPercentage(WeaponID, TraitNames) end
---@param TrophyID FName
---@return FName
function UActivitiesManager:GetStatForTrophy(TrophyID) end
---@param ActivityId FName
---@param TaskID FName
---@return float
function UActivitiesManager:GetActivitySubTaskPercentage(ActivityId, TaskID) end
---@param ActivityId FName
---@param TaskID FName
---@param CompletedCount int32
---@param TotalCount int32
function UActivitiesManager:GetActivitySubTaskCount(ActivityId, TaskID, CompletedCount, TotalCount) end
---@param ActivityId FName
---@param TaskID FName
---@return boolean
function UActivitiesManager:GetActivityConditionCompletion(ActivityId, TaskID) end
---@param ActivityId FName
---@return float
function UActivitiesManager:GetActivityCompletionPercentage(ActivityId) end
function UActivitiesManager:DoImgui() end
function UActivitiesManager:DebugUnlockAllTrophies() end
function UActivitiesManager:ConnectionFinished() end
---@param CinematicManager UCinematicManagerComponent
function UActivitiesManager:CinematicFinished(CinematicManager) end
---@param ChallengeManager USocialChallengeManager
function UActivitiesManager:ChallengeStatesUpdated(ChallengeManager) end
---@param GameMode USocialChallengeGameMode
function UActivitiesManager:ChallengeModeStarted(GameMode) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UActivitiesManager:BiomeLoaded(Biome, NewBiomeState) end
---@param NewBiome EBiome
function UActivitiesManager:BiomeChanged(NewBiome) end
---@param ActivityId FString
---@return boolean
function UActivitiesManager:ActivityIntentRecieved(ActivityId) end
---@param WorldContextObject UObject
---@param TrophyID FName
function UActivitiesManager:AchievementUnlocked(WorldContextObject, TrophyID) end


---@class UActivity : UObject
---@field ActivityId FName
---@field TrophyID FName
---@field BiomeToShow EBiome
---@field PlayerWeaponToShow TSubclassOf<APlayerWeapon>
---@field bDailyChallenge boolean
---@field Conditions TArray<FActivityCondition>
---@field SubTasks TArray<FActivitySubTask>
---@field Repeatable boolean
---@field RepeatableId FName
---@field PCOnly boolean
UActivity = {}



---@class UActorAdornmentLocatorComponent : USceneComponent
UActorAdornmentLocatorComponent = {}


---@class UActorAdornmentManagerComponent : UActorComponent
---@field Widgets TArray<UActorAdornmentWidget>
---@field CachedController APlayerController
---@field CachedCharacter ATouristCharacter
---@field LocatorComponent UActorAdornmentLocatorComponent
UActorAdornmentManagerComponent = {}

---@param Actor AActor
---@param WidgetClass TSubclassOf<UActorAdornmentWidget>
function UActorAdornmentManagerComponent:RemoveActorAdornmentByClass(Actor, WidgetClass) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UActorAdornmentManagerComponent:OnDeath(DamagedActor, DamageEvent) end
---@param Actor AActor
---@param WidgetClass TSubclassOf<UActorAdornmentWidget>
---@return UActorAdornmentWidget
function UActorAdornmentManagerComponent:FindActorAdornmentByClass(Actor, WidgetClass) end
---@param Actor AActor
---@param WidgetClass TSubclassOf<UActorAdornmentWidget>
---@return UActorAdornmentWidget
function UActorAdornmentManagerComponent:AddActorAdornmentByClass(Actor, WidgetClass) end


---@class UActorAdornmentWidget : UOnScreenThingPointer
---@field RemoveOnDeath boolean
---@field ManualTargetPoint boolean
UActorAdornmentWidget = {}



---@class UActorPlacementAdjuster : UActorComponent
---@field bDisableEntirely boolean
---@field bDropToGround boolean
---@field bLiftToGround boolean
---@field bDisablePhysicsOnLocationAdjustment boolean
---@field bDisablePhysicsOnAngenSpawns boolean
---@field bAttachToGroundOnPhysicsDisabled boolean
---@field GroundSearchDistance float
---@field bDrawActorInitialAdjustmentDebugs boolean
---@field bRepelGeometry boolean
---@field OnLocationAdjustment FActorPlacementAdjusterOnLocationAdjustment
UActorPlacementAdjuster = {}

---@param RoomOverseer ARoomOverseer
---@param InRoomIndex int32
function UActorPlacementAdjuster:OnRoomGameReady(RoomOverseer, InRoomIndex) end
---@return boolean
function UActorPlacementAdjuster:IsRuntimeSpawn() end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function UActorPlacementAdjuster:HandleSerialize(Serializer) end


---@class UAdrenalineComponent : UActorComponent
---@field AdrenalineLevel int32
---@field AdrenalineProgression int32
---@field EnemiesToKillToGainAdrenalineLevel int32
---@field AdrenalineLevelCap int32
---@field LevelRewards TArray<FAdrenalineLevelRewards>
---@field OnAdrenalineBeginPlay FAdrenalineComponentOnAdrenalineBeginPlay
---@field OnAdrenalineLevelChanged FAdrenalineComponentOnAdrenalineLevelChanged
---@field OnAdrenalineProgressionChanged FAdrenalineComponentOnAdrenalineProgressionChanged
---@field OnAdrenalineReset FAdrenalineComponentOnAdrenalineReset
---@field OnAdrenalineMetaModifierAdded FAdrenalineComponentOnAdrenalineMetaModifierAdded
UAdrenalineComponent = {}

---@param NewKillsNeeded int32
function UAdrenalineComponent:SetEnemyKillsRequiredToLevelUpAdrenaline(NewKillsNeeded) end
---@param bEnabled boolean
function UAdrenalineComponent:SetAdrenalineSystemEnabled(bEnabled) end
---@param NewLevel int32
function UAdrenalineComponent:SetAdrenalineLevel(NewLevel) end
function UAdrenalineComponent:ResetProgression() end
function UAdrenalineComponent:ResetAdrenaline() end
function UAdrenalineComponent:OnRep_AdrenalineProgression() end
function UAdrenalineComponent:OnRep_AdrenalineLevel() end
---@param Enemy AEnemyBase
---@param DamageEvent FTouristDamageEvent
---@param bCriticalHit boolean
function UAdrenalineComponent:OnEnemyKilled(Enemy, DamageEvent, bCriticalHit) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UAdrenalineComponent:OnDamageTaken(DamagedActor, DamageEvent) end
---@param NewLevel int32
---@param MetaModName FName
---@param ChildMetaModName FName
function UAdrenalineComponent:MulticastMetaModAdded(NewLevel, MetaModName, ChildMetaModName) end
---@param Delta int32
function UAdrenalineComponent:ModifyAdrenalineProgression(Delta) end
---@param Delta int32
function UAdrenalineComponent:ModifyAdrenalineLevel(Delta) end
---@return boolean
function UAdrenalineComponent:IsMaxAdrenalineLevel() end
---@return boolean
function UAdrenalineComponent:IsAdrenalineGainEnabled() end
function UAdrenalineComponent:IncreaseAdrenalineProgression() end
---@return int32
function UAdrenalineComponent:GetEnemiesToKillToGainAdrenalineLevel() end
---@param AdrenalineLevel int32
---@return FAdrenalineLevelRewards
function UAdrenalineComponent:GetAdrenalineLevelRewards(AdrenalineLevel) end
---@return float
function UAdrenalineComponent:GetAdrenalineLevelProgress() end
---@return int32
function UAdrenalineComponent:GetAdrenalineLevelGap() end
---@return int32
function UAdrenalineComponent:GetAdrenalineLevelCap() end
---@return int32
function UAdrenalineComponent:GetAdrenalineLevel() end


---@class UAdvancedSpread : UGunFiringRotModifier
---@field MaxShotSpread float
---@field SpreadPerShot float
---@field ShotRefreshSpeed float
---@field ShotSpreadResetTime float
---@field BulletSpread float
---@field AccurateSpreadMultiplier float
---@field bReactToFire boolean
---@field MovementSpreadMultiplierRange FVector2D
---@field SpreadFromShooting float
---@field CurrentSpread float
UAdvancedSpread = {}

---@param Gun AGunBase
function UAdvancedSpread:OnShotFired(Gun) end


---@class UAimAssistComponent : UActorComponent
---@field AimAssistStrengthType ESettingStrengthType
---@field AimAssistDataOff UAimAssistData
---@field AimAssistDataLow UAimAssistData
---@field AimAssistDataMedium UAimAssistData
---@field AimAssistDataHigh UAimAssistData
---@field MagnetismOverDistanceCurve UCurveFloat
---@field AimAssistData UAimAssistData
---@field LiveComponents TArray<UAimAssistTargetComponent>
---@field AimAssistTargetComponent UAimAssistTargetComponent
---@field MainLockOnTarget ULockOnTargetComponent
UAimAssistComponent = {}

---@param Component UAimAssistTargetComponent
function UAimAssistComponent:UnregisterAimAssistTarget(Component) end
---@param NewAimAssistTargetComponent UAimAssistTargetComponent
---@param NewMainLockOnTarget ULockOnTargetComponent
function UAimAssistComponent:ServerApplyAimTarget(NewAimAssistTargetComponent, NewMainLockOnTarget) end
---@param Component UAimAssistTargetComponent
function UAimAssistComponent:RegisterAimAssistTarget(Component) end
---@return boolean
function UAimAssistComponent:MayAimAssist() end
---@param DirRight boolean
---@param IllegalTarget ULockOnTargetComponent
---@return ULockOnTargetComponent
function UAimAssistComponent:GetSecondaryLockOnTarget(DirRight, IllegalTarget) end
---@return ULockOnTargetComponent
function UAimAssistComponent:GetMainLockOnTarget() end


---@class UAimAssistData : UDataAsset
---@field bFocusAimTargetSnapEnabled boolean
---@field FocusAimTargetSnapMaxAngle float
---@field bMagnetismEnabled boolean
---@field MagnetismAffectionRange FVector2D
---@field MagnetismStrengthIdle float
---@field MagnetismStrengthShoot float
---@field MagnetismStrengthFocusAim float
---@field MagnetismStrengthFocusAimShoot float
---@field bAutoHitEnabled boolean
---@field AutoHitAngleAngle float
---@field AutoHitAngleAngleFocusAim float
---@field bFrictionEnabled boolean
---@field FrictionPhaseRange FVector2D
---@field FrictionPhaseRangeFocusAim FVector2D
---@field FrictionInterpSpeed float
UAimAssistData = {}



---@class UAimAssistTargetComponent : USceneComponent
---@field bIsAimAssistable boolean
---@field bForceFocusAimTargetingHere boolean
---@field MaxAssistDistanceOverride float
---@field CapsuleHalfHeight float
---@field EdgeMarginInWorld float
---@field EdgeMarginInWorldInner float
---@field EdgeMarginInWorldAutoHit float
---@field AimAssistMagnetismMultiplier float
---@field AimAssistFrictionMultiplier float
---@field MaxVelocityForAimAssist float
---@field AssistBody UPrimitiveComponent
---@field AssistSkeleton USkeletalMeshComponent
---@field TrackedDuration float
---@field OverrideSettings FAimAssistSettings
---@field OverrideTimer float
UAimAssistTargetComponent = {}

---@param NewAimAssistable boolean
function UAimAssistTargetComponent:SetIsAimAssistable(NewAimAssistable) end
---@param InOverrideSettings FAimAssistSettings
function UAimAssistTargetComponent:OverrideAimAssistSettings(InOverrideSettings) end
---@param Body UPrimitiveComponent
---@return boolean
function UAimAssistTargetComponent:IsBodyValidForAssist(Body) end
---@return boolean
function UAimAssistTargetComponent:IsAimAssistable() end
---@return float
function UAimAssistTargetComponent:GetMagnetismMultiplier() end
---@return float
function UAimAssistTargetComponent:GetFrictionMultiplier() end
---@param LineOrigin FVector
---@param LineEnd FVector
---@return float
function UAimAssistTargetComponent:GetDistanceFromLineToCenter(LineOrigin, LineEnd) end
---@param Point FVector
---@param ClosestPoint FVector
---@return boolean
function UAimAssistTargetComponent:GetClosestPointOnBody(Point, ClosestPoint) end
---@param LineOrigin FVector
---@param LineEnd FVector
---@param CapsuleRadius float
---@param OutClosestPointOnLine FVector
---@param OutClosestPointOnBody FVector
---@return boolean
function UAimAssistTargetComponent:ClosestPointOnCapsuleAgainstLine(LineOrigin, LineEnd, CapsuleRadius, OutClosestPointOnLine, OutClosestPointOnBody) end
---@param LineOrigin FVector
---@param LineDirection FVector
---@param OutClosestPointOnLine FVector
---@param OutClosestPointOnBody FVector
---@return boolean
function UAimAssistTargetComponent:ClosestPointOnBodyAgainstLine(LineOrigin, LineDirection, OutClosestPointOnLine, OutClosestPointOnBody) end
---@param NewTarget UPrimitiveComponent
function UAimAssistTargetComponent:ChangeAssistBody(NewTarget) end


---@class UAimProfileData : UDataAsset
---@field AimSettingsNormal FAimSettings
---@field AimSettingsFocusAim FAimSettings
---@field FocusAimGameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field FocusAimCameraSettings FFocusAimCameraSettings
UAimProfileData = {}



---@class UAkAmbientSoundComponent : UAkComponent
---@field AutoPostUsingEventRadius boolean
---@field AutoPostUsingEventRadiusOnlyWhenActive boolean
---@field StopWhenOwnerIsDestroyed boolean
---@field ReduceTriggerRadiusInCombat boolean
---@field CombatRadiusReductionValue float
---@field MinCombatReductionThreatLevel int32
---@field UsePostAssociatedCall boolean
---@field UseHiTickRateWhenPlaying boolean
---@field TickManager UHMQAggregateTickManager
UAkAmbientSoundComponent = {}



---@class UAkAmbientSoundComponentTickHandler : UHMQAggregateTickHandler
---@field pEnemyManager AEnemyManager
UAkAmbientSoundComponentTickHandler = {}



---@class UAkVivoxInputComponent : UAkAudioInputComponent
---@field AudioManagerOwner AAudioManager
UAkVivoxInputComponent = {}

---@param bSpeaking boolean
function UAkVivoxInputComponent:OnRemotePlayerSpeakingChanged(bSpeaking) end
---@param bSpeaking boolean
function UAkVivoxInputComponent:OnLocalPlayerSpeakingChanged(bSpeaking) end
function UAkVivoxInputComponent:OnDisconnected() end
function UAkVivoxInputComponent:OnConnected() end


---@class UAltFireComponent : UActorComponent
---@field TimeDilationFeatureFlag FName
---@field OnAltFireUsed FAltFireComponentOnAltFireUsed
---@field OnAltFireActiveChanged FAltFireComponentOnAltFireActiveChanged
---@field OnAltFirePreparationChanged FAltFireComponentOnAltFirePreparationChanged
---@field OnAltFireTimeDilationChanged FAltFireComponentOnAltFireTimeDilationChanged
---@field OnAltFiringChanged FAltFireComponentOnAltFiringChanged
---@field OnReadyToUse FAltFireComponentOnReadyToUse
---@field DefaultSettings FAltFireSettings
---@field DefaultTriggerSettingsWithAltFire UInputTriggerSettingsDataAsset
---@field DefaultTriggerSettingsWithoutAltFire UInputTriggerSettingsDataAsset
---@field bWantsToAltFireMode boolean
---@field bAltFireModeActive boolean
---@field bAltFiring boolean
---@field bShotFired boolean
---@field CurrentFuel float
---@field CurrentAmmo float
---@field FuelState EFuelState
---@field OwnerPlayer APlayerCharacter
---@field OwnerFocusAim UFocusAimComponent
---@field CurrentSettings FAltFireSettings
UAltFireComponent = {}

---@return boolean
function UAltFireComponent:TryUseAltFire() end
function UAltFireComponent:StopAltFire() end
---@param NewSettings FAltFireSettings
function UAltFireComponent:SetSettings(NewSettings) end
---@param bUsedAltFire boolean
function UAltFireComponent:ServerDeactivateAltFireMode(bUsedAltFire) end
function UAltFireComponent:ServerActivateAltFireMode() end
---@param SaveGame UTouristSaveGame
function UAltFireComponent:ReadSettingsFromSaveGame(SaveGame) end
function UAltFireComponent:OnTimeDilationCooldownTimerDone() end
---@param NewGun APlayerGun
---@param OldGun APlayerGun
function UAltFireComponent:OnPlayerMainWeaponChanged(NewGun, OldGun) end
function UAltFireComponent:OnCooldownTimerDone() end
function UAltFireComponent:OnAltFireToggleHelperExit() end
function UAltFireComponent:OnAltFireButtonReleased() end
function UAltFireComponent:OnAltFireButtonPressed() end
---@param NewStateIndex int32
function UAltFireComponent:OnAimTriggerStateChanged(NewStateIndex) end
---@param bUsedAltFire boolean
function UAltFireComponent:MulticastDeactivateAltFireMode(bUsedAltFire) end
function UAltFireComponent:MulticastActivateAltFireMode() end
---@param Seconds float
function UAltFireComponent:ModifyCurrentCooldown(Seconds) end
function UAltFireComponent:ManualDeactivateAltFireMode() end
---@return boolean
function UAltFireComponent:IsReadyToUse() end
---@return boolean
function UAltFireComponent:IsOnCooldown() end
---@return boolean
function UAltFireComponent:IsAltFiring() end
---@return boolean
function UAltFireComponent:IsAltFireModePossible() end
---@return boolean
function UAltFireComponent:IsAltFireModeActive() end
---@return boolean
function UAltFireComponent:IsAltFireInTrigger() end
---@return float
function UAltFireComponent:GetReadyPct() end
---@return float
function UAltFireComponent:GetFuelPct() end
---@return FAltFireSettings
function UAltFireComponent:GetCurrentSettings() end
---@param bApplyModifiers boolean
---@return float
function UAltFireComponent:GetCooldownMax(bApplyModifiers) end
function UAltFireComponent:CancelFuelUsage() end


---@class UAmbienceTheme : UDataAsset
---@field ExteriorSound FSoftObjectPath
---@field ExteriorSoundObj UAkAudioEvent
---@field ExteriorSoundStop FSoftObjectPath
---@field ExteriorSoundStopObj UAkAudioEvent
---@field TimeTravelBiome FName
---@field ExteriorSound_TTVariant FSoftObjectPath
---@field ExteriorSound_TTVariantObj UAkAudioEvent
---@field ExteriorSoundStop_TTVariant FSoftObjectPath
---@field ExteriorSoundStop_TTVariantObj UAkAudioEvent
UAmbienceTheme = {}



---@class UAmbientSoundVolumeComponent : UActorComponent
---@field Sound UAkAudioEvent
---@field EnterAudioEvent UAkAudioEvent
---@field ExitAudioEvent UAkAudioEvent
---@field OcclusionRefreshInterval float
---@field ObstructionOffset float
---@field OverlapShapeName FName
---@field DrawEmitter boolean
---@field ExternalSoundPlayback UAkAmbientSoundComponent
---@field InternalSoundPlayback UAkComponent
---@field VolumeShape UPrimitiveComponent
---@field LocalPlayerCharacter AActor
---@field LocalPlayerController ATouristPlayerController
---@field bIsPlayerInside boolean
---@field ExternalSoundLocation FVector
UAmbientSoundVolumeComponent = {}

---@param PossessedPawn APawn
function UAmbientSoundVolumeComponent:OnLocalPlayerPossessed(PossessedPawn) end
---@param OverlappedActor AActor
---@param OtherActor AActor
function UAmbientSoundVolumeComponent:OnEndOverlap(OverlappedActor, OtherActor) end
---@param OverlappedActor AActor
---@param OtherActor AActor
function UAmbientSoundVolumeComponent:OnBeginOverlap(OverlappedActor, OtherActor) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function UAmbientSoundVolumeComponent:EndComponentOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function UAmbientSoundVolumeComponent:BeginComponentOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end


---@class UAngenDebugCaptureInfo : UObject
---@field CaptureMap ULevelGenMap
---@field CaptureRulesMapDoor TArray<FAngenDebugMapDoorSelectRule>
---@field CaptureRulesRoom TArray<FAngenDebugRoomSelectRule>
---@field CaptureRulesRoomDoor TArray<FAngenDebugRoomDoorSelectRule>
---@field CaptureRulesLocator TArray<FAngenDebugLocatorSelectRule>
---@field SelectedMapDoor int32
---@field SelectedRoom FString
---@field SelectedRoomDoor int32
---@field GuiShowMap boolean
UAngenDebugCaptureInfo = {}



---@class UAngenDebugInfo : UObject
---@field FinalMap ULevelGenMap
---@field AllRoomInfos ULevelGenRoomInfos
---@field CaptureInfo UAngenDebugCaptureInfo
---@field DataCaptureInfo TMap<int32, UAngenDebugCaptureInfo>
UAngenDebugInfo = {}



---@class UAngenLocatorSelectRule : UAngenRule
UAngenLocatorSelectRule = {}


---@class UAngenLocatorSelectRuleBlueprintLibrary : UBlueprintFunctionLibrary
UAngenLocatorSelectRuleBlueprintLibrary = {}

---@param WorldContextObject UObject
---@param bClearPreviouslySelected boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:PickAllUnassigned(WorldContextObject, bClearPreviouslySelected) end
---@param WorldContextObject UObject
---@param MaximumAmountPerRoom int32
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterMaxAmountPerOwningRoom(WorldContextObject, MaximumAmountPerRoom, bExclude) end
---@param WorldContextObject UObject
---@param AmountPercent float
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterMaxAmountPercent(WorldContextObject, AmountPercent, bExclude) end
---@param WorldContextObject UObject
---@param MaximumAmount int32
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterMaxAmount(WorldContextObject, MaximumAmount, bExclude) end
---@param WorldContextObject UObject
---@param RoomType FName
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByReferredRoomType(WorldContextObject, RoomType, bExclude) end
---@param WorldContextObject UObject
---@param TagName FName
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByReferredRoomTag(WorldContextObject, TagName, bExclude) end
---@param WorldContextObject UObject
---@param RoomId int32
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByReferredRoomId(WorldContextObject, RoomId, bExclude) end
---@param WorldContextObject UObject
---@param AttributeName FName
---@param AttributeValue FString
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByReferredRoomAttributeValue(WorldContextObject, AttributeName, AttributeValue, bExclude) end
---@param WorldContextObject UObject
---@param AttributeName FName
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByReferredRoomAttribute(WorldContextObject, AttributeName, bExclude) end
---@param WorldContextObject UObject
---@param Position FVector
---@param AmountPercent float
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByPercentAmountFromPosition(WorldContextObject, Position, AmountPercent, bExclude) end
---@param WorldContextObject UObject
---@param RoomType FName
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByOwningRoomType(WorldContextObject, RoomType, bExclude) end
---@param WorldContextObject UObject
---@param TagName FName
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByOwningRoomTag(WorldContextObject, TagName, bExclude) end
---@param WorldContextObject UObject
---@param RoomId int32
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByOwningRoomId(WorldContextObject, RoomId, bExclude) end
---@param WorldContextObject UObject
---@param AttributeName FName
---@param AttributeValue FString
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByOwningRoomAttributeValue(WorldContextObject, AttributeName, AttributeValue, bExclude) end
---@param WorldContextObject UObject
---@param AttributeName FName
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByOwningRoomAttribute(WorldContextObject, AttributeName, bExclude) end
---@param WorldContextObject UObject
---@param LocatorType FName
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByLocatorType(WorldContextObject, LocatorType, bExclude) end
---@param WorldContextObject UObject
---@param AttributeName FName
---@param AttributeValue FString
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByLocatorAttributeValue(WorldContextObject, AttributeName, AttributeValue, bExclude) end
---@param WorldContextObject UObject
---@param AttributeName FName
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByLocatorAttribute(WorldContextObject, AttributeName, bExclude) end
---@param WorldContextObject UObject
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByLastAddedRoom(WorldContextObject, bExclude) end
---@param WorldContextObject UObject
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByHasReferredRoom(WorldContextObject, bExclude) end
---@param WorldContextObject UObject
---@param Position FVector
---@param MaxDistance float
---@param bExclude boolean
---@return UAngenLocatorSelectRule
function UAngenLocatorSelectRuleBlueprintLibrary:FilterByDistanceFromPosition(WorldContextObject, Position, MaxDistance, bExclude) end


---@class UAngenLocatorSelectRuleFilterByAttribute : UAngenLocatorSelectRule
---@field AttributeName FName
---@field AttributeValue FString
---@field bMatchAlsoValue boolean
---@field bExclude boolean
UAngenLocatorSelectRuleFilterByAttribute = {}



---@class UAngenLocatorSelectRuleFilterByDistanceFromPosition : UAngenLocatorSelectRule
---@field Position FVector
---@field MaxDistance float
---@field bExclude boolean
UAngenLocatorSelectRuleFilterByDistanceFromPosition = {}



---@class UAngenLocatorSelectRuleFilterByHasReferredRoom : UAngenLocatorSelectRule
---@field bExclude boolean
UAngenLocatorSelectRuleFilterByHasReferredRoom = {}



---@class UAngenLocatorSelectRuleFilterByLastAddedRoom : UAngenLocatorSelectRule
---@field bExclude boolean
UAngenLocatorSelectRuleFilterByLastAddedRoom = {}



---@class UAngenLocatorSelectRuleFilterByLocatorType : UAngenLocatorSelectRule
---@field LocatorType FName
---@field bExclude boolean
UAngenLocatorSelectRuleFilterByLocatorType = {}



---@class UAngenLocatorSelectRuleFilterByOwningRoomAttribute : UAngenLocatorSelectRule
---@field AttributeName FName
---@field AttributeValue FString
---@field bMatchAlsoValue boolean
---@field bExclude boolean
UAngenLocatorSelectRuleFilterByOwningRoomAttribute = {}



---@class UAngenLocatorSelectRuleFilterByOwningRoomId : UAngenLocatorSelectRule
---@field RoomId int32
---@field bExclude boolean
UAngenLocatorSelectRuleFilterByOwningRoomId = {}



---@class UAngenLocatorSelectRuleFilterByOwningRoomTag : UAngenLocatorSelectRule
---@field TagName FName
---@field bExclude boolean
UAngenLocatorSelectRuleFilterByOwningRoomTag = {}



---@class UAngenLocatorSelectRuleFilterByOwningRoomType : UAngenLocatorSelectRule
---@field RoomType FName
---@field bExclude boolean
UAngenLocatorSelectRuleFilterByOwningRoomType = {}



---@class UAngenLocatorSelectRuleFilterByPercentAmountFromPosition : UAngenLocatorSelectRule
---@field Position FVector
---@field AmountPercent float
---@field bExclude boolean
UAngenLocatorSelectRuleFilterByPercentAmountFromPosition = {}



---@class UAngenLocatorSelectRuleFilterByReferredRoomAttribute : UAngenLocatorSelectRule
---@field AttributeName FName
---@field AttributeValue FString
---@field bMatchAlsoValue boolean
---@field bExclude boolean
UAngenLocatorSelectRuleFilterByReferredRoomAttribute = {}



---@class UAngenLocatorSelectRuleFilterByReferredRoomId : UAngenLocatorSelectRule
---@field RoomId int32
---@field bExclude boolean
UAngenLocatorSelectRuleFilterByReferredRoomId = {}



---@class UAngenLocatorSelectRuleFilterByReferredRoomTag : UAngenLocatorSelectRule
---@field TagName FName
---@field bExclude boolean
UAngenLocatorSelectRuleFilterByReferredRoomTag = {}



---@class UAngenLocatorSelectRuleFilterByReferredRoomType : UAngenLocatorSelectRule
---@field RoomType FName
---@field bExclude boolean
UAngenLocatorSelectRuleFilterByReferredRoomType = {}



---@class UAngenLocatorSelectRuleFilterMaxAmount : UAngenLocatorSelectRule
---@field MaxAmount int32
---@field bExclude boolean
UAngenLocatorSelectRuleFilterMaxAmount = {}



---@class UAngenLocatorSelectRuleFilterMaxAmountPerOwningRoom : UAngenLocatorSelectRule
---@field MaxAmount int32
---@field bExclude boolean
UAngenLocatorSelectRuleFilterMaxAmountPerOwningRoom = {}



---@class UAngenLocatorSelectRuleFilterMaxAmountPercent : UAngenLocatorSelectRule
---@field AmountPercent float
---@field bExclude boolean
UAngenLocatorSelectRuleFilterMaxAmountPercent = {}



---@class UAngenLocatorSelectRulePickAllUnassigned : UAngenLocatorSelectRule
---@field bClearPreviouslySelected boolean
UAngenLocatorSelectRulePickAllUnassigned = {}



---@class UAngenLocatorSpawnInfoComponent : UActorComponent
---@field RoomIndex int32
---@field ReferredRoomIndex int32
---@field DoorSpawnedInLevelGen boolean
---@field LocatorType FName
---@field LocatorAttributes TMap<FName, FString>
UAngenLocatorSpawnInfoComponent = {}

---@param InRoomIndex int32
---@param InReferredRoomIndex int32
---@param Locator ULevelGenRoomLocator
function UAngenLocatorSpawnInfoComponent:SetAngenSpawnInfo(InRoomIndex, InReferredRoomIndex, Locator) end
---@param ActivationEventType ERoomActivationEventType
function UAngenLocatorSpawnInfoComponent:RoomActivated(ActivationEventType) end
---@return boolean
function UAngenLocatorSpawnInfoComponent:AreConnectingRoomsLoadedAndReady() end


---@class UAngenMapDoorSelectRule : UAngenRule
UAngenMapDoorSelectRule = {}


---@class UAngenMapDoorSelectRuleBlueprintLibrary : UAngenRulesFunctionLibrary
UAngenMapDoorSelectRuleBlueprintLibrary = {}

---@param WorldContextObject UObject
---@return UAngenMapDoorSelectRule
function UAngenMapDoorSelectRuleBlueprintLibrary:PickAllOpenDoors(WorldContextObject) end
---@param WorldContextObject UObject
---@param bExclude boolean
---@return UAngenMapDoorSelectRule
function UAngenMapDoorSelectRuleBlueprintLibrary:FilterByLastAddedRoom(WorldContextObject, bExclude) end
---@param WorldContextObject UObject
---@param DoorType FName
---@param bExclude boolean
---@return UAngenMapDoorSelectRule
function UAngenMapDoorSelectRuleBlueprintLibrary:FilterByDoorType(WorldContextObject, DoorType, bExclude) end
---@param WorldContextObject UObject
---@param TargetRoomName FString
---@param EpsilonAngle float
---@return UAngenMapDoorSelectRule
function UAngenMapDoorSelectRuleBlueprintLibrary:FilterByDoorOrientationTowardsRoom(WorldContextObject, TargetRoomName, EpsilonAngle) end
---@param WorldContextObject UObject
---@param TargetDirection FVector
---@param EpsilonAngle float
---@return UAngenMapDoorSelectRule
function UAngenMapDoorSelectRuleBlueprintLibrary:FilterByDoorOrientation(WorldContextObject, TargetDirection, EpsilonAngle) end
---@param WorldContextObject UObject
---@param AttributeName FName
---@param AttributeValue FString
---@param bExclude boolean
---@return UAngenMapDoorSelectRule
function UAngenMapDoorSelectRuleBlueprintLibrary:FilterByDoorAttributeValue(WorldContextObject, AttributeName, AttributeValue, bExclude) end
---@param WorldContextObject UObject
---@param AttributeName FName
---@param bExclude boolean
---@return UAngenMapDoorSelectRule
function UAngenMapDoorSelectRuleBlueprintLibrary:FilterByDoorAttribute(WorldContextObject, AttributeName, bExclude) end
---@param WorldContextObject UObject
---@param RoomType FName
---@param bExclude boolean
---@return UAngenMapDoorSelectRule
function UAngenMapDoorSelectRuleBlueprintLibrary:FilterByConnectedRoomType(WorldContextObject, RoomType, bExclude) end
---@param WorldContextObject UObject
---@param TagName FName
---@param bExclude boolean
---@return UAngenMapDoorSelectRule
function UAngenMapDoorSelectRuleBlueprintLibrary:FilterByConnectedRoomTag(WorldContextObject, TagName, bExclude) end
---@param WorldContextObject UObject
---@param RoomId int32
---@param bExclude boolean
---@return UAngenMapDoorSelectRule
function UAngenMapDoorSelectRuleBlueprintLibrary:FilterByConnectedRoomId(WorldContextObject, RoomId, bExclude) end
---@param WorldContextObject UObject
---@param AttributeName FName
---@param AttributeValue FString
---@param bExclude boolean
---@return UAngenMapDoorSelectRule
function UAngenMapDoorSelectRuleBlueprintLibrary:FilterByConnectedRoomAttributeValue(WorldContextObject, AttributeName, AttributeValue, bExclude) end
---@param WorldContextObject UObject
---@param AttributeName FName
---@param bExclude boolean
---@return UAngenMapDoorSelectRule
function UAngenMapDoorSelectRuleBlueprintLibrary:FilterByConnectedRoomAttribute(WorldContextObject, AttributeName, bExclude) end


---@class UAngenMapDoorSelectRuleFilterByAttribute : UAngenMapDoorSelectRule
---@field AttributeName FName
---@field AttributeValue FString
---@field bMatchAlsoValue boolean
---@field bExclude boolean
UAngenMapDoorSelectRuleFilterByAttribute = {}



---@class UAngenMapDoorSelectRuleFilterByConnectedRoomAttribute : UAngenMapDoorSelectRule
---@field AttributeName FName
---@field AttributeValue FString
---@field bMatchAlsoValue boolean
---@field bExclude boolean
UAngenMapDoorSelectRuleFilterByConnectedRoomAttribute = {}



---@class UAngenMapDoorSelectRuleFilterByConnectedRoomId : UAngenMapDoorSelectRule
---@field RoomId int32
---@field bExclude boolean
UAngenMapDoorSelectRuleFilterByConnectedRoomId = {}



---@class UAngenMapDoorSelectRuleFilterByConnectedRoomTag : UAngenMapDoorSelectRule
---@field TagName FName
---@field bExclude boolean
UAngenMapDoorSelectRuleFilterByConnectedRoomTag = {}



---@class UAngenMapDoorSelectRuleFilterByConnectedRoomType : UAngenMapDoorSelectRule
---@field RoomType FName
---@field bExclude boolean
UAngenMapDoorSelectRuleFilterByConnectedRoomType = {}



---@class UAngenMapDoorSelectRuleFilterByDoorOrientation : UAngenMapDoorSelectRule
---@field TargetDirection FVector
---@field EpsilonAngle float
---@field FoundDirection FVector
---@field FoundAngle float
---@field bExclude boolean
UAngenMapDoorSelectRuleFilterByDoorOrientation = {}



---@class UAngenMapDoorSelectRuleFilterByDoorOrientationTowardsRoom : UAngenMapDoorSelectRule
---@field TargetRoomName FString
---@field TargetRoomLocation FVector
---@field EpsilonAngle float
---@field FoundAngle float
---@field bExclude boolean
UAngenMapDoorSelectRuleFilterByDoorOrientationTowardsRoom = {}



---@class UAngenMapDoorSelectRuleFilterByDoorType : UAngenMapDoorSelectRule
---@field DoorType FName
---@field bExclude boolean
UAngenMapDoorSelectRuleFilterByDoorType = {}



---@class UAngenMapDoorSelectRuleFilterByLastAddedRoom : UAngenMapDoorSelectRule
---@field bExclude boolean
UAngenMapDoorSelectRuleFilterByLastAddedRoom = {}



---@class UAngenMapDoorSelectRulePickAllOpenDoors : UAngenMapDoorSelectRule
UAngenMapDoorSelectRulePickAllOpenDoors = {}


---@class UAngenRoomActivationComponent : UActorComponent
---@field OnRoomActivated FAngenRoomActivationComponentOnRoomActivated
---@field OnRoomDeactivated FAngenRoomActivationComponentOnRoomDeactivated
UAngenRoomActivationComponent = {}



---@class UAngenRoomActivationManager : UActorComponent
---@field OnRoomActivated FAngenRoomActivationManagerOnRoomActivated
---@field OnRoomDeactivated FAngenRoomActivationManagerOnRoomDeactivated
---@field SpawnedRooms TSet<int32>
---@field ActiveRooms TSet<int32>
---@field CurrentLocalPlayerRoom int32
---@field CurrentRemotePlayerRooms TMap<int32, int32>
---@field RoomLocators TArray<TWeakObjectPtr<UAngenLocatorSpawnInfoComponent>>
---@field ActivationComponents TArray<TWeakObjectPtr<UAngenRoomActivationComponent>>
---@field PreviousVisibleRooms TSet<int32>
---@field AlwaysVisibleRooms TSet<int32>
---@field AlwaysAdjacentActivatedRoomsOnRoomReady TArray<int32>
---@field DebugAngenLevelGen ALevelGenBaseActor
UAngenRoomActivationManager = {}

---@param WorldContextObject UObject
---@param bDebugCameraEnabled boolean
function UAngenRoomActivationManager:SetDebugCameraEnabled(WorldContextObject, bDebugCameraEnabled) end
---@param ThisRoom ALevelGenRoomStreamingActor
function UAngenRoomActivationManager:OnRoomShown(ThisRoom) end
---@param RoomIndex int32
function UAngenRoomActivationManager:OnRoomGameUnready(RoomIndex) end
---@param Master ARoomOverseer
---@param RoomIndex int32
function UAngenRoomActivationManager:OnRoomGameReady(Master, RoomIndex) end
---@param ThisRoom ALevelGenRoomStreamingActor
function UAngenRoomActivationManager:OnRoomBeginHide(ThisRoom) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UAngenRoomActivationManager:OnMapReady(Biome, NewBiomeState) end
---@param RoomA int32
---@param RoomB int32
function UAngenRoomActivationManager:ManuallyConnectRooms(RoomA, RoomB) end
---@param RoomIndex int32
---@return boolean
function UAngenRoomActivationManager:IsRoomActive(RoomIndex) end
---@return int32
function UAngenRoomActivationManager:GetRemotePlayerRoom() end
---@return int32
function UAngenRoomActivationManager:GetLocalPlayerRoom() end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UAngenRoomActivationManager:BiomeStateChanged(Biome, NewBiomeState) end
---@param WorldContextObject UObject
---@param RoomIndex int32
---@param ActivationEventType ERoomActivationEventType
function UAngenRoomActivationManager:ActivateRoom(WorldContextObject, RoomIndex, ActivationEventType) end


---@class UAngenRoomDoorSelectRule : UAngenRule
UAngenRoomDoorSelectRule = {}


---@class UAngenRoomDoorSelectRuleBlueprintLibrary : UAngenRulesFunctionLibrary
UAngenRoomDoorSelectRuleBlueprintLibrary = {}

---@param WorldContextObject UObject
---@return UAngenRoomDoorSelectRule
function UAngenRoomDoorSelectRuleBlueprintLibrary:PickAllDoors(WorldContextObject) end
---@param WorldContextObject UObject
---@return UAngenRoomDoorSelectRule
function UAngenRoomDoorSelectRuleBlueprintLibrary:FilterToSelectedMapDoorType(WorldContextObject) end
---@param WorldContextObject UObject
---@param DoorType FName
---@param bExclude boolean
---@return UAngenRoomDoorSelectRule
function UAngenRoomDoorSelectRuleBlueprintLibrary:FilterByDoorType(WorldContextObject, DoorType, bExclude) end
---@param WorldContextObject UObject
---@param AttributeName FName
---@param AttributeValue FString
---@param bExclude boolean
---@return UAngenRoomDoorSelectRule
function UAngenRoomDoorSelectRuleBlueprintLibrary:FilterByDoorAttributeValue(WorldContextObject, AttributeName, AttributeValue, bExclude) end
---@param WorldContextObject UObject
---@param AttributeName FName
---@param bExclude boolean
---@return UAngenRoomDoorSelectRule
function UAngenRoomDoorSelectRuleBlueprintLibrary:FilterByDoorAttribute(WorldContextObject, AttributeName, bExclude) end


---@class UAngenRoomDoorSelectRuleFilterByAttribute : UAngenRoomDoorSelectRule
---@field AttributeName FName
---@field AttributeValue FString
---@field bMatchAlsoValue boolean
---@field bExclude boolean
UAngenRoomDoorSelectRuleFilterByAttribute = {}



---@class UAngenRoomDoorSelectRuleFilterByDoorType : UAngenRoomDoorSelectRule
---@field DoorType FName
---@field bExclude boolean
UAngenRoomDoorSelectRuleFilterByDoorType = {}



---@class UAngenRoomDoorSelectRuleFilterToSelectedMapDoorType : UAngenRoomDoorSelectRule
UAngenRoomDoorSelectRuleFilterToSelectedMapDoorType = {}


---@class UAngenRoomDoorSelectRulePickAllDoors : UAngenRoomDoorSelectRule
UAngenRoomDoorSelectRulePickAllDoors = {}


---@class UAngenRoomInfo : UPrimaryDataAsset
---@field RoomName FString
---@field StreamInfo FRoomLevelStreamInfo
---@field LODInfos TArray<FRoomLevelStreamInfo>
---@field SubLevelInfos TArray<FRoomLevelStreamInfo>
---@field NeverLODSubLevelInfos TArray<FRoomLevelStreamInfo>
---@field LevelSelector ULevelGenRoomSublevelSelector
---@field Attributes ULevelGenRoomAttributes
---@field Doors TArray<ULevelGenRoomDoor>
---@field Locators TArray<ULevelGenRoomLocator>
---@field ObjectDatas TArray<ULevelGenRoomObjectData>
---@field Triangles TArray<FVector>
---@field TraversalTriangles TArray<FVector>
---@field Volumes FLevelGenRoomVolumes
---@field TraversalVolumes FLevelGenRoomVolumes
---@field AABBMin FVector
---@field AABBMax FVector
---@field MinimapTriangles TArray<FVector>
---@field MinimapTrianglesNormals TArray<FVector>
---@field MinimapTrianglesColors TArray<FColor>
---@field MinimapTrianglesIndices TArray<int32>
---@field LandscapeVertices TArray<FVector>
---@field LandscapeVertexCounts TArray<int32>
---@field LandscapeProperties TArray<FAngenLandscapeModifierProperties>
UAngenRoomInfo = {}



---@class UAngenRoomSelectRule : UAngenRule
UAngenRoomSelectRule = {}


---@class UAngenRoomSelectRuleBlueprintLibrary : UAngenRulesFunctionLibrary
UAngenRoomSelectRuleBlueprintLibrary = {}

---@param WorldContextObject UObject
---@param Rooms TArray<FString>
---@param bClearPreviouslySelected boolean
---@return UAngenRoomSelectRule
function UAngenRoomSelectRuleBlueprintLibrary:PickRooms(WorldContextObject, Rooms, bClearPreviouslySelected) end
---@param WorldContextObject UObject
---@return UAngenRoomSelectRule
function UAngenRoomSelectRuleBlueprintLibrary:PickAllRooms(WorldContextObject) end
---@param WorldContextObject UObject
---@return UAngenRoomSelectRule
function UAngenRoomSelectRuleBlueprintLibrary:FilterToRoomsWithSameTypeDoorsAsSelectedMapDoor(WorldContextObject) end
---@param WorldContextObject UObject
---@param RoomType FName
---@param bExclude boolean
---@return UAngenRoomSelectRule
function UAngenRoomSelectRuleBlueprintLibrary:FilterByRoomType(WorldContextObject, RoomType, bExclude) end
---@param WorldContextObject UObject
---@param RoomTheme FName
---@param bExclude boolean
---@return UAngenRoomSelectRule
function UAngenRoomSelectRuleBlueprintLibrary:FilterByRoomTheme(WorldContextObject, RoomTheme, bExclude) end
---@param WorldContextObject UObject
---@param AttributeName FName
---@param AttributeValue FString
---@param bExclude boolean
---@return UAngenRoomSelectRule
function UAngenRoomSelectRuleBlueprintLibrary:FilterByRoomAttributeValue(WorldContextObject, AttributeName, AttributeValue, bExclude) end
---@param WorldContextObject UObject
---@param AttributeName FName
---@param bExclude boolean
---@return UAngenRoomSelectRule
function UAngenRoomSelectRuleBlueprintLibrary:FilterByRoomAttribute(WorldContextObject, AttributeName, bExclude) end
---@param WorldContextObject UObject
---@return UAngenRoomSelectRule
function UAngenRoomSelectRuleBlueprintLibrary:FilterByMaxRoomCount(WorldContextObject) end


---@class UAngenRoomSelectRuleFilterByAttribute : UAngenRoomSelectRule
---@field AttributeName FName
---@field AttributeValue FString
---@field bMatchAlsoValue boolean
---@field bExclude boolean
UAngenRoomSelectRuleFilterByAttribute = {}



---@class UAngenRoomSelectRuleFilterByMaxRoomCount : UAngenRoomSelectRule
UAngenRoomSelectRuleFilterByMaxRoomCount = {}


---@class UAngenRoomSelectRuleFilterByRoomTheme : UAngenRoomSelectRule
---@field RoomTheme FName
---@field bExclude boolean
UAngenRoomSelectRuleFilterByRoomTheme = {}



---@class UAngenRoomSelectRuleFilterByRoomType : UAngenRoomSelectRule
---@field RoomType FName
---@field bExclude boolean
UAngenRoomSelectRuleFilterByRoomType = {}



---@class UAngenRoomSelectRuleFilterToRoomsWithSameTypeDoorsAsSelectedMapDoor : UAngenRoomSelectRule
UAngenRoomSelectRuleFilterToRoomsWithSameTypeDoorsAsSelectedMapDoor = {}


---@class UAngenRoomSelectRulePickAllRooms : UAngenRoomSelectRule
UAngenRoomSelectRulePickAllRooms = {}


---@class UAngenRoomSelectRulePickRooms : UAngenRoomSelectRule
---@field Rooms TArray<FString>
---@field bClearPreviouslySelected boolean
UAngenRoomSelectRulePickRooms = {}



---@class UAngenRule : UObject
UAngenRule = {}


---@class UAngenRulesFunctionLibrary : UBlueprintFunctionLibrary
UAngenRulesFunctionLibrary = {}


---@class UAnimCurveMovementComponent : UActorComponent
---@field AnimCurveName FName
UAnimCurveMovementComponent = {}



---@class UAnimNotifyState_ActionNamedEvent : UAnimNotifyState
---@field EventName FName
---@field CustomInt int32
UAnimNotifyState_ActionNamedEvent = {}



---@class UAnimNotifyState_ControlFlagsOverride : UAnimNotifyState
---@field ControlFlags ECharacterControlFlags
UAnimNotifyState_ControlFlagsOverride = {}



---@class UAnimNotifyState_FireWeapon : UAnimNotifyState
---@field WeaponName FName
UAnimNotifyState_FireWeapon = {}



---@class UAnimNotifyState_MaterialProperty : UAnimNotifyState
---@field ParameterName FName
---@field ValueCurve UCurveFloat
---@field CustomCurve FRuntimeFloatCurve
---@field DefaultMaterialValues TArray<float>
UAnimNotifyState_MaterialProperty = {}



---@class UAnimNotifyState_SimulatePhysics : UAnimNotifyState
---@field RootBoneToSimulate FName
UAnimNotifyState_SimulatePhysics = {}



---@class UAnimNotifyState_TargetTracking : UAnimNotifyState
UAnimNotifyState_TargetTracking = {}


---@class UAnimNotifyState_Threat : UAnimNotifyState
---@field ThreatType EThreatType
---@field ThreatLevel EThreatLevel
---@field duration float
---@field CachedThreatComponent UThreatComponent
UAnimNotifyState_Threat = {}



---@class UAnimNotify_ActionNamedEvent : UAnimNotify
---@field EventName FName
---@field CustomInt int32
UAnimNotify_ActionNamedEvent = {}



---@class UAnimNotify_ActionSegmentMarker : UAnimNotify
---@field SegmentType EAnimationActionSegmentType
UAnimNotify_ActionSegmentMarker = {}



---@class UAnimNotify_DeathEvent : UAnimNotify
---@field DeathEvent EEnemyDeathEvent
---@field CustomDuration float
UAnimNotify_DeathEvent = {}



---@class UAnimNotify_DeltaCorrectionWindowMarker : UAnimNotify
---@field MarkerType EDeltaCorrectionWindowMarkerType
---@field WindowID uint8
UAnimNotify_DeltaCorrectionWindowMarker = {}



---@class UAnimNotify_HitboxEvent : UAnimNotify
---@field EventType EHitboxEventType
---@field EventID uint8
UAnimNotify_HitboxEvent = {}



---@class UAnimNotify_LevelEvent : UAnimNotify
---@field EventName FName
UAnimNotify_LevelEvent = {}



---@class UAnimNotify_ToActorEvent : UAnimNotify
---@field bAnimNotifyPrefix boolean
---@field EventName FName
---@field CustomInt int32
UAnimNotify_ToActorEvent = {}



---@class UAnimRequestDescriptionData_Base : UObject
---@field bIsTracked boolean
---@field bCanBeDeclined boolean
---@field Owner UObject
UAnimRequestDescriptionData_Base = {}

---@return FString
function UAnimRequestDescriptionData_Base:ToString() end


---@class UAnimRequestDescriptionData_EnemyAction : UAnimRequestDescriptionData_Base
---@field RequestType EAnimationRequestType
---@field index int32
UAnimRequestDescriptionData_EnemyAction = {}

---@param Outer UObject
---@param InRequestType EAnimationRequestType
---@param InIndex int32
---@return UAnimRequestDescriptionData_EnemyAction
function UAnimRequestDescriptionData_EnemyAction:Create(Outer, InRequestType, InIndex) end


---@class UAnimRequestDescriptionData_MusicianBoss : UAnimRequestDescriptionData_Base
---@field AnimationType EMusicianBossAnimationType
UAnimRequestDescriptionData_MusicianBoss = {}



---@class UAnimRequestDescriptionData_MusicianBoss_BasicShooting : UAnimRequestDescriptionData_MusicianBoss
---@field TypeIndex int32
UAnimRequestDescriptionData_MusicianBoss_BasicShooting = {}



---@class UAnimRequestDescriptionData_MusicianBoss_Beam : UAnimRequestDescriptionData_MusicianBoss
---@field direction EMusicianSideToSideDirection
UAnimRequestDescriptionData_MusicianBoss_Beam = {}



---@class UAnimRequestDescriptionData_MusicianBoss_Dodge : UAnimRequestDescriptionData_MusicianBoss
---@field direction EMusicianDirection
---@field Distance float
UAnimRequestDescriptionData_MusicianBoss_Dodge = {}



---@class UAnimRequestDescriptionData_MusicianBoss_Movement : UAnimRequestDescriptionData_MusicianBoss
---@field Descriptor FMusicianMovementDescriptor
UAnimRequestDescriptionData_MusicianBoss_Movement = {}



---@class UAnimRequestDescriptionData_MusicianBoss_TentacleBreakage : UAnimRequestDescriptionData_MusicianBoss
---@field direction EMusicianSide
UAnimRequestDescriptionData_MusicianBoss_TentacleBreakage = {}



---@class UAnimRequestDescriptionData_MusicianBoss_ThornBlockade : UAnimRequestDescriptionData_MusicianBoss
---@field TypeIndex int32
UAnimRequestDescriptionData_MusicianBoss_ThornBlockade = {}



---@class UAnimRequestDescriptionData_ReaperBossCpp : UAnimRequestDescriptionData_EnemyAction
---@field ReaperAnimationType EReaperBossAnimationTypeCpp
UAnimRequestDescriptionData_ReaperBossCpp = {}



---@class UAnimRequestDescriptionData_ReaperBoss_Dash : UAnimRequestDescriptionData_ReaperBossCpp
---@field HeightOffset float
UAnimRequestDescriptionData_ReaperBoss_Dash = {}



---@class UAnimRequestLogicObject_Base : UObject
---@field MessagingComponent UAnimationMessagingComponent
---@field DescriptionData UAnimRequestDescriptionData_Base
UAnimRequestLogicObject_Base = {}

---@param DeltaTime float
function UAnimRequestLogicObject_Base:Tick(DeltaTime) end
function UAnimRequestLogicObject_Base:Exit() end
function UAnimRequestLogicObject_Base:Enter() end


---@class UAnimRequestRuntimeData_Base : UObject
---@field TiedRequestID int32
UAnimRequestRuntimeData_Base = {}

---@return FString
function UAnimRequestRuntimeData_Base:ToString() end


---@class UAnimRequestRuntimeData_EnemyAction : UAnimRequestRuntimeData_Base
---@field Location FVector
---@field TargetActor AActor
UAnimRequestRuntimeData_EnemyAction = {}

---@param Outer UObject
---@param InLocation FVector
---@param InTargetActor AActor
---@return UAnimRequestRuntimeData_EnemyAction
function UAnimRequestRuntimeData_EnemyAction:Create(Outer, InLocation, InTargetActor) end


---@class UAnimRequestRuntimeData_EnemyDamagedEvent : UAnimRequestRuntimeData_EnemyAction
---@field DamageEvent FTouristDamageEvent
UAnimRequestRuntimeData_EnemyDamagedEvent = {}

---@param Outer UObject
---@param InDamageEvent FTouristDamageEvent
---@param InLocation FVector
---@return UAnimRequestRuntimeData_EnemyDamagedEvent
function UAnimRequestRuntimeData_EnemyDamagedEvent:CreateData_EnemyDamagedEvent(Outer, InDamageEvent, InLocation) end


---@class UAnimRequestRuntimeData_HitReactionEvent : UAnimRequestRuntimeData_EnemyDamagedEvent
---@field bIsInterrupting boolean
---@field bWasDelayed boolean
UAnimRequestRuntimeData_HitReactionEvent = {}

---@param Outer UObject
---@param InDamageEvent FTouristDamageEvent
---@param InLocation FVector
---@param bInIsInterrupting boolean
---@return UAnimRequestRuntimeData_HitReactionEvent
function UAnimRequestRuntimeData_HitReactionEvent:CreateData_HitReactionEvent(Outer, InDamageEvent, InLocation, bInIsInterrupting) end


---@class UAnimatedLabelContainerWidget : UTouristWidgetBase
---@field ConnectorClass TSubclassOf<UConnectorLine>
---@field TotalFadeOutTime float
---@field ContentWidget UHUDLabelWidget
UAnimatedLabelContainerWidget = {}

---@param TargetObject AActor
---@param LabelOwner AActor
---@param PlayerCharacter APlayerCharacter
function UAnimatedLabelContainerWidget:TargetObjectSet(TargetObject, LabelOwner, PlayerCharacter) end
---@param LabelWidget UHUDLabelWidget
function UAnimatedLabelContainerWidget:SetContentWidget(LabelWidget) end
---@param Text FText
function UAnimatedLabelContainerWidget:SetContentHeadingText(Text) end
---@param LinearColor FLinearColor
function UAnimatedLabelContainerWidget:SetContentBorderColor(LinearColor) end
function UAnimatedLabelContainerWidget:ReceiveUpdateColors() end
---@param TargetObject AActor
---@param LabelOwner AActor
---@param PlayerCharacter APlayerCharacter
function UAnimatedLabelContainerWidget:ReceiveSetTargetObject(TargetObject, LabelOwner, PlayerCharacter) end
function UAnimatedLabelContainerWidget:NotifyContentWidgetChanged() end
---@return UHUDLabelWidget
function UAnimatedLabelContainerWidget:GetContentWidget() end


---@class UAnimationMessagingComponent : UActorComponent
---@field Owner ATouristCharacter
---@field AnimInstance UTouristCharacterAnimInstance
---@field AnimationRequests TMap<UAnimRequestDescriptionData_Base, FAnimationRequest>
---@field bHasActiveRequest boolean
---@field ActiveRequest FAnimationRequest
---@field bShouldHandleNewRequest boolean
---@field bAllowOwnerControl boolean
---@field bOverrideTargetTracking boolean
---@field TrackedActionMontageInstances TMap<UAnimMontage, FTrackedAnimActionInstance_Montage>
---@field TrackedSubInstanceAction FTrackedAnimActionInstance_SubInstance
---@field TrackedCompositeAction FTrackedAnimActionInstance_Composite
---@field ControlFlagRequest ECharacterControlFlags
---@field CachedRuntimeData TArray<UAnimRequestRuntimeData_Base>
---@field OnControlFlagsUpdated FAnimationMessagingComponentOnControlFlagsUpdated
UAnimationMessagingComponent = {}

function UAnimationMessagingComponent:UpdateAnimationSettings() end
---@param RequestData UAnimRequestDescriptionData_Base
---@param OutActionInstance FTrackedAnimActionInstance_Montage
---@return boolean
function UAnimationMessagingComponent:TryGetMontageActionInstanceTiedToRequest(RequestData, OutActionInstance) end
---@param DeltaTime float
function UAnimationMessagingComponent:TickTrackedActionInstances(DeltaTime) end
---@param Action UCharacterAnimAction_SubInstance
function UAnimationMessagingComponent:StopSubInstanceAction_Impl(Action) end
---@param Action UCharacterAnimAction_SubInstance
---@return boolean
function UAnimationMessagingComponent:StopSubInstanceAction(Action) end
---@param Montage UAnimMontage
function UAnimationMessagingComponent:StopDeltaCorrectedAction_Impl(Montage) end
---@param Montage UAnimMontage
---@return boolean
function UAnimationMessagingComponent:StopDeltaCorrectedAction(Montage) end
---@param Action UCharacterAnimAction_Composite
function UAnimationMessagingComponent:StopCompositeAction_Impl(Action) end
---@param Action UCharacterAnimAction_Composite
---@return boolean
function UAnimationMessagingComponent:StopCompositeAction(Action) end
---@return boolean
function UAnimationMessagingComponent:StartHighestPriorityAnimationRequest() end
---@param ActionMontage UAnimMontage
---@param WindowID uint8
---@param Target FRootMotionTarget
---@return boolean
function UAnimationMessagingComponent:StartDeltaCorrectionForTrackedAction(ActionMontage, WindowID, Target) end
---@param RequestData UAnimRequestDescriptionData_Base
---@return boolean
function UAnimationMessagingComponent:StartAnimationRequestOfType(RequestData) end
---@param Montage UAnimMontage
---@param SegmentIndex int32
---@param bSnapToSegmentStartTime boolean
function UAnimationMessagingComponent:SetCurrentActionSegmentForTrackedAction(Montage, SegmentIndex, bSnapToSegmentStartTime) end
---@param Montage UAnimMontage
---@param Flags ECharacterControlFlags
---@param bUseOverride boolean
function UAnimationMessagingComponent:SetControlFlagOverrideForMontageAction(Montage, Flags, bUseOverride) end
---@param index int32
function UAnimationMessagingComponent:SetCompositeActionSequenceIndex(index) end
---@param DeltaTime float
function UAnimationMessagingComponent:ServerUpdate(DeltaTime) end
---@param Event ECharacterAnimationEvent
function UAnimationMessagingComponent:SendCharacterAnimationEvent(Event) end
function UAnimationMessagingComponent:RemoveControlFlagRequest() end
---@param RequestData UAnimRequestDescriptionData_Base
---@param Source UObject
---@param bIncludeActiveRequest boolean
---@return boolean
function UAnimationMessagingComponent:RemoveAnimationRequest(RequestData, Source, bIncludeActiveRequest) end
function UAnimationMessagingComponent:RemoveAllAnimationRequests() end
---@param RemovalEventType EAnimationRequestEventType
function UAnimationMessagingComponent:RemoveActiveAnimationRequest_Impl(RemovalEventType) end
---@param RequestData UAnimRequestDescriptionData_Base
---@param RemovalEventType EAnimationRequestEventType
function UAnimationMessagingComponent:RemoveActiveAnimationRequest(RequestData, RemovalEventType) end
---@param OwnerCharacter ATouristCharacter
function UAnimationMessagingComponent:RegisterOwner(OwnerCharacter) end
---@param Action UCharacterAnimAction_SubInstance
---@param TieToRequest UAnimRequestDescriptionData_Base
---@return boolean
function UAnimationMessagingComponent:PlaySubInstanceAction(Action, TieToRequest) end
---@param Action UCharacterAnimAction_Montage
---@param CorrectionWindowID uint8
---@param Target FRootMotionTarget
---@param TieToRequest UAnimRequestDescriptionData_Base
---@param TimeToStartMontageAt float
---@return boolean
function UAnimationMessagingComponent:PlayDeltaCorrectedAction(Action, CorrectionWindowID, Target, TieToRequest, TimeToStartMontageAt) end
---@param Action UCharacterAnimAction_Composite
---@param TieToRequest UAnimRequestDescriptionData_Base
---@return boolean
function UAnimationMessagingComponent:PlayCompositeAction(Action, TieToRequest) end
function UAnimationMessagingComponent:PickAnimationRequestToStart() end
function UAnimationMessagingComponent:OverrideTargetTrackingRequestedForFrame() end
---@param ActionInstance FTrackedAnimActionInstance_Base
function UAnimationMessagingComponent:NotifyAnimationRequestActionSegmentReached(ActionInstance) end
---@param Action UCharacterAnimAction_SubInstance
function UAnimationMessagingComponent:MulticastStopSubInstanceAction(Action) end
---@param Montage UAnimMontage
---@param bMontageEnded boolean
function UAnimationMessagingComponent:MulticastStopDeltaCorrectedAction(Montage, bMontageEnded) end
---@param Action UCharacterAnimAction_Montage
---@param WindowID uint8
---@param Target FRootMotionTarget
function UAnimationMessagingComponent:MulticastStartDeltaCorrectionForTrackedAction(Action, WindowID, Target) end
---@param NewRequest FAnimationRequest
function UAnimationMessagingComponent:MulticastStartAnimationRequest(NewRequest) end
---@param Event ECharacterAnimationEvent
function UAnimationMessagingComponent:MulticastSendCharacterAnimationEvent(Event) end
---@param RequestData UAnimRequestDescriptionData_Base
---@param RemovalEventType EAnimationRequestEventType
function UAnimationMessagingComponent:MulticastRemoveActiveAnimationRequest(RequestData, RemovalEventType) end
---@param Action UCharacterAnimAction_SubInstance
---@param TieToRequestData UAnimRequestDescriptionData_Base
function UAnimationMessagingComponent:MulticastPlaySubInstanceAction(Action, TieToRequestData) end
---@param Action UCharacterAnimAction_Montage
---@param CorrectionWindowID uint8
---@param Target FRootMotionTarget
---@param TieToRequestData UAnimRequestDescriptionData_Base
---@param TimeToStartMontageAt float
function UAnimationMessagingComponent:MulticastPlayDeltaCorrectedAction(Action, CorrectionWindowID, Target, TieToRequestData, TimeToStartMontageAt) end
---@param SectionName FName
---@param Montage UAnimMontage
function UAnimationMessagingComponent:MulticastMontageJumpToSection(SectionName, Montage) end
---@param MontageAction UCharacterAnimAction_Montage
---@return boolean
function UAnimationMessagingComponent:IsMontageActionPlaying(MontageAction) end
---@return boolean
function UAnimationMessagingComponent:HasActiveRequest() end
---@param RequestData UAnimRequestDescriptionData_Base
---@return boolean
function UAnimationMessagingComponent:HasActionTiedToRequest(RequestData) end
---@param Montage UAnimMontage
function UAnimationMessagingComponent:HandleTargetTrackingRequestedForFrame(Montage) end
---@param Montage UCharacterAnimAction_Montage
---@param TotalDuration float
---@param RemainingProgress float
function UAnimationMessagingComponent:HandleDeltaCorrectionProgress(Montage, TotalDuration, RemainingProgress) end
---@param Montage UCharacterAnimAction_Montage
---@param Event EDeltaCorrectionEvent
function UAnimationMessagingComponent:HandleDeltaCorrectionEvent(Montage, Event) end
function UAnimationMessagingComponent:HandleControlFlagsUpdated() end
---@param Montage UAnimMontage
---@param Event UAnimNotifyState_ActionNamedEvent
---@param TotalDuration float
function UAnimationMessagingComponent:HandleAnimationStateActionNamedEvent(Montage, Event, TotalDuration) end
---@param Montage UAnimMontage
---@param bInterrupted boolean
function UAnimationMessagingComponent:HandleAnimationMontageEnded(Montage, bInterrupted) end
---@param Montage UAnimMontage
---@param EventType EHitboxEventType
---@param EventID int32
function UAnimationMessagingComponent:HandleAnimationHitboxEvent(Montage, EventType, EventID) end
---@param Montage UAnimMontage
---@param SegmentType EAnimationActionSegmentType
function UAnimationMessagingComponent:HandleAnimationActionSegmentReached(Montage, SegmentType) end
---@param Montage UAnimMontage
---@param Event UAnimNotify_ActionNamedEvent
function UAnimationMessagingComponent:HandleAnimationActionNamedEvent(Montage, Event) end
---@return FTrackedAnimActionInstance_SubInstance
function UAnimationMessagingComponent:GetTrackedSubInstanceAction() end
---@param Class TSubclassOf<UAnimRequestRuntimeData_Base>
---@return UAnimRequestRuntimeData_Base
function UAnimationMessagingComponent:GetRuntimeDataOfClass(Class) end
---@return TArray<FAnimHitboxAttackRequest>
function UAnimationMessagingComponent:GetImpendingHitboxAttacks() end
---@return ECharacterControlFlags
function UAnimationMessagingComponent:GetControlFlags() end
---@return UTouristCharacterAnimInstance
function UAnimationMessagingComponent:GetAnimInstance() end
---@return UAnimRequestDescriptionData_Base
function UAnimationMessagingComponent:GetActiveAnimationRequestData() end
---@return UAnimRequestLogicObject_Base
function UAnimationMessagingComponent:GetActiveAnimationLogicObject() end
function UAnimationMessagingComponent:DescribeSelfToVisualLogger() end
function UAnimationMessagingComponent:DeclinePendingRequests() end
---@param DeltaTime float
function UAnimationMessagingComponent:ClientUpdate(DeltaTime) end
---@param Action UCharacterAnimAction_Composite
---@return boolean
function UAnimationMessagingComponent:AdvanceCompositeAction(Action) end
---@param Flags uint8
function UAnimationMessagingComponent:AddControlFlagRequest(Flags) end
---@param Source UObject
---@param Request FAnimationRequestDescriptor
---@param bOverrideExistingRequests boolean
---@return boolean
function UAnimationMessagingComponent:AddAnimationRequestFromDescriptor(Source, Request, bOverrideExistingRequests) end
---@param Request FAnimationRequest
---@param bOverrideExistingRequests boolean
---@return boolean
function UAnimationMessagingComponent:AddAnimationRequest(Request, bOverrideExistingRequests) end


---@class UArcThrowIndicatorComponent : USceneComponent
---@field Radius float
---@field NumPoints int32
---@field StaticMesh UStaticMesh
---@field Material UMaterialInterface
---@field ArcHitIndicators TArray<FArcHitIndicatorData>
---@field Points TArray<FVector>
---@field Cylinders TArray<UStaticMeshComponent>
---@field ArcHitMeshes TArray<UStaticMeshComponent>
---@field ImpactPoint FVector
UArcThrowIndicatorComponent = {}

---@param Start FVector
---@param InitialVelocity FVector
---@param StopOnImpactClasses TArray<UClass>
---@param ArcTime float
---@param MaxBounces int32
---@param bounciness float
---@param ProjectileRadius float
---@param GravityOverride float
function UArcThrowIndicatorComponent:UpdateWithBounce(Start, InitialVelocity, StopOnImpactClasses, ArcTime, MaxBounces, bounciness, ProjectileRadius, GravityOverride) end
---@param Start FVector
---@param InitialVelocity FVector
---@param ArcTime float
---@param ProjectileRadius float
---@param GravityOverride float
function UArcThrowIndicatorComponent:Update(Start, InitialVelocity, ArcTime, ProjectileRadius, GravityOverride) end
---@param bArcVisible boolean
function UArcThrowIndicatorComponent:SetArcVisibility(bArcVisible) end
---@return FVector
function UArcThrowIndicatorComponent:GetImpactPoint() end
---@return TArray<UStaticMeshComponent>
function UArcThrowIndicatorComponent:GetCylinders() end


---@class UArcadeScoreMultiplierWidget : UHMQUserWidget
---@field Border_Value UBorder
---@field Border_Frame UBorder
---@field Border_MultiplierTitle UBorder
---@field Text_Value UTextBlock
---@field Border_Timer UBorder
---@field ProgressBar_Timer UProgressBar
---@field Border_Adrenaline UBorder
---@field Border_Inactive UBorder
---@field Border_DeteriorateSpeed UBorder
---@field Animation_MultiplierUp UWidgetAnimation
---@field Animation_MultiplierDown UWidgetAnimation
---@field WidgetStyle_Inactive UDataAsset
---@field WidgetStyle_Timer UDataAsset
---@field WidgetStyle_Active UDataAsset
---@field WidgetStyle_Warning UDataAsset
---@field WidgetStyle_Deteriorating UDataAsset
---@field WidgetStyle_Adrenaline UDataAsset
---@field Timer_WarningThresholdBegin float
---@field Timer_WarningThresholdEnd float
---@field AudioEvent_Up UAkAudioEvent
---@field AudioEvent_UpFraction UAkAudioEvent
---@field AudioEvent_Deteriorate UAkAudioEvent
---@field AudioEvent_Paused UAkAudioEvent
---@field AudioEvent_Disabled UAkAudioEvent
UArcadeScoreMultiplierWidget = {}

function UArcadeScoreMultiplierWidget:UpdateColorSettings() end
---@param amount float
function UArcadeScoreMultiplierWidget:MultiplierChangeEvent(amount) end
---@param Paused boolean
function UArcadeScoreMultiplierWidget:InactiveChangeEvent(Paused) end
---@param amount int32
function UArcadeScoreMultiplierWidget:AdrenalineBonusChangeEvent(amount) end


---@class UAsyncRaycastHelperLibrary : UBlueprintFunctionLibrary
UAsyncRaycastHelperLibrary = {}

---@param WorldContext UObject
---@param AsyncRaycasts TArray<FAsyncRaycast>
---@param TraceChannel ETraceTypeQuery
---@param bTraceComplex boolean
---@param bIgnoreSelf boolean
---@param ActorsToIgnore TArray<AActor>
---@param LatentInfo FLatentActionInfo
function UAsyncRaycastHelperLibrary:RaycastAsync(WorldContext, AsyncRaycasts, TraceChannel, bTraceComplex, bIgnoreSelf, ActorsToIgnore, LatentInfo) end


---@class UAudioWeatherRainShelterSystem : UActorComponent
---@field RootPosition FVector
---@field bIsRootCovered boolean
---@field RainfallRayLength float
---@field CurrentIndex int32
---@field bSetMaterialSwitch boolean
---@field AkCompDotProducts TMap<UAkComponent, float>
---@field RainfallRayHeight float
---@field EmitterGroundHeightOffset float
---@field VerticalLerpRate float
---@field HorizontalLerpRate float
---@field LerpOrSnapDistanceThreshold float
---@field bSetDotProductRTPC boolean
---@field Raycasts TArray<FAsyncRaycast>
UAudioWeatherRainShelterSystem = {}

---@param RangeMin int32
---@param RangeMax int32
---@param NoOfEmitters int32
---@param MaxNoOfDistanceChecks int32
---@param Distances TArray<float>
---@param RaycastPositions TArray<FVector>
function UAudioWeatherRainShelterSystem:SetupAudioRaycasts(RangeMin, RangeMax, NoOfEmitters, MaxNoOfDistanceChecks, Distances, RaycastPositions) end
---@param RangeMin int32
---@param RangeMax int32
---@param NoOfEmitters int32
---@param MaxNoOfDistanceChecks int32
---@param ValidPositionsArray TArray<FVector>
---@param BelowRootThreshold int32
---@param AboveRootThreshold int32
---@param Materials TArray<EPhysicalSurface>
---@param RaycastPositions TArray<FVector>
---@param Emitters TArray<UAkComponent>
---@param AkEvent UAkAudioEvent
function UAudioWeatherRainShelterSystem:ParseAudioRaycasts(RangeMin, RangeMax, NoOfEmitters, MaxNoOfDistanceChecks, ValidPositionsArray, BelowRootThreshold, AboveRootThreshold, Materials, RaycastPositions, Emitters, AkEvent) end


---@class UBPAuditCommandlet : UCommandlet
UBPAuditCommandlet = {}


---@class UBPBarrel : UGunBarrel
UBPBarrel = {}

function UBPBarrel:FireStarting() end
---@param DeltaTime float
---@param FiringPos FVector
---@param FiringRot FRotator
---@param FiringAimDirection FVector
---@param DamageMultiplier float
---@param bIsLockedOn boolean
function UBPBarrel:FireBullets(DeltaTime, FiringPos, FiringRot, FiringAimDirection, DamageMultiplier, bIsLockedOn) end
---@param FiringPos FVector
---@param FiringRot FRotator
---@param FiringAimDirection FVector
---@param DamageMultiplier float
---@param bIsLockedOn boolean
function UBPBarrel:CreateBullet(FiringPos, FiringRot, FiringAimDirection, DamageMultiplier, bIsLockedOn) end


---@class UBTComposite_FlipFlopSelector : UBTCompositeNode
UBTComposite_FlipFlopSelector = {}


---@class UBTComposite_RandomSelector : UBTCompositeNode
---@field ChildWeights TArray<float>
---@field MaxAllowedStreakForFirstPick int32
---@field bChooseAllChildren boolean
UBTComposite_RandomSelector = {}



---@class UBTComposite_ShuffleSequence : UBTCompositeNode
UBTComposite_ShuffleSequence = {}


---@class UBTDecorator_DoChildrenAllowExecution : UBTDecorator
UBTDecorator_DoChildrenAllowExecution = {}


---@class UBTService_BlueprintBase_WithEQSQuery : UBTService_BlueprintBase
---@field EQSRequest FEQSParametrizedQueryExecutionRequest
UBTService_BlueprintBase_WithEQSQuery = {}

---@param Result FEnvQueryResult
function UBTService_BlueprintBase_WithEQSQuery:OnEQSQueryFinished(Result) end
---@param Result FEnvQueryResult
---@return FVector
function UBTService_BlueprintBase_WithEQSQuery:GetEQSVectorResult(Result) end
---@param QueryOwner APawn
---@return boolean
function UBTService_BlueprintBase_WithEQSQuery:ExecuteEQS(QueryOwner) end


---@class UBallisticsLibrary : UBlueprintFunctionLibrary
UBallisticsLibrary = {}

---@param WorldContextObject UObject
---@param Height float
---@param InitialVelocity float
---@param StartAngle float
---@param OutMaxHeight float
---@param ApexRange float
---@param OutFlyTime float
---@return float
function UBallisticsLibrary:FindRange(WorldContextObject, Height, InitialVelocity, StartAngle, OutMaxHeight, ApexRange, OutFlyTime) end
---@param WorldContextObject UObject
---@param TargetRange float
---@param InitialHeight float
---@param InitialVelocity float
---@param StartAngle float
---@param OutFlyTime float
---@return float
function UBallisticsLibrary:FindHeightAtRange(WorldContextObject, TargetRange, InitialHeight, InitialVelocity, StartAngle, OutFlyTime) end
---@param WorldContextObject UObject
---@param InitialHeight float
---@param InitialVelocity float
---@param TargetDistance float
---@param OutMaxHeight float
---@param OutApexRange float
---@param OutFlyTime float
---@param ProjectedRange float
---@param OutDirectHitBeforeApex boolean
---@param MaxIterations int32
---@param Delta float
---@return float
function UBallisticsLibrary:FindAngleToFire(WorldContextObject, InitialHeight, InitialVelocity, TargetDistance, OutMaxHeight, OutApexRange, OutFlyTime, ProjectedRange, OutDirectHitBeforeApex, MaxIterations, Delta) end


---@class UBaseEnemyMovementBehaviour : UActorComponent
UBaseEnemyMovementBehaviour = {}


---@class UBasePreviewSampleWidget : UTouristWidgetBase
---@field PreviewType PreviewPanelType
---@field TitleText FText
---@field SubheadingText FText
---@field DescriptionText FText
---@field PreviewImage UImage
UBasePreviewSampleWidget = {}

function UBasePreviewSampleWidget:UpdateColor() end
---@param NewTitleText FText
---@param NewSubHeadingText FText
---@param NewDescriptionText FText
function UBasePreviewSampleWidget:SetText(NewTitleText, NewSubHeadingText, NewDescriptionText) end
---@param PreviewImage UTexture2D
function UBasePreviewSampleWidget:SetPreviewImage(PreviewImage) end
function UBasePreviewSampleWidget:OnUpdatedPlayerProfileInfo() end
function UBasePreviewSampleWidget:OnStopDisplaying() end
function UBasePreviewSampleWidget:OnStartDisplaying() end
function UBasePreviewSampleWidget:BP_OnUpdatedPlayerProfileInfo() end


---@class UBeamBarrel : UGunBarrel
---@field MuzzleEffect AEffectContainer
---@field Beam UBeamInstance
---@field BeamSettings FBeamSpawnParameters
---@field ExtendSpeed float
---@field DisappearSpeed float
---@field MaxDistance float
UBeamBarrel = {}



---@class UBeamComponent : USceneComponent
---@field OnActivated FBeamComponentOnActivated
---@field OnDeactivated FBeamComponentOnDeactivated
---@field BeamType TSubclassOf<UBeamType>
---@field MuzzleFlashEffect TSubclassOf<AEffectContainer>
---@field BeamSettings FBeamSpawnParameters
---@field bAutoUpdateFromGun boolean
---@field Beam UBeamInstance
---@field MuzzleEffect AEffectContainer
---@field bIsFiring boolean
UBeamComponent = {}

function UBeamComponent:StopFiring() end
function UBeamComponent:StartFiring() end
---@param value float
function UBeamComponent:SetMaxDistance(value) end
---@param value float
function UBeamComponent:SetDamageMultiplier(value) end
---@param value float
function UBeamComponent:SetCollisionRadius(value) end
---@param NewParams FBeamSpawnParameters
function UBeamComponent:SetBeamSettings(NewParams) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UBeamComponent:OnBiomeStateChanged(Biome, NewBiomeState) end


---@class UBeamInstance : UObject
---@field BeamParams FBeamSpawnParameters
---@field bBeamActive boolean
---@field bWaitingDisappear boolean
---@field bWasBeamActive boolean
---@field bHasHitData boolean
---@field CurrentMaxDistance float
---@field CurrentRadius float
---@field PreviewTime float
---@field BeamOriginSound UAkComponent
---@field BeamSound UAkComponent
---@field ImpactSound UAkComponent
---@field MuzzleSound UAkComponent
---@field HitLocation FVector
---@field HitNormal FVector
---@field HitActor AActor
---@field BeamEndLocation FVector
---@field OldBeamEndLocation FVector
---@field BeamMaxEndLocation FVector
---@field bFirstSessionHit boolean
---@field HitEffect AEffectContainer
---@field Hits TArray<FHitResult>
---@field bHasPendingCollision boolean
UBeamInstance = {}

---@param origin FVector
function UBeamInstance:SetOrigin(origin) end
---@param MaxDistance float
function UBeamInstance:SetMaxDistance(MaxDistance) end
---@param InitialBeamMaxEndLocation FVector
function UBeamInstance:SetInitialBeamMaxEndLocation(InitialBeamMaxEndLocation) end
---@param direction FRotator
function UBeamInstance:SetDirection(direction) end
---@param bActive boolean
function UBeamInstance:SetActive(bActive) end
---@return boolean
function UBeamInstance:IsPreview() end
---@return boolean
function UBeamInstance:IsActive() end
---@return boolean
function UBeamInstance:HasHitData() end
---@return FVector
function UBeamInstance:GetHitNormal() end
---@return FVector
function UBeamInstance:GetHitLocation() end
---@return AActor
function UBeamInstance:GetHitActor() end
---@return FVector
function UBeamInstance:GetBeamMaxEndLocation() end
---@return FVector
function UBeamInstance:GetBeamEndLocation() end
function UBeamInstance:Destroy() end


---@class UBeamType : UObject
---@field Data FBeamSpawnParameters
UBeamType = {}



---@class UBehaviorAimAtPlayer : UEnemyBehaviorBase
---@field RotationSource EEnemyRotationSource
---@field TurningSpeed float
---@field bLockXY boolean
---@field bLockZ boolean
---@field ZAngleRange FMinMaxFloat
---@field WeaponIndex int32
UBehaviorAimAtPlayer = {}



---@class UBehaviorBlueprintBase : UEnemyBehaviorBase
UBehaviorBlueprintBase = {}

---@param DeltaTime float
function UBehaviorBlueprintBase:OnUpdateAwareness(DeltaTime) end
---@param DeltaTime float
function UBehaviorBlueprintBase:OnUpdate(DeltaTime) end
function UBehaviorBlueprintBase:OnExit() end
function UBehaviorBlueprintBase:OnEnter() end
---@param Actor AActor
---@param Result FHitResult
function UBehaviorBlueprintBase:HandleEnemyHitActor(Actor, Result) end
---@return boolean
function UBehaviorBlueprintBase:CanRunBehavior() end


---@class UBehaviorFireWeapon : UEnemyBehaviorBase
---@field BehaviorSettings FBehaviorFireWeaponSettings
---@field bLoopAnimRequest boolean
---@field BehaviorState EFireWeaponState
---@field DeltaCorrectionTarget FVector
UBehaviorFireWeapon = {}

---@param DeltaTime float
function UBehaviorFireWeapon:Update(DeltaTime) end
---@param NewWeaponIndex int32
function UBehaviorFireWeapon:SetWeaponIndex(NewWeaponIndex) end
---@param State EFireWeaponState
function UBehaviorFireWeapon:SetState(State) end
---@param Target FVector
function UBehaviorFireWeapon:SetDeltaCorrectionTarget(Target) end
---@return boolean
function UBehaviorFireWeapon:IsRunnable() end
function UBehaviorFireWeapon:HandleRequestEnded() end
---@return EAnimationActionSegmentType
function UBehaviorFireWeapon:GetCurrentAnimationActionSegmentType() end
function UBehaviorFireWeapon:FireCurrentWeapon() end
function UBehaviorFireWeapon:Exit() end
function UBehaviorFireWeapon:Enter() end


---@class UBehaviorFlyAudioTest : UBehaviorFlyOnFlightPath
---@field Centre FVector
---@field Forward FVector
---@field Progress float
---@field Radius float
UBehaviorFlyAudioTest = {}

---@return FVector
function UBehaviorFlyAudioTest:GetTargetLocationForLinkup() end


---@class UBehaviorFlyFigureOfEight : UBehaviorFlyOnFlightPath
---@field FirstTryOffset float
UBehaviorFlyFigureOfEight = {}

function UBehaviorFlyFigureOfEight:InvalidatePath() end
---@return boolean
function UBehaviorFlyFigureOfEight:HasValidPath() end
---@return FVector
function UBehaviorFlyFigureOfEight:GetTargetLocationForLinkup() end
---@param IgnorePreviousFailure boolean
---@return boolean
function UBehaviorFlyFigureOfEight:FindValidPath(IgnorePreviousFailure) end


---@class UBehaviorFlyOnFlightPath : UEnemyBehaviorBase
---@field BehaviorSettings FBehaviorFlyOnFlightPathSettings
UBehaviorFlyOnFlightPath = {}



---@class UBehaviorFlyToQueryResult : UEnemyBehaviorBase
---@field EnvQuery UEnvQuery
---@field BehaviorSettings FBehaviorFlyToQueryResultSettings
UBehaviorFlyToQueryResult = {}

function UBehaviorFlyToQueryResult:ResetFoundNoValidResult() end
---@return boolean
function UBehaviorFlyToQueryResult:IsRotatingToFaceTarget() end
---@return boolean
function UBehaviorFlyToQueryResult:IsMoving() end
---@return boolean
function UBehaviorFlyToQueryResult:FoundNoValidResult() end
---@param UpDistance float
---@param DownDistance float
function UBehaviorFlyToQueryResult:EditVerticalTraceTests(UpDistance, DownDistance) end
---@param RadialDistance FMinMaxFloat
---@param PitchAngle FMinMaxFloat
function UBehaviorFlyToQueryResult:EditCameraArcQuery(RadialDistance, PitchAngle) end


---@class UBehaviorFlyingBase : UEnemyBehaviorBase
---@field GroundHeight float
UBehaviorFlyingBase = {}

---@param pos FVector
---@param OutHeight float
---@return boolean
function UBehaviorFlyingBase:TryGetHeightAtPos(pos, OutHeight) end


---@class UBehaviorFlyingDive : UBehaviorFlyingBase
---@field NotifyDiveStarting FBehaviorFlyingDiveNotifyDiveStarting
---@field NotifyDiveComplete FBehaviorFlyingDiveNotifyDiveComplete
---@field Settings FBehaviorSettings_FlyingDive
---@field DiveState EFlyingDiveState
---@field StateTimer float
---@field TargetVelocityDir FVector
---@field AttackEntryVelocity FVector
---@field DiveTarget FVector
UBehaviorFlyingDive = {}

---@param NewState EFlyingDiveState
function UBehaviorFlyingDive:SetState(NewState) end
---@return FVector
function UBehaviorFlyingDive:GetTargetDirection() end
---@return FVector
function UBehaviorFlyingDive:GetPlayerPos() end
function UBehaviorFlyingDive:DoDiveCrash() end


---@class UBehaviorFlyingFollowPlayer : UBehaviorFlyingBase
---@field BehaviorSettings FBehaviorFlyingFollowPlayerSettings
---@field TargetLocation FVector
UBehaviorFlyingFollowPlayer = {}

---@return boolean
function UBehaviorFlyingFollowPlayer:IsStuck() end
---@param bCheckAngle boolean
---@param bCheckDist boolean
---@param bApplyHysteresisIfRunning boolean
---@return boolean
function UBehaviorFlyingFollowPlayer:IsInDesiredPosition(bCheckAngle, bCheckDist, bApplyHysteresisIfRunning) end
---@param Character ACharacter
---@param Target FVector
---@param AllowVerticalMovement boolean
---@return FVector
function UBehaviorFlyingFollowPlayer:GetFollowVelocityDir(Character, Target, AllowVerticalMovement) end
---@param Target FVector
---@return FVector
function UBehaviorFlyingFollowPlayer:GetEnemyRepulsionVelocity(Target) end
---@param DeltaTime float
---@param Character ACharacter
---@param Velocity FVector
---@param RotateToFaceVelocity boolean
function UBehaviorFlyingFollowPlayer:ApplyVelocity(DeltaTime, Character, Velocity, RotateToFaceVelocity) end


---@class UBehaviorFlyingHover : UEnemyBehaviorBase
---@field MinFlyingHeight float
---@field MaxFlyingHeight float
---@field MaxSpeedZ float
---@field AccelerationZ float
---@field DecelerationXY float
UBehaviorFlyingHover = {}



---@class UBehaviorFlyingQuickStrafe : UEnemyBehaviorBase
---@field BehaviorSettings FBehaviorFlyingQuickStrafeSettings
---@field TargetPosition FVector
---@field LastDirIndex int32
UBehaviorFlyingQuickStrafe = {}

---@return boolean
function UBehaviorFlyingQuickStrafe:IsAtTarget() end


---@class UBehaviorFlyingStrafeAroundPlayer : UEnemyBehaviorBase
---@field BehaviorSettings FBehaviorFlyingStrafeAroundPlayerSettings
---@field StrafingDirection int32
UBehaviorFlyingStrafeAroundPlayer = {}



---@class UBehaviorFlyingWander : UEnemyBehaviorBase
---@field BehaviorSettings FBehaviorFlyingWanderSettings
UBehaviorFlyingWander = {}



---@class UBehaviorFollowPlayer : UEnemyBehaviorBase
---@field BehaviorSettings FBehaviorFollowPlayerSettings
UBehaviorFollowPlayer = {}



---@class UBehaviorImmobilizingHazard : UEnemyBehaviorBase
---@field Enemy AImmobilizingHazardEnemy
---@field FocusLocation FVector
---@field TentacleEndSensingRadius float
---@field bDynamicTentacleEndSensingRadius boolean
---@field DynamicTentacleEndRadiusChangeAmount float
---@field SensedCharacter APlayerCharacter
---@field OnSensedEnemyChanged FBehaviorImmobilizingHazardOnSensedEnemyChanged
UBehaviorImmobilizingHazard = {}

function UBehaviorImmobilizingHazard:TryCatchCharacter() end
---@return float
function UBehaviorImmobilizingHazard:GetMaxTentacleEndSensingRadius() end
---@return FVector
function UBehaviorImmobilizingHazard:GetFocusLocation() end


---@class UBehaviorInactiveHide : UEnemyBehaviorBase
---@field BehaviorSettings FBehaviorInactiveHideSettings
UBehaviorInactiveHide = {}



---@class UBehaviorKeepDistanceFromPlayer : UEnemyBehaviorBase
---@field CirclingDirectionMultiplier float
---@field CirclingDirectionResetTimer float
---@field StrafingPriority float
---@field EnemyVelocity FVector
---@field PreferredDistanceFromEnemies float
---@field PreferredDistanceFromEnemiesUpdateTimer float
---@field CurrentClosestEnemy AEnemyBase
---@field BehaviorSettings FBehaviorKeepDistanceFromPlayerSettings
UBehaviorKeepDistanceFromPlayer = {}



---@class UBehaviorMoveToQueryResult : UEnemyBehaviorBase
---@field BehaviorSettings FBehaviorMoveToQueryResultSettings
UBehaviorMoveToQueryResult = {}



---@class UBehaviorSendAnimationRequest : UEnemyBehaviorBase
---@field BehaviorSettings FBehaviorSendAnimationRequestSettings
UBehaviorSendAnimationRequest = {}



---@class UBehaviorStopMoving : UEnemyBehaviorBase
UBehaviorStopMoving = {}


---@class UBehaviorStrafeToTarget : UEnemyBehaviorBase
---@field Settings FBehaviorStrafeToTargetSettings
UBehaviorStrafeToTarget = {}

---@return boolean
function UBehaviorStrafeToTarget:ChooseTarget() end


---@class UBehaviorTreeAttackCondition : UObject
---@field bCanCancelAttack boolean
---@field bAffectsTargetTracking boolean
---@field bNegate boolean
---@field OwnerEnemy AEnemyBase
UBehaviorTreeAttackCondition = {}

---@param Enemy AEnemyBase
---@param Controller AEnemyControllerBase
---@param TargetActor AActor
---@param AttackLocation FVector
---@return boolean
function UBehaviorTreeAttackCondition:Evaluate(Enemy, Controller, TargetActor, AttackLocation) end
---@param Enemy AEnemyBase
---@param Controller AEnemyControllerBase
---@param TargetActor AActor
---@param AttackLocation FVector
---@return boolean
function UBehaviorTreeAttackCondition:BlueprintEvaluate(Enemy, Controller, TargetActor, AttackLocation) end


---@class UBehaviorTurnAtPlayer : UEnemyBehaviorBase
---@field BehaviorSettings FBehaviorTurnAtPlayerSettings
UBehaviorTurnAtPlayer = {}



---@class UBehaviorWander : UEnemyBehaviorBase
---@field BehaviorSettings FBehaviorWanderSettings
---@field WanderPointReached FBehaviorWanderWanderPointReached
UBehaviorWander = {}

function UBehaviorWander:ResetTimer() end


---@class UBenchmarkManager : UObject
---@field LevelName FName
---@field PreviousLevelName FName
---@field ResultsFileName FText
---@field ImpactZonesTable UDataTable
---@field BenchmarkSequencePlayer UMovieSceneSequencePlayer
---@field CurrentTheme int32
---@field ResultsTimeStamp FDateTime
---@field bIsInBenchmark boolean
---@field bIsInBenchmarkScene boolean
---@field bBenchmarkLaunchedFromSettings boolean
---@field bReadyToPlay boolean
---@field bWantsToReturnToBootGraphicSettings boolean
---@field SequenceMarkedFrames TArray<int32>
---@field HardwareStats UTouristHardwareStats
---@field BenchmarkLoadingScreen TSubclassOf<UHMQScreenWidget>
---@field PreviousScreenClass TSubclassOf<UHMQScreenWidget>
---@field ResultsScreenClass TSubclassOf<UHMQScreenWidget>
---@field CPUData TArray<int32>
---@field GPUData TArray<int32>
---@field FPSData TArray<int32>
---@field VRAMData TArray<int32>
---@field RAMData TArray<int32>
---@field DynResMin float
---@field DynResMax float
---@field CurrentDynRes float
---@field DataCaptureZoneIndexStamps TArray<int32>
---@field OnBenchmarkEnd FBenchmarkManagerOnBenchmarkEnd
UBenchmarkManager = {}

function UBenchmarkManager:StopPopulatingData() end
---@param ScreenClass TSubclassOf<UHMQScreenWidget>
function UBenchmarkManager:StartBenchmark(ScreenClass) end
function UBenchmarkManager:ShowResults() end
---@param ScreenClass TSubclassOf<UHMQScreenWidget>
function UBenchmarkManager:ReturnToBoot(ScreenClass) end
function UBenchmarkManager:PopulateData() end
function UBenchmarkManager:OpenSettingsMenu() end
---@param SequencePlayer UMovieSceneSequencePlayer
---@param Sequence UMovieSceneSequence
function UBenchmarkManager:OnBenchmarkLoaded(SequencePlayer, Sequence) end
---@return FString
function UBenchmarkManager:GetWindowsOSVersion() end
---@param Zone int32
---@return int32
function UBenchmarkManager:GetNumberOfImpactsFromZone(Zone) end
---@param Zone int32
---@param index int32
---@param Name FText
---@param CPU int32
---@param GPU int32
function UBenchmarkManager:GetImpactFromZoneAtIndex(Zone, index, Name, CPU, GPU) end
---@return FString
function UBenchmarkManager:GetGPUName() end
---@return float
function UBenchmarkManager:GetGPUBoundPercentage() end
---@return FString
function UBenchmarkManager:GetCPUName() end
---@return float
function UBenchmarkManager:GetCPUBoundPercentage() end
---@param PresetScore float
---@return float
function UBenchmarkManager:GetBenchmarkScore(PresetScore) end
---@return FString
function UBenchmarkManager:GetBenchmarkResultPath() end
---@param Data TArray<int32>
---@return float
function UBenchmarkManager:GetAverage(Data) end
---@param FilePath FString
---@return boolean
function UBenchmarkManager:ExportBenchmark(FilePath) end
function UBenchmarkManager:EndBenchmark() end
---@param Path FString
function UBenchmarkManager:BrowseBenchmarkResultsDirectory(Path) end
function UBenchmarkManager:AnnounceBenchmarkEnd() end


---@class UBenchmarkZoneImpactTable : UDataTable
---@field Table FBenchmarkZoneImpactTableRow
UBenchmarkZoneImpactTable = {}



---@class UBiolayoutReportCommandlet : UCommandlet
UBiolayoutReportCommandlet = {}


---@class UBiomeAnchor : USceneComponent
---@field BiomeTransitionIds TArray<FName>
---@field BiomeTransitionType EBiomeTransitionType
---@field BiomeTransitionSide EBiomeTransitionSide
---@field PlayerStartUsageOrder int32
UBiomeAnchor = {}



---@class UBiomeBootEnvironment : UObject
---@field UnloadDelay float
---@field BusyLandscapeUnloadDelay float
---@field BootLayers TArray<ULevelStreaming>
---@field BootLayers_Transient TArray<ULevelStreaming>
---@field GlobalSublevels TArray<ULevelStreaming>
---@field LevelGeneratorClass TSoftClassPtr<ALevelGenBaseActor>
---@field StartRoomTransform FTransform
---@field InitiallyHiddenLevels TArray<ULevelStreaming>
---@field UnloadedBootLayers_Transient TArray<ULevelStreaming>
UBiomeBootEnvironment = {}

---@return boolean
function UBiomeBootEnvironment:WillInheritGlobalSublevels() end
function UBiomeBootEnvironment:UpdateLevelStreamingStates() end
---@param Caller UObject
---@param StreamingAspect EStreamingAspect
---@param OldState EStreamingAspectState
---@param NewState EStreamingAspectState
function UBiomeBootEnvironment:Shutdown_Force_Async_ConsiderFinish(Caller, StreamingAspect, OldState, NewState) end
---@return boolean
function UBiomeBootEnvironment:ShouldBeLoadedAndVisible() end
---@param Actor AActor
---@return boolean
function UBiomeBootEnvironment:IsActorPartOfBootLayer(Actor) end
---@return FTransform
function UBiomeBootEnvironment:GetStartRoomTransform() end
---@param Aspect EStreamingAspect
---@return EStreamingAspectState
function UBiomeBootEnvironment:GetBootLayersStreamingAspectState(Aspect) end
---@param LevelRef TSoftObjectPtr<UWorld>
---@return ULevelStreaming
function UBiomeBootEnvironment:GetBootLayerLevelWithRef(LevelRef) end
---@param PartOfLevelName FString
---@return ULevelStreaming
function UBiomeBootEnvironment:GetBootLayerLevel(PartOfLevelName) end


---@class UBiomeConfig : UDataAsset
---@field Description FString
---@field Biome EBiome
---@field BootLayers TArray<FBootLayerConfig>
---@field BootLayers_Transient TArray<FBootLayerConfig>
---@field GlobalSublevels TArray<FBootLayerConfig>
---@field InheritableGlobalSublevels TArray<TSoftObjectPtr<UWorld>>
---@field LevelGeneratorClass TSoftClassPtr<ALevelGenBaseActor>
---@field StartRoomHorizontalOffset FVector2D
---@field PresentableRoomNames TArray<FString>
---@field LevelGenInfoTable UDataTable
---@field StartingRoomName FString
---@field MissingLayoutFallbackFlags TArray<FName>
---@field LevelLODSuffix FString
---@field bAlwaysUseLevelLODSuffix boolean
---@field bUseLevelLODs boolean
---@field bUseVerticalBiomeBin boolean
---@field bInheritPreviousBiomeRotationForDistantTransition boolean
UBiomeConfig = {}



---@class UBiomeConfig_DailyChallenge : UBiomeConfig
UBiomeConfig_DailyChallenge = {}


---@class UBiomeConfig_Development : UBiomeConfig
UBiomeConfig_Development = {}


---@class UBiomeConfig_Legacy : UBiomeConfig
UBiomeConfig_Legacy = {}


---@class UBiomeConfig_MainGame : UBiomeConfig
UBiomeConfig_MainGame = {}


---@class UBiomeDamageTypeSwitcher : UActorComponent
---@field BiomeDamageTypeMap TMap<EBiome, TSubclassOf<UTouristDamageType>>
UBiomeDamageTypeSwitcher = {}

---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UBiomeDamageTypeSwitcher:OnBiomeStateChanged(Biome, NewBiomeState) end


---@class UBiomeManager : UActorComponent
---@field OnBiomeChanged FBiomeManagerOnBiomeChanged
---@field OnBiomeStateChanged FBiomeManagerOnBiomeStateChanged
---@field BiomeTransitionSystem_Version int32
---@field BiomeTransitionManager UBiomeTransitionManager
---@field m_previousBiome EBiome
---@field m_biomeBootEnvironment UBiomeBootEnvironment
---@field m_biomeConfig UBiomeConfig
---@field m_biomeLevelGen ALevelGenBaseActor
---@field m_biomeMap ULevelGenMapIngame
---@field RestartBiome EBiome
---@field OverrideRestartBiomeConfig UBiomeConfig
UBiomeManager = {}

---@param NewBiomeConfig UBiomeConfig
function UBiomeManager:SetRestartBiomeConfig(NewBiomeConfig) end
---@param NewRestartBiome EBiome
function UBiomeManager:SetRestartBiome(NewRestartBiome) end
---@param Biome EBiome
function UBiomeManager:SetOverrideBiome(Biome) end
function UBiomeManager:SetCurrentBiomeStateToShutdown() end
---@param LevelGen_Sink ALevelGenBaseActor
function UBiomeManager:SetCurrentBiomeStateToRunning(LevelGen_Sink) end
---@param NewBiomeState EBiomeState
function UBiomeManager:SetCurrentBiomeState(NewBiomeState) end
---@param NewBiome EBiome
function UBiomeManager:SetCurrentBiome(NewBiome) end
---@param LevelGen ALevelGenBaseActor
function UBiomeManager:OnLevelGenActorShutdown(LevelGen) end
---@param Room ALevelGenRoomStreamingActor
function UBiomeManager:LevelGenRoomPostLoadPostprocess(Room) end
---@param WorldContextObject UObject
---@return EBiome
function UBiomeManager:GuessCurrentBiome(WorldContextObject) end
---@param WorldContextObject UObject
---@return EBiome
function UBiomeManager:GuessBiomeFromWorldName(WorldContextObject) end
---@param Name FString
---@return EBiome
function UBiomeManager:GuessBiomeFromName(Name) end
---@param ID EBiome
---@return EBiome
function UBiomeManager:GetTimetravelCounterpartBiome(ID) end
---@return UBiomeConfig
function UBiomeManager:GetRestartBiomeConfig() end
---@return EBiome
function UBiomeManager:GetRestartBiome() end
---@return FName
function UBiomeManager:GetPerBiomeComponentsTag() end
---@return EBiome
function UBiomeManager:GetOverrideBiome() end
---@return EBiomeState
function UBiomeManager:GetCurrentBiomeState() end
---@return FText
function UBiomeManager:GetCurrentBiomeNameText() end
---@return FString
function UBiomeManager:GetCurrentBiomeNameString() end
---@return FName
function UBiomeManager:GetCurrentBiomeName() end
---@return EBiome
function UBiomeManager:GetCurrentBiome() end
---@return EBootMode
function UBiomeManager:GetBootMode() end
---@return UBiomeTransitionManager
function UBiomeManager:GetBiomeTransitionManager() end
---@param ID EBiome
---@return FString
function UBiomeManager:GetBiomeNameStringFromId(ID) end
---@param ID EBiome
---@return FName
function UBiomeManager:GetBiomeNameFromId(ID) end
---@param Biome EBiome
---@return ULevelGenMapIngame
function UBiomeManager:GetBiomeMap(Biome) end
---@param ID EBiome
---@return FName
function UBiomeManager:GetBiomeLevelNameFromId(ID) end
---@param Biome EBiome
---@return ALevelGenBaseActor
function UBiomeManager:GetBiomeLevelGen(Biome) end
---@param ID EBiome
---@return FText
function UBiomeManager:GetBiomeDisplayNameFromId(ID) end
---@param Biome EBiome
---@return UBiomeConfig
function UBiomeManager:GetBiomeConfigByBiome(Biome) end
---@param Biome EBiome
---@return UBiomeConfig
function UBiomeManager:GetBiomeConfig(Biome) end
---@param Biome EBiome
---@return UBiomeBootEnvironment
function UBiomeManager:GetBiomeBootEnvironment(Biome) end
---@return TArray<EBiome>
function UBiomeManager:GetAllBiomes() end
---@return TArray<FString>
function UBiomeManager:GetAllBiomeNameStrings() end
---@return TArray<FName>
function UBiomeManager:GetAllBiomeNames() end
---@param NewBiome EBiome
---@param NewBiomeConfig UBiomeConfig
---@param NewBootEnvironment_Sink UBiomeBootEnvironment
function UBiomeManager:EnterBiome(NewBiome, NewBiomeConfig, NewBootEnvironment_Sink) end


---@class UBiomeTransitionManager : UObject
---@field OnTargetBiomeBootLayersStreamingStateChanged FBiomeTransitionManagerOnTargetBiomeBootLayersStreamingStateChanged
---@field OnTargetBiomeAllLevelsStreamingStateChanged FBiomeTransitionManagerOnTargetBiomeAllLevelsStreamingStateChanged
---@field DestinationBootEnvironment UBiomeBootEnvironment
---@field LockedTransition FBiomeTransitionInfo
---@field UnloadingForceGCInterval float
---@field BootEnvironmentPreloaders TMap<UBiomeConfig, UBiomeBootEnvironment>
---@field BootBiome_Async_LevelGenerator ALevelGenBaseActor
---@field BiomeAnchors TArray<UBiomeAnchor>
---@field DistantBiomeSpawnBins TArray<FTransform>
---@field StartIndexForVerticalBins int32
UBiomeTransitionManager = {}

function UBiomeTransitionManager:SwitchToDestinationGlobalSublevels() end
function UBiomeTransitionManager:SwitchToCurrentGlobalSublevels() end
function UBiomeTransitionManager:ShowDestinationBootEnvironment() end
---@param Caller UObject
---@param StreamingAspect EStreamingAspect
---@param OldState EStreamingAspectState
---@param NewState EStreamingAspectState
function UBiomeTransitionManager:OnTargetBiomeBootLayersStreamingStateChanged_Internal(Caller, StreamingAspect, OldState, NewState) end
---@param Caller UObject
---@param StreamingAspect EStreamingAspect
---@param OldState EStreamingAspectState
---@param NewState EStreamingAspectState
function UBiomeTransitionManager:OnTargetBiomeAllLevelsStreamingStateChanged_Internal(Caller, StreamingAspect, OldState, NewState) end
---@param BiomeConfig UBiomeConfig
---@param TransitionType EBiomeTransitionType
---@param RequestedBiomeBinIndex int32
---@param RequestedStartRoomTransform FTransform
---@param BiomeTransitionId FName
---@param BiomeBootEnvironmentId int32
---@param bInitiallyHidden boolean
---@return ELoadAndShowBiome_Async_Result
function UBiomeTransitionManager:LoadAndShowBiomeWithBin_Async(BiomeConfig, TransitionType, RequestedBiomeBinIndex, RequestedStartRoomTransform, BiomeTransitionId, BiomeBootEnvironmentId, bInitiallyHidden) end
---@param BiomeConfig UBiomeConfig
---@param TransitionType EBiomeTransitionType
---@param bInitiallyHidden boolean
---@param BiomeTransitionId FName
---@return ELoadAndShowBiome_Async_Result
function UBiomeTransitionManager:LoadAndShowBiome_Async(BiomeConfig, TransitionType, bInitiallyHidden, BiomeTransitionId) end
---@param BiomeConfig UBiomeConfig
---@param bKeepLoaded boolean
function UBiomeTransitionManager:KeepBiomeLoaded_Async(BiomeConfig, bKeepLoaded) end
---@param BiomeConfig UBiomeConfig
---@param bDisableUnloadDelaying boolean
---@return EHideAndUnloadBiome_Async_Result
function UBiomeTransitionManager:HideAndUnloadBiome_Async(BiomeConfig, bDisableUnloadDelaying) end
---@return EBiome
function UBiomeTransitionManager:GetTargetBiome() end
---@return UBiomeBootEnvironment
function UBiomeTransitionManager:GetDestinationBootEnvironment() end
---@param TransitionId FName
---@param TransitionType EBiomeTransitionType
---@param TransitionSide EBiomeTransitionSide
---@param PlayerIndex int32
---@return UBiomeAnchor
function UBiomeTransitionManager:GetBiomeAnchor(TransitionId, TransitionType, TransitionSide, PlayerIndex) end
---@param BiomeConfig UBiomeConfig
---@param BiomeTransitionType EBiomeTransitionType
---@param RequestedBiomeBinIndex int32
---@param RequestedStartRoomTransform FTransform
---@param bTeleportPlayerToStartRoom boolean
---@param BiomeTransitionId FName
---@param BiomeBootEnvironmentId int32
---@return EEnterBiome_Async_Result
function UBiomeTransitionManager:EnterBiomeWithBin_Async(BiomeConfig, BiomeTransitionType, RequestedBiomeBinIndex, RequestedStartRoomTransform, bTeleportPlayerToStartRoom, BiomeTransitionId, BiomeBootEnvironmentId) end
---@param WorldContextObject UObject
function UBiomeTransitionManager:EnterBiomeFromBiomeTransitionSaveData_Async(WorldContextObject) end
---@param BiomeConfig UBiomeConfig
---@param BiomeTransitionType EBiomeTransitionType
---@param BiomeTransitionId FName
---@return EEnterBiome_Async_Result
function UBiomeTransitionManager:EnterBiome_Async(BiomeConfig, BiomeTransitionType, BiomeTransitionId) end


---@class UBossEventDescriptor_Base : UObject
---@field StartDistance float
---@field EndDistance float
UBossEventDescriptor_Base = {}

---@param DeltaTime float
function UBossEventDescriptor_Base:Tick(DeltaTime) end
function UBossEventDescriptor_Base:Exit() end
---@param Enemy AEnemyBase
function UBossEventDescriptor_Base:Enter(Enemy) end


---@class UBossHealthWidget : UUserWidget
---@field AutoRegisterOnReviveForBoss AActor
---@field BossHealth UHealthComponent
---@field PlayerHealth UHealthComponent
UBossHealthWidget = {}

---@param HealthComponent UHealthComponent
function UBossHealthWidget:PlayerRevived(HealthComponent) end
---@param State EDownedState
function UBossHealthWidget:PlayerDownedStateChanged(State) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UBossHealthWidget:PlayerDied(DamagedActor, DamageEvent) end
---@return boolean
function UBossHealthWidget:IsActive() end
---@param bBossDied boolean
function UBossHealthWidget:DeactivateWidget(bBossDied) end
---@param HealthPercent float
function UBossHealthWidget:BossHealthChanged(HealthPercent) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UBossHealthWidget:BossDied(DamagedActor, DamageEvent) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UBossHealthWidget:BossDamaged(DamagedActor, DamageEvent) end
---@param Boss AActor
function UBossHealthWidget:ActivateWidget(Boss) end


---@class UBulletFluidData : UObject
---@field Radius float
---@field Strength float
---@field Delay float
UBulletFluidData = {}



---@class UBulletIndicatorComponent : USceneComponent
---@field BulletDetectionDistance float
---@field IndicatorMesh UStaticMesh
---@field IndicatorMaterial UMaterialInterface
---@field MaterialOpacityParameterName FName
---@field MaterialThreatLevelParameterName FName
---@field VisibilityInterpSpeed float
---@field IndicatorOffset FVector
---@field IndicatorDefaultScale FVector
---@field ScaleOverDistanceCurve UCurveFloat
---@field BulletAttackPulseScale float
---@field BulletAttackPulseSpeed float
---@field TraceChannel ECollisionChannel
UBulletIndicatorComponent = {}



---@class UBulletPatternType : UObject
---@field BulletSpawner TSubclassOf<UBulletSpawnerType>
---@field BulletCount int32
---@field BulletDelay float
---@field BulletSpawnerRepeatCount int32
---@field BulletSpawnerRepeatDelay float
---@field BulletEventRepeatCount int32
---@field BulletEventRepeatDelay float
---@field OnKillEvents TArray<FBulletPatternOnKillSpawnEvent>
---@field OnActorKilledEvents TArray<FBulletPatternSpawnEvent>
---@field PatternEventRepeatCount int32
---@field PatternEventRepeatDelay float
---@field SortedBulletEvents TArray<FBulletPatternEvent>
---@field SortedPatternEvents TArray<FBulletPatternEvent>
---@field BulletEventDuration float
---@field PatternEventDuration float
UBulletPatternType = {}



---@class UBulletSpawnerType : UObject
UBulletSpawnerType = {}


---@class UBulletSpawnerTypeBlueprint : UBulletSpawnerType
UBulletSpawnerTypeBlueprint = {}

---@param RepeatIndex int32
---@param RepeatCount int32
---@param BulletIndex int32
---@param TotalBulletCount int32
---@param SpawnData FBulletSpawnData
---@param SpawnPosition FVector
---@param SpawnRotation FRotator
---@param SpawnDirection FVector
---@return FSpawnerBulletInstance
function UBulletSpawnerTypeBlueprint:SpawnBullet(RepeatIndex, RepeatCount, BulletIndex, TotalBulletCount, SpawnData, SpawnPosition, SpawnRotation, SpawnDirection) end
---@param SpawnPosition FVector
---@param SpawnRotation FRotator
---@param SpawnDirection FVector
---@param Speed float
---@return FSpawnerBulletInstance
function UBulletSpawnerTypeBlueprint:DoSpawnEx(SpawnPosition, SpawnRotation, SpawnDirection, Speed) end
---@param SpawnPosition FVector
---@param SpawnRotation FRotator
---@param SpawnDirection FVector
---@return FSpawnerBulletInstance
function UBulletSpawnerTypeBlueprint:DoSpawn(SpawnPosition, SpawnRotation, SpawnDirection) end


---@class UBulletSpawnerTypeCircle : UBulletSpawnerType
---@field bIsFan boolean
---@field bIsHorizontal boolean
---@field Radius float
---@field ConeAngle float
---@field CircleAngle float
---@field StartAngle float
---@field Mode EBulletSpawnerTypeCircleMode
UBulletSpawnerTypeCircle = {}



---@class UBulletSpawnerTypeLine : UBulletSpawnerType
---@field bIsFan boolean
---@field LineWidth float
---@field FanSpreadAngle float
---@field bVertical boolean
---@field Mode EBulletSpawnerTypeLineMode
UBulletSpawnerTypeLine = {}



---@class UBulletSpawnerTypeNearbyEnemies : UBulletSpawnerType
---@field MaxDistance float
---@field NearbyEnemies TArray<AEnemyBase>
---@field bIsInitialized boolean
UBulletSpawnerTypeNearbyEnemies = {}



---@class UBulletSpawnerTypeRandom : UBulletSpawnerType
---@field bIsFan boolean
---@field AreaWidth float
---@field AreaHeight float
---@field SpreadAngleVertical float
---@field SpreadAngleHorizontal float
UBulletSpawnerTypeRandom = {}



---@class UBulletSpawnerTypeSingle : UBulletSpawnerType
UBulletSpawnerTypeSingle = {}


---@class UBulletStaticMesh : UObject
---@field StaticMesh UStaticMesh
---@field Material UMaterialInterface
UBulletStaticMesh = {}



---@class UBulletType : UObject
---@field SpawnData FBulletSpawnData
UBulletType = {}



---@class UBurstFire : UGunFiringBehavior
---@field bIsFiring boolean
---@field bBurstRequested boolean
---@field WindupTime float
---@field WindupTimeLeft float
---@field FireRate float
---@field BulletsLeftInBurst int32
---@field BulletsPerBurst int32
---@field DelayBetweenBursts float
---@field DelayUntilNextBullet float
---@field bRequireTriggerReleaseBetweenBursts boolean
UBurstFire = {}



---@class UCameraModifier_AltFireMode : UCameraModifier_HMQ
---@field CameraData FHMQCameraData
UCameraModifier_AltFireMode = {}



---@class UCameraModifier_Blueprintable : UCameraModifier_HMQ
---@field bUseCameraData boolean
---@field CameraData FHMQCameraData
---@field bDisallowFurtherCameraMods boolean
UCameraModifier_Blueprintable = {}

---@param ViewTarget AActor
---@return boolean
function UCameraModifier_Blueprintable:InitializeModifier(ViewTarget) end
---@param ViewTarget AActor
---@param DeltaTime float
---@param OutViewRotation FRotator
---@param OutDeltaRot FRotator
---@return boolean
function UCameraModifier_Blueprintable:BlueprintProcessViewRotation(ViewTarget, DeltaTime, OutViewRotation, OutDeltaRot) end
function UCameraModifier_Blueprintable:BlueprintModifierEnabled() end
---@param bImmediate boolean
function UCameraModifier_Blueprintable:BlueprintModifierDisabled(bImmediate) end


---@class UCameraModifier_Death : UCameraModifier_Blueprintable
---@field PlayerCharacter TWeakObjectPtr<APlayerCharacter>
UCameraModifier_Death = {}



---@class UCameraModifier_Downed : UCameraModifier_Blueprintable
---@field PlayerCharacter TWeakObjectPtr<APlayerCharacter>
UCameraModifier_Downed = {}



---@class UCameraModifier_FellOutOfWorld : UCameraModifier_Blueprintable
---@field DebugValue float
---@field bIsFallingOutOfWorld boolean
---@field bIsComplete boolean
UCameraModifier_FellOutOfWorld = {}

function UCameraModifier_FellOutOfWorld:FellOutOfWorldTeleported() end
function UCameraModifier_FellOutOfWorld:FellOutOfWorldStart() end
function UCameraModifier_FellOutOfWorld:FellOutOfWorldComplete() end


---@class UCameraModifier_FocusAim : UCameraModifier_HMQ
---@field PlayerCharacter TWeakObjectPtr<APlayerCharacter>
UCameraModifier_FocusAim = {}



---@class UCameraModifier_HipFire : UCameraModifier_Blueprintable
---@field PlayerCharacter TWeakObjectPtr<APlayerCharacter>
UCameraModifier_HipFire = {}



---@class UCameraModifier_HookShot : UCameraModifier_HMQ
---@field ReleasePhase float
---@field CameraData FHMQCameraData
UCameraModifier_HookShot = {}



---@class UCameraModifier_HouseDestabilize : UCameraModifier_Blueprintable
---@field HouseManager TWeakObjectPtr<UHouseManager>
UCameraModifier_HouseDestabilize = {}



---@class UCameraModifier_LockOn : UCameraModifier_HMQ
---@field CameraData FHMQCameraData
---@field VerticalMarginCurveX UCurveFloat
---@field VerticalMarginCurveY UCurveFloat
UCameraModifier_LockOn = {}



---@class UCameraModifier_NearbyEnemies : UCameraModifier_HMQ
---@field CameraData FHMQCameraData
---@field WeightCurve UCurveFloat
---@field DistanceWeightCurve UCurveFloat
---@field EnemyCheckDistance float
---@field EnemyNormalWeight float
---@field EnemyBehindWeight float
---@field WeightInterpSpeed float
---@field MinThreatWeight float
---@field MaxThreatWeight float
---@field Enemies TSet<AEnemyBase>
---@field CurrentThreatWeight float
UCameraModifier_NearbyEnemies = {}



---@class UCameraModifier_NearbyLedges : UCameraModifier_HMQ
---@field CameraData FHMQCameraData
---@field bUpdateLedgesOnlyOnGround boolean
---@field LedgeDropMinHeight float
---@field WeightInterpSpeed float
---@field WeightInterpSpeedWhenDisabled float
---@field MinTotalWeight float
---@field MaxTotalWeight float
---@field MinAngleWeight float
---@field MaxAngleWeight float
---@field MinDropDistance float
---@field MaxDropDistance float
---@field MinDropDistanceWeight float
---@field MaxDropDistanceWeight float
---@field CurrentWeight float
---@field TargetWeight float
---@field bUpdateWeight boolean
---@field LedgeDropsNum int32
---@field ValidLedgeCount int32
UCameraModifier_NearbyLedges = {}



---@class UCameraModifier_PlayerLanding : UCameraModifier_HMQ
---@field LandingTypes uint8
---@field duration float
---@field LandingVelRange FVector2D
---@field LandingStrengthRange FVector2D
---@field RotationMod FRotator
---@field bMoveCamera boolean
---@field bRotateCamera boolean
---@field bApplyAsSocketOffset boolean
---@field bReduceAlphaOverTime boolean
---@field CameraData FHMQCameraData
UCameraModifier_PlayerLanding = {}

---@param hit FHitResult
---@param Velocity FVector
---@param bHardLand boolean
function UCameraModifier_PlayerLanding:HandlePlayerLanding(hit, Velocity, bHardLand) end


---@class UCameraModifier_Sprint : UCameraModifier_HMQ
---@field CameraData FHMQCameraData
---@field BlurMultiplierRange FVector2D
UCameraModifier_Sprint = {}



---@class UCameraModifier_TouristDash : UCameraModifier_HMQ
---@field CameraData FHMQCameraData
UCameraModifier_TouristDash = {}



---@class UCameraModifier_TouristRun : UCameraModifier_HMQ
---@field CameraReferenceSocketName FName
---@field OffsetCurve UCurveFloat
---@field OffsetMultiplier float
UCameraModifier_TouristRun = {}



---@class UCameraModifier_Vaulting : UCameraModifier_Blueprintable
---@field PlayerCharacter TWeakObjectPtr<APlayerCharacter>
UCameraModifier_Vaulting = {}



---@class UCapabilityDetectBPLib : UBlueprintFunctionLibrary
UCapabilityDetectBPLib = {}

---@return boolean
function UCapabilityDetectBPLib:HasEnoughVideoMemoryForRayTracing() end
---@return boolean
function UCapabilityDetectBPLib:HasEnoughSystemMemoryForRayTracing() end
---@return EQualityPreset
function UCapabilityDetectBPLib:GetOptimalQualityPresetCached() end
---@return EQualityPreset
function UCapabilityDetectBPLib:GetOptimalQualityPreset() end


---@class UChallengeMilestoneNotificationWidget : UNotificationWidget
---@field Description FText
UChallengeMilestoneNotificationWidget = {}



---@class UCharacterActionAnimInstance : UAnimInstance
---@field OwnerCharacter ATouristCharacter
---@field MessagingComponent UAnimationMessagingComponent
---@field CurrentActionSegment FSubInstanceActionSegment
---@field ActionSegmentIndex int32
---@field ActionSegmentTimer float
UCharacterActionAnimInstance = {}

---@return boolean
function UCharacterActionAnimInstance:IsValidToEvaluate() end
---@param InOwnerCharacter ATouristCharacter
function UCharacterActionAnimInstance:InitializeActionInstance(InOwnerCharacter) end
function UCharacterActionAnimInstance:HandleInitialized() end
---@param ReachedSegment FSubInstanceActionSegment
function UCharacterActionAnimInstance:HandleActionSegmentReached(ReachedSegment) end


---@class UCharacterAnimAction_Base : UObject
UCharacterAnimAction_Base = {}

function UCharacterAnimAction_Base:RefreshAnimationData() end
---@return float
function UCharacterAnimAction_Base:GetDuration() end


---@class UCharacterAnimAction_Composite : UCharacterAnimAction_Base
---@field MontageActions TArray<UCharacterAnimAction_Montage>
---@field ActionPicker UMontageAnimActionPicker
UCharacterAnimAction_Composite = {}

---@param SequenceIndex int32
---@param PreviousPlayedMontageAction UCharacterAnimAction_Montage
---@param OwnerAnimInstance UTouristCharacterAnimInstance
---@return UCharacterAnimAction_Montage
function UCharacterAnimAction_Composite:GetSequenceMontage(SequenceIndex, PreviousPlayedMontageAction, OwnerAnimInstance) end
---@return TArray<UCharacterAnimAction_Montage>
function UCharacterAnimAction_Composite:GetMontageActions() end


---@class UCharacterAnimAction_Montage : UCharacterAnimAction_SingleBase
---@field Montage UAnimMontage
---@field EventSegments TArray<FMontageActionSegment>
---@field CorrectionWindows TMap<uint8, FAnimDeltaCorrectionWindow>
---@field duration float
---@field bResetVelocityAfterAction boolean
UCharacterAnimAction_Montage = {}

---@param index int32
---@param OutSegment FMontageActionSegment
---@return boolean
function UCharacterAnimAction_Montage:TryGetSegmentFromIndex(index, OutSegment) end
---@param Time float
---@param OutSegment FMontageActionSegment
---@return boolean
function UCharacterAnimAction_Montage:TryGetSegmentAtTime(Time, OutSegment) end
---@param ID uint8
---@param OutWindow FAnimDeltaCorrectionWindow
---@return boolean
function UCharacterAnimAction_Montage:TryGetCorrectionWindow(ID, OutWindow) end
---@param InMontage UAnimMontage
function UCharacterAnimAction_Montage:SetMontage(InMontage) end
function UCharacterAnimAction_Montage:ResetCorrectionWindows() end
function UCharacterAnimAction_Montage:PostProcessMontageData() end
---@return TArray<FMontageActionSegment>
function UCharacterAnimAction_Montage:GetSegments() end
---@return UAnimMontage
function UCharacterAnimAction_Montage:GetMontage() end
---@param Notifies TArray<FAnimNotifyEventReference>
function UCharacterAnimAction_Montage:CacheHitboxAttackRequests(Notifies) end
---@param Notifies TArray<FAnimNotifyEventReference>
function UCharacterAnimAction_Montage:CacheEventSegments(Notifies) end
---@param Notifies TArray<FAnimNotifyEventReference>
function UCharacterAnimAction_Montage:CacheDeltaCorrectionWindows(Notifies) end


---@class UCharacterAnimAction_SingleBase : UCharacterAnimAction_Base
---@field HitboxAttackRequests TMap<uint8, FAnimHitboxAttackRequest>
---@field ControlFlags ECharacterControlFlags
UCharacterAnimAction_SingleBase = {}

---@param Time float
---@param OutRequest FAnimHitboxAttackRequest
---@return boolean
function UCharacterAnimAction_SingleBase:TryGetNextHitboxAttackRequestAtTime(Time, OutRequest) end
---@param ID uint8
---@param OutRequest FAnimHitboxAttackRequest
---@return boolean
function UCharacterAnimAction_SingleBase:TryGetHitboxAttackRequest(ID, OutRequest) end


---@class UCharacterAnimAction_SubInstance : UCharacterAnimAction_SingleBase
---@field InstanceClass TSubclassOf<UCharacterActionAnimInstance>
---@field EventSegments TArray<FSubInstanceActionSegment>
UCharacterAnimAction_SubInstance = {}



---@class UCharacterSoftCollisionComponent : USoftCollisionComponent
---@field CharacterOwner ATouristCharacter
UCharacterSoftCollisionComponent = {}



---@class UChargeShot : UGunFiringBehavior
---@field ChargingPfx FName
---@field ChargingPC UNGParticleComponent
---@field ChargedPfx FName
---@field ChargedPC UNGParticleComponent
---@field ChargingSound UAkAudioEvent
---@field ChargingSoundComponent UAkComponent
---@field bChargingSoundPlaying boolean
---@field ChargedShootSound UAkAudioEvent
---@field RegularShootSound UAkAudioEvent
---@field OriginalShootSound UAkAudioEvent
---@field ChargedBulletDamage FBulletDamage
---@field ChargedBulletSpeedMultiplier float
---@field bIsFiring boolean
---@field bIsCharging boolean
---@field ChargeTime float
---@field cooldown float
---@field MinChargeTime float
---@field MaxChargeTime float
---@field bFireAtMaxCharge boolean
---@field bAllowRegularShots boolean
UChargeShot = {}

---@return boolean
function UChargeShot:GetIsGunFiring() end
---@return boolean
function UChargeShot:GetIsGunCoolingDown() end
---@return boolean
function UChargeShot:GetIsGunCharging() end
---@return float
function UChargeShot:GetChargePercent() end


---@class UCinematicFeatureComponent : UHMQActorComponent
---@field StartPriority int32
---@field StopPriority int32
UCinematicFeatureComponent = {}

---@param DeltaTime float
function UCinematicFeatureComponent:TickCinematic(DeltaTime) end
function UCinematicFeatureComponent:StopCinematic() end
function UCinematicFeatureComponent:StartCinematic() end
---@param SkipGate FName
function UCinematicFeatureComponent:SkipCinematic(SkipGate) end
function UCinematicFeatureComponent:SetupCinematic() end
function UCinematicFeatureComponent:RunCinematic() end
function UCinematicFeatureComponent:PrepareStopCinematic() end
---@return ACharacter
function UCinematicFeatureComponent:GetInitiatorCharacter() end
---@return AActor
function UCinematicFeatureComponent:GetInitiatorActor() end
---@return APlayerController
function UCinematicFeatureComponent:GetCinematicPlayerController() end
---@return ACinematicActor
function UCinematicFeatureComponent:GetCinematicActor() end
function UCinematicFeatureComponent:CompleteCinematic() end
---@param InPlayerController APlayerController
---@param InInitiatorActor AActor
function UCinematicFeatureComponent:CannotStartCinematic(InPlayerController, InInitiatorActor) end


---@class UCinematicManagerComponent : UHMQActorComponent
---@field OnCinematicStart FCinematicManagerComponentOnCinematicStart
---@field OnCinematicRun FCinematicManagerComponentOnCinematicRun
---@field OnCinematicStop FCinematicManagerComponentOnCinematicStop
---@field OnCinematicSkip FCinematicManagerComponentOnCinematicSkip
---@field OnCinematicComplete FCinematicManagerComponentOnCinematicComplete
---@field CinematicActor ACinematicActor
---@field CinematicActorName FString
---@field CinematicObjects TArray<UObject>
UCinematicManagerComponent = {}

---@return boolean
function UCinematicManagerComponent:WasCinematicSkipped() end
---@param bForceNotSkippable boolean
---@return boolean
function UCinematicManagerComponent:SkipCinematic(bForceNotSkippable) end
---@param FadeDuration float
---@return boolean
function UCinematicManagerComponent:PrepareCinematic(FadeDuration) end
---@return boolean
function UCinematicManagerComponent:IsCinematicSkipping() end
---@return boolean
function UCinematicManagerComponent:IsCinematicSkippable() end
---@return boolean
function UCinematicManagerComponent:IsCinematicRunning() end
---@return APlayerController
function UCinematicManagerComponent:GetPlayerController() end
---@return ACinematicActor
function UCinematicManagerComponent:GetCinematicActor() end


---@class UCinematicPlayerPathFollowingComponent : UPathFollowingComponent
---@field PathMoveInputScale float
---@field PathMoveInputMinSize float
---@field PathMoveInputScaleTransitionDuration float
UCinematicPlayerPathFollowingComponent = {}

---@param PathFollowingComp UPathFollowingComponent
---@param InOutMoveInput FVector
function UCinematicPlayerPathFollowingComponent:HandlePostProcessMove(PathFollowingComp, InOutMoveInput) end


---@class UCinematicPlayerStateComponent : UHMQActorComponent
---@field DisableTags TArray<FName>
UCinematicPlayerStateComponent = {}

---@param Tag FName
---@param bEnabled boolean
function UCinematicPlayerStateComponent:SetHardCinematicsEnabled(Tag, bEnabled) end
---@param Tag FName
---@param bEnabled boolean
function UCinematicPlayerStateComponent:Server_SetHardCinematicsEnabled(Tag, bEnabled) end


---@class UCinematicSequenceComponent : UCinematicFeatureComponent
---@field SequenceActors TArray<ALevelSequenceActor>
---@field SpawnedSequenceActors TArray<ALevelSequenceActor>
---@field SequencePlayers TArray<ASequenceCinematicPlayer>
---@field SpawnedActors TArray<AActor>
---@field DestroyableActors TArray<AActor>
---@field SoftSequenceActor ALevelSequenceActor
---@field SoftEventReceivers TArray<AActor>
UCinematicSequenceComponent = {}

---@param SequenceActor ALevelSequenceActor
function UCinematicSequenceComponent:StopSequence(SequenceActor) end
---@param SequenceTag FName
---@param Player ASequenceCinematicPlayer
---@return ALevelSequenceActor
function UCinematicSequenceComponent:StartSequenceByTag(SequenceTag, Player) end
---@param SequenceActor ALevelSequenceActor
---@param Player ASequenceCinematicPlayer
function UCinematicSequenceComponent:StartSequenceByActor(SequenceActor, Player) end
---@param LevelSequence TSoftObjectPtr<ULevelSequence>
---@param Player ASequenceCinematicPlayer
---@return ALevelSequenceActor
function UCinematicSequenceComponent:StartSequence(LevelSequence, Player) end
---@param LevelSequence TSoftObjectPtr<ULevelSequence>
---@param Bindings TArray<FCinematicSequenceBinding>
---@param EventReceivers TArray<AActor>
---@param Completed FSpawnSoftSequenceCompleted
function UCinematicSequenceComponent:SpawnSoftSequence(LevelSequence, Bindings, EventReceivers, Completed) end
---@param LevelSequence TSoftObjectPtr<ULevelSequence>
---@param Bindings TArray<FCinematicSequenceBinding>
---@param EventReceivers TArray<AActor>
---@return ALevelSequenceActor
function UCinematicSequenceComponent:SpawnSequence(LevelSequence, Bindings, EventReceivers) end
---@param SequenceActor ALevelSequenceActor
---@param Bindings TArray<FCinematicSequenceBinding>
---@param EventReceivers TArray<AActor>
---@param Completed FSetupSoftSequenceCompleted
function UCinematicSequenceComponent:SetupSoftSequence(SequenceActor, Bindings, EventReceivers, Completed) end
---@param SequenceActor ALevelSequenceActor
---@param Bindings TArray<FCinematicSequenceBinding>
---@param EventReceivers TArray<AActor>
function UCinematicSequenceComponent:SetupSequence(SequenceActor, Bindings, EventReceivers) end
---@param LevelSequence FSoftObjectPath
---@param Completed FLoadSoftSequencePathCompleted
function UCinematicSequenceComponent:LoadSoftSequencePath(LevelSequence, Completed) end
---@param LevelSequence TSoftObjectPtr<ULevelSequence>
---@param Completed FLoadSoftSequenceCompleted
function UCinematicSequenceComponent:LoadSoftSequence(LevelSequence, Completed) end
---@param SequenceActor ALevelSequenceActor
---@return boolean
function UCinematicSequenceComponent:IsSequencePlaying(SequenceActor) end
---@param SequenceActor ALevelSequenceActor
---@param duration float
---@return boolean
function UCinematicSequenceComponent:IsSequencePlaybackEndWithin(SequenceActor, duration) end
---@param LevelSequencePath FSoftObjectPath
---@param LevelSequenceObject ULevelSequence
function UCinematicSequenceComponent:HandleSequenceLoaded(LevelSequencePath, LevelSequenceObject) end
---@param ActorClass TSubclassOf<AActor>
---@return AActor
function UCinematicSequenceComponent:GetSpawnedActorOfClass(ActorClass) end
---@param SequenceActor ALevelSequenceActor
---@return float
function UCinematicSequenceComponent:GetSequencePlaybackPercentage(SequenceActor) end
---@param BindingName FName
---@return AActor
function UCinematicSequenceComponent:GetBindingActor(BindingName) end
function UCinematicSequenceComponent:FinishSequence() end
---@param SequenceActor ALevelSequenceActor
---@return boolean
function UCinematicSequenceComponent:EndSequence(SequenceActor) end
---@param SequenceActor ALevelSequenceActor
---@param BindingName FName
---@param Actor AActor
---@return boolean
function UCinematicSequenceComponent:AddSequenceBinding(SequenceActor, BindingName, Actor) end


---@class UCinematicSkipControllerComponent : UHMQActorComponent
---@field SkipDuration float
---@field CinematicManagerComponent UCinematicManagerComponent
UCinematicSkipControllerComponent = {}

---@return boolean
function UCinematicSkipControllerComponent:IsSkipTriggered() end
---@return boolean
function UCinematicSkipControllerComponent:IsSkipEnabled() end
---@return boolean
function UCinematicSkipControllerComponent:IsSkipActive() end
---@return float
function UCinematicSkipControllerComponent:GetSkipPercentage() end
---@return float
function UCinematicSkipControllerComponent:GetSkipOpacity() end


---@class UCinematicWrapperComponent : UHMQActorComponent
---@field OnCinematicPreStart FCinematicWrapperComponentOnCinematicPreStart
---@field OnCinematicStart FCinematicWrapperComponentOnCinematicStart
---@field OnCinematicRun FCinematicWrapperComponentOnCinematicRun
---@field OnCinematicStop FCinematicWrapperComponentOnCinematicStop
UCinematicWrapperComponent = {}

function UCinematicWrapperComponent:BroadcastCinematicStop() end
function UCinematicWrapperComponent:BroadcastCinematicStart() end
function UCinematicWrapperComponent:BroadcastCinematicRun() end
function UCinematicWrapperComponent:BroadcastCinematicPreStart() end


---@class UCinematicsBlueprintLibrary : UBlueprintFunctionLibrary
UCinematicsBlueprintLibrary = {}

---@param Actor AActor
---@param MarkerLocation FVector
---@param MarkerRotation FRotator
---@return boolean
function UCinematicsBlueprintLibrary:WarpActorToMarkerTransform(Actor, MarkerLocation, MarkerRotation) end
---@param Actor AActor
---@param MarkerComponent USceneComponent
---@return boolean
function UCinematicsBlueprintLibrary:WarpActorToMarkerComponent(Actor, MarkerComponent) end
---@param Actor AActor
---@param MarkerActor AActor
---@return boolean
function UCinematicsBlueprintLibrary:WarpActorToMarkerActor(Actor, MarkerActor) end
---@param WorldContextObject UObject
---@return boolean
function UCinematicsBlueprintLibrary:ShouldShowCinematicMedia(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UCinematicsBlueprintLibrary:ShouldPlayCinematicMedia(WorldContextObject) end
---@param PlayerController APlayerController
---@param FadeOutDuration float
---@return boolean
function UCinematicsBlueprintLibrary:PrepareCinematic(PlayerController, FadeOutDuration) end
---@param WorldContextObject UObject
---@param Flag FName
---@param OutResult EHMQFunctionResult
function UCinematicsBlueprintLibrary:OnceCinematicFlag(WorldContextObject, Flag, OutResult) end
---@param WorldContextObject UObject
---@return boolean
function UCinematicsBlueprintLibrary:IsCinematicsPersistenceActive(WorldContextObject) end
---@param PlayerController APlayerController
---@return boolean
function UCinematicsBlueprintLibrary:IsCinematicRunning(PlayerController) end
---@param PlayerController APlayerController
---@return ACinematicActor
function UCinematicsBlueprintLibrary:GetRunningCinematic(PlayerController) end
---@param Actor AActor
---@param OptionalMarkerActor AActor
---@param MarkerLocation FVector
---@param MarkerRotation FRotator
---@param OutLocation FVector
---@param OutRotation FRotator
---@return boolean
function UCinematicsBlueprintLibrary:GetMarkerSafeTransform(Actor, OptionalMarkerActor, MarkerLocation, MarkerRotation, OutLocation, OutRotation) end
---@param Actor AActor
---@param MarkerComponent USceneComponent
---@param OutLocation FVector
---@param OutRotation FRotator
---@return boolean
function UCinematicsBlueprintLibrary:GetMarkerComponentSafeTransform(Actor, MarkerComponent, OutLocation, OutRotation) end
---@param Actor AActor
---@param MarkerActor AActor
---@param OutLocation FVector
---@param OutRotation FRotator
---@return boolean
function UCinematicsBlueprintLibrary:GetMarkerActorSafeTransform(Actor, MarkerActor, OutLocation, OutRotation) end
---@param Director ULevelSequenceDirector
---@return ACinematicActor
function UCinematicsBlueprintLibrary:GetDirectorCinematicActor(Director) end
---@param WorldContextObject UObject
---@param SelectionName FName
---@return int32
function UCinematicsBlueprintLibrary:GetCinematicsSelectionId(WorldContextObject, SelectionName) end
---@param WorldContextObject UObject
---@return int32
function UCinematicsBlueprintLibrary:GetCinematicsPersistenceMode(WorldContextObject) end
---@param PlayerController APlayerController
---@return UCinematicManagerComponent
function UCinematicsBlueprintLibrary:GetCinematicsManager(PlayerController) end
---@param Director ULevelSequenceDirector
---@param EventName FName
---@return boolean
function UCinematicsBlueprintLibrary:DirectorOwnerCallEvent(Director, EventName) end
---@param Director ULevelSequenceDirector
---@param EventName FName
---@return boolean
function UCinematicsBlueprintLibrary:DirectorCinematicEvent(Director, EventName) end
---@param WorldContextObject UObject
---@param Min int32
---@param Max int32
---@return int32
function UCinematicsBlueprintLibrary:CinematicRandomIntegerInRange(WorldContextObject, Min, Max) end
---@param PlayerController APlayerController
---@param FadeDuration float
---@param Sleep float
---@param Color FLinearColor
function UCinematicsBlueprintLibrary:CinematicFadeOut(PlayerController, FadeDuration, Sleep, Color) end
---@param PlayerController APlayerController
---@param FadeDuration float
---@param Sleep float
---@param Color FLinearColor
function UCinematicsBlueprintLibrary:CinematicFadeIn(PlayerController, FadeDuration, Sleep, Color) end
---@param SequenceActor ALevelSequenceActor
---@param BindingName FName
---@param Actor AActor
---@return boolean
function UCinematicsBlueprintLibrary:AddSequenceBinding(SequenceActor, BindingName, Actor) end


---@class UCinematicsManager : UObject
UCinematicsManager = {}


---@class UCitadelTTDroneFixerUpperHack : UActorComponent
UCitadelTTDroneFixerUpperHack = {}


---@class UCoinDropComponent : UActorComponent
---@field CollectibleClass TSubclassOf<ACollectibleBase>
UCoinDropComponent = {}

---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UCoinDropComponent:OnDamageTakenHealthComponent(DamagedActor, DamageEvent) end
---@param DamagedActor AActor
---@param damage float
---@param DamageType UDamageType
---@param InstigatedBy AController
---@param DamageCauser AActor
function UCoinDropComponent:OnDamageTakenGeneric(DamagedActor, damage, DamageType, InstigatedBy, DamageCauser) end


---@class UCollectableStatics : UBlueprintFunctionLibrary
UCollectableStatics = {}


---@class UCollectibleBeamColour : UPrimaryDataAsset
---@field CollectibleBeamColours FCollectibleBeamColours
UCollectibleBeamColour = {}



---@class UCollectibleLabelWidget : UHUDLabelWidget
UCollectibleLabelWidget = {}

---@param ScreenWidth float
---@param WidgetPivot float
---@param WidgetWidth float
---@return float
function UCollectibleLabelWidget:SetupInputMode(ScreenWidth, WidgetPivot, WidgetWidth) end
---@param bEnable boolean
function UCollectibleLabelWidget:SetSubPromptVisibility(bEnable) end
---@param Text FText
---@param bCanInteract boolean
function UCollectibleLabelWidget:SetSubPrompt(Text, bCanInteract) end
---@param Text FText
---@param bCanInteract boolean
function UCollectibleLabelWidget:SetPrompt(Text, bCanInteract) end


---@class UCollectibleManager : UObject
---@field OnInitializeComplete FCollectibleManagerOnInitializeComplete
---@field ArtefactCollectibles TMap<FName, TSubclassOf<AArtefactCollectible>>
---@field Collectibles TMap<FName, TSubclassOf<ACollectibleBase>>
---@field CollectibleClasses TArray<TSubclassOf<ACollectibleBase>>
UCollectibleManager = {}

function UCollectibleManager:HandleStreamingComplete() end
---@param CollectibleClass TSubclassOf<ACollectibleBase>
---@param DropGroup ECollectibleDropGroup
---@return FCollectibleInfo
function UCollectibleManager:GetInfoForCollectible(CollectibleClass, DropGroup) end
---@param WorldContextObject UObject
---@param DropGroup ECollectibleDropGroup
---@param SpawnPolicy ECollectibleSpawnPolicy
---@param ExcludeClasses TSet<TSubclassOf<ACollectibleBase>>
---@param OutTotalCollectiblesInGroup int32
---@return FCollectibleInfo
function UCollectibleManager:GetCollectibleToSpawnWithExclusions(WorldContextObject, DropGroup, SpawnPolicy, ExcludeClasses, OutTotalCollectiblesInGroup) end
---@param WorldContextObject UObject
---@param DropGroup ECollectibleDropGroup
---@param SpawnPolicy ECollectibleSpawnPolicy
---@param OutTotalCollectiblesInGroup int32
---@return FCollectibleInfo
function UCollectibleManager:GetCollectibleToSpawn(WorldContextObject, DropGroup, SpawnPolicy, OutTotalCollectiblesInGroup) end
---@param ArtefactName FName
---@return TSubclassOf<AArtefactCollectible>
function UCollectibleManager:GetArtefactCollectible(ArtefactName) end
---@param OutCollectibles TArray<UClass>
function UCollectibleManager:GetAllCurrentCollectibles(OutCollectibles) end
---@param OutCollectibles TArray<TSubclassOf<ACollectibleBase>>
function UCollectibleManager:GetAllCollectibles(OutCollectibles) end
---@param ClassName FName
---@return TSubclassOf<ACollectibleBase>
function UCollectibleManager:BP_GetCollectibleClass(ClassName) end


---@class UConditionTargetUnobstructed : UEnemyBehaviorConditionBase
---@field TraceChannel ECollisionChannel
---@field CollisionShapeInflation float
UConditionTargetUnobstructed = {}



---@class UConeBarrel : UGunBarrel
---@field BulletCount int32
---@field MaxFiringAngle float
---@field AccurateSpreadMultiplier float
UConeBarrel = {}



---@class UConeSideBySideBarrel : UConeBarrel
---@field BarrelCount int32
---@field BarrelDistance float
UConeSideBySideBarrel = {}



---@class UConfirmationDialog : UUserWidget
UConfirmationDialog = {}

---@param Prompt FText
function UConfirmationDialog:SetPrompt(Prompt) end


---@class UConnectorLine : UTouristWidgetBase
---@field Segments TArray<FConnectorLineData>
---@field LabelPosition FVector2D
---@field TargetObjectPosition FVector2D
---@field ConnectionPosition FVector2D
---@field TargetObjectWorldPosition FVector
---@field bFromSide boolean
---@field bFromLeft boolean
---@field bFromUp boolean
UConnectorLine = {}

---@param WidgetList TArray<UWidget>
---@param InAnimAlpha float
function UConnectorLine:SetupWidgets(WidgetList, InAnimAlpha) end
function UConnectorLine:ReceiveSetPosition() end
---@return boolean
function UConnectorLine:IsObscured() end
---@return float
function UConnectorLine:GetTotaLineLength() end
---@param InTime float
---@param Position FVector2D
---@param DistanceToEdge float
---@param bHorizontal boolean
---@param bVisible boolean
function UConnectorLine:GetPositionAtTime(InTime, Position, DistanceToEdge, bHorizontal, bVisible) end
---@return float
function UConnectorLine:GetCurrentLineLength() end
---@return float
function UConnectorLine:GetAnimAlpha() end


---@class UConsumableComponent : UHMQActorComponent
---@field bAutoDestroyConsumable boolean
---@field bTriggerOnButtonRelease boolean
---@field AnimationMontage UAnimMontage
---@field AnimationPlayRate float
---@field MultiplayerReplacements TArray<TSoftClassPtr<AInventoryCollectible>>
---@field AnimationGameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field ConsumableItemActor TSubclassOf<AActor>
---@field NAME_ConsumableSocket FName
---@field OnConsume FConsumableComponentOnConsume
---@field OnConsumeFinished FConsumableComponentOnConsumeFinished
---@field OnBeginUseConsumable FConsumableComponentOnBeginUseConsumable
---@field OnPrepareConsume FConsumableComponentOnPrepareConsume
---@field OnConsumeAnimNotify FConsumableComponentOnConsumeAnimNotify
---@field OnCanBeConsumed FConsumableComponentOnCanBeConsumed
---@field NAME_Consume FName
---@field NAME_ConsumeComplete FName
---@field NAME_ShowItem FName
---@field InventoryItemComp UHMQInventoryItemComponent
---@field bConsumed boolean
---@field bConsumeMode boolean
---@field bTriggered boolean
---@field bBusy boolean
---@field bFinalizePending boolean
---@field BusyInteractor UInteractionManagerComponent
---@field SpawnedConsumableItemActor AActor
---@field DeathSystemComp UDeathSystemComponent
UConsumableComponent = {}

function UConsumableComponent:Server_Consume() end
function UConsumableComponent:RejectConsume() end
function UConsumableComponent:OnRep_Triggered() end
function UConsumableComponent:OnRep_Consumed() end
function UConsumableComponent:MulticastResetForReuse() end
function UConsumableComponent:Multicast_UseWithoutConsume() end
---@return boolean
function UConsumableComponent:IsConsumeMode() end
---@return boolean
function UConsumableComponent:IsConsumed() end
---@param NotifyName FName
---@param BranchingPointNotifyPayload FBranchingPointNotifyPayload
function UConsumableComponent:HandleNotifyEndReceived(NotifyName, BranchingPointNotifyPayload) end
---@param NotifyName FName
---@param BranchingPointNotifyPayload FBranchingPointNotifyPayload
function UConsumableComponent:HandleNotifyBeginReceived(NotifyName, BranchingPointNotifyPayload) end
---@param Montage UAnimMontage
---@param bInterrupted boolean
function UConsumableComponent:HandleMontageEnded(Montage, bInterrupted) end
function UConsumableComponent:DestroyConsumable() end
---@return boolean
function UConsumableComponent:CanBeConsumed() end
function UConsumableComponent:AnimMontageTimer() end


---@class UCreditsBase : UTouristWidgetBase
---@field bBaseCreditsDisabled boolean
---@field bDLCCreditsDisabled boolean
UCreditsBase = {}

---@return int32
function UCreditsBase:GetSKU_ID_BlueprintCallable() end
---@param CreditsType ECreditsType
---@return TArray<FString>
function UCreditsBase:GetCreditsData(CreditsType) end


---@class UCrosshairWidget : UOnScreenThingPointer
---@field OnEnemyPointingUpdated FCrosshairWidgetOnEnemyPointingUpdated
---@field bIsPointingEnemy boolean
---@field bIsWithinShootingRange boolean
---@field EnemyDistanceFromShootingRange float
---@field EnemyMaxDistanceFromShootingRange float
UCrosshairWidget = {}

---@param IsPointing boolean
---@param IsWithinShootingRange boolean
function UCrosshairWidget:UpdatePointingEnemy(IsPointing, IsWithinShootingRange) end
---@return boolean
function UCrosshairWidget:ShouldBeVisible() end
---@return UWidget
function UCrosshairWidget:GetRootWidget() end


---@class UCutsceneFadeInWidget : UHMQUserWidget
---@field AlwaysVisible boolean
---@field MultiplayerOnly boolean
---@field SkipController USkipControllerWidget
UCutsceneFadeInWidget = {}

---@param InSkipController USkipControllerWidget
function UCutsceneFadeInWidget:SetSkipController(InSkipController) end
---@param Opacity float
function UCutsceneFadeInWidget:RecieveUpdatedFadeState(Opacity) end


---@class UDEPRECATED_TouristMenuWidget : UTouristWidgetBase
UDEPRECATED_TouristMenuWidget = {}

function UDEPRECATED_TouristMenuWidget:InputSelect() end
function UDEPRECATED_TouristMenuWidget:InputMoveUp() end
function UDEPRECATED_TouristMenuWidget:InputMoveRight() end
function UDEPRECATED_TouristMenuWidget:InputMoveLeft() end
function UDEPRECATED_TouristMenuWidget:InputMoveDown() end


---@class UDamageMultiplierManagerComponent : UActorComponent
---@field LocalDamageMultipliers TArray<FLocalDamageMultiplier>
---@field DefaultDamageMultiplier float
---@field RequestedGlobalMultipliers TMap<UObject, float>
UDamageMultiplierManagerComponent = {}

---@param RequestSource UObject
---@param Multiplier float
function UDamageMultiplierManagerComponent:RequestGlobalDamageMultiplier(RequestSource, Multiplier) end
---@param RequestSource UObject
function UDamageMultiplierManagerComponent:RemoveGlobalDamageMultiplier(RequestSource) end
---@param Location FVector
---@return float
function UDamageMultiplierManagerComponent:GetLocalDamageMultiplierForLocation(Location) end
---@return float
function UDamageMultiplierManagerComponent:GetGlobalDamageMultiplier() end
---@param Settings FEnemyLocalDamageMultiplierSettings
function UDamageMultiplierManagerComponent:ApplySettings(Settings) end


---@class UDamageNumberWidget : UHMQUserWidget
---@field Text_Number UTextBlock
---@field FadeIn UWidgetAnimation
---@field FadeOut UWidgetAnimation
UDamageNumberWidget = {}



---@class UDamageShapeBlockerComponent : USceneComponent
---@field OnDamageShapeHit FDamageShapeBlockerComponentOnDamageShapeHit
---@field DamageTarget uint8
---@field Radius float
---@field CapsuleHalfHeight float
UDamageShapeBlockerComponent = {}



---@class UDamageShapeComponent : UProceduralMeshComponent
---@field OnDamageShapeBlockerHit FDamageShapeComponentOnDamageShapeBlockerHit
---@field Data UDamageShapeType
---@field CurSliceDataList TArray<FSliceData>
---@field CollidedActors TArray<TWeakObjectPtr<AActor>>
---@field ClosestPointsToPlayers TMap<AActor, FDamageShapeSplinePoint>
UDamageShapeComponent = {}

---@param Spline USplineComponent
---@param InputKey float
---@return float
function UDamageShapeComponent:SplineConvertInputKeyToDistance(Spline, InputKey) end
---@param InSize FVector
function UDamageShapeComponent:SetShapeScale(InSize) end
---@param InData UDamageShapeType
---@param bAllowCollisions boolean
function UDamageShapeComponent:SetData(InData, bAllowCollisions) end
---@param Color FLinearColor
function UDamageShapeComponent:SetColor(Color) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function UDamageShapeComponent:OnBeginShapeOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
---@return FVector
function UDamageShapeComponent:GetShapeScale() end
---@return FLinearColor
function UDamageShapeComponent:GetColor() end
---@param Player AActor
---@return FVector
function UDamageShapeComponent:GetClosestPointOnDamageShapeToPlayer(Player) end
---@param PlayerCharacter AActor
---@param LeftRightPhaseOffset float
---@param OutCentre FVector
---@param OutLeft FVector
---@param OutRight FVector
function UDamageShapeComponent:GetAudioPoints(PlayerCharacter, LeftRightPhaseOffset, OutCentre, OutLeft, OutRight) end
---@param Location FVector
---@return FVector
function UDamageShapeComponent:ClosestPointToLocation(Location) end


---@class UDamageShapeType : UObject
---@field Silhouette TSubclassOf<ADamageSpline>
---@field SplineInstance ADamageSpline
---@field Material UMaterialInterface
---@field Color FLinearColor
---@field CollisionProfile FName
---@field DamagesList TArray<FDamageShapeDamage>
---@field ExplosionCollisionChannel ECollisionChannel
---@field DamageTarget uint8
---@field BehaviorFlags int32
---@field bEnablePhysicsCollisions boolean
---@field WallEffectClass TSubclassOf<AEffectContainer>
---@field WallEffcetTrackedTime float
---@field bShowWarningVisual boolean
---@field TravelSoundStart UAkAudioEvent
---@field TravelSoundEnd UAkAudioEvent
---@field SideTravelSoundStart UAkAudioEvent
---@field SideTravelSoundEnd UAkAudioEvent
---@field LeftRightSoundDistance float
---@field bUseContactEffect boolean
---@field bUseDissipationEffect boolean
UDamageShapeType = {}



---@class UDamageTargetListenerComponent : UActorComponent
---@field OnTargetDamaged FDamageTargetListenerComponentOnTargetDamaged
---@field OnTargetDamagedClientSim FDamageTargetListenerComponentOnTargetDamagedClientSim
---@field OnTargetKilled FDamageTargetListenerComponentOnTargetKilled
UDamageTargetListenerComponent = {}



---@class UDashAbilityComponent : USceneComponent
---@field OnDashStart FDashAbilityComponentOnDashStart
---@field OnDashStop FDashAbilityComponentOnDashStop
---@field OnCooldownEnded FDashAbilityComponentOnCooldownEnded
---@field BasicSettings UDashSettingsData
---@field PhasingSettings UDashSettingsData
---@field FallingLateralFrictionGameplayEffect TSubclassOf<UGameplayEffect>
---@field ParticleEffectLifetimeName FName
---@field ParticleEffectPhaseName FName
---@field PfxMeshResource FName
---@field ActivateBlockedByDebuffEffect TSubclassOf<AEffectContainer>
---@field OwnerPlayer APlayerCharacter
---@field DashParticleComponent UNGParticleComponent
---@field bDashButtonDown boolean
---@field bIsDashing boolean
---@field bDashCancelled boolean
---@field bEndPhysicsPending boolean
---@field bWasDashInterrupted boolean
---@field bIsCoolDownActive boolean
---@field DashRot FRotator
---@field DashDoneDuration float
---@field CooldownPassed float
---@field DashLevel int32
UDashAbilityComponent = {}

---@param AbilityLevel int32
function UDashAbilityComponent:ServerPrepareDash(AbilityLevel) end
---@param OldLocation FVector
---@param OldRotation FRotator
function UDashAbilityComponent:OwnerTeleported(OldLocation, OldRotation) end
---@param LandedHit FHitResult
---@param Velocity FVector
---@param bHardLand boolean
function UDashAbilityComponent:OwnerLanded(LandedHit, Velocity, bHardLand) end
function UDashAbilityComponent:OwnerJumped() end
---@param HookShotComponent UHookShotAbilityComponent
---@param HookShotLevel int32
function UDashAbilityComponent:OwnerHookshotStarted(HookShotComponent, HookShotLevel) end
---@param bRemoteOnly boolean
function UDashAbilityComponent:MulticastStop(bRemoteOnly) end
---@param bRemoteOnly boolean
---@param AbilityLevel int32
---@param ForwardIntentionYaw float
---@param bInputDown boolean
function UDashAbilityComponent:MulticastStart(bRemoteOnly, AbilityLevel, ForwardIntentionYaw, bInputDown) end
---@param bRemoteOnly boolean
---@param bHitWall boolean
---@param bCancelled boolean
function UDashAbilityComponent:MulticastFinish(bRemoteOnly, bHitWall, bCancelled) end
---@param Hazard UObject
---@param bCaught boolean
function UDashAbilityComponent:ImmobilizingHazardStateChanged(Hazard, bCaught) end


---@class UDashSettingsData : UDataAsset
---@field ChargeCount int32
---@field ChargeDurationMin float
---@field ChargeDurationMax float
---@field DashSpeed float
---@field cooldown float
---@field CoolDownForMultipleCharges float
---@field GameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field bInvulnerableDuringDash boolean
---@field PostDashInvulnerabilityTime float
---@field ReceivableDamageTypes TArray<TSubclassOf<UTouristDamageType>>
---@field bUseFixedEndSpeed boolean
---@field EndSpeedGround float
---@field EndSpeedAir float
---@field bUseFixedEndSpeedToMelee boolean
---@field EndSpeedToMeleeGround float
---@field EndSpeedToMeleeAir float
---@field InterruptMinSpeed float
---@field OrientationInterpSpeed float
---@field FluidRadius float
---@field FluidForceMultiplier float
---@field StartEffect TSubclassOf<AEffectContainer>
---@field StopEffect TSubclassOf<AEffectContainer>
---@field ExtendEffect TSubclassOf<AEffectContainer>
---@field GroundEffect TSubclassOf<AEffectContainer>
---@field bParticleEffectEnabled boolean
---@field ParticleEffectLifeTime float
---@field ParticleEffectPhaseIn float
---@field ParticleEffectPhaseOut float
UDashSettingsData = {}



---@class UDataAssetMusicianNavigationQuery : UDataAsset
---@field Generator UMusicianNavigationGenerator
---@field Tests TArray<UMusicianNavigationTest>
---@field Normalizer UMusicianNavigationScoreNormalizer
---@field Sampler UMusicianNavigationSampler
UDataAssetMusicianNavigationQuery = {}



---@class UDataAsset_AnimRequestDescriptor : UDataAsset
---@field AnimRequestDescriptor FAnimationRequestDescriptor
UDataAsset_AnimRequestDescriptor = {}



---@class UDataAsset_BehaviorFireWeapon : UDataAsset_EnemyBehaviorBase
---@field BehaviorSettings FBehaviorFireWeaponSettings
UDataAsset_BehaviorFireWeapon = {}



---@class UDataAsset_BehaviorFlyFigureOfEight : UDataAsset_BehaviorFlyOnFlightPath
---@field Settings FBehaviorFlyFigureOfEightSettings
UDataAsset_BehaviorFlyFigureOfEight = {}



---@class UDataAsset_BehaviorFlyOnFlightPath : UDataAsset_EnemyBehaviorBase
---@field BehaviorSettings FBehaviorFlyOnFlightPathSettings
UDataAsset_BehaviorFlyOnFlightPath = {}



---@class UDataAsset_BehaviorFlyToQueryResult : UDataAsset_EnemyBehaviorBase
---@field BehaviorSettings FBehaviorFlyToQueryResultSettings
UDataAsset_BehaviorFlyToQueryResult = {}



---@class UDataAsset_BehaviorFlyingFollowPlayer : UDataAsset_EnemyBehaviorBase
---@field BehaviorSettings FBehaviorFlyingFollowPlayerSettings
UDataAsset_BehaviorFlyingFollowPlayer = {}



---@class UDataAsset_BehaviorFlyingQuickStrafe : UDataAsset_EnemyBehaviorBase
---@field BehaviorSettings FBehaviorFlyingQuickStrafeSettings
UDataAsset_BehaviorFlyingQuickStrafe = {}



---@class UDataAsset_BehaviorFlyingStrafeAroundPlayer : UDataAsset_EnemyBehaviorBase
---@field BehaviorSettings FBehaviorFlyingStrafeAroundPlayerSettings
UDataAsset_BehaviorFlyingStrafeAroundPlayer = {}



---@class UDataAsset_BehaviorFlyingWander : UDataAsset_EnemyBehaviorBase
---@field BehaviorSettings FBehaviorFlyingWanderSettings
UDataAsset_BehaviorFlyingWander = {}



---@class UDataAsset_BehaviorFollowPlayer : UDataAsset_EnemyBehaviorBase
---@field BehaviorSettings FBehaviorFollowPlayerSettings
UDataAsset_BehaviorFollowPlayer = {}



---@class UDataAsset_BehaviorInactiveHide : UDataAsset_EnemyBehaviorBase
---@field BehaviorSettings FBehaviorInactiveHideSettings
UDataAsset_BehaviorInactiveHide = {}



---@class UDataAsset_BehaviorKeepDistanceFromPlayer : UDataAsset_EnemyBehaviorBase
---@field BehaviorSettings FBehaviorKeepDistanceFromPlayerSettings
UDataAsset_BehaviorKeepDistanceFromPlayer = {}



---@class UDataAsset_BehaviorMoveToQueryResult : UDataAsset_EnemyBehaviorBase
---@field BehaviorSettings FBehaviorMoveToQueryResultSettings
UDataAsset_BehaviorMoveToQueryResult = {}



---@class UDataAsset_BehaviorSendAnimationRequest : UDataAsset_EnemyBehaviorBase
---@field BehaviorSettings FBehaviorSendAnimationRequestSettings
UDataAsset_BehaviorSendAnimationRequest = {}



---@class UDataAsset_BehaviorStrafeToTarget : UDataAsset_EnemyBehaviorBase
---@field Settings FBehaviorStrafeToTargetSettings
UDataAsset_BehaviorStrafeToTarget = {}



---@class UDataAsset_BehaviorTurnAtPlayer : UDataAsset_EnemyBehaviorBase
---@field BehaviorSettings FBehaviorTurnAtPlayerSettings
UDataAsset_BehaviorTurnAtPlayer = {}



---@class UDataAsset_BehaviorWander : UDataAsset_EnemyBehaviorBase
---@field BehaviorSettings FBehaviorWanderSettings
UDataAsset_BehaviorWander = {}



---@class UDataAsset_Difficulty : UDataAsset
---@field Effects TArray<FDifficultyEffect>
---@field EffectLimits TArray<FDifficultyEffectLimit>
---@field Events TArray<FDifficultyEvent>
UDataAsset_Difficulty = {}

---@param DifficultyMgr UDifficultyManagerComponent
---@param Player APlayerCharacter
---@param FeatureTag FName
function UDataAsset_Difficulty:RemovePlayerFeature(DifficultyMgr, Player, FeatureTag) end
---@param DifficultyMgr UDifficultyManagerComponent
---@param Player APlayerCharacter
---@param FeatureTag FName
function UDataAsset_Difficulty:AddPlayerFeature(DifficultyMgr, Player, FeatureTag) end
---@param DifficultyMgr UDifficultyManagerComponent
---@param Actor AActor
---@param FeatureTag FName
function UDataAsset_Difficulty:AddActorFeature(DifficultyMgr, Actor, FeatureTag) end


---@class UDataAsset_EliteEnemyBase : UDataAsset
---@field ExtraHealths TMap<EBiome, float>
---@field DamageDealtMultipliers TMap<EBiome, float>
---@field Loot TArray<FLootSpawnEntry>
---@field bAllowStagger boolean
---@field SoftDamageCapSettings FSoftDamageCapSettings
---@field MeshScale float
---@field MaterialOverrides TArray<FMaterialOverride>
---@field ParticleColorSettings FEnemyParticleColorOverrideSettings
---@field Modifiers TArray<UEliteModifier>
UDataAsset_EliteEnemyBase = {}

---@param Enemy AEnemyBase
---@param Modifier UEliteModifier
---@return boolean
function UDataAsset_EliteEnemyBase:HasModifierBeenApplied(Enemy, Modifier) end
---@param Enemy AActor
---@return int32
function UDataAsset_EliteEnemyBase:GetNumberOfActivatedRooms(Enemy) end
---@param Tag FString
---@return TArray<UEliteModifier>
function UDataAsset_EliteEnemyBase:GetModifiersContainingTag(Tag) end
---@param Tag FString
---@return UEliteModifier
function UDataAsset_EliteEnemyBase:GetModifierContainingTag(Tag) end
---@param Enemy AActor
---@return EBiome
function UDataAsset_EliteEnemyBase:GetCurrentBiome(Enemy) end
---@param Enemy AEnemyBase
function UDataAsset_EliteEnemyBase:ApplyToEnemy(Enemy) end
---@param Enemy AEnemyBase
---@param inModifiers TArray<UEliteModifier>
---@param NumToApply int32
function UDataAsset_EliteEnemyBase:ApplyRandomModifiers(Enemy, inModifiers, NumToApply) end
---@param Enemy AEnemyBase
function UDataAsset_EliteEnemyBase:ApplyModsToEnemy(Enemy) end
---@param Enemy AEnemyBase
---@param Modifier UEliteModifier
function UDataAsset_EliteEnemyBase:ApplyModifierWithWeightAsProbability(Enemy, Modifier) end
---@param Enemy AEnemyBase
---@param Modifier UEliteModifier
function UDataAsset_EliteEnemyBase:ApplyModifier(Enemy, Modifier) end
---@param Enemy AEnemyBase
---@param inModifiers TArray<UEliteModifier>
function UDataAsset_EliteEnemyBase:ApplyAllModifiers(Enemy, inModifiers) end


---@class UDataAsset_EnemyBase : UDataAsset
---@field HealthSettings FEnemyHealthSettings
---@field WeaponSettings FEnemyWeaponSettings
---@field AttackSettings FEnemyAttackSettings
---@field SpawnVisuals FEnemySpawnVisualSettings
---@field LocalDamageMultiplierSettings FEnemyLocalDamageMultiplierSettings
---@field GlobalParticleColorChanger FColor
---@field ParticleColorSettings FEnemyParticleColorOverrideSettings
---@field MultiplayerScalingSettings FEnemyMultiplayerScalingSettings
UDataAsset_EnemyBase = {}

---@param Delegate FUnbindOnChangeDelegate
function UDataAsset_EnemyBase:UnbindOnChange(Delegate) end
---@param Delegate FBindOnChangeDelegate
function UDataAsset_EnemyBase:BindOnChange(Delegate) end
---@param Enemy AEnemyBase
function UDataAsset_EnemyBase:ApplyWeaponData(Enemy) end
---@param Enemy AEnemyBase
---@param Controller AEnemyControllerBase
function UDataAsset_EnemyBase:ApplyToEnemy(Enemy, Controller) end
---@param Enemy AEnemyBase
function UDataAsset_EnemyBase:ApplySpawnVisualData(Enemy) end
---@param Behavior UEnemyBehaviorBase
---@param SettingsDataAsset UDataAsset_EnemyBehaviorBase
function UDataAsset_EnemyBase:ApplySettingsToBehavior(Behavior, SettingsDataAsset) end
---@param Enemy AEnemyBase
function UDataAsset_EnemyBase:ApplyParticleColorData(Enemy) end
---@param Enemy AEnemyBase
function UDataAsset_EnemyBase:ApplyHealthData(Enemy) end
---@param Enemy AEnemyBase
function UDataAsset_EnemyBase:ApplyEliteData(Enemy) end
---@param Enemy AEnemyBase
function UDataAsset_EnemyBase:ApplyDamageMultiplierData(Enemy) end
---@param Enemy AEnemyBase
function UDataAsset_EnemyBase:ApplyAttackData(Enemy) end


---@class UDataAsset_EnemyBehaviorBase : UDataAsset
---@field ConditionSettings FEnemyBehaviorConditionSettings
---@field RunSettings FEnemyBehaviorRunSettings
UDataAsset_EnemyBehaviorBase = {}

---@param Behavior UEnemyBehaviorBase
function UDataAsset_EnemyBehaviorBase:ApplyToBehavior(Behavior) end


---@class UDataAsset_EnemySettings_Chaser : UDataAsset_EnemyBase
UDataAsset_EnemySettings_Chaser = {}


---@class UDataAsset_EnemySettings_Tank : UDataAsset_EnemyBase
UDataAsset_EnemySettings_Tank = {}


---@class UDeadPlayerActorAdornmentWidget : UActorAdornmentWidget
---@field Arrow UImage
---@field CanvasPanel_Expanded UCanvasPanel
---@field CanvasPanel_Revive UCanvasPanel
---@field ProgressBar_Revive UProgressBar
---@field RichText_Title UHMQRichTextBlock
---@field Anim_Pulse UWidgetAnimation
---@field Anim_BoxOpen UWidgetAnimation
---@field Anim_ReviveOpen UWidgetAnimation
---@field Text_Title FText
---@field Text_Revive FText
---@field TitleTextStyle FString
---@field ExpandedRange float
---@field MinimumScaleRange float
---@field MinimumScale float
---@field ReviveTutorialClass TSoftClassPtr<UTouristTutorialWidget>
UDeadPlayerActorAdornmentWidget = {}

---@param bIsReviving boolean
---@param BeingRevived APlayerCharacter
---@param ReviveProgress float
function UDeadPlayerActorAdornmentWidget:UpdateReviveState(bIsReviving, BeingRevived, ReviveProgress) end


---@class UDeathHandlerComponent : UHMQActorComponent
---@field HandlerPriority int32
---@field HandleClasses TArray<TSubclassOf<AActor>>
UDeathHandlerComponent = {}

---@param DeathSystemComp UDeathSystemComponent
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
---@return boolean
function UDeathHandlerComponent:HandleRevive(DeathSystemComp, DamagedActor, DamageEvent) end
---@param DeathSystemComp UDeathSystemComponent
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
---@return boolean
function UDeathHandlerComponent:HandleDeath(DeathSystemComp, DamagedActor, DamageEvent) end


---@class UDeathSystemComponent : UHMQActorComponent
---@field OnReviveStarted FDeathSystemComponentOnReviveStarted
---@field OnReviveCompleted FDeathSystemComponentOnReviveCompleted
---@field HandlerActors TArray<AActor>
---@field HandlerComponents TArray<UDeathHandlerComponent>
---@field WorkHandlerComponents TArray<UDeathHandlerComponent>
---@field BusyActors TSet<AActor>
UDeathSystemComponent = {}

---@param HandlerActor AActor
function UDeathSystemComponent:UnregisterActor(HandlerActor) end
---@param HandlerActor AActor
function UDeathSystemComponent:RegisterActor(HandlerActor) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UDeathSystemComponent:HandleTryRevive(DamagedActor, DamageEvent) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UDeathSystemComponent:HandleDeath(DamagedActor, DamageEvent) end


---@class UDebugEnemySpawnerComponent : UActorComponent
---@field EnemyType TSoftClassPtr<UObject>
UDebugEnemySpawnerComponent = {}



---@class UDebugGameplayStatics : UBlueprintFunctionLibrary
UDebugGameplayStatics = {}

---@param WorldContextObject UObject
---@param TimeDilation float
function UDebugGameplayStatics:TouristSetDebugTimeDilation(WorldContextObject, TimeDilation) end
---@param WorldContextObject UObject
---@return float
function UDebugGameplayStatics:TouristGetDebugTimeDilation(WorldContextObject) end
---@param WorldContextObject UObject
---@return FDateTime
function UDebugGameplayStatics:GetCurrentLevelHoudiniTimestamp(WorldContextObject) end
---@param WorldContextObject UObject
function UDebugGameplayStatics:DebugUndiscoverAllEnemies(WorldContextObject) end
---@param WorldContextObject UObject
function UDebugGameplayStatics:DebugUndiscoverAllCollectibles(WorldContextObject) end
---@param WorldContextObject UObject
function UDebugGameplayStatics:DebugToggleSanity(WorldContextObject) end
function UDebugGameplayStatics:DebugTogglePlayerOneshotMode() end
function UDebugGameplayStatics:DebugTogglePlayerGodMode() end
function UDebugGameplayStatics:DebugTogglePlayerDuoDemigodMode() end
function UDebugGameplayStatics:DebugTogglePlayerDemigodMode() end
function UDebugGameplayStatics:DebugToggleLockOnToggle() end
function UDebugGameplayStatics:DebugToggleInfiniteAmmo() end
function UDebugGameplayStatics:DebugToggleFloatingDamageNumbers() end
function UDebugGameplayStatics:DebugToggleEnemyWeakpoints() end
function UDebugGameplayStatics:DebugToggleEnemyGodMode() end
function UDebugGameplayStatics:DebugToggleEnemyDemigodMode() end
function UDebugGameplayStatics:DebugToggleAltFire() end
---@param WorldContextObject UObject
function UDebugGameplayStatics:DebugSpawnEnemy(WorldContextObject) end
---@param WorldContextObject UObject
---@param CurseName FString
function UDebugGameplayStatics:DebugSpawnCurse(WorldContextObject, CurseName) end
---@param WorldContextObject UObject
function UDebugGameplayStatics:DebugSpawnCollectible(WorldContextObject) end
---@param WorldContextObject UObject
function UDebugGameplayStatics:DebugShowNotification(WorldContextObject) end
---@param ClassName FString
function UDebugGameplayStatics:DebugNotificationSetType(ClassName) end
---@param WorldContextObject UObject
---@param RoomIndex int32
---@param bByLocalPlayer boolean
function UDebugGameplayStatics:DebugKillAllEnemies(WorldContextObject, RoomIndex, bByLocalPlayer) end
---@param WorldContextObject UObject
function UDebugGameplayStatics:DebugIncreaseSanity(WorldContextObject) end
---@param WorldContextObject UObject
function UDebugGameplayStatics:DebugImportMapFromClipboard(WorldContextObject) end
---@param CurseNames TArray<FString>
function UDebugGameplayStatics:DebugGetCurseNames(CurseNames) end
---@param WorldContextObject UObject
function UDebugGameplayStatics:DebugExportMapToClipboard(WorldContextObject) end
---@param WorldContextObject UObject
---@param EnemyClass TSoftClassPtr<UObject>
function UDebugGameplayStatics:DebugEnemySpawnSetEnemyType(WorldContextObject, EnemyClass) end
---@param WorldContextObject UObject
---@return TSoftClassPtr<UObject>
function UDebugGameplayStatics:DebugEnemySpawnGetSavedEnemyType(WorldContextObject) end
---@param WorldContextObject UObject
function UDebugGameplayStatics:DebugDiscoverAllEnemies(WorldContextObject) end
---@param WorldContextObject UObject
function UDebugGameplayStatics:DebugDiscoverAllCollectibles(WorldContextObject) end
---@param WorldContextObject UObject
function UDebugGameplayStatics:DebugDecreaseSanity(WorldContextObject) end
---@param WorldContextObject UObject
function UDebugGameplayStatics:DebugCureAllCurses(WorldContextObject) end
---@param WorldContextObject UObject
---@param CollectibleClass TSoftClassPtr<UObject>
function UDebugGameplayStatics:DebugCollectibleSpawnSetCollectibleType(WorldContextObject, CollectibleClass) end


---@class UDebugHUDWidget : UHMQScreenWidget
---@field OnDebugHudVisibilityChanged FDebugHUDWidgetOnDebugHudVisibilityChanged
---@field bCurrentlyVisible boolean
UDebugHUDWidget = {}

function UDebugHUDWidget:ToggleVisibility() end
---@param bVisible boolean
function UDebugHUDWidget:ChangeVisibility(bVisible) end


---@class UDespawnableActorComponent : UActorComponent
---@field OnSerializeState FDespawnableActorComponentOnSerializeState
---@field OnSerializeState2 FDespawnableActorComponentOnSerializeState2
---@field OnRespawn FDespawnableActorComponentOnRespawn
---@field OnDespawn FDespawnableActorComponentOnDespawn
---@field bCanBeDespawned boolean
---@field bCanDespawnOnRoomDeactivation boolean
---@field SerializedStateVersion int32
---@field bIsRespawning boolean
---@field bConsiderForPersistence boolean
---@field bConsiderForSuspendAndResume boolean
---@field bPersistentScale boolean
---@field OriginalRoomIndex int32
---@field UniqueActorGUID FGuid
---@field bHandplaced boolean
---@field CachedARAM UAngenRoomActivationManager
UDespawnableActorComponent = {}

function UDespawnableActorComponent:RegenerateUniqueActorGUID() end
---@return boolean
function UDespawnableActorComponent:IsAMinimapProxyActor() end
---@return boolean
function UDespawnableActorComponent:HasBeenDeserialized() end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UDespawnableActorComponent:HandleBiomeStateChanged(Biome, NewBiomeState) end
---@param bNewDisabledState boolean
function UDespawnableActorComponent:DisableSerializationCalls(bNewDisabledState) end


---@class UDifficultyManagerComponent : UHMQActorComponent
---@field PlrCharacter APlayerCharacter
---@field DifficultyData UDataAsset_Difficulty
---@field RoomActivationCounter int32
---@field EnemyKillCounter int32
---@field ScriptedCounter int32
---@field Step int32
---@field ActiveTime int32
---@field ActiveEffects TArray<FDifficultyEffect>
---@field ActiveEffectLimits TArray<FDifficultyEffectLimit>
---@field ActivePlayerFeatureTags TSet<FName>
---@field ActiveGameTags TSet<FName>
---@field GlobalGameTags TSet<FName>
---@field ScriptedGameTags TSet<FName>
UDifficultyManagerComponent = {}

---@param NewDifficulty UDataAsset_Difficulty
function UDifficultyManagerComponent:SetDifficultyData(NewDifficulty) end
function UDifficultyManagerComponent:ResetDifficulty() end
---@param Tag FName
function UDifficultyManagerComponent:RemoveGameTag(Tag) end
---@param Modification int32
function UDifficultyManagerComponent:ModifyStep(Modification) end
---@param Modification int32
function UDifficultyManagerComponent:ModifyScriptedCounter(Modification) end
---@param Actor AActor
function UDifficultyManagerComponent:ModifyActorDifficulty(Actor) end
---@param Actor AActor
---@param DamageEvent FTouristDamageEvent
---@param bCriticalHit boolean
function UDifficultyManagerComponent:HandlePlayerKilledActor(Actor, DamageEvent, bCriticalHit) end
---@param Enemy AActor
---@param DamageEvent FTouristDamageEvent
---@param bCriticalHit boolean
function UDifficultyManagerComponent:HandlePlayerDamagedEnemy(Enemy, DamageEvent, bCriticalHit) end
---@return int32
function UDifficultyManagerComponent:GetStep() end
---@return int32
function UDifficultyManagerComponent:GetScriptedCounter() end
---@param WorldContextObject UObject
---@return UDifficultyManagerComponent
function UDifficultyManagerComponent:GetDifficultyManager(WorldContextObject) end
---@param Tag FName
function UDifficultyManagerComponent:AddGameTag(Tag) end


---@class UDiscoverableComponent : UHMQActorComponent
---@field DiscoveryAsset UDiscoveryAsset
---@field DiscoveryTitle FText
---@field DiscoveryDescription FText
---@field DiscoveryTransient boolean
---@field bLocalDiscovery boolean
---@field OnBeginDiscovery FDiscoverableComponentOnBeginDiscovery
---@field OnEndDiscovery FDiscoverableComponentOnEndDiscovery
---@field OnFailureDiscovery FDiscoverableComponentOnFailureDiscovery
---@field OnSuccessDiscovery FDiscoverableComponentOnSuccessDiscovery
---@field OnBeginDiscoveryProgress FDiscoverableComponentOnBeginDiscoveryProgress
---@field OnEndDiscoveryProgress FDiscoverableComponentOnEndDiscoveryProgress
---@field HUDLabel UHUDLabel
---@field OverlapComponents TSet<UPrimitiveComponent>
---@field LabelWidgetClass TSubclassOf<UHUDLabelWidget>
---@field bDiscovered boolean
---@field bDiscoveryActive boolean
---@field bDiscoveryVisibility boolean
---@field bManualDiscoveryActive boolean
---@field DiscoveryProgressPawn TSoftObjectPtr<APawn>
UDiscoverableComponent = {}

function UDiscoverableComponent:UpdateDiscoveryState() end
function UDiscoverableComponent:OnRep_DiscoveryVisibility() end
function UDiscoverableComponent:OnRep_DiscoveryActive() end
---@param bOldValue boolean
function UDiscoverableComponent:OnRep_Discovered(bOldValue) end
---@return boolean
function UDiscoverableComponent:IsDiscoveryRequired() end
---@return boolean
function UDiscoverableComponent:IsDiscoveringProgressActive() end
---@return boolean
function UDiscoverableComponent:IsDiscovering() end
---@return boolean
function UDiscoverableComponent:IsDiscovered() end
---@return boolean
function UDiscoverableComponent:IsAutoDiscovery() end
---@param InteractingController ATouristPlayerController
function UDiscoverableComponent:HandleInteractableGainFocus(InteractingController) end
---@return float
function UDiscoverableComponent:GetDiscoveryProgress() end
---@return FName
function UDiscoverableComponent:GetDiscoveryFlag() end


---@class UDiscoveryAsset : UDataAsset
---@field DiscoveryDuration float
---@field bAutoDiscovery boolean
---@field DiscoveryBeginAudio UAkAudioEvent
---@field DiscoveryFailureAudio UAkAudioEvent
---@field DiscoverySuccessAudio UAkAudioEvent
---@field DiscoveryWidgetClass TSubclassOf<UDiscoveryWidget>
UDiscoveryAsset = {}



---@class UDiscoveryProgressWidget : UTouristWidgetBase
UDiscoveryProgressWidget = {}

---@param Progress float
function UDiscoveryProgressWidget:UpdateProgress(Progress) end


---@class UDiscoveryWidget : UCollectibleLabelWidget
---@field ProgressWidgetClass TSubclassOf<UDiscoveryProgressWidget>
---@field ProgressWidgetFadeInDuration float
---@field ProgressWidget UDiscoveryProgressWidget
UDiscoveryWidget = {}

---@param Progress float
function UDiscoveryWidget:UpdateProgress(Progress) end
---@param bNewActive boolean
function UDiscoveryWidget:SetManualDiscoveryActive(bNewActive) end


---@class UDoorAnimInstance : UAnimInstance
---@field bDoorOpen boolean
---@field bDoorTraversed boolean
---@field bDoorFirstOpen boolean
---@field bDoorOpenable boolean
---@field OpenPlayRate float
UDoorAnimInstance = {}

---@param Prevent boolean
function UDoorAnimInstance:SetPreventOpen(Prevent) end
function UDoorAnimInstance:AnimNotify_DoorOpened() end


---@class UDropToGroundComponent : UHMQActorComponent
UDropToGroundComponent = {}

---@return boolean
function UDropToGroundComponent:UseNewDropToGround() end
---@param PreviousRoomIndex int32
---@param CurrentRoomIndex int32
function UDropToGroundComponent:OnRoomChanged(PreviousRoomIndex, CurrentRoomIndex) end
---@param Biome EBiome
---@param BiomeState EBiomeState
function UDropToGroundComponent:OnBiomeLoaded(Biome, BiomeState) end
---@param Overseer ARoomOverseer
---@param InRoomIndex int32
function UDropToGroundComponent:OnActorRoomReady(Overseer, InRoomIndex) end
---@param Component UActorComponent
---@param bReset boolean
function UDropToGroundComponent:OnActivation(Component, bReset) end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function UDropToGroundComponent:HandleSerialize(Serializer) end
---@param PlayerState APlayerState
---@param OldRoomIndex int32
---@param NewRoomIndex int32
function UDropToGroundComponent:HandlePlayerRoomChanged(PlayerState, OldRoomIndex, NewRoomIndex) end
function UDropToGroundComponent:DropTimer() end


---@class UEliteEnemyComponent : UActorComponent
---@field ModifierSlots TArray<FEliteModifierSlot>
UEliteEnemyComponent = {}



---@class UEliteModifier : UEliteModifierSlotFiller
---@field Tag FString
---@field weight float
UEliteModifier = {}

---@param Enemy AEnemyBase
function UEliteModifier:ApplyToEnemy(Enemy) end


---@class UEliteModifierGroup : UEliteModifierSlotFiller
---@field Modifiers TArray<FEliteModifierGroupEntry>
UEliteModifierGroup = {}



---@class UEliteModifierSlotFiller : UObject
UEliteModifierSlotFiller = {}


---@class UEnemyAggressionComponent : UActorComponent
---@field AggressionInfo TArray<FEnemyAggressionInfo>
---@field DefaultAggressionState EAggressionState
---@field AggressionState EAggressionState
---@field AggressionStateInfo FEnemyAggressionInfo
---@field AggressionInfoLookup TMap<EAggressionState, FEnemyAggressionInfo>
---@field AggressionStateTimer float
---@field ActivationTime float
---@field OnAggressionStateChanged FEnemyAggressionComponentOnAggressionStateChanged
UEnemyAggressionComponent = {}

---@param State EAggressionState
---@param OutInfo FEnemyAggressionInfo
---@return boolean
function UEnemyAggressionComponent:TryGetAggressionInfo(State, OutInfo) end
---@param NewState EAggressionState
---@param bAllowResetTimer boolean
function UEnemyAggressionComponent:SetAggressionState(NewState, bAllowResetTimer) end
function UEnemyAggressionComponent:IncreaseAggressionState() end
---@return float
function UEnemyAggressionComponent:GetTimeInAggressionState() end
---@return float
function UEnemyAggressionComponent:GetTimeActive() end
---@return EAggressionState
function UEnemyAggressionComponent:GetAggressionState() end
function UEnemyAggressionComponent:DecreaseAggressionState() end


---@class UEnemyAnimInstance : UTouristCharacterAnimInstance
---@field EnemyCharacter AEnemyBase
---@field HitReactionIntensity float
---@field HitReactionIntensity_ValueRange FMinMaxFloat
---@field HitReactionIntensity_DistanceRange FMinMaxFloat
---@field AnimTickWhenOptimized EVisibilityBasedAnimTickOption
---@field MinDistanceToOptimize float
UEnemyAnimInstance = {}

---@param ImpactPoint FVector
---@param ForwardRotation FRotator
---@return boolean
function UEnemyAnimInstance:WasHitOnRightHalfOfBodyAtRot(ImpactPoint, ForwardRotation) end
---@param ImpactPoint FVector
---@return boolean
function UEnemyAnimInstance:WasHitOnRightHalfOfBody(ImpactPoint) end
function UEnemyAnimInstance:CalculateHitReactionIntensity() end


---@class UEnemyBehaviorBase : USceneComponent
---@field ConditionSettings FEnemyBehaviorConditionSettings
---@field RunSettings FEnemyBehaviorRunSettings
---@field EnterSound UAkAudioEvent
---@field ExitSound UAkAudioEvent
---@field OnBehaviorExited FEnemyBehaviorBaseOnBehaviorExited
---@field EnemyController AEnemyControllerBase
---@field EnemyCharacter AEnemyBase
---@field BehaviorType EEnemyBehaviorType
---@field bAutoRequestExclusivity boolean
---@field bIsRunning boolean
---@field RunState EBehaviorRunState
---@field LastEntryRequestTime float
---@field LastEntryTime float
---@field LastExitTime float
UEnemyBehaviorBase = {}

---@return AEnemyBase
function UEnemyBehaviorBase:VerifyGetEnemy() end
---@return AEnemyBase
function UEnemyBehaviorBase:TryGetEnemy() end
function UEnemyBehaviorBase:TriggerPostExitCooldown() end
---@param State EBehaviorRunState
function UEnemyBehaviorBase:SetBehaviorRunState(State) end
---@param Controller AEnemyControllerBase
---@param Enemy AEnemyBase
function UEnemyBehaviorBase:RegisterEnemy(Controller, Enemy) end
---@return boolean
function UEnemyBehaviorBase:IsRunning() end
---@return boolean
function UEnemyBehaviorBase:IsRunnableMaster() end
---@param Actor AActor
---@return boolean
function UEnemyBehaviorBase:HasPathTo(Actor) end
---@return boolean
function UEnemyBehaviorBase:HasExceededMaxActiveTime() end
---@return float
function UEnemyBehaviorBase:GetLastEntryTime() end
---@param WorldTime float
---@return boolean
function UEnemyBehaviorBase:GetHasExceededMaxActiveTime(WorldTime) end
---@return FVector
function UEnemyBehaviorBase:GetEnemyPosition() end
---@return FVector
function UEnemyBehaviorBase:GetEnemyDirection() end
---@return AEnemyControllerBase
function UEnemyBehaviorBase:GetEnemyController() end
---@return EEnemyBehaviorType
function UEnemyBehaviorBase:GetBehaviorType() end
---@return EBehaviorRunState
function UEnemyBehaviorBase:GetBehaviorRunState() end
---@return float
function UEnemyBehaviorBase:GetActiveTime() end
function UEnemyBehaviorBase:ExitRunning() end
function UEnemyBehaviorBase:EnterRunning() end
---@param Behaviors TArray<UEnemyBehaviorBase>
---@return UEnemyBehaviorBase
function UEnemyBehaviorBase:ChooseRandomRunnableBehavior(Behaviors) end


---@class UEnemyBehaviorConditionBase : UObject
---@field bSkipIfBehaviorRunning boolean
---@field bNegate boolean
UEnemyBehaviorConditionBase = {}

---@return boolean
function UEnemyBehaviorConditionBase:SkipIfBehaviorRunning() end
---@param Enemy AEnemyBase
---@param Controller AEnemyControllerBase
---@param Behavior UEnemyBehaviorBase
---@return boolean
function UEnemyBehaviorConditionBase:IsFulfilled(Enemy, Controller, Behavior) end
---@param Enemy AEnemyBase
---@param Controller AEnemyControllerBase
---@param Behavior UEnemyBehaviorBase
---@return boolean
function UEnemyBehaviorConditionBase:Evaluate(Enemy, Controller, Behavior) end


---@class UEnemyBehaviorSequence : UEnemyBehaviorBase
---@field BehaviorSequence TArray<FSequenceBehavior>
---@field bCheckRunnableBetweenBehaviors boolean
---@field CurrentSequenceStage int32
---@field OnSequenceStageChanged FEnemyBehaviorSequenceOnSequenceStageChanged
UEnemyBehaviorSequence = {}

---@param Action FSequenceBranchingAction
---@return boolean
function UEnemyBehaviorSequence:TryExecuteBranchingAction(Action) end
---@param NewStage int32
function UEnemyBehaviorSequence:SetSequenceStage(NewStage) end
---@return int32
function UEnemyBehaviorSequence:GetCurrentSequenceStage() end
function UEnemyBehaviorSequence:EvaluateSequenceConditions() end
---@param BehaviorIndex int32
---@return boolean
function UEnemyBehaviorSequence:CanRunSequenceBehavior(BehaviorIndex) end


---@class UEnemyDeathBehaviorBase : UActorComponent
---@field Conditions TArray<UEnemyDeathBehaviorCondition>
---@field Priority int32
---@field PostDeathLifeSpan float
---@field DisableCollisions boolean
---@field EnemyCharacter AEnemyBase
---@field DeathDamageEvent FTouristDamageEvent
---@field RunningTime float
UEnemyDeathBehaviorBase = {}

---@param DeltaTime float
function UEnemyDeathBehaviorBase:TickBehavior(DeltaTime) end
---@param Enemy AEnemyBase
---@param DamageEvent FTouristDamageEvent
function UEnemyDeathBehaviorBase:SetupForEnemy(Enemy, DamageEvent) end
---@param Enemy AEnemyBase
---@param DamageEvent FTouristDamageEvent
---@return boolean
function UEnemyDeathBehaviorBase:IsRunnable(Enemy, DamageEvent) end
---@param DeathEvent EEnemyDeathEvent
---@param CustomDuration float
function UEnemyDeathBehaviorBase:HandleDeathEvent(DeathEvent, CustomDuration) end
---@return int32
function UEnemyDeathBehaviorBase:GetPriority() end
function UEnemyDeathBehaviorBase:EnterBehavior() end
---@param DamageEvent FTouristDamageEvent
---@param Enemy AEnemyBase
---@return boolean
function UEnemyDeathBehaviorBase:CanRunBehavior(DamageEvent, Enemy) end


---@class UEnemyDeathBehaviorCondition : UObject
UEnemyDeathBehaviorCondition = {}

---@param DeathBehavior UEnemyDeathBehaviorBase
---@param DamageEvent FTouristDamageEvent
---@param Enemy AEnemyBase
---@return boolean
function UEnemyDeathBehaviorCondition:CanRunDeathBehavior(DeathBehavior, DamageEvent, Enemy) end


---@class UEnemyFunctionLibrary : UBlueprintFunctionLibrary
UEnemyFunctionLibrary = {}

---@param AnimMontage UAnimMontage
---@param SectionName FName
---@param bIncludeSequence boolean
---@param SlotName FName
---@return TArray<UAnimMetaData>
function UEnemyFunctionLibrary:GetSectionMetaDataFromMontage(AnimMontage, SectionName, bIncludeSequence, SlotName) end
---@param AnimMontage UAnimMontage
---@param SectionIndex int32
---@return float
function UEnemyFunctionLibrary:GetSectionLengthFromMontage(AnimMontage, SectionIndex) end
---@param AnimMontage UAnimMontage
---@param InSectionName FName
---@return int32
function UEnemyFunctionLibrary:GetSectionIndexFromMontage(AnimMontage, InSectionName) end
---@param targetPositionInitial FVector
---@param targetVelocityInitial FVector
---@param projectilePositionInitial FVector
---@param projectileSpeed float
---@param outputLocation FVector
---@return FVector
function UEnemyFunctionLibrary:GetPredictiveProjectileDirection(targetPositionInitial, targetVelocityInitial, projectilePositionInitial, projectileSpeed, outputLocation) end


---@class UEnemyGroup : UObject
---@field GroupMembers TArray<AEnemyBase>
---@field EnemyGroupManager UEnemyGroupManager
UEnemyGroup = {}

---@param EnemyManager AEnemyManager
function UEnemyGroup:UpdateMembers(EnemyManager) end
---@param Member AEnemyBase
function UEnemyGroup:UnregisterMember(Member) end
---@param DeltaTime float
function UEnemyGroup:TickEnemyGroup(DeltaTime) end
---@param NewMembers TArray<AEnemyBase>
function UEnemyGroup:RegisterMembers(NewMembers) end
---@param NewMember AEnemyBase
function UEnemyGroup:RegisterMember(NewMember) end
---@param InEnemyGroupManager UEnemyGroupManager
function UEnemyGroup:RegisterGroupManager(InEnemyGroupManager) end
---@return boolean
function UEnemyGroup:IsValid() end
function UEnemyGroup:HandleRegisteredToGroupManager() end
function UEnemyGroup:HandleDisbanded() end
---@return int32
function UEnemyGroup:GetMemberUpdatePriority() end
---@param Outer UEnemyGroupManager
---@param GroupClass TSubclassOf<UEnemyGroup>
---@param Members TArray<AEnemyBase>
---@return UEnemyGroup
function UEnemyGroup:CreateEnemyGroup(Outer, GroupClass, Members) end


---@class UEnemyGroupGenerator : UObject
---@field UpdatePriority int32
UEnemyGroupGenerator = {}

---@return int32
function UEnemyGroupGenerator:GetUpdatePriority() end
---@param EnemyManager AEnemyManager
---@param ValidEnemies TArray<AEnemyBase>
---@return TArray<UEnemyGroup>
function UEnemyGroupGenerator:GenerateGroups(EnemyManager, ValidEnemies) end


---@class UEnemyGroupGenerator_ClassFilter : UEnemyGroupGenerator
---@field EnemyClass TSoftClassPtr<AEnemyBase>
---@field GroupClass TSubclassOf<UEnemyGroup>
---@field MinAggressionState EAggressionState
UEnemyGroupGenerator_ClassFilter = {}



---@class UEnemyGroupGenerator_ProximityFlock : UEnemyGroupGenerator
---@field LeaderEnemyClass TSoftClassPtr<AEnemyBase>
---@field FollowerEnemyClass TSoftClassPtr<AEnemyBase>
---@field MaxGroupSize int32
---@field MaxDistance float
---@field GroupClass TSubclassOf<UEnemyGroup>
UEnemyGroupGenerator_ProximityFlock = {}



---@class UEnemyGroupManager : UActorComponent
---@field Owner AEnemyManager
---@field EnemyGroups TArray<UEnemyGroup>
---@field GroupGenerators TArray<UEnemyGroupGenerator>
---@field GroupGenerationInterval float
---@field bShouldSortGroups boolean
---@field GroupGenerationCooldown float
UEnemyGroupManager = {}

---@param InOwner AEnemyManager
function UEnemyGroupManager:RegisterOwner(InOwner) end


---@class UEnemyHealthBar : UOnScreenThingPointer
---@field EnemyCharacter ACharacter
---@field EnemyHealth UHealthComponent
---@field bDamageNumbersEnabled boolean
---@field bIsElite boolean
---@field OnDestruct FEnemyHealthBarOnDestruct
---@field ProgressBar UHMQComplexProgressBar
---@field ProgressBar_Stun UHMQComplexProgressBar
---@field BrushImage_Corners UUserWidget
---@field BorderHeadingText UUserWidget
---@field Text_CumulativeDamage UTextBlock
---@field Grid_DamageNumbers UGridPanel
---@field Foldout UWidgetAnimation
---@field BlinkOut UWidgetAnimation
---@field DamageNumberEnlarge UWidgetAnimation
---@field DamageNumberFadeOut UWidgetAnimation
---@field BriefCumulativeDamageTime float
---@field LastDamageTime float
---@field CumulativeDamage float
---@field Color_Default FLinearColor
---@field Color_Elite FLinearColor
---@field Color_ProgressBarFill FLinearColor
---@field Color_ProgressBarFillElite FLinearColor
---@field Color_ProgressBarFillDOT FLinearColor
---@field StunColor_ProgressLow FLinearColor
---@field StunColor_ProgressHigh FLinearColor
---@field StunColor_Stunned FLinearColor
---@field Color_Number FLinearColor
---@field Color_NumberWeakpoint FLinearColor
---@field Color_NumberStunned FLinearColor
---@field Color_NumberStunnedWeakpoint FLinearColor
UEnemyHealthBar = {}

---@param health UHealthComponent
function UEnemyHealthBar:UpdateStun(health) end
---@param SaveGame UTouristSaveGame
function UEnemyHealthBar:SaveGameLoaded(SaveGame) end
function UEnemyHealthBar:ResetCornersAndHeadingColors() end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UEnemyHealthBar:NativeDamageTaken(DamagedActor, DamageEvent) end
---@param HealthComponent UHealthComponent
function UEnemyHealthBar:HealthChanged(HealthComponent) end
---@param DamageEvent FTouristDamageEvent
function UEnemyHealthBar:DamageTaken(DamageEvent) end


---@class UEnemyHealthBarManager : UTouristWidgetBase
---@field bBarHidden boolean
---@field EnemyHealthBarClass TSubclassOf<UEnemyHealthBar>
UEnemyHealthBarManager = {}

---@param Enemy AActor
---@param bHideHealthBar boolean
function UEnemyHealthBarManager:HideHealthBar(Enemy, bHideHealthBar) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UEnemyHealthBarManager:EnemyKilled(DamagedActor, DamageEvent) end
---@param EnemyHealthBar UEnemyHealthBar
function UEnemyHealthBarManager:EnemyHealthBarRemoved(EnemyHealthBar) end
---@param Enemy AActor
---@param EndPlayReason EEndPlayReason::Type
function UEnemyHealthBarManager:EnemyEndPlay(Enemy, EndPlayReason) end
---@param Enemy AActor
---@param DamageEvent FTouristDamageEvent
---@param bCriticalHit boolean
function UEnemyHealthBarManager:EnemyDamaged(Enemy, DamageEvent, bCriticalHit) end
---@param EliteEnemy AEnemyBase
function UEnemyHealthBarManager:EliteAggro(EliteEnemy) end


---@class UEnemyIndicatorWidget : UTouristWidgetBase
---@field EnemyPointerWidget UEnemyPointerWidget
---@field CachedPlayer APlayerCharacter
---@field EnemyPointers TArray<UEnemyPointerWidget>
UEnemyIndicatorWidget = {}



---@class UEnemyMaxTicketFunction : UObject
UEnemyMaxTicketFunction = {}

---@param ScoringCategory uint8
---@param TargetCharacter ATouristCharacter
---@return int32
function UEnemyMaxTicketFunction:GetMaxTickets(ScoringCategory, TargetCharacter) end


---@class UEnemyPathFollowingComponent : UPathFollowingComponent
---@field PathCornerOffset float
---@field MinMovementSpeedModifier float
---@field MaxMovementSpeedModifier float
---@field bUseUnrealPathFollowingComponent boolean
---@field EnemyCharacter AEnemyBase
---@field EnemyController AEnemyControllerBase
---@field CharacterMovementComp UCharacterMovementComponent
---@field AllMovementBehaviours TArray<UBaseEnemyMovementBehaviour>
---@field UsedMovementBehaviour UBaseEnemyMovementBehaviour
---@field MovementState EEnemyMovementState
---@field MovementSpeed float
---@field DesiredMoveDirection FVector
---@field bIsTraversingNavLink boolean
---@field CurrentNodeData FTouristPathNode
---@field NextNodeData FTouristPathNode
---@field SpeedModifiers TArray<FMovementParameterModifierInstance>
---@field bAllowMovement boolean
UEnemyPathFollowingComponent = {}

---@param DeltaTime float
function UEnemyPathFollowingComponent:UpdateVelocity(DeltaTime) end
---@param DeltaTime float
function UEnemyPathFollowingComponent:UpdateSpeed(DeltaTime) end
---@param DeltaTime float
function UEnemyPathFollowingComponent:UpdateMovement(DeltaTime) end
---@param NewState EEnemyMovementState
function UEnemyPathFollowingComponent:SetMovementState(NewState) end
---@param InMovementSpeed float
function UEnemyPathFollowingComponent:SetMovementSpeed(InMovementSpeed) end
---@return boolean
function UEnemyPathFollowingComponent:IsTraversingNavLink() end
---@return boolean
function UEnemyPathFollowingComponent:IsMoving() end
---@return boolean
function UEnemyPathFollowingComponent:IsFollowingPath() end
---@param SampleDir FVector
---@param MaxDist float
---@param SampleSegmentSize float
---@return boolean
function UEnemyPathFollowingComponent:HasGroundInDirection(SampleDir, MaxDist, SampleSegmentSize) end
function UEnemyPathFollowingComponent:HandleOwnerControlFlagsChanged() end
function UEnemyPathFollowingComponent:HandleMoveFinished() end
---@param PathTarget FVector
---@return FVector
function UEnemyPathFollowingComponent:GetPartialPathDestination(PathTarget) end
---@return FTouristPathNode
function UEnemyPathFollowingComponent:GetNextNodeData() end
---@return EEnemyMovementState
function UEnemyPathFollowingComponent:GetMovementState() end
---@return float
function UEnemyPathFollowingComponent:GetMovementSpeed() end
---@param Offset int32
---@return FTouristPathNode
function UEnemyPathFollowingComponent:GetFutureNodeData(Offset) end
---@return FVector
function UEnemyPathFollowingComponent:GetDestinationLocation() end
---@return FTouristPathNode
function UEnemyPathFollowingComponent:GetCurrentNodeData() end
function UEnemyPathFollowingComponent:DebugDrawPath() end
function UEnemyPathFollowingComponent:ClearSpeedModifiers() end
function UEnemyPathFollowingComponent:CacheMovementBehaviours() end
---@param Modifier FMovementParameterModifier
function UEnemyPathFollowingComponent:AddSpeedModifier(Modifier) end


---@class UEnemyPointerWidget : UTouristWidgetBase
UEnemyPointerWidget = {}

---@param TargetEnemy AEnemyBase
---@param EnemyAttackPhase EAttackPhase
---@param TimeInPhase float
---@param SuggestedRotation float
---@param EnemyDistance float
---@param MaxEnemyDistance float
function UEnemyPointerWidget:OnPositionUpdated(TargetEnemy, EnemyAttackPhase, TimeInPhase, SuggestedRotation, EnemyDistance, MaxEnemyDistance) end


---@class UEnemyRotationComponent : UActorComponent
---@field CharacterRootRotationSpeed float
---@field RotationAcceleration float
---@field RotationDeceleration float
---@field bUseAcceleration boolean
---@field OverrideCharacterRootRotationSpeed float
---@field OverrideRotationSpeedTimer float
---@field bAllowCharacterXYRotation boolean
---@field bResetTargetRootRotationIfNoRequest boolean
---@field bApplyRotationDuringIdle boolean
---@field bApplyRotationDuringLocomotion boolean
---@field bApplyRotationNotCoveredByLocomotion boolean
---@field bIgnoreLocomotionRootRotation boolean
---@field RotationSettings TArray<FEnemyRotationSettings>
---@field PivotingSettings FEnemyRotationPivotingSettings
---@field RotationRequestLookup TMap<EEnemyRotationSource, FEnemyRotationRequest>
---@field SourceRotations TArray<FSourceRotationPair>
---@field bAllowRotation boolean
---@field TargetRootRotation FRotator
---@field LocomotionTargetRootRotation FRotator
---@field EnemyCharacter AEnemyBase
---@field EnemyController AEnemyControllerBase
---@field bHasEverReceivedRotationRequests boolean
---@field CurrentRotationYawSpeed float
---@field NotifyTargetRotationChanged FEnemyRotationComponentNotifyTargetRotationChanged
UEnemyRotationComponent = {}

---@param InRotationSpeed float
function UEnemyRotationComponent:SetRotationSpeed(InRotationSpeed) end
---@param InRotationSpeed float
---@param Time float
function UEnemyRotationComponent:OverrideRotationSpeed(InRotationSpeed, Time) end
function UEnemyRotationComponent:HandleOwnerControlFlagsChanged() end
---@param bForLocomotion boolean
---@return FRotator
function UEnemyRotationComponent:GetTargetRootRotation(bForLocomotion) end
---@return TArray<FSourceRotationPair>
function UEnemyRotationComponent:GetSourceRotations() end
---@return float
function UEnemyRotationComponent:GetRotationSpeed() end
---@param Source EEnemyRotationSource
---@return boolean
function UEnemyRotationComponent:CanApplyRotationForSource(Source) end
---@param Request FEnemyRotationRequest
---@param bAllowOverridingActiveRequest boolean
function UEnemyRotationComponent:AddRotationRequest(Request, bAllowOverridingActiveRequest) end


---@class UEnemySensingComponent : UActorComponent
---@field SensingRadius float
---@field SensingUpdateInterval float
---@field SensedEnemies TArray<AEnemyBase>
---@field ClosestEnemy AEnemyBase
---@field Owner ATouristCharacter
---@field OwnerAsEnemy AEnemyBase
---@field LastSenseTime float
UEnemySensingComponent = {}

function UEnemySensingComponent:UpdateEnemySensing() end
---@return TArray<AEnemyBase>
function UEnemySensingComponent:GetSensedEnemies() end
---@return AEnemyBase
function UEnemySensingComponent:GetClosestEnemy() end


---@class UEnemySoftCollisionComponent : UCharacterSoftCollisionComponent
---@field WeightTier int32
---@field bUseCustomDepenetrationForce boolean
---@field DepenetrationForce float
UEnemySoftCollisionComponent = {}

---@return int32
function UEnemySoftCollisionComponent:GetWeightTier() end


---@class UEnemyTentacleComponent : UActorComponent
---@field TentacleParticles TArray<UNGParticleComponent>
---@field CachedSlowdownComponent USlowdownComponent
---@field TentacleStateTimer float
---@field TentacleStateDuration float
---@field TentacleState ETentacleState
---@field DefaultTentacleState ETentacleState
---@field TentacleStateId int32
---@field DefaultTentacleStateId int32
---@field StatePhase float
---@field MeshName FName
---@field DamageStateDuration float
---@field TentacleThickness float
---@field TentacleLength float
---@field EnemyType int32
---@field bAutoSetDefaultState boolean
---@field bAlwaysSendHitReactionState boolean
---@field StateAudio TArray<FTentacleStateAudioEntry>
---@field bKeepTentaclesVisibleDuringDeath boolean
UEnemyTentacleComponent = {}

---@param InTentacleState ETentacleState
---@param InStateId int32
---@param InDuration float
function UEnemyTentacleComponent:SetTentacleState(InTentacleState, InStateId, InDuration) end
---@param InDefaultTentacleState ETentacleState
---@param InStateId int32
function UEnemyTentacleComponent:SetDefaultTentacleState(InDefaultTentacleState, InStateId) end
function UEnemyTentacleComponent:ResetToDefaultTentacleState() end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UEnemyTentacleComponent:OnDamageTaken(DamagedActor, DamageEvent) end
---@param OldState EAggressionState
---@param NewState EAggressionState
function UEnemyTentacleComponent:OnAggressionStateChanged(OldState, NewState) end
---@param InTentacleState ETentacleState
---@param InStateId int32
---@param InDuration float
function UEnemyTentacleComponent:MulticastSetTentacleState(InTentacleState, InStateId, InDuration) end
function UEnemyTentacleComponent:InitTentacleParticlesOnEnemy() end
---@return int32
function UEnemyTentacleComponent:GetTentacleStateId() end
---@return ETentacleState
function UEnemyTentacleComponent:GetTentacleState() end
---@param Particle UNGParticleComponent
function UEnemyTentacleComponent:AddTentacleParticle(Particle) end


---@class UEnemyTicketScoringFunction : UObject
---@field ValueMultiplier float
---@field ScoringMode EEnemyTicketScoringFunctionMode
---@field bInvertScoreValue boolean
---@field bInvertFilteringResult boolean
---@field IgnoredClasses TArray<TSoftClassPtr<AEnemyBase>>
UEnemyTicketScoringFunction = {}

---@param Enemy AEnemyBase
---@param ScoringCategory uint8
---@param OutScore float
---@param OutBlockTicket boolean
function UEnemyTicketScoringFunction:GetScoreForEnemy(Enemy, ScoringCategory, OutScore, OutBlockTicket) end
---@param Enemy AEnemyBase
---@param ScoringCategory uint8
---@param OutScore float
---@param OutBlockTicket boolean
function UEnemyTicketScoringFunction:CalculateScoreForEnemy(Enemy, ScoringCategory, OutScore, OutBlockTicket) end


---@class UEntitlementManager : UObject
---@field DigitalDeluxeEditionEntitlementKey FString
---@field SteamPreOrderEntitlementKey FString
---@field EpicPreOrderEntitlementKey FString
---@field PreOrderEntitlementKey FString
---@field EntitlementsUpdatedDelegate FEntitlementManagerEntitlementsUpdatedDelegate
UEntitlementManager = {}

---@return boolean
function UEntitlementManager:IsPreOrder() end
---@return boolean
function UEntitlementManager:IsDigitalDeluxeEdition() end
---@param bEnable boolean
function UEntitlementManager:EnableEntitlements(bEnable) end
function UEntitlementManager:AsyncUpdateEntitlements() end


---@class UEnvQueryContext_Player : UEnvQueryContext
UEnvQueryContext_Player = {}


---@class UEnvQueryGenerator_CameraArc : UEnvQueryGenerator
---@field PlayerActor TSubclassOf<UEnvQueryContext>
---@field MinPitchAngle FAIDataProviderFloatValue
---@field MaxPitchAngle FAIDataProviderFloatValue
---@field NumPitchAngles FAIDataProviderIntValue
---@field MinRadialDistance FAIDataProviderFloatValue
---@field MaxRadialDistance FAIDataProviderFloatValue
---@field NumRadialDistances FAIDataProviderIntValue
---@field BaseNumYawAngles FAIDataProviderIntValue
---@field NumExtraYawAnglesPerSuccessiveRadius FAIDataProviderIntValue
---@field Use2DRadialDistances FAIDataProviderBoolValue
---@field UseFixedHeight FAIDataProviderBoolValue
---@field FixedHeight FAIDataProviderFloatValue
UEnvQueryGenerator_CameraArc = {}



---@class UEnvQueryGenerator_HMQCircleAroundToCameraView : UEnvQueryGenerator
---@field Start TSubclassOf<UEnvQueryContext>
---@field pivot TSubclassOf<UEnvQueryContext>
---@field AngleAroundPlayerMin FAIDataProviderFloatValue
---@field AngleAroundPlayerMax FAIDataProviderFloatValue
---@field NumAnglesAroundPlayer FAIDataProviderIntValue
---@field PitchVariationMin FAIDataProviderFloatValue
---@field PitchVariationMax FAIDataProviderFloatValue
---@field NumPitchVariations FAIDataProviderIntValue
---@field YawVariationMin FAIDataProviderFloatValue
---@field YawVariationMax FAIDataProviderFloatValue
---@field NumYawVariations FAIDataProviderIntValue
---@field MinDistanceFromPlayer FAIDataProviderFloatValue
---@field DirectionTowardsCamera FAIDataProviderBoolValue
UEnvQueryGenerator_HMQCircleAroundToCameraView = {}



---@class UEnvQueryGenerator_HMQCone3D : UEnvQueryGenerator
---@field ConeCentre TSubclassOf<UEnvQueryContext>
---@field ConeTarget TSubclassOf<UEnvQueryContext>
---@field angle FAIDataProviderFloatValue
---@field Distance FAIDataProviderFloatValue
---@field NumPoints FAIDataProviderIntValue
---@field ReverseDirection FAIDataProviderBoolValue
---@field Direction2D FAIDataProviderBoolValue
UEnvQueryGenerator_HMQCone3D = {}



---@class UEnvQueryGenerator_HMQDonut : UEnvQueryGenerator_Donut
---@field ZOffset FAIDataProviderFloatValue
UEnvQueryGenerator_HMQDonut = {}



---@class UEnvQueryGenerator_HMQSphere : UEnvQueryGenerator
---@field InnerRadius FAIDataProviderFloatValue
---@field OuterRadius FAIDataProviderFloatValue
---@field NumberOfSpheres FAIDataProviderIntValue
---@field PitchesPerSphere FAIDataProviderIntValue
---@field PointsPerPitch FAIDataProviderIntValue
---@field Center TSubclassOf<UEnvQueryContext>
UEnvQueryGenerator_HMQSphere = {}



---@class UEnvQueryGenerator_SphereArc : UEnvQueryGenerator
---@field SphereCentre TSubclassOf<UEnvQueryContext>
---@field ArcCentre TSubclassOf<UEnvQueryContext>
---@field UseMaxDeltaPitch FAIDataProviderBoolValue
---@field MaxDeltaPitch FAIDataProviderFloatValue
---@field MaxDeltaYaw FAIDataProviderFloatValue
---@field NumRows FAIDataProviderIntValue
---@field NumColumns FAIDataProviderIntValue
---@field UseCustomRadius FAIDataProviderBoolValue
---@field CustomRadiusMin FAIDataProviderFloatValue
---@field CustomRadiusMax FAIDataProviderFloatValue
---@field NumRadii FAIDataProviderIntValue
---@field UseAbsolutePitchRange FAIDataProviderBoolValue
---@field AbsolutePitchMin FAIDataProviderFloatValue
---@field AbsolutePitchMax FAIDataProviderFloatValue
UEnvQueryGenerator_SphereArc = {}



---@class UEnvQueryTest_CharacterVisibility : UEnvQueryTest
---@field Context TSubclassOf<UEnvQueryContext>
---@field ContextHeightOffset FAIDataProviderFloatValue
---@field TargetTopHeightOffset FAIDataProviderFloatValue
---@field TargetCapsuleScale FAIDataProviderFloatValue
UEnvQueryTest_CharacterVisibility = {}



---@class UEnvQueryTest_CrossesAnotherEnemyPath : UEnvQueryTest
UEnvQueryTest_CrossesAnotherEnemyPath = {}


---@class UEnvQueryTest_InSameRoom : UEnvQueryTest
---@field Context TSubclassOf<UEnvQueryContext>
UEnvQueryTest_InSameRoom = {}



---@class UEnvQueryTest_InVolume : UEnvQueryTest
---@field VolumeClass TSubclassOf<AVolume>
UEnvQueryTest_InVolume = {}



---@class UEnvQueryTest_NearEnemyOrDestination : UEnvQueryTest
---@field ThresholdDistance FAIDataProviderFloatValue
UEnvQueryTest_NearEnemyOrDestination = {}



---@class UEnvQueryTest_RandomScore : UEnvQueryTest
UEnvQueryTest_RandomScore = {}


---@class UEnvQueryTest_RelativePitchAngle : UEnvQueryTest
---@field Base TSubclassOf<UEnvQueryContext>
UEnvQueryTest_RelativePitchAngle = {}



---@class UEnvQueryTest_VerticalTrace : UEnvQueryTest
---@field CastDistance FAIDataProviderFloatValue
UEnvQueryTest_VerticalTrace = {}



---@class UEnvironmentAttributesAsset : UPrimaryDataAsset
---@field MinValues FEnvironmentAttributesInfo
---@field MaxValues FEnvironmentAttributesInfo
---@field Generators TArray<FEnvironmentAttributesInfo>
---@field TimelessTowerReplacements TArray<TSoftObjectPtr<UEnvironmentAttributesAsset>>
UEnvironmentAttributesAsset = {}



---@class UEnvironmentBaseDataAsset : UPrimaryDataAsset
---@field InterpSpeed float
UEnvironmentBaseDataAsset = {}



---@class UEnvironmentControllerComponent : UHMQActorComponent
---@field MapEnvironmentComponent UMapEnvironmentComponent
---@field RoomActor ARoomEnvironmentActor
---@field SkySphereActor AStaticMeshActor
---@field SkySphereMaterialInstance UMaterialInstanceDynamic
---@field SkyAtmosphereActor ASkyAtmosphere
---@field SkyAtmosphereComponent USkyAtmosphereComponent
---@field WindVolumeActor AWindVolume
---@field FogModifierComponent UHMQFogModifierComponent
---@field LightModifierComponent UHMQLightModifierComponent
---@field CurrentRainAsset UEnvironmentRainDataAsset
---@field TargetRainAsset UEnvironmentRainDataAsset
---@field MapRainAsset UEnvironmentRainDataAsset
---@field DefaultRainAsset UEnvironmentRainDataAsset
---@field CurrentLightAsset UEnvironmentLightDataAsset
---@field TargetLightAsset UEnvironmentLightDataAsset
---@field CurrentSkyAsset UEnvironmentSkyDataAsset
---@field TargetSkyAsset UEnvironmentSkyDataAsset
---@field DefaultSkyAsset UEnvironmentSkyDataAsset
---@field CurrentWindAsset UEnvironmentWindDataAsset
---@field TargetWindAsset UEnvironmentWindDataAsset
---@field DefaultWindAsset UEnvironmentWindDataAsset
---@field CurrentFogAsset UEnvironmentFogDataAsset
---@field TargetFogAsset UEnvironmentFogDataAsset
---@field DefaultFogAsset UEnvironmentFogDataAsset
---@field Elements TArray<FEnvironmentDataElement>
UEnvironmentControllerComponent = {}

---@param WindAsset UEnvironmentWindDataAsset
---@param Priority int32
---@return int32
function UEnvironmentControllerComponent:PushWindElement(WindAsset, Priority) end
---@param RainAsset UEnvironmentRainDataAsset
---@param Priority int32
---@return int32
function UEnvironmentControllerComponent:PushRainElement(RainAsset, Priority) end
---@param FogAsset UEnvironmentFogDataAsset
---@param Priority int32
---@return int32
function UEnvironmentControllerComponent:PushFogElement(FogAsset, Priority) end
---@param AttributesAsset UEnvironmentAttributesAsset
---@param RainAsset UEnvironmentRainDataAsset
---@param WindAsset UEnvironmentWindDataAsset
---@param FogAsset UEnvironmentFogDataAsset
---@param LightAsset UEnvironmentLightDataAsset
---@param SkyAsset UEnvironmentSkyDataAsset
---@param Priority int32
---@return int32
function UEnvironmentControllerComponent:PushElement(AttributesAsset, RainAsset, WindAsset, FogAsset, LightAsset, SkyAsset, Priority) end
---@param ElementID int32
function UEnvironmentControllerComponent:PopElement(ElementID) end
---@param PlayerState APlayerState
---@param NewRoomIndex int32
---@param OldRoomIndex int32
function UEnvironmentControllerComponent:HandlePlayerRoomChanged(PlayerState, NewRoomIndex, OldRoomIndex) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UEnvironmentControllerComponent:HandleBiomeStateChanged(Biome, NewBiomeState) end
---@return float
function UEnvironmentControllerComponent:GetWetness() end
---@return float
function UEnvironmentControllerComponent:GetRainPostProcessIntensity() end
---@return float
function UEnvironmentControllerComponent:GetRainParticleIntensity() end
---@return UEnvironmentRainDataAsset
function UEnvironmentControllerComponent:GetMapRainAsset() end
---@return float
function UEnvironmentControllerComponent:GetLightningIntensity() end
---@param WorldContextObject UObject
---@return UEnvironmentControllerComponent
function UEnvironmentControllerComponent:GetEnvironmentController(WorldContextObject) end
function UEnvironmentControllerComponent:DoImgui() end


---@class UEnvironmentFogDataAsset : UEnvironmentBaseDataAsset
---@field AtmosphericFog FHMQAtmosphericFogData
---@field ExponentialHeightFog FHMQExponentialHeightFogData
---@field bAtmosphericFogOverride boolean
---@field bExponentialHeightFogOverride boolean
UEnvironmentFogDataAsset = {}



---@class UEnvironmentLightDataAsset : UEnvironmentBaseDataAsset
---@field DirectionalLightTag FName
---@field DirectionalLightData FHMQDirectionalLightData
---@field PointLightTag FName
---@field PointLightData FHMQPointLightData
---@field SkyLightTag FName
---@field SkyLightData FHMQSkyLightData
UEnvironmentLightDataAsset = {}



---@class UEnvironmentRainDataAsset : UEnvironmentBaseDataAsset
---@field DrynessWetness float
---@field RainParticleIntensity float
---@field RainPostProcessIntensity float
---@field LightningIntensity float
UEnvironmentRainDataAsset = {}



---@class UEnvironmentSkyDataAsset : UEnvironmentBaseDataAsset
---@field StormIntensity FModifiableValueFloat
UEnvironmentSkyDataAsset = {}



---@class UEnvironmentWindDataAsset : UEnvironmentBaseDataAsset
---@field Speed float
---@field Intensity float
---@field Strength float
---@field MinGustWindSpeed float
---@field MaxGustWindSpeed float
UEnvironmentWindDataAsset = {}



---@class UExecuteConsoleCommand : UActorComponent
UExecuteConsoleCommand = {}


---@class UExtraLifeComponent : UHMQActorComponent
---@field ReviveActor AActor
---@field MetaModifierComp UMetaModifierComponent
---@field ExtraLifeObjectComp UExtraLifeObjectComponent
UExtraLifeComponent = {}

---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UExtraLifeComponent:HandleBiomeStateChanged(Biome, NewBiomeState) end


---@class UExtraLifeObjectComponent : UHMQActorComponent
---@field bAutoRevive boolean
---@field Guid FGuid
---@field OnPrepareExtraLife FExtraLifeObjectComponentOnPrepareExtraLife
---@field OnProcessExtraLife FExtraLifeObjectComponentOnProcessExtraLife
---@field OnConsumeExtraLife FExtraLifeObjectComponentOnConsumeExtraLife
---@field OnCompleteExtraLife FExtraLifeObjectComponentOnCompleteExtraLife
---@field ReviveActor AActor
---@field MetaModifierComp UMetaModifierComponent
UExtraLifeObjectComponent = {}

---@return AActor
function UExtraLifeObjectComponent:GetReviveActor() end
---@return UMetaModifierComponent
function UExtraLifeObjectComponent:GetExtraLifeMetaModifier() end
function UExtraLifeObjectComponent:CompleteExtraLife() end


---@class UEyeOfTruthHazardEnablerBehaviour : UHazardBehaviourComponentBase
UEyeOfTruthHazardEnablerBehaviour = {}

function UEyeOfTruthHazardEnablerBehaviour:OnEyeOfTruthDamaged() end


---@class UFanBarrel : UGunBarrel
---@field BulletCount int32
---@field FiringAngle float
---@field bVertical boolean
UFanBarrel = {}



---@class UFigureOfEightFlightPathComponent : UFlightPathComponent
---@field Radius float
---@field TimeToRetestAfterFailure float
---@field FirstTryOffset float
UFigureOfEightFlightPathComponent = {}

function UFigureOfEightFlightPathComponent:InvalidatePath() end
---@return boolean
function UFigureOfEightFlightPathComponent:HasValidPath() end
---@return FVector
function UFigureOfEightFlightPathComponent:GetTargetLocationForLinkup() end
---@param IgnorePreviousFailure boolean
---@return boolean
function UFigureOfEightFlightPathComponent:FindValidPath(IgnorePreviousFailure) end


---@class UFixedClip : UGunClip
---@field MaxBullets int32
---@field CurrentBullets int32
---@field BulletsFired_Replicated int32
---@field BulletsFired_Local int32
UFixedClip = {}



---@class UFlightPathComponent : UActorComponent
---@field Speed float
---@field bTurnToFaceVelocity boolean
UFlightPathComponent = {}

---@return FVector
function UFlightPathComponent:GetTargetLocationForLinkupBP() end
---@param CurrentLocation FVector
---@param MoveDistance float
---@return FVector
function UFlightPathComponent:GetNextLocationBP(CurrentLocation, MoveDistance) end


---@class UFlyOutComponent : UHMQMovementComponent
---@field bPhysicsFlyOut boolean
---@field FlyOutMinDistance float
---@field FlyOutMaxDistance float
---@field FlyOutSearchDistance float
---@field FlyOutHeight float
---@field FlyOutDuration float
---@field FlyOutTraceUpDistance float
---@field FlyOutTraceDownDistance float
---@field FlyOutImpulse FVector
---@field bFastForwardFlyOut boolean
---@field ControllerComponentName FName
---@field BounceAngleDegrees float
---@field bPhysicsWhenOnGround boolean
---@field StartLocation FVector
---@field EndLocation FVector
---@field StartTime float
---@field CurrentDuration float
---@field bCurrentPhysicsFlyOut boolean
---@field ControllerComponent UPhysicsControllerComponent
UFlyOutComponent = {}

---@param OriginalLocation FVector
---@param AdjustedLocation FVector
function UFlyOutComponent:OnActorPlacementAdjusted(OriginalLocation, AdjustedLocation) end
---@param HitComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param NormalImpulse FVector
---@param hit FHitResult
function UFlyOutComponent:HandleComponentHit(HitComponent, OtherActor, OtherComp, NormalImpulse, hit) end


---@class UFocusAimComponent : UActorComponent
---@field OnFocusAimStatusChanged FFocusAimComponentOnFocusAimStatusChanged
---@field FocusAimActivatedSfx UAkAudioEvent
---@field FocusAimDeactivatedSfx UAkAudioEvent
---@field OwnerPlayer APlayerCharacter
---@field OwnerPlayerController ATouristPlayerController
---@field CachedAimAssistComponent UAimAssistComponent
UFocusAimComponent = {}

---@param NewStateIndex int32
function UFocusAimComponent:OnAimTriggerStateChanged(NewStateIndex) end
---@return boolean
function UFocusAimComponent:IsFocusAiming() end
---@return boolean
function UFocusAimComponent:IsFocusAimAllowed() end


---@class UFocusHoveringButton : UButton
UFocusHoveringButton = {}


---@class UFocusLostWidget : UPauseMenu
UFocusLostWidget = {}


---@class UForceWorldDirection : UGunFiringRotModifier
---@field bDirOverridden boolean
---@field bRelative boolean
---@field WorldDirectionOverride FRotator
UForceWorldDirection = {}

function UForceWorldDirection:UnOverrideDir() end
---@param WorldDirection FRotator
function UForceWorldDirection:OverrideDir(WorldDirection) end
---@return boolean
function UForceWorldDirection:IsDirOverridden() end


---@class UGameActivityEndCallbackProxy : UOnlineBlueprintCallProxyBase
---@field OnSuccess FGameActivityEndCallbackProxyOnSuccess
---@field OnFailure FGameActivityEndCallbackProxyOnFailure
---@field WorldContextObject UObject
UGameActivityEndCallbackProxy = {}

---@param WorldContextObject UObject
---@param PlayerController APlayerController
---@param ActivityId FName
---@param Outcome EGameActivityOutcome
---@param Params FGameActivityParams
---@return UGameActivityEndCallbackProxy
function UGameActivityEndCallbackProxy:EndGameActivity(WorldContextObject, PlayerController, ActivityId, Outcome, Params) end


---@class UGameActivitySetAvailabilityCallbackProxy : UOnlineBlueprintCallProxyBase
---@field OnSuccess FGameActivitySetAvailabilityCallbackProxyOnSuccess
---@field OnFailure FGameActivitySetAvailabilityCallbackProxyOnFailure
---@field WorldContextObject UObject
UGameActivitySetAvailabilityCallbackProxy = {}

---@param WorldContextObject UObject
---@param PlayerController APlayerController
---@param ActivityId FName
---@param bEnabled boolean
---@return UGameActivitySetAvailabilityCallbackProxy
function UGameActivitySetAvailabilityCallbackProxy:SetGameActivityAvailability(WorldContextObject, PlayerController, ActivityId, bEnabled) end


---@class UGameActivityStartCallbackProxy : UOnlineBlueprintCallProxyBase
---@field OnSuccess FGameActivityStartCallbackProxyOnSuccess
---@field OnFailure FGameActivityStartCallbackProxyOnFailure
---@field WorldContextObject UObject
UGameActivityStartCallbackProxy = {}

---@param WorldContextObject UObject
---@param PlayerController APlayerController
---@param ActivityId FName
---@param Params FGameActivityParams
---@return UGameActivityStartCallbackProxy
function UGameActivityStartCallbackProxy:StartGameActivity(WorldContextObject, PlayerController, ActivityId, Params) end


---@class UGameHUDWidget : UTouristWidgetBase
---@field IndicatorCanvas UCanvasPanel
---@field CombatIndicatorCanvas UCanvasPanel
---@field BossHealth UBossHealthWidget
---@field Labels UCanvasPanel
---@field Content UCanvasPanel
---@field RetainerBox_FullScreen UHMQRetainerBox
---@field CachedPlayer APlayerCharacter
---@field OnScreenPointersToSort TArray<UOnScreenThingPointer>
UGameHUDWidget = {}

function UGameHUDWidget:UpdateLabelColors() end
function UGameHUDWidget:ToggleDebugMusicInfo() end
function UGameHUDWidget:ToggleDebugInfo() end
---@param Notification UNotificationWidget
function UGameHUDWidget:ShowNotification(Notification) end
---@param visible boolean
---@param InteractableCount int32
function UGameHUDWidget:SetInteractableSelectorControlGuideWidgetVisibility(visible, InteractableCount) end
---@param bVisible boolean
function UGameHUDWidget:SetContentVisibility(bVisible) end
---@param BaseClass UClass
---@param ViewSpaceThreshold float
---@return UOnScreenThingPointer
function UGameHUDWidget:GetOnScreenThingPointerUnderCursor(BaseClass, ViewSpaceThreshold) end
---@return UVerticalBox
function UGameHUDWidget:GetCurseListBox() end
function UGameHUDWidget:GameplayIntroVideoStarted() end
---@param TargetClass TSubclassOf<UOnScreenThingPointer>
---@param TargetPoint FVector
---@param TargetActor AActor
---@return UOnScreenThingPointer
function UGameHUDWidget:AddOnScreenThingPointerAdvanced(TargetClass, TargetPoint, TargetActor) end
---@param TargetClass TSubclassOf<UOnScreenThingPointer>
---@return UOnScreenThingPointer
function UGameHUDWidget:AddOnScreenThingPointer(TargetClass) end


---@class UGameLanguageDataTable : UDataTable
UGameLanguageDataTable = {}


---@class UGameTransitionScreenComponent : UHMQActorComponent
---@field OnFinishTransition FGameTransitionScreenComponentOnFinishTransition
---@field OnCompleteTransition FGameTransitionScreenComponentOnCompleteTransition
---@field OnRepStateChanged FGameTransitionScreenComponentOnRepStateChanged
---@field State FGameTransitionScreenRepState
---@field PlayingMediaData UMediaData
UGameTransitionScreenComponent = {}

function UGameTransitionScreenComponent:TriggerBiomeTransition() end
---@param value boolean
function UGameTransitionScreenComponent:SetLoadingScreenState(value) end
---@param InBiomeTransitionType EBiomeTransitionType
---@param InBiomeTransitionId FName
function UGameTransitionScreenComponent:RegisterBiomeTransition(InBiomeTransitionType, InBiomeTransitionId) end
---@param Media UMediaData
function UGameTransitionScreenComponent:PlayMedia(Media) end
---@param OldState FGameTransitionScreenRepState
function UGameTransitionScreenComponent:OnRep_State(OldState) end
---@return boolean
function UGameTransitionScreenComponent:IsResuming() end
---@return boolean
function UGameTransitionScreenComponent:IsGameTransitionActive() end
---@return boolean
function UGameTransitionScreenComponent:IsComplete() end
---@return int32
function UGameTransitionScreenComponent:GetVersion() end
---@return EGameTransitionMode
function UGameTransitionScreenComponent:GetMode() end
---@return UBiomeConfig
function UGameTransitionScreenComponent:GetBiomeConfig() end
---@return EBiome
function UGameTransitionScreenComponent:GetBiome() end
function UGameTransitionScreenComponent:FinishTransition() end
function UGameTransitionScreenComponent:BP_UnlockTransition() end
function UGameTransitionScreenComponent:BP_ReadyTransition() end
function UGameTransitionScreenComponent:BP_LockTransition() end
function UGameTransitionScreenComponent:BP_FinishTransition() end
function UGameTransitionScreenComponent:BP_EndTransition() end
function UGameTransitionScreenComponent:BP_BeginTransition() end


---@class UGameplayAbility_Consume : UGameplayAbility_Tourist
UGameplayAbility_Consume = {}

---@param Consumable UConsumableComponent
function UGameplayAbility_Consume:HandleConsumeFinished(Consumable) end


---@class UGameplayAbility_Dash : UGameplayAbility_Tourist
---@field DashAbilityComponent UDashAbilityComponent
UGameplayAbility_Dash = {}

---@param bPerfectDodge boolean
---@param bHitWall boolean
function UGameplayAbility_Dash:HandleDashStop(bPerfectDodge, bHitWall) end
---@param DashComponent UDashAbilityComponent
function UGameplayAbility_Dash:HandleCooldownEnded(DashComponent) end


---@class UGameplayAbility_EnvResistanceSuit : UGameplayAbility_Tourist
UGameplayAbility_EnvResistanceSuit = {}


---@class UGameplayAbility_FirstPerson : UGameplayAbility_Tourist
UGameplayAbility_FirstPerson = {}

---@param ActorComponent UActorComponent
function UGameplayAbility_FirstPerson:HandleFirstPersonDeactivated(ActorComponent) end


---@class UGameplayAbility_GravitySuit : UGameplayAbility_Tourist
UGameplayAbility_GravitySuit = {}


---@class UGameplayAbility_HookShot : UGameplayAbility_Tourist
---@field HookShotAbilityComponent UHookShotAbilityComponent
UGameplayAbility_HookShot = {}

---@param bCancelled boolean
function UGameplayAbility_HookShot:HandleHookShotStop(bCancelled) end


---@class UGameplayAbility_Jump : UGameplayAbility_Tourist
UGameplayAbility_Jump = {}

---@param hit FHitResult
function UGameplayAbility_Jump:HandleLanded(hit) end


---@class UGameplayAbility_Melee : UGameplayAbility_Tourist
UGameplayAbility_Melee = {}

---@param MeleeWeapon AMeleeWeaponBase
function UGameplayAbility_Melee:MeleeEnded(MeleeWeapon) end
---@param MeleeWeapon AMeleeWeaponBase
function UGameplayAbility_Melee:MeleeCooldownEnded(MeleeWeapon) end
---@param MeleeWeapon AMeleeWeaponBase
function UGameplayAbility_Melee:MeleeCheckAbilityQueue(MeleeWeapon) end


---@class UGameplayAbility_Tourist : UGameplayAbility
---@field bAlwaysActive boolean
---@field AcceptedFailureReasonsForQueue FGameplayTagContainer
---@field InputBind ETouristGameplayAbilityInputBind::Type
UGameplayAbility_Tourist = {}



---@class UGameplayAbility_Vault : UGameplayAbility_Tourist
UGameplayAbility_Vault = {}

---@param bInterrupted boolean
function UGameplayAbility_Vault:HandleVaultStopped(bInterrupted) end


---@class UGameplayEffectExec_CancelAbilities : UGameplayEffectExec_Tourist
---@field AbilitiesToCancelWithTags FGameplayTagContainer
---@field AbilitiesToCancelWithoutTags FGameplayTagContainer
UGameplayEffectExec_CancelAbilities = {}



---@class UGameplayEffectExec_ClearVelocity : UGameplayEffectExec_Tourist
---@field ClearType EClearVelocityType
UGameplayEffectExec_ClearVelocity = {}



---@class UGameplayEffectExec_Kill : UGameplayEffectExec_Tourist
---@field KillType EKillType
UGameplayEffectExec_Kill = {}



---@class UGameplayEffectExec_Tourist : UGameplayEffectExecutionCalculation
UGameplayEffectExec_Tourist = {}


---@class UGenericReplicateObjectsComponent : UActorComponent
---@field InitialOnlyReplicatedList TArray<UObject>
---@field AlwaysReplicatedList TArray<UObject>
UGenericReplicateObjectsComponent = {}



---@class UGetActorInfo : UActorComponent
---@field Owner AActor
---@field Parent ASCEAutomationActor
UGetActorInfo = {}



---@class UGetActorsContaining : UActorComponent
---@field Owner AActor
---@field Parent ASCEAutomationActor
UGetActorsContaining = {}



---@class UGetCurrentRoomInfo : UActorComponent
---@field Owner AActor
---@field Parent ASCEAutomationActor
UGetCurrentRoomInfo = {}



---@class UGetGameState : UActorComponent
---@field Owner AActor
---@field Parent ASCEAutomationActor
UGetGameState = {}



---@class UGetPlayerInfo : UActorComponent
---@field Owner AActor
---@field Parent ASCEAutomationActor
UGetPlayerInfo = {}



---@class UGetSystemInfo : UActorComponent
---@field Owner AActor
---@field Parent ASCEAutomationActor
UGetSystemInfo = {}



---@class UGhostReplyNotificationWidget : UNotificationWidget
---@field UserName FString
UGhostReplyNotificationWidget = {}



---@class UGunBarrel : UGunComponent
---@field MuzzleFlashEffectName FName
---@field MuzzleFlashEffect TSubclassOf<AEffectContainer>
UGunBarrel = {}



---@class UGunClip : UGunComponent
---@field ReloadMinigameBegin float
---@field ReloadMinigameEnd float
---@field ReloadMinigameGracePeriod float
---@field ReloadMinigameOvercharge float
---@field ReloadMinigameUpgradesDuration float
---@field ReloadMinigameUpgradesName FText
---@field ReloadMinigameUpgrades FGunUpgrades
---@field ReloadMinigameState EReloadMinigameState
---@field FakeReloadTimer float
---@field ReloadMinigameSuccess TSubclassOf<AEffectContainer>
---@field ReloadMinigameFail TSubclassOf<AEffectContainer>
UGunClip = {}

function UGunClip:ServerMinigameSuccess() end
function UGunClip:ServerMinigameFail() end
---@param ReloadTime float
function UGunClip:OwnerReloadStarted(ReloadTime) end
function UGunClip:OwnerReloadDone() end
---@return boolean
function UGunClip:IsReloadMinigameInProgress() end
---@return boolean
function UGunClip:IsOvercharged() end
---@return float
function UGunClip:GetReloadMinigameGracePeriod() end
---@return float
function UGunClip:GetReloadMinigameEnd() end
---@return float
function UGunClip:GetReloadMinigameBegin() end


---@class UGunComponent : UActorComponent
---@field OwnerWeapon APlayerWeapon
---@field OwnerGun AModularGun
UGunComponent = {}

---@return boolean
function UGunComponent:CheckIfReadyToFire() end


---@class UGunFiringBehavior : UGunComponent
UGunFiringBehavior = {}


---@class UGunFiringRotModifier : UGunComponent
---@field bBeforeBarrel boolean
UGunFiringRotModifier = {}



---@class UGunRecoilPhysical : UGunComponent
---@field bUseRecoilPattern boolean
---@field RecoilPattern TArray<FVector2D>
---@field FixedVerticalRecoil float
---@field FixedHorizontalRecoilRange FVector2D
---@field ResistanceStrengthAcceleration FVector2D
---@field ResistanceStrengthAccelerationNoShoot FVector2D
---@field MaxRecoveryDistance float
---@field FocusAimMultiplier FVector2D
---@field AltFireMultiplier FVector2D
UGunRecoilPhysical = {}

---@param Gun AGunBase
function UGunRecoilPhysical:OnShotFired(Gun) end


---@class UGunRecoilSpring : UGunComponent
---@field RecoilSettings FSpringRecoilSettings
UGunRecoilSpring = {}

---@param Mult FVector2D
function UGunRecoilSpring:SetRecoilMultiplier(Mult) end
---@param Gun AGunBase
function UGunRecoilSpring:OnShotFired(Gun) end
---@return FVector2D
function UGunRecoilSpring:GetRecoilMultiplier() end


---@class UGunSlotUpgrade : UObject
---@field Description FText
---@field SlotType EGunUpgradeSlotType
---@field Upgrades FGunUpgrades
---@field MeleeWeaponUpgradeData FMeleeWeaponUpgradeData
UGunSlotUpgrade = {}



---@class UGunSlotUpgradeHelper : UObject
---@field Upgrades FGunUpgrades
UGunSlotUpgradeHelper = {}



---@class UHMQBTDecorator_BlackboardCmpBlackboard : UBTDecorator_BlackboardBase
---@field BlackboardKey2 FBlackboardKeySelector
---@field CachedDescription FString
---@field OperationType uint8
---@field NotifyObserver EBTBlackboardRestart::Type
UHMQBTDecorator_BlackboardCmpBlackboard = {}



---@class UHMQBTDecorator_BlackboardLoop : UBTDecorator
---@field NumLoopsKey FBlackboardKeySelector
---@field bInfiniteLoop boolean
---@field InfiniteLoopTimeoutTime float
UHMQBTDecorator_BlackboardLoop = {}



---@class UHMQBTTaskBlueprintBase : UBTTask_BlueprintBase
UHMQBTTaskBlueprintBase = {}

---@param OwnerController AAIController
---@param ControlledPawn APawn
---@param TaskResult EBTNodeResult::Type
function UHMQBTTaskBlueprintBase:ReceiveTaskFinishedAI(OwnerController, ControlledPawn, TaskResult) end
---@param OwnerActor AActor
---@param TaskResult EBTNodeResult::Type
function UHMQBTTaskBlueprintBase:ReceiveTaskFinished(OwnerActor, TaskResult) end
---@param bSuccess boolean
function UHMQBTTaskBlueprintBase:FinishExecuteOrAbort(bSuccess) end


---@class UHMQBTTaskCallBP : UBTTaskNode
---@field ActorOwner AActor
---@field Receiver AActor
---@field FloatVariables TMap<FName, float>
---@field IntVariables TMap<FName, int32>
---@field ObjectVariables TMap<FName, UObject>
---@field VectorVariables TMap<FName, FVector>
---@field ReciveFunction FName
---@field bOneShot boolean
---@field bOneShotForceSucceed boolean
---@field bCallPawn boolean
UHMQBTTaskCallBP = {}

---@param VarName FName
---@param value FVector
function UHMQBTTaskCallBP:SetVector(VarName, value) end
---@param VarName FName
---@param value UObject
function UHMQBTTaskCallBP:SetObject(VarName, value) end
---@param VarName FName
---@param value int32
function UHMQBTTaskCallBP:SetInt(VarName, value) end
---@param VarName FName
---@param value float
function UHMQBTTaskCallBP:SetFloat(VarName, value) end
---@return boolean
function UHMQBTTaskCallBP:IsTaskExecuting() end
---@return boolean
function UHMQBTTaskCallBP:IsTaskAborting() end
---@param VarName FName
---@return FVector
function UHMQBTTaskCallBP:GetVector(VarName) end
---@param VarName FName
---@return UObject
function UHMQBTTaskCallBP:GetObject(VarName) end
---@param VarName FName
---@return int32
function UHMQBTTaskCallBP:GetInt(VarName) end
---@param VarName FName
---@return float
function UHMQBTTaskCallBP:GetFloat(VarName) end
---@return float
function UHMQBTTaskCallBP:GetDeltaSeconds() end
---@param bSuccess boolean
function UHMQBTTaskCallBP:FinishExecuteOrAbort(bSuccess) end


---@class UHMQHyperLinkRichTextBlockDecorator : URichTextBlockDecorator
---@field ButtonStyle FButtonStyle
UHMQHyperLinkRichTextBlockDecorator = {}



---@class UHMQTweakableBlueprintLibrary : UBlueprintFunctionLibrary
UHMQTweakableBlueprintLibrary = {}

---@param TweakableName FName
---@param NewValue FVector4
---@param OutState EHMQTweakableBPState
---@return FVector4
function UHMQTweakableBlueprintLibrary:SetTweakableValueVector4(TweakableName, NewValue, OutState) end
---@param TweakableName FName
---@param NewValue FVector2D
---@param OutState EHMQTweakableBPState
---@return FVector2D
function UHMQTweakableBlueprintLibrary:SetTweakableValueVector2D(TweakableName, NewValue, OutState) end
---@param TweakableName FName
---@param NewValue FVector
---@param OutState EHMQTweakableBPState
---@return FVector
function UHMQTweakableBlueprintLibrary:SetTweakableValueVector(TweakableName, NewValue, OutState) end
---@param TweakableName FName
---@param NewValue FLinearColor
---@param OutState EHMQTweakableBPState
---@return FLinearColor
function UHMQTweakableBlueprintLibrary:SetTweakableValueLinearColor(TweakableName, NewValue, OutState) end
---@param TweakableName FName
---@param NewValue FIntVector
---@param OutState EHMQTweakableBPState
---@return FIntVector
function UHMQTweakableBlueprintLibrary:SetTweakableValueIntVector(TweakableName, NewValue, OutState) end
---@param TweakableName FName
---@param NewValue FIntPoint
---@param OutState EHMQTweakableBPState
---@return FIntPoint
function UHMQTweakableBlueprintLibrary:SetTweakableValueIntPoint(TweakableName, NewValue, OutState) end
---@param TweakableName FName
---@param NewValue int32
---@param OutState EHMQTweakableBPState
---@return int32
function UHMQTweakableBlueprintLibrary:SetTweakableValueInt(TweakableName, NewValue, OutState) end
---@param TweakableName FName
---@param NewValue float
---@param OutState EHMQTweakableBPState
---@return float
function UHMQTweakableBlueprintLibrary:SetTweakableValueFloat(TweakableName, NewValue, OutState) end
---@param TweakableName FName
---@param NewValue boolean
---@param OutState EHMQTweakableBPState
---@return boolean
function UHMQTweakableBlueprintLibrary:SetTweakableValueBool(TweakableName, NewValue, OutState) end
---@param TweakableName FName
---@param DefaultValue FVector4
---@param OutState EHMQTweakableBPState
---@return FVector4
function UHMQTweakableBlueprintLibrary:GetTweakableValueVector4(TweakableName, DefaultValue, OutState) end
---@param TweakableName FName
---@param DefaultValue FVector2D
---@param OutState EHMQTweakableBPState
---@return FVector2D
function UHMQTweakableBlueprintLibrary:GetTweakableValueVector2D(TweakableName, DefaultValue, OutState) end
---@param TweakableName FName
---@param DefaultValue FVector
---@param OutState EHMQTweakableBPState
---@return FVector
function UHMQTweakableBlueprintLibrary:GetTweakableValueVector(TweakableName, DefaultValue, OutState) end
---@param TweakableName FName
---@param DefaultValue FLinearColor
---@param OutState EHMQTweakableBPState
---@return FLinearColor
function UHMQTweakableBlueprintLibrary:GetTweakableValueLinearColor(TweakableName, DefaultValue, OutState) end
---@param TweakableName FName
---@param DefaultValue FIntVector
---@param OutState EHMQTweakableBPState
---@return FIntVector
function UHMQTweakableBlueprintLibrary:GetTweakableValueIntVector(TweakableName, DefaultValue, OutState) end
---@param TweakableName FName
---@param DefaultValue FIntPoint
---@param OutState EHMQTweakableBPState
---@return FIntPoint
function UHMQTweakableBlueprintLibrary:GetTweakableValueIntPoint(TweakableName, DefaultValue, OutState) end
---@param TweakableName FName
---@param DefaultValue int32
---@param OutState EHMQTweakableBPState
---@return int32
function UHMQTweakableBlueprintLibrary:GetTweakableValueInt(TweakableName, DefaultValue, OutState) end
---@param TweakableName FName
---@param DefaultValue float
---@param OutState EHMQTweakableBPState
---@return float
function UHMQTweakableBlueprintLibrary:GetTweakableValueFloat(TweakableName, DefaultValue, OutState) end
---@param TweakableName FName
---@param DefaultValue boolean
---@param OutState EHMQTweakableBPState
---@return boolean
function UHMQTweakableBlueprintLibrary:GetTweakableValueBool(TweakableName, DefaultValue, OutState) end


---@class UHUDDetailsComponent : UHMQActorComponent
---@field Details FHUDDetailsData
---@field OnDetailsChanged FHUDDetailsComponentOnDetailsChanged
UHUDDetailsComponent = {}

---@param NewTitle FText
function UHUDDetailsComponent:SetTitle(NewTitle) end
---@param NewPrompt FText
function UHUDDetailsComponent:SetPromptSecondary(NewPrompt) end
---@param NewPrompt FText
function UHUDDetailsComponent:SetPrompt(NewPrompt) end
---@param NewDetails FHUDDetailsData
function UHUDDetailsComponent:SetDetails(NewDetails) end
---@param NewDescription FText
function UHUDDetailsComponent:SetDescription(NewDescription) end
---@param bNewCanInteractSecondary boolean
function UHUDDetailsComponent:SetCanInteractSecondary(bNewCanInteractSecondary) end
---@param bNewCanInteract boolean
function UHUDDetailsComponent:SetCanInteract(bNewCanInteract) end


---@class UHUDLabel : UHMQSceneComponent
---@field bTargetVisibilityCheck boolean
---@field bOccludedVisibilityCheck boolean
---@field bAvoidPlayer boolean
---@field bUseHorizontalOffset boolean
---@field bStaticPositionAlwaysVisible boolean
---@field bConnectToInteractable boolean
---@field AnimatedContainerWidgetClass TSubclassOf<UAnimatedLabelContainerWidget>
---@field LabelWidgetClass TSubclassOf<UHUDLabelWidget>
---@field HudReference ATouristHUD
---@field TimeDilationComponent UTimeDilationComponent
---@field CachedPlayer APlayerCharacter
---@field TargetObject AActor
---@field Widget UAnimatedLabelContainerWidget
---@field ConnectorLine UConnectorLine
UHUDLabel = {}

function UHUDLabel:UpdateWidget() end
---@param InTargetObject AActor
function UHUDLabel:SetTargetObject(InTargetObject) end
---@param InLabelWidgetClass TSubclassOf<UHUDLabelWidget>
function UHUDLabel:SetLabelWidgetClass(InLabelWidgetClass) end
---@param bEnabled boolean
function UHUDLabel:SetLabelVisibility(bEnabled) end
---@param InAnimatedContainerWidgetClass TSubclassOf<UAnimatedLabelContainerWidget>
function UHUDLabel:SetAnimatedContainerWidgetClass(InAnimatedContainerWidgetClass) end
---@param DeltaTime float
---@return boolean
function UHUDLabel:LabelTick(DeltaTime) end
---@param InteractingController ATouristPlayerController
function UHUDLabel:HandleLoseFocus(InteractingController) end
---@param DetailsComp UHUDDetailsComponent
function UHUDLabel:HandleHUDDetailsChanged(DetailsComp) end
---@param InteractingController ATouristPlayerController
function UHUDLabel:HandleGainFocus(InteractingController) end
---@return ATouristHUD
function UHUDLabel:GetTouristHUD() end
---@return AActor
function UHUDLabel:GetTargetObject() end
---@return TSubclassOf<UHUDLabelWidget>
function UHUDLabel:GetLabelWidgetClass() end
---@return UHUDLabelWidget
function UHUDLabel:GetContentWidget() end
---@return UAnimatedLabelContainerWidget
function UHUDLabel:GetContainerWidget() end
---@return TSubclassOf<UAnimatedLabelContainerWidget>
function UHUDLabel:GetAnimatedContainerWidgetClass() end


---@class UHUDLabelWidget : UTouristWidgetBase
---@field CurrentPrompt UWidget
---@field TargetActor AActor
---@field PlrCharacter APlayerCharacter
UHUDLabelWidget = {}

---@param bEnable boolean
function UHUDLabelWidget:SetPromptVisibility(bEnable) end
---@param Text FText
function UHUDLabelWidget:SetContainerHeadingText(Text) end
---@param LinearColor FLinearColor
function UHUDLabelWidget:SetContainerBorderColor(LinearColor) end
function UHUDLabelWidget:ReceiveUpdateColors() end
---@param Details FHUDDetailsData
function UHUDLabelWidget:ReceiveSetupLabel(Details) end
---@param TargetObject AActor
---@param LabelOwner AActor
---@param PlayerCharacter APlayerCharacter
function UHUDLabelWidget:ReceiveSetTargetObject(TargetObject, LabelOwner, PlayerCharacter) end
---@return boolean
function UHUDLabelWidget:HasStaticPosition() end
---@return AActor
function UHUDLabelWidget:GetTargetActor() end
---@param Position FVector2D
---@param ScreenSize FVector2D
---@return FVector2D
function UHUDLabelWidget:GetPositionOverride(Position, ScreenSize) end
---@return APlayerCharacter
function UHUDLabelWidget:GetPlayerCharacter() end
---@param Margin FMargin
function UHUDLabelWidget:GetMarginOverride(Margin) end
---@return FVector2D
function UHUDLabelWidget:GetLabelDesiredSize() end
---@return UAnimatedLabelContainerWidget
function UHUDLabelWidget:GetContainerWidget() end
---@param bCursed boolean
function UHUDLabelWidget:ApplyCursedMode(bCursed) end


---@class UHazardBehaviourComponentBase : UActorComponent
---@field bOverrideTickIntervalOption boolean
---@field OverrideTickInterval float
UHazardBehaviourComponentBase = {}

---@param bNewDisabledState boolean
function UHazardBehaviourComponentBase:OnOwnerDisabledStateChanged(bNewDisabledState) end
---@param bDisable boolean
function UHazardBehaviourComponentBase:DisableBehavior(bDisable) end


---@class UHazardPulseActivationBehaviour : UHazardBehaviourComponentBase
---@field PulseSyncMode EPulseSyncMode
---@field PulsePhaseDirection EPulsePhaseDirection
---@field PulseInterval float
---@field PulseActiveLength float
---@field PulseInitialDelay float
---@field InitialDelay float
---@field CurrentPhasePosition float
UHazardPulseActivationBehaviour = {}

---@param bNewDisabledState boolean
function UHazardPulseActivationBehaviour:OnDisabledStateChanged(bNewDisabledState) end


---@class UHazardWeaponComponent : UHMQActorComponent
---@field Weapon AGunBase
---@field OnRepWeapon FHazardWeaponComponentOnRepWeapon
---@field bInstantiateWeaponOnBeginPlay boolean
---@field WeaponClass TSubclassOf<AGunBase>
UHazardWeaponComponent = {}

function UHazardWeaponComponent:StopFiring() end
function UHazardWeaponComponent:StartFiring() end
---@param Rotation FRotator
function UHazardWeaponComponent:SetWeaponRotation(Rotation) end
---@param Location FVector
function UHazardWeaponComponent:SetWeaponLocation(Location) end
---@param NewWeapon TSubclassOf<AGunBase>
function UHazardWeaponComponent:SetWeapon(NewWeapon) end
function UHazardWeaponComponent:OnRep_Weapon() end
function UHazardWeaponComponent:InstantiateWeapon() end
---@param Component USceneComponent
---@param SocketName FName
function UHazardWeaponComponent:AttachToComponent(Component, SocketName) end


---@class UHealthComponent : UHMQActorComponent
---@field OnDamageTaken FHealthComponentOnDamageTaken
---@field OnVisualDamageTaken FHealthComponentOnVisualDamageTaken
---@field OnAnyHit FHealthComponentOnAnyHit
---@field OnDeath FHealthComponentOnDeath
---@field OnTryRevive FHealthComponentOnTryRevive
---@field OnHealthChanged FHealthComponentOnHealthChanged
---@field OnMaxHealthChanged FHealthComponentOnMaxHealthChanged
---@field OnLowHealthModeChanged FHealthComponentOnLowHealthModeChanged
---@field OnCriticalHealthModeChanged FHealthComponentOnCriticalHealthModeChanged
---@field OnHitReactionEvent FHealthComponentOnHitReactionEvent
---@field OnStunStateChanged FHealthComponentOnStunStateChanged
---@field OnStaggerApplied FHealthComponentOnStaggerApplied
---@field OnHealed FHealthComponentOnHealed
---@field OnRevive FHealthComponentOnRevive
---@field OnDamageAbsorbed FHealthComponentOnDamageAbsorbed
---@field OnInvulnerabilityStarted FHealthComponentOnInvulnerabilityStarted
---@field bIntegerHealth boolean
---@field bQueueHitReactions boolean
---@field MinimumMaxHealth float
---@field MaximumMaxHealth float
---@field DamageAbsorptionInvulnerabilityTime float
---@field AcceptedDamageTarget uint8
---@field bShowAsHostileThreat boolean
---@field bApplyMeleeStunDamageAsFixedPercent boolean
---@field MeleeStunDamageFixedPercent float
---@field bAllowedToUseClientSim boolean
---@field OnVisualHealthChanged FHealthComponentOnVisualHealthChanged
---@field bIsAlive boolean
---@field health float
---@field MaxHealth float
---@field ClientSimHealth float
---@field AcceptedDamageTypes TArray<TSubclassOf<UTouristDamageType>>
---@field DamageTypeMultipliers TMap<TSubclassOf<UTouristDamageType>, float>
---@field AdjustedMaxHealth float
---@field CriticalHealthThreshold float
---@field LowHealthThreshold float
---@field MaxLowHealthDuration float
---@field bHasLastChance boolean
---@field LowHealthTimer float
---@field bIsLowHealthActive boolean
---@field bIsCriticalHealthActive boolean
---@field bCachedShouldDieFromNextDamage boolean
---@field bCachedActiveDamageAbsorbers boolean
---@field bGodMode boolean
---@field bDemigodMode boolean
---@field bDuoDemigodMode boolean
---@field bDidTakeDamage boolean
---@field InvulnerabilityRequests int32
---@field ClientInvulnerabilityRequests int32
---@field InvulnerabilityTime float
---@field InvulnerabilityTimeEventId int32
---@field CachedOwnerCharacter ATouristCharacter
---@field OwnerVulnerableComponents TSet<UPrimitiveComponent>
---@field CachedDamageMultiplierComponent UDamageMultiplierManagerComponent
---@field HitReactionEvents TArray<FHitReactionEvent>
---@field MaxHitReactionEventTime float
---@field LastHitTime float
---@field DamageModifierPercent int32
---@field bCanBeStunned boolean
---@field StunSettings FCharacterStunSettings
---@field SoftDamageCapSettings FSoftDamageCapSettings
---@field AdditionalSoftDamageCapSettings TArray<FSoftDamageCapSettings>
---@field StunBlockingObjects TSet<UObject>
---@field StunDelayingObjects TSet<UObject>
---@field StunStatus FCharacterStunStatus
---@field ReplicatedStunState ECharacterStunState
---@field StunProgress float
---@field LastNonBlockingHitReactionTime float
---@field LastDamageDirection FVector
---@field ReplaceThisImpactType EDamageImpactType
---@field TargetImpactType EDamageImpactType
---@field ImpactImmunityPropability float
---@field SoftCappedDamageSources TArray<FSoftDamageCapDamageSourceEntry>
---@field bShouldSoftCapCountUndefinedDamageSources boolean
---@field bCanTriggerMetaModifierEffectsWhenHit boolean
---@field bShowImpactTypeReplaceSettings boolean
---@field AcceptedDamageTypeClasses TArray<UClass>
---@field DamageTypeMultiplierClasses TMap<UClass, float>
---@field RealtimeAcceptedDamageTypeClasses TArray<UClass>
---@field QueuedHitReactions TArray<FHitReactionEvent>
---@field MetaModifierConnectionComponent UMetaModifierConnectionComponent
---@field bDebugGodMode boolean
---@field bDebugDemigodMode boolean
---@field bDebugDuoDemigodMode boolean
UHealthComponent = {}

---@param DeltaTime float
---@return boolean
function UHealthComponent:UpdateStunState(DeltaTime) end
---@param DamageEvent FTouristDamageEvent
---@param bWasDelayed boolean
function UHealthComponent:TriggerStaggerAnimRequest(DamageEvent, bWasDelayed) end
---@param bIgnoreStunImmunity boolean
---@param bResetStunIfAlreadyStunned boolean
function UHealthComponent:TriggerImmediateStun(bIgnoreStunImmunity, bResetStunIfAlreadyStunned) end
---@return boolean
function UHealthComponent:ShouldShowAsHostileThreat() end
---@return boolean
function UHealthComponent:ShouldDelayStaggerAnim() end
---@param NewState ECharacterStunState
function UHealthComponent:SetStunState(NewState) end
---@param InSoftCappedDamageSources TArray<FSoftDamageCapDamageSourceEntry>
function UHealthComponent:SetSoftCappedDamageSources(InSoftCappedDamageSources) end
---@param NewMaxHealth float
function UHealthComponent:SetMaxHealth(NewMaxHealth) end
---@param Seconds float
---@param EventID int32
function UHealthComponent:SetInvulnerabilityTime(Seconds, EventID) end
---@param ToBeReplaced EDamageImpactType
---@param ReplaceWith EDamageImpactType
function UHealthComponent:SetImpactTypeReplacement(ToBeReplaced, ReplaceWith) end
---@param DamageType TSubclassOf<UTouristDamageType>
---@param Multiplier float
function UHealthComponent:SetDamageTypeMultiplier(DamageType, Multiplier) end
---@param amount float
---@param bForce boolean
---@param bAllowRevive boolean
---@param HealType EHealType
function UHealthComponent:ServerApplyHeal(amount, bForce, bAllowRevive, HealType) end
---@param amount float
---@param DamageType TSubclassOf<UTouristDamageType>
function UHealthComponent:ServerApplyDrain(amount, DamageType) end
---@param DamageEvent FTouristDamageEvent
function UHealthComponent:ServerApplyDamage(DamageEvent) end
function UHealthComponent:ResetSoftDamageCapTracking() end
function UHealthComponent:ResetMaxHealth() end
---@param HealthMultiplier float
function UHealthComponent:RescaleMaxHealth(HealthMultiplier) end
function UHealthComponent:RequestInvulnerabilityEnable() end
function UHealthComponent:RequestInvulnerabilityDisable() end
---@param Object UObject
function UHealthComponent:RemoveStunDelayingObject(Object) end
---@param Object UObject
function UHealthComponent:RemoveStunBlockingObject(Object) end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function UHealthComponent:OnSerializeState(Serializer) end
function UHealthComponent:OnRep_StunState() end
function UHealthComponent:OnRep_MaxHealth() end
function UHealthComponent:OnRep_IsAlive() end
---@param OldValue float
function UHealthComponent:OnRep_InvulnerabilityTime(OldValue) end
function UHealthComponent:OnRep_Health() end
function UHealthComponent:OnRep_AdjustedMaxHealth() end
---@param HealedAmount float
---@param HealType EHealType
---@param bRevived boolean
function UHealthComponent:MulticastHealed(HealedAmount, HealType, bRevived) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UHealthComponent:MulticastDeath(DamagedActor, DamageEvent) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
---@param NewHealth float
function UHealthComponent:MulticastDamageTaken(DamagedActor, DamageEvent, NewHealth) end
---@param HitReactionEvent FHitReactionEvent
function UHealthComponent:MulticastAddHitReactionEvent(HitReactionEvent) end
---@param amount float
function UHealthComponent:ModifyMaxHealth(amount) end
---@param Modification float
function UHealthComponent:ModifyHealth(Modification) end
---@param MetaModConnectionComp UMetaModifierConnectionComponent
function UHealthComponent:MetaModifiersChanged(MetaModConnectionComp) end
---@return boolean
function UHealthComponent:IsUsingClientSim() end
---@return boolean
function UHealthComponent:IsTakingDamageOverTime() end
---@return boolean
function UHealthComponent:IsMaxHealthAtMaximum() end
---@return boolean
function UHealthComponent:IsLowHealth() end
---@param EventID int32
---@return boolean
function UHealthComponent:IsInvulnerable(EventID) end
---@return boolean
function UHealthComponent:IsImmortal() end
---@return boolean
function UHealthComponent:IsFullHealth() end
---@return boolean
function UHealthComponent:IsCriticalHealth() end
---@param amount float
---@param bForce boolean
---@param bAllowRevive boolean
---@param HealType EHealType
function UHealthComponent:Heal(amount, bForce, bAllowRevive, HealType) end
function UHealthComponent:HandleRevive() end
---@return float
function UHealthComponent:GetVisualHealthPercent() end
---@return ECharacterStunState
function UHealthComponent:GetStunState() end
---@param InInterval float
---@param bOnlyIfApplyCapIsTrue boolean
---@param Attacker APlayerCharacter
---@return float
function UHealthComponent:GetRecentDamage(InInterval, bOnlyIfApplyCapIsTrue, Attacker) end
---@return float
function UHealthComponent:GetRawMaxHealth() end
---@return float
function UHealthComponent:GetMaxHealth() end
---@return float
function UHealthComponent:GetLastHitTime() end
---@return TArray<FHitReactionEvent>
function UHealthComponent:GetHitReactionEvents() end
---@return float
function UHealthComponent:GetHealthPercent() end
---@return float
function UHealthComponent:GetHealth() end
---@return float
function UHealthComponent:GetHealMultiplier() end
---@return float
function UHealthComponent:GetDefaultMaxHealth() end
---@return int32
function UHealthComponent:GetDamageModifier() end
---@param amount float
---@param DamageType TSubclassOf<UTouristDamageType>
function UHealthComponent:Drain(amount, DamageType) end
function UHealthComponent:DisableStunningAndRemoveStunBar() end
function UHealthComponent:Die() end
---@param NewGodMode boolean
function UHealthComponent:ChangeGodMode(NewGodMode) end
---@param NewDemigodMode boolean
function UHealthComponent:ChangeDuoDemigodMode(NewDemigodMode) end
---@param NewDemigodMode boolean
function UHealthComponent:ChangeDemigodMode(NewDemigodMode) end
---@return boolean
function UHealthComponent:CanTriggerMetaModifierEffectsWhenHit() end
---@param InDamageEvent FTouristDamageEvent
function UHealthComponent:ApplyStunDamage(InDamageEvent) end
---@param HealthSettings FEnemyHealthSettings
---@param bAllowOverwrite boolean
function UHealthComponent:ApplyHealthSettings(HealthSettings, bAllowOverwrite) end
---@param Object UObject
function UHealthComponent:AddStunDelayingObject(Object) end
---@param Object UObject
function UHealthComponent:AddStunBlockingObject(Object) end
---@param HitReactionEvent FTouristDamageEvent
function UHealthComponent:AddHitReactionEvent(HitReactionEvent) end
---@param Percent int32
function UHealthComponent:AddDamageModifier(Percent) end


---@class UHideableAnimInstance : UAnimInstance
---@field WantsToBeShown boolean
---@field BeingKilled boolean
UHideableAnimInstance = {}



---@class UHitReactionEffectSpawnerComponent : UActorComponent
---@field EffectContainerClass TSubclassOf<AEffectContainer>
---@field PerEnemyMultipliers TMap<FName, float>
---@field AudioEvents TMap<FName, UAkAudioEvent>
---@field bIsAttached boolean
---@field bSpawnEffectOnNonDamagingHits boolean
---@field OwnerAsCharacter ACharacter
---@field HealthComp UHealthComponent
UHitReactionEffectSpawnerComponent = {}

---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UHitReactionEffectSpawnerComponent:HandleOwnerDamageTaken(DamagedActor, DamageEvent) end


---@class UHitboxManagerComponent : UActorComponent
---@field HitboxGroups TArray<FHitboxGroup>
---@field Attacks TArray<FHitboxAttack>
---@field HitboxGroupLookup TMap<FName, FHitboxGroup>
---@field AttackLookup TMap<FName, FHitboxAttack>
---@field PendingNewAttackRequests TArray<FAttackRequestInstance>
---@field ShapeAdditionalData TMap<UShapeComponent, FHitBoxShapeData>
---@field bIsCriticalDashAvailable boolean
---@field OwnerAudioComponent UAkComponent
---@field bDidLastAttackDealDamage boolean
---@field AttackRequests TArray<FAttackRequestInstance>
---@field OnHitboxDamage FHitboxManagerComponentOnHitboxDamage
UHitboxManagerComponent = {}

---@param DeltaTime float
function UHitboxManagerComponent:TickHitboxRequests(DeltaTime) end
---@param AttackName FName
function UHitboxManagerComponent:RemoveImpendingAttack(AttackName) end
---@param Source UObject
---@param AttackName FName
---@param TiedAnimation UAnimMontage
function UHitboxManagerComponent:RemoveAttackRequests(Source, AttackName, TiedAnimation) end
---@return boolean
function UHitboxManagerComponent:IsCriticalDashAvailable() end
---@param AttackName FName
---@return boolean
function UHitboxManagerComponent:IsAttackRequested(AttackName) end
---@param DeltaTime float
---@param Request FAttackRequestInstance
function UHitboxManagerComponent:HandleCollisionForRequest(DeltaTime, Request) end
---@param AttackName FName
function UHitboxManagerComponent:DoAttackInstantly(AttackName) end
---@return boolean
function UHitboxManagerComponent:CheckIfCriticalDashIsAvailable() end
---@param HitboxGroup FHitboxAttack
---@return boolean
function UHitboxManagerComponent:CanTriggerCriticalDashForAttack(HitboxGroup) end
---@param Settings FEnemyAttackSettings
function UHitboxManagerComponent:ApplyAttackSettings(Settings) end
---@param AttackName FName
function UHitboxManagerComponent:AddImpendingAttack(AttackName) end
---@param AttackName FName
---@param Source UObject
---@param TiedAnimation UAnimMontage
function UHitboxManagerComponent:AddAttackRequest(AttackName, Source, TiedAnimation) end


---@class UHookShotAbilityComponent : UActorComponent
---@field OnHookShotStart FHookShotAbilityComponentOnHookShotStart
---@field OnHookShotStop FHookShotAbilityComponentOnHookShotStop
---@field BasicHookShotSettings FHookShotAbilitySettings
---@field UpgradedHookShotSettings FHookShotAbilitySettings
---@field NGPComponentTagName FName
---@field NGPStaticMeshAsset UStaticMesh
---@field OwnerPlayer APlayerCharacter
---@field HookShotParticleComponent UNGParticleComponent
---@field HookShotLevel int32
---@field bWantsToEndHookshot boolean
---@field bIsHookShotting boolean
---@field HookShotPhase float
---@field ActiveHookShotTargetComponent UHookShotTargetComponent
---@field HookShotTime float
---@field bIsHookShotStartPending boolean
---@field HookShotEndLocation FVector
---@field HookShotInit FVector
---@field HookShotSpeed float
---@field HookShotDir FVector
---@field HookShotDist float
---@field HookShotMeshOffsetSize FVector
---@field HookShotMeshOffset FVector
---@field HookShotDurationApprox float
UHookShotAbilityComponent = {}

---@param HookShotTargetComponent UHookShotTargetComponent
function UHookShotAbilityComponent:ServerBeginHookShot(HookShotTargetComponent) end
function UHookShotAbilityComponent:OnRep_bIsHookShotting() end
---@param HookShotTargetComponent UHookShotTargetComponent
function UHookShotAbilityComponent:MulticastBeginHookShot(HookShotTargetComponent) end
---@return boolean
function UHookShotAbilityComponent:IsHookShotting() end
---@return float
function UHookShotAbilityComponent:GetHookShotPhase() end
---@return int32
function UHookShotAbilityComponent:GetHookShotLevel() end
---@return UHookShotTargetComponent
function UHookShotAbilityComponent:GetActiveHookShotTargetComponent() end
---@param bKeepVelocity boolean
function UHookShotAbilityComponent:EndHookShot(bKeepVelocity) end
---@return boolean
function UHookShotAbilityComponent:CanHookShot() end


---@class UHookShotTargetComponent : UInteractableSphereComponent
---@field OnHookShot FHookShotTargetComponentOnHookShot
---@field OnHookShotEnd FHookShotTargetComponentOnHookShotEnd
---@field ObstructionTraceChannel ECollisionChannel
---@field bIsHookShotAllowed boolean
---@field RequiredHookShotLevel int32
---@field bKeepVelocityAtEnd boolean
---@field MaxDistance float
---@field MaxAngleHookShot float
---@field MaxAngleFromFront float
---@field bAllowBetweenRooms boolean
---@field HookShotWidgetClass TSubclassOf<UHookShotWidget>
---@field OrientationArrowComponent UArrowComponent
---@field LandingArrowComponent UArrowComponent
---@field HookShotAdornmentWidget UHookShotWidget
UHookShotTargetComponent = {}

---@param IsAllowed boolean
function UHookShotTargetComponent:SetHookShotAllowed(IsAllowed) end
---@param OrientationArrow UArrowComponent
---@param LandingArrow UArrowComponent
function UHookShotTargetComponent:SetArrowComponents(OrientationArrow, LandingArrow) end
---@return boolean
function UHookShotTargetComponent:IsVelocityKeptAtEnd() end
---@return boolean
function UHookShotTargetComponent:IsHookShotAllowed() end
---@return float
function UHookShotTargetComponent:GetMaxAngleFromFront() end
---@return FVector
function UHookShotTargetComponent:GetLandingLocation() end


---@class UHookShotWidget : UActorAdornmentWidget
---@field HookShotTarget UHookShotTargetComponent
---@field InRange int32
UHookShotWidget = {}

function UHookShotWidget:OnInteractableOutRange() end
function UHookShotWidget:OnInteractableLoseFocus() end
function UHookShotWidget:OnInteractableInRange() end
function UHookShotWidget:OnInteractableGainFocus() end


---@class UHouseManager : UActorComponent
---@field OnCountdownExpired FHouseManagerOnCountdownExpired
---@field OnCountdownActiveChanged FHouseManagerOnCountdownActiveChanged
UHouseManager = {}

---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UHouseManager:OnBiomeStateChanged(Biome, NewBiomeState) end
function UHouseManager:LeftHouse() end
---@return boolean
function UHouseManager:IsInHouse() end
---@return boolean
function UHouseManager:IsCountdownActive() end
---@param WorldContextObject UObject
---@return UHouseManager
function UHouseManager:GetHouseManager(WorldContextObject) end
---@return float
function UHouseManager:GetCountdownTimeRemaining() end
function UHouseManager:EnterHouse() end
---@return boolean
function UHouseManager:CanExitHouse() end
---@return boolean
function UHouseManager:CanEnterHouse() end
function UHouseManager:CancelLeaveCountdown() end
---@param Delay float
---@param duration float
function UHouseManager:BeginLeaveCountdown(Delay, duration) end


---@class UInputTriggerSettingsDataAsset : UDataAsset
---@field TriggerSettings FInputTriggerSettings
UInputTriggerSettingsDataAsset = {}



---@class UInteractableComponent : USceneComponent
---@field OnInteract FInteractableComponentOnInteract
---@field OnSecondaryInteract FInteractableComponentOnSecondaryInteract
---@field OnInteractFailure FInteractableComponentOnInteractFailure
---@field OnSecondaryInteractFailure FInteractableComponentOnSecondaryInteractFailure
---@field OnBecomeInteractable FInteractableComponentOnBecomeInteractable
---@field OnBecomeUninteractable FInteractableComponentOnBecomeUninteractable
---@field OnBeginDelayedInteract FInteractableComponentOnBeginDelayedInteract
---@field OnEndDelayedInteract FInteractableComponentOnEndDelayedInteract
---@field OnReportDelayedInteractProgress FInteractableComponentOnReportDelayedInteractProgress
---@field OnWantsFocus FInteractableComponentOnWantsFocus
---@field OnGainFocus FInteractableComponentOnGainFocus
---@field OnLoseFocus FInteractableComponentOnLoseFocus
---@field OnClientGainFocus FInteractableComponentOnClientGainFocus
---@field OnClientLoseFocus FInteractableComponentOnClientLoseFocus
---@field OnGetInteractionDelay FInteractableComponentOnGetInteractionDelay
---@field OnGetInteractionDelayRequired FInteractableComponentOnGetInteractionDelayRequired
---@field OnEndAnalysing FInteractableComponentOnEndAnalysing
---@field OnGetInteractArgs FInteractableComponentOnGetInteractArgs
---@field OnInteractionStateChanged FInteractableComponentOnInteractionStateChanged
---@field OnTemporarilyDisabled FInteractableComponentOnTemporarilyDisabled
---@field OnTemporaryDisableCancelled FInteractableComponentOnTemporaryDisableCancelled
---@field OnCalcScore FInteractableComponentOnCalcScore
---@field InteractionBias float
---@field InteractionDelay float
---@field bInteractionDelayRequired boolean
---@field bInteractWhenJumping boolean
---@field bBothPlayersAliveRequired boolean
---@field bStartInteractionsEnabled boolean
---@field ActorsToIgnoreDuringFocus TArray<AActor>
---@field bSingleUsePerOverlap boolean
---@field bSendFocusChangesToServer boolean
---@field FirstPersonProperties FInteractableFirstPersonData
---@field ThirdPersonProperties FInteractableThirdPersonData
---@field bReplicatedInteractionEnabled boolean
---@field OverlapComponent UPrimitiveComponent
---@field FirstPersonInteractDistance float
---@field FirstPersonInteractRadius float
UInteractableComponent = {}

---@param bNewEnabled boolean
function UInteractableComponent:SetLocalInteractionsEnabled(bNewEnabled) end
---@param bInInteractionsEnabled boolean
function UInteractableComponent:Server_SetInteractionsEnabled(bInInteractionsEnabled) end
function UInteractableComponent:RequestTemporaryDisableCancel() end
function UInteractableComponent:RequestTemporaryDisable() end
function UInteractableComponent:RejectInteraction() end
function UInteractableComponent:OnRep_ReplicatedInteractionEnabled() end
---@return boolean
function UInteractableComponent:IsTotalInteractionsEnabled() end
---@return boolean
function UInteractableComponent:IsTemporaryDisabled() end
---@return boolean
function UInteractableComponent:IsLocalInteractionsEnabled() end
---@return boolean
function UInteractableComponent:IsInteractionsEnabled() end
---@param Args FInteractionArgs
---@param bConditional boolean
function UInteractableComponent:InjectInteractArgs(Args, bConditional) end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function UInteractableComponent:HandleSerializeState(Serializer) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function UInteractableComponent:HandleComponentEndOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function UInteractableComponent:HandleComponentBeginOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
---@param Score float
function UInteractableComponent:ApplyInteractScore(Score) end
---@param InActors TArray<AActor>
function UInteractableComponent:AddActorsToIgnoreDuringFocus(InActors) end


---@class UInteractableSphereComponent : USphereComponent
---@field OnInteract FInteractableSphereComponentOnInteract
---@field OnSecondaryInteract FInteractableSphereComponentOnSecondaryInteract
---@field OnInteractFailure FInteractableSphereComponentOnInteractFailure
---@field OnSecondaryInteractFailure FInteractableSphereComponentOnSecondaryInteractFailure
---@field OnBecomeInteractable FInteractableSphereComponentOnBecomeInteractable
---@field OnBecomeUninteractable FInteractableSphereComponentOnBecomeUninteractable
---@field OnBeginDelayedInteract FInteractableSphereComponentOnBeginDelayedInteract
---@field OnEndDelayedInteract FInteractableSphereComponentOnEndDelayedInteract
---@field OnReportDelayedInteractProgress FInteractableSphereComponentOnReportDelayedInteractProgress
---@field OnWantsFocus FInteractableSphereComponentOnWantsFocus
---@field OnGainFocus FInteractableSphereComponentOnGainFocus
---@field OnLoseFocus FInteractableSphereComponentOnLoseFocus
---@field OnClientGainFocus FInteractableSphereComponentOnClientGainFocus
---@field OnClientLoseFocus FInteractableSphereComponentOnClientLoseFocus
---@field OnGetInteractionDelay FInteractableSphereComponentOnGetInteractionDelay
---@field OnGetInteractionDelayRequired FInteractableSphereComponentOnGetInteractionDelayRequired
---@field OnEndAnalysing FInteractableSphereComponentOnEndAnalysing
---@field OnGetInteractArgs FInteractableSphereComponentOnGetInteractArgs
---@field OnInteractionStateChanged FInteractableSphereComponentOnInteractionStateChanged
---@field OnTemporarilyDisabled FInteractableSphereComponentOnTemporarilyDisabled
---@field OnTemporaryDisableCancelled FInteractableSphereComponentOnTemporaryDisableCancelled
---@field OnCalcScore FInteractableSphereComponentOnCalcScore
---@field InteractionBias float
---@field InteractionDelay float
---@field bInteractionDelayRequired boolean
---@field bInteractWhenJumping boolean
---@field bBothPlayersAliveRequired boolean
---@field FirstPersonProperties FInteractableFirstPersonData
---@field ThirdPersonProperties FInteractableThirdPersonData
---@field bStartInteractionsEnabled boolean
---@field bSingleUsePerOverlap boolean
---@field bSendFocusChangesToServer boolean
---@field bReplicatedInteractionEnabled boolean
---@field FirstPersonInteractDistance float
---@field FirstPersonInteractRadius float
UInteractableSphereComponent = {}

---@param bNewEnabled boolean
function UInteractableSphereComponent:SetLocalInteractionsEnabled(bNewEnabled) end
---@param bInInteractionsEnabled boolean
function UInteractableSphereComponent:Server_SetInteractionsEnabled(bInInteractionsEnabled) end
function UInteractableSphereComponent:RequestTemporaryDisableCancel() end
function UInteractableSphereComponent:RequestTemporaryDisable() end
function UInteractableSphereComponent:RejectInteraction() end
function UInteractableSphereComponent:OnRep_ReplicatedInteractionEnabled() end
---@return boolean
function UInteractableSphereComponent:IsTotalInteractionsEnabled() end
---@return boolean
function UInteractableSphereComponent:IsTemporaryDisabled() end
---@return boolean
function UInteractableSphereComponent:IsLocalInteractionsEnabled() end
---@return boolean
function UInteractableSphereComponent:IsInteractionsEnabled() end
---@param Args FInteractionArgs
---@param bConditional boolean
function UInteractableSphereComponent:InjectInteractArgs(Args, bConditional) end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function UInteractableSphereComponent:HandleSerializeState(Serializer) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function UInteractableSphereComponent:EventOnComponentEndOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function UInteractableSphereComponent:EventOnComponentBeginOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
---@param Score float
function UInteractableSphereComponent:ApplyInteractScore(Score) end


---@class UInteractionManagerComponent : UActorComponent
---@field DiscoveryRadius float
---@field OnBeginDiscovery FInteractionManagerComponentOnBeginDiscovery
---@field OnEndDiscovery FInteractionManagerComponentOnEndDiscovery
---@field OnSuccessfulDiscovery FInteractionManagerComponentOnSuccessfulDiscovery
---@field InteractSound UAkAudioEvent
---@field Interactables TArray<FInteractableForCharacter>
---@field SelectedInteractable UObject
---@field FocusedInteractable UObject
---@field CachedPC ATouristPlayerController
---@field DiscoverableDetector USphereComponent
---@field Discoverables TSet<UDiscoverableComponent>
---@field FocusDiscoverable UDiscoverableComponent
---@field DiscoverableCache TArray<UDiscoverableComponent>
---@field CurrentInteractMode EInteractMode
---@field SelectedInteractableOverride UObject
UInteractionManagerComponent = {}

---@param Interactable UObject
function UInteractionManagerComponent:UnregisterInteractable(Interactable) end
---@param Interactable UObject
function UInteractionManagerComponent:SetSelectedInteractableOverride(Interactable) end
---@param bNewEnabled boolean
function UInteractionManagerComponent:SetInteractionsEnabled(bNewEnabled) end
---@param bNewEnabled boolean
function UInteractionManagerComponent:SetCinematicInteractEnabled(bNewEnabled) end
---@param bBegin boolean
---@param Target AActor
---@param Mode EInteractMode
---@param Complete boolean
function UInteractionManagerComponent:ServerSendInteract(bBegin, Target, Mode, Complete) end
---@param Target AActor
function UInteractionManagerComponent:ServerLoseFocus(Target) end
---@param Target AActor
function UInteractionManagerComponent:ServerGainFocus(Target) end
---@param CollisionComponent UPrimitiveComponent
---@param Interactable UObject
function UInteractionManagerComponent:RegisterInteractable(CollisionComponent, Interactable) end
---@param hit FHitResult
---@param Velocity FVector
---@param bHardLand boolean
function UInteractionManagerComponent:PlayerLanded(hit, Velocity, bHardLand) end
---@return boolean
function UInteractionManagerComponent:IsSecondaryInteractInterceptingInput() end
---@return UObject
function UInteractionManagerComponent:GetFocusedInteractable() end
---@param Target AActor
function UInteractionManagerComponent:ClientInteractFailed(Target) end


---@class UInventory : UHMQInventoryComponent
---@field OnInventoryCursesFull FInventoryOnInventoryCursesFull
---@field OnInventoryItemConsume FInventoryOnInventoryItemConsume
---@field OnMoneyAmountChanged FInventoryOnMoneyAmountChanged
---@field OnKeyAmountChanged FInventoryOnKeyAmountChanged
---@field OnKeyUsed FInventoryOnKeyUsed
---@field OnHookShotEnabled FInventoryOnHookShotEnabled
---@field OnCurseLifted FInventoryOnCurseLifted
---@field OnArtefactRemoved FInventoryOnArtefactRemoved
---@field OnUnlockItemCollected FInventoryOnUnlockItemCollected
---@field OnUnlockItemApplied FInventoryOnUnlockItemApplied
---@field OnUnlockItemsRemoved FInventoryOnUnlockItemsRemoved
---@field OnXrayCollected FInventoryOnXrayCollected
---@field OnNoConsumeKey FInventoryOnNoConsumeKey
---@field OnNoConsumeConsumable FInventoryOnNoConsumeConsumable
---@field bLoaded boolean
---@field CachedOwnerPlayer APlayerCharacter
---@field Keys TArray<int32>
---@field SaveData FInventorySaveData
---@field SkillData FInventorySkillData
---@field CurseCountMax int32
---@field WorkMetaModifiers TArray<UMetaModifierComponent>
---@field DefaultUnlockedMetaModifiers TArray<FName>
---@field XRays TArray<TSubclassOf<ACollectibleBase>>
---@field MetaModifierOwnerComponent UMetaModifierOwnerComponent
---@field PendingUnlockItems TArray<FName>
UInventory = {}

---@param MetaModifierName FName
function UInventory:UnlockMetaModifier(MetaModifierName) end
---@param UnlockItemClass TSubclassOf<ACollectibleBase>
function UInventory:UnlockItem(UnlockItemClass) end
---@param amount int32
---@return boolean
function UInventory:TryRemoveMoney(amount) end
---@param MetaModifierName FName
---@param bUsed boolean
function UInventory:SetUsedMetaModifier(MetaModifierName, bUsed) end
---@param SkillId FName
---@param bNew boolean
function UInventory:SetNewSkillNode(SkillId, bNew) end
---@param MetaModifierName FName
---@param bNew boolean
function UInventory:SetNewMetaModifier(MetaModifierName, bNew) end
---@param ItemClass TSubclassOf<ACollectibleBase>
---@param bNew boolean
function UInventory:SetNewItem(ItemClass, bNew) end
---@param AbilityClass TSubclassOf<UGameplayAbility>
---@param AbilityLevel int32
function UInventory:ServerSaveAbility(AbilityClass, AbilityLevel) end
---@param XRayCollectible ACollectibleBase
function UInventory:ServerRemoveXRay(XRayCollectible) end
---@param Node FSkillNodeInfo
function UInventory:ServerModifySkillNode(Node) end
---@param KeyType EInventoryKeyType
---@param amount int32
function UInventory:ServerModifyKeys(KeyType, amount) end
---@param NewSaveData FInventorySaveData
function UInventory:ServerInitFromSaveData(NewSaveData) end
---@param KeyType EInventoryKeyType
---@param amount int32
function UInventory:ServerConsumeKeys(KeyType, amount) end
---@param ArtefactName FName
function UInventory:ServerCollectArtefact(ArtefactName) end
---@param KeyType EInventoryKeyType
---@param amount int32
function UInventory:ServerBankModifyKeys(KeyType, amount) end
---@param XRayCollectible ACollectibleBase
function UInventory:ServerAddXRay(XRayCollectible) end
---@param ItemCollectibleClass TSubclassOf<ACollectibleBase>
function UInventory:ServerAddPendingUnlockItem(ItemCollectibleClass) end
---@param MetaModifierName FName
function UInventory:Server_UnlockMetaModifier(MetaModifierName) end
---@param UnlockItemClass TSubclassOf<ACollectibleBase>
function UInventory:Server_UnlockItem(UnlockItemClass) end
---@param MetaModifierName FName
---@param bUsed boolean
function UInventory:Server_SetUsedMetaModifier(MetaModifierName, bUsed) end
---@param MetaModifierName FName
---@param bNew boolean
function UInventory:Server_SetNewMetaModifier(MetaModifierName, bNew) end
---@param ItemClass TSubclassOf<ACollectibleBase>
---@param bNew boolean
function UInventory:Server_SetNewItem(ItemClass, bNew) end
---@param CollectibleClass TSubclassOf<AActor>
---@param ItemClass TSubclassOf<AActor>
---@param ItemActor AActor
function UInventory:Server_CollectItem(CollectibleClass, ItemClass, ItemActor) end
function UInventory:Server_ClearPendingUnlockItems() end
---@param UnlockItemClass TSubclassOf<ACollectibleBase>
function UInventory:Server_ApplyPendingUnlockItem(UnlockItemClass) end
---@param AbilityClass TSubclassOf<UGameplayAbility>
---@param AbilityLevel int32
function UInventory:SaveAbility(AbilityClass, AbilityLevel) end
function UInventory:Reset() end
---@param amount int32
function UInventory:RemoveMoney(amount) end
function UInventory:OnRep_SkillData() end
function UInventory:OnRep_SetSaveData() end
function UInventory:OnRep_SetKeys() end
function UInventory:OnRep_PendingUnlockItems() end
---@param Node FSkillNodeInfo
function UInventory:ModifySkillNode(Node) end
---@param KeyType EInventoryKeyType
---@param amount int32
function UInventory:ModifyKeys(KeyType, amount) end
---@param MetaModifierName FName
---@return boolean
function UInventory:IsUsedMetaModifier(MetaModifierName) end
---@param SkillId FName
---@return boolean
function UInventory:IsSkillNodeUnlocked(SkillId) end
---@param SkillId FName
---@return boolean
function UInventory:IsSkillNodeSuperCharged(SkillId) end
---@param SkillId FName
---@return boolean
function UInventory:IsSkillNodeRandom(SkillId) end
---@param SkillId FName
---@param bIncludeSuperCharged boolean
---@return boolean
function UInventory:IsSkillNodeEquipped(SkillId, bIncludeSuperCharged) end
---@param SkillId FName
---@param bIncludeSuperCharged boolean
---@return boolean
function UInventory:IsSkillNodeDisabled(SkillId, bIncludeSuperCharged) end
---@param SkillId FName
---@return boolean
function UInventory:IsNewSkillNode(SkillId) end
---@param MetaModifierName FName
---@return boolean
function UInventory:IsNewMetaModifier(MetaModifierName) end
---@param ItemClass TSubclassOf<ACollectibleBase>
---@return boolean
function UInventory:IsNewItem(ItemClass) end
---@param MetaModifierName FName
---@return boolean
function UInventory:IsMetaModifierUnlocked(MetaModifierName) end
---@return boolean
function UInventory:IsInventoryLoaded() end
---@return boolean
function UInventory:IsCursed() end
---@return boolean
function UInventory:HasXRays() end
---@param ItemClass TSubclassOf<ACollectibleBase>
---@return boolean
function UInventory:HasUnlockedItem(ItemClass) end
---@param SkillId FName
---@return boolean
function UInventory:HasSkillNode(SkillId) end
---@return boolean
function UInventory:HasPendingUnlockItems() end
---@param UnlockItemClass TSubclassOf<ACollectibleBase>
---@return boolean
function UInventory:HasPendingUnlockItem(UnlockItemClass) end
---@param CodeName FName
---@return boolean
function UInventory:HasMetaModifier(CodeName) end
---@param AbilityLevel int32
---@return boolean
function UInventory:HasHookShotAbility(AbilityLevel) end
---@param amount int32
---@return boolean
function UInventory:HasEnoughMoney(amount) end
---@param KeyType EInventoryKeyType
---@param amount int32
---@return boolean
function UInventory:HasEnoughKeys(KeyType, amount) end
---@param ArtefactName FName
---@return boolean
function UInventory:HasArtefact(ArtefactName) end
---@param AbilityClass TSubclassOf<UGameplayAbility>
---@param AbilityLevel int32
---@return boolean
function UInventory:HasAbility(AbilityClass, AbilityLevel) end
---@param Character APlayerCharacter
function UInventory:HandleOwnerPossessionChanged(Character) end
function UInventory:HandleMultiplayerStatusChanged() end
---@param OwnerComp UMetaModifierOwnerComponent
---@param MetaModifierName FName
function UInventory:HandleMetaModifierRemoved(OwnerComp, MetaModifierName) end
---@param OwnerComp UMetaModifierOwnerComponent
---@param MetaModifierName FName
function UInventory:HandleMetaModifierAdded(OwnerComp, MetaModifierName) end
---@param OwnerComp UMetaModifierOwnerComponent
---@param MetaModifierName FName
function UInventory:HandleCanSpawnMetaModifier(OwnerComp, MetaModifierName) end
---@param Types TArray<EMetaModifierType>
---@return TArray<FName>
function UInventory:GetWeaponModifierCodeNames(Types) end
---@param OutUnlockedItems TArray<TSubclassOf<ACollectibleBase>>
function UInventory:GetUnlockedItems(OutUnlockedItems) end
---@param OutSkillNodes TArray<FSkillTreeNode>
---@param bLocked boolean
---@param bUnlocked boolean
---@param bEquipped boolean
---@param bUnequipped boolean
---@param bRandom boolean
---@param bNonRandom boolean
function UInventory:GetSkillNodes(OutSkillNodes, bLocked, bUnlocked, bEquipped, bUnequipped, bRandom, bNonRandom) end
---@param bLocked boolean
---@param bUnlocked boolean
---@param bEquipped boolean
---@param bUnequipped boolean
---@return int32
function UInventory:GetSkillNodeCount(bLocked, bUnlocked, bEquipped, bUnequipped) end
---@param SkillId FName
---@return TSubclassOf<ACollectibleBase>
function UInventory:GetSkillNodeCollectibleClass(SkillId) end
---@param Name FName
---@param OutSkillNode FSkillTreeNode
---@return boolean
function UInventory:GetSkillNodeByName(Name, OutSkillNode) end
---@param SkillId FName
---@param OutSkillNode FSkillTreeNode
---@return boolean
function UInventory:GetSkillNode(SkillId, OutSkillNode) end
---@param NodeName FName
---@return FSkillNodeInfo
function UInventory:GetSavedSkillTreeNode(NodeName) end
---@return TArray<FSkillNodeInfo>
function UInventory:GetSavedSkillTree() end
---@param CollectibleClass TSubclassOf<ACollectibleBase>
---@param OutCollectibleClasses TArray<TSubclassOf<ACollectibleBase>>
function UInventory:GetPendingUnlockItemsOfClass(CollectibleClass, OutCollectibleClasses) end
---@param OutPendingUnlockItems TArray<TSubclassOf<ACollectibleBase>>
function UInventory:GetPendingUnlockItems(OutPendingUnlockItems) end
---@param IgnoreClasses TSet<TSubclassOf<ACollectibleBase>>
---@return TSubclassOf<ACollectibleBase>
function UInventory:GetNextPendingUnlockItem(IgnoreClasses) end
---@return int32
function UInventory:GetMoney() end
---@param Type EMetaModifierType
---@return TArray<FName>
function UInventory:GetModifierCodeNames(Type) end
---@param OutMetaModifiers TArray<UMetaModifierBaseComponent>
function UInventory:GetMetaModifiers(OutMetaModifiers) end
---@param CodeName FName
---@return UMetaModifierBaseComponent
function UInventory:GetMetaModifier(CodeName) end
---@param KeyType EInventoryKeyType
---@return int32
function UInventory:GetKeyAmount(KeyType) end
---@param ArtefactName FName
---@return boolean
function UInventory:GetInventoryModifierTargetPlayer(ArtefactName) end
---@param OutMetaModifiers TArray<UMetaModifierBaseComponent>
function UInventory:GetCurses(OutMetaModifiers) end
---@param OutMetaModifiers TArray<UMetaModifierComponent>
function UInventory:GetCollectedCurses(OutMetaModifiers) end
---@return int32
function UInventory:GetCollectedCurseCount() end
---@return TArray<UMetaModifierComponent>
function UInventory:GetCollectedArtefacts() end
---@return TMap<FName, FChallengeModifierSpawnInfo>
function UInventory:GetChallengeModifierSpawnInfo() end
---@param KeyType EInventoryKeyType
---@return int32
function UInventory:GetBankKeyAmount(KeyType) end
function UInventory:DoImgui() end
---@param KeyType EInventoryKeyType
---@param amount int32
---@return boolean
function UInventory:ConsumeKeys(KeyType, amount) end
---@param ItemClass TSubclassOf<ACollectibleBase>
function UInventory:ClientNotifyXrayCollected(ItemClass) end
---@param ItemClassName FName
function UInventory:ClientNotifyUnlockItemCollected(ItemClassName) end
---@param ItemClass TSubclassOf<ACollectibleBase>
function UInventory:ClientNotifyUnlockItemApplied(ItemClass) end
function UInventory:ClearPendingUnlockItems() end
---@param Key EInventoryKeyType
function UInventory:BroadcastNoConsumeKey(Key) end
---@param Consumable UConsumableComponent
function UInventory:BroadcastNoConsumeConsumable(Consumable) end
---@param amount int32
function UInventory:BankWithdrawMoney(amount) end
---@param KeyType EInventoryKeyType
---@param amount int32
function UInventory:BankWithdrawKeys(KeyType, amount) end
---@param KeyType EInventoryKeyType
---@param amount int32
function UInventory:BankRemoveKeys(KeyType, amount) end
---@param KeyType EInventoryKeyType
---@param amount int32
function UInventory:BankModifyKeys(KeyType, amount) end
---@param KeyType EInventoryKeyType
---@param amount int32
---@return boolean
function UInventory:BankHasEnoughKeys(KeyType, amount) end
---@return FLargeInteger
function UInventory:BankGetMoneyAmount() end
---@param amount int32
function UInventory:BankDepositMoney(amount) end
---@param KeyType EInventoryKeyType
---@param amount int32
function UInventory:BankDepositKeys(KeyType, amount) end
---@param UnlockItemClass TSubclassOf<ACollectibleBase>
function UInventory:ApplyPendingUnlockItem(UnlockItemClass) end
function UInventory:ApplyCurse() end
---@param amount int32
function UInventory:AddMoney(amount) end


---@class UJoiningInviteScreen : UHMQScreenWidget
UJoiningInviteScreen = {}


---@class UJudgeBossPlatformComponent : USceneComponent
---@field OffsetForNotActivePlatforms FVector
---@field MinAreaExtent FIntVector
---@field MaxAreaExtent FIntVector
---@field PlatformsSpawnZ float
---@field PlatformsMaxZ float
---@field PlatformsGridSize float
---@field bUsePlayersAsSpawnPivot boolean
---@field MaxPlatforms int32
---@field PlatformsSpawnMinExtent FIntVector
---@field PlatformsSpawnMaxExtent FIntVector
---@field PlatformsSpawnDelay float
---@field PlatformsSpawnDelayVariance float
---@field MaxDecoratingPlatforms int32
---@field DecoratingPlatformsSpawnDelay float
---@field DecoratingPlatformsSpawnDelayVariance float
---@field StartPlatformsSpeed float
---@field EndPlatformsSpeed float
---@field PlatformSpeedBlendDistance float
---@field PlatformsPlayerSpeedMod float
---@field PlayerOnPlatformAffectSpeed float
---@field PlayerOutPlatformAffectSpeed float
---@field PlatformSearchTraceChannel ECollisionChannel
---@field PlatformShearchRadius float
---@field PlatformShearchDistance float
---@field PlatformStopWhenHookshottingMargin float
---@field GridOrigin FVector
---@field SpawnPivot FVector
---@field PlayersOnActor TMap<APlayerCharacter, AActor>
---@field PlayerToGridIndexMap TMap<APlayerCharacter, FIntVector>
---@field OnPlatformToHigh FJudgeBossPlatformComponentOnPlatformToHigh
---@field OnPlatformDeactivated FJudgeBossPlatformComponentOnPlatformDeactivated
---@field OnPlatformActivated FJudgeBossPlatformComponentOnPlatformActivated
---@field OnPlayerLanded FJudgeBossPlatformComponentOnPlayerLanded
---@field OnPlayerLeft FJudgeBossPlatformComponentOnPlayerLeft
---@field PlatformsPool TArray<AActor>
---@field ActivePlatforms TArray<FJudgeBossPlatformData>
---@field PlatformSpawnDelay float
---@field DecoratingPlatformSpawnDelay float
---@field PlayersOnPlatform TMap<APlayerCharacter, AActor>
---@field bGeneratePlatform boolean
---@field Occluders TArray<FJudgeBossOcclusionData>
UJudgeBossPlatformComponent = {}

function UJudgeBossPlatformComponent:StopPlatformGeneration() end
function UJudgeBossPlatformComponent:StartPlatformGeneration() end
---@param Platform AActor
---@param bHookshotting boolean
function UJudgeBossPlatformComponent:SetPlayerHookshottingToPlatform(Platform, bHookshotting) end
---@param Actor AActor
function UJudgeBossPlatformComponent:ForceDeactivatePlatform(Actor) end
function UJudgeBossPlatformComponent:ClearPool() end
function UJudgeBossPlatformComponent:ClearOccluders() end
---@param Actor AActor
function UJudgeBossPlatformComponent:AddPlatformToPool(Actor) end
---@param Actor AActor
---@param ActorSpaceOffset FVector
---@param Radius float
function UJudgeBossPlatformComponent:AddOccluder(Actor, ActorSpaceOffset, Radius) end


---@class UJudgeBossPlatformOscillationComponent : USceneComponent
---@field Curves TArray<FJudgeBossPlatformOscillationCurveData>
---@field SyncedCurveParams TArray<float>
---@field SyncedVerticalSpeed float
---@field SyncedLocation FVector
---@field SyncedLocationUpdateTime float
---@field SyncedYaw float
---@field OscillationMaxAngle float
---@field UpDownMaxMovement float
---@field UpDownSpeed float
---@field FadeInTime float
---@field FadeOutTime float
---@field MaxTickIntervalInView float
---@field TickIntervalNotInView float
---@field TickIntervalMinDistance float
---@field TickIntervalMaxDistance float
---@field bUseClientTimeDifferenceTracking boolean
---@field OriginalRotation FRotator
---@field OriginalLocation FVector
---@field ExternalDesiredLocationOffset FVector
---@field LastRotation FRotator
---@field alpha float
---@field Active boolean
---@field TimeSinceStart float
---@field ActorActivator UHMQActorActivatorComponent
UJudgeBossPlatformOscillationComponent = {}

function UJudgeBossPlatformOscillationComponent:Stop() end
function UJudgeBossPlatformOscillationComponent:Start() end
function UJudgeBossPlatformOscillationComponent:OnRep_SyncedLocationUpdateTime() end
function UJudgeBossPlatformOscillationComponent:OnRep_SyncedLocation() end
function UJudgeBossPlatformOscillationComponent:OnRep_SyncedCurveParams() end
---@param Activator UHMQActorActivatorComponent
function UJudgeBossPlatformOscillationComponent:OnCameIntoView(Activator) end
---@param NewOffset FVector
function UJudgeBossPlatformOscillationComponent:AddDesiredLocationOffset(NewOffset) end


---@class UJumpClimbEnemyMovementBehaviour : URootMotionEnemyMovementBehaviour
---@field ClimbingHeight float
---@field MaxDistFromEdge float
---@field MaxDeviationFromJumpTarget float
---@field FallbackJumpRequest FAnimationRequestDescriptor
---@field ClimbRequest FAnimationRequestDescriptor
---@field bWasLastLocationValid boolean
---@field State EJumpClimbMovementState
UJumpClimbEnemyMovementBehaviour = {}



---@class UKeyboardInputBlueprintLibrary : UBlueprintFunctionLibrary
UKeyboardInputBlueprintLibrary = {}

---@param ActionName FName
function UKeyboardInputBlueprintLibrary:UnbindKeyboardInputAxis(ActionName) end
---@param ActionName FName
function UKeyboardInputBlueprintLibrary:UnbindKeyboardInputActions(ActionName) end
---@param Preset FKeyMappingPresets
---@param GameplayMappings TArray<FName>
function UKeyboardInputBlueprintLibrary:PopulateKeyboardPreset(Preset, GameplayMappings) end
---@return int32
function UKeyboardInputBlueprintLibrary:GetMaxKeyboardPresets() end
---@param Preset FKeyMappingPresets
---@param AllRebindableMappings TArray<FName>
---@param ConflictActions TMap<FKey, FKeyConflicts>
---@param UnboundActions TArray<FName>
function UKeyboardInputBlueprintLibrary:FindKeysWithIssues(Preset, AllRebindableMappings, ConflictActions, UnboundActions) end
---@param Preset FKeyMappingPresets
---@param AllRebindableMappings TArray<FName>
---@param FriendlyInputs TMap<FKey, FKeyConflicts>
function UKeyboardInputBlueprintLibrary:FindFriendlyInputs(Preset, AllRebindableMappings, FriendlyInputs) end
---@param Preset FKeyMappingPresets
---@param InputActions TArray<FName>
---@param InputAxis TArray<FName>
---@param OldKey FKey
---@param NewKey FKey
---@param NoneKey FKey
---@param Priority int32
---@param IsPositive boolean
function UKeyboardInputBlueprintLibrary:FindAndSwapKeys(Preset, InputActions, InputAxis, OldKey, NewKey, NoneKey, Priority, IsPositive) end
---@param FriendlyActions TMap<FKey, FKeyConflicts>
---@param InputActions TArray<FName>
---@param InputAxis TArray<FName>
---@param bIsPositive boolean
---@return boolean
function UKeyboardInputBlueprintLibrary:CheckIfFriendly(FriendlyActions, InputActions, InputAxis, bIsPositive) end
---@param ConflictActions TMap<FKey, FKeyConflicts>
---@param FriendlyActions TMap<FKey, FKeyConflicts>
---@param InputActions TArray<FName>
---@param InputAxis TArray<FName>
---@param Key FKey
---@return boolean
function UKeyboardInputBlueprintLibrary:CheckForClashingKeys(ConflictActions, FriendlyActions, InputActions, InputAxis, Key) end
---@param NewBindings FKeyboardAxisPresets
---@param ConvertLayout boolean
function UKeyboardInputBlueprintLibrary:BindKeyboardInputAxis(NewBindings, ConvertLayout) end
---@param NewBindings FKeyboardActionPresets
---@param ConvertLayout boolean
function UKeyboardInputBlueprintLibrary:BindKeyboardInputActions(NewBindings, ConvertLayout) end


---@class ULanguageCodesDataTable : UDataTable
ULanguageCodesDataTable = {}


---@class ULerpEnemyMovementBehaviour : UBaseEnemyMovementBehaviour
---@field bRequireCharacterFacingDirection boolean
---@field TravelSpeed float
ULerpEnemyMovementBehaviour = {}



---@class ULevelGenCache : UBlueprintFunctionLibrary
ULevelGenCache = {}

---@param LevelGenActor ALevelGenBaseActor
---@param Parameters FLevelGenParameters
---@param Pattern FOfflineLevelGenPattern
---@return boolean
function ULevelGenCache:SaveLevelGen(LevelGenActor, Parameters, Pattern) end
---@param Destination ULevelGenMap
---@param LevelGenActor ALevelGenBaseActor
---@param Parameters FLevelGenParameters
---@param seed int32
---@return boolean
function ULevelGenCache:LoadSpecificSeed(Destination, LevelGenActor, Parameters, seed) end
---@param Destination ULevelGenMap
---@param LevelGenActor ALevelGenBaseActor
---@param LayoutPath FString
---@param seed int32
---@return boolean
function ULevelGenCache:LoadSpecificLayout(Destination, LevelGenActor, LayoutPath, seed) end
---@param Destination ULevelGenMap
---@param LevelGenActor ALevelGenBaseActor
---@param Parameters FLevelGenParameters
---@param LockToSeed boolean
---@return boolean
function ULevelGenCache:LoadLevelGen(Destination, LevelGenActor, Parameters, LockToSeed) end
---@return FString
function ULevelGenCache:GetLastLoadStatus() end
---@param Biome EBiome
---@param FlagString FString
---@return FString
function ULevelGenCache:GetFlagNames(Biome, FlagString) end


---@class ULevelGenConfig : UObject
ULevelGenConfig = {}


---@class ULevelGenLODConfigComponent : UActorComponent
---@field LOD0Parameters FLevelGenLODBuildParams
ULevelGenLODConfigComponent = {}



---@class ULevelGenLODIncludeDynamicActorComponent : UActorComponent
---@field IncludeInLevelLOD boolean
ULevelGenLODIncludeDynamicActorComponent = {}



---@class ULevelGenMap : UObject
---@field MapBounds FBox
---@field Rooms TArray<FLevelGenMapRoomInstance>
---@field OpenDoors TArray<FLevelGenMapDoorInstance>
---@field UsedDoors TArray<FLevelGenMapDoorInstance>
---@field ClosedDoors TArray<FLevelGenMapDoorInstance>
---@field Locators TArray<FLevelGenMapLocatorInstance>
---@field ObjectDatas TArray<FLevelGenMapRoomObjectDataInstance>
---@field RuntimeObjectDatas TArray<ULevelGenRoomObjectData>
---@field b2DCollisionsForRooms boolean
ULevelGenMap = {}

---@param Location FVector
---@param Rotation FRotator
function ULevelGenMap:TransformTreeLimiters(Location, Rotation) end
---@param RoomName FString
---@param DesiredRoomLocation FVector
---@param DesiredRoomRotation FRotator
function ULevelGenMap:RebaseStartRoom(RoomName, DesiredRoomLocation, DesiredRoomRotation) end
---@param Limiter FBox
function ULevelGenMap:AddTreeGenerationLimiter(Limiter) end


---@class ULevelGenMapIngame : UObject
---@field MapData ULevelGenMap
---@field RoomLevels TArray<ALevelGenRoomStreamingActor>
---@field CleanupActors TArray<TWeakObjectPtr<AActor>>
---@field LocatorSpawnGroups TArray<FLocatorSpawnGroup>
ULevelGenMapIngame = {}

---@param Actor AActor
function ULevelGenMapIngame:RegisterActorForShutdownCleanup(Actor) end
---@param GroupdID FGuid
---@param LocatorActorLoader ALevelGenLocatorActorLoader
---@param SpawnedActor AActor
function ULevelGenMapIngame:OnLocatorActorSpawned(GroupdID, LocatorActorLoader, SpawnedActor) end
---@param RoomName FString
---@param OutTransform FTransform
---@return boolean
function ULevelGenMapIngame:GetRoomTransformByName(RoomName, OutTransform) end
---@param RoomIndex int32
---@return FTransform
function ULevelGenMapIngame:GetRoomTransform(RoomIndex) end
---@param RoomIndex int32
---@param OutLocation FVector
---@param OutRotation FRotator
---@return boolean
function ULevelGenMapIngame:GetRoomTeleportLocation(RoomIndex, OutLocation, OutRotation) end
---@param RoomIndex int32
---@return ALevelGenRoomStreamingActor
function ULevelGenMapIngame:GetRoomStreamingActorByIndex(RoomIndex) end
---@param RoomIndex int32
---@return FString
function ULevelGenMapIngame:GetRoomName(RoomIndex) end
---@param RoomName FString
---@return int32
function ULevelGenMapIngame:GetRoomIndexByName(RoomName) end
---@return int32
function ULevelGenMapIngame:GetRoomCount() end
---@param Position FVector
---@return TArray<int32>
function ULevelGenMapIngame:GetPositionRoomIndexes(Position) end
---@param Position FVector
---@param DesiredRoom int32
---@return int32
function ULevelGenMapIngame:GetPositionRoomIndex(Position, DesiredRoom) end
---@return FBox
function ULevelGenMapIngame:GetMapBounds() end
---@param Level ULevel
---@return int32
function ULevelGenMapIngame:GetLevelRoomIndex(Level) end
---@param RoomIndex int32
---@param NextRoomIndex int32
---@param OffsetFromDoor float
---@param OutLocation FVector
---@param OutRotation FRotator
---@return boolean
function ULevelGenMapIngame:GetExitDoorLocation(RoomIndex, NextRoomIndex, OffsetFromDoor, OutLocation, OutRotation) end
---@param CurrentRoom int32
---@return int32
function ULevelGenMapIngame:GetClosestNeighborIndex(CurrentRoom) end
---@param Actor AActor
---@return FString
function ULevelGenMapIngame:GetActorRoomName(Actor) end
---@param Actor AActor
---@return int32
function ULevelGenMapIngame:GetActorRoomIndex(Actor) end
function ULevelGenMapIngame:DestroyRegisteredShutdownActors() end


---@class ULevelGenRoomAttributes : UObject
---@field RoomType FName
---@field bCanBeLockedDown boolean
---@field RoomTheme FName
---@field bShouldInitialLoad boolean
---@field bOverrideFogActorLocation boolean
---@field FogActorLocation FVector
---@field EnvironmentType FSoftObjectPath
---@field LevelSelector ULevelGenRoomSublevelSelector
---@field EnvironmentTypeObj UObject
---@field AmbienceTheme FSoftObjectPath
---@field AmbienceThemeObj UObject
---@field AcousticTheme FSoftObjectPath
---@field AcousticThemeObj UObject
---@field MusicOverride FSoftObjectPath
---@field MusicOverrideObj UObject
---@field EnterAudio FSoftObjectPath
---@field EnterAudioObj UObject
---@field ExitAudio FSoftObjectPath
---@field ExitAudioObj UObject
---@field BecameActiveListenerRoomAudio FSoftObjectPath
---@field BecameActiveListenerRoomAudioObj UObject
---@field AudioParams TArray<FRoomAudioParam>
---@field RoomAttributes TMap<FName, FString>
---@field HoudiniGenerationParameters TMap<FName, FString>
---@field SuccessfulHoudiniGenerationTimestamp FDateTime
---@field MaximumToPlace int32
---@field bRoomHasATeleport boolean
ULevelGenRoomAttributes = {}



---@class ULevelGenRoomDoor : UObject
---@field Tranform FTransform
---@field TranformMtx FMatrix
---@field DoorType FName
---@field DoorAttributes TMap<FName, FString>
ULevelGenRoomDoor = {}



---@class ULevelGenRoomInfo : UAngenRoomInfo
ULevelGenRoomInfo = {}

---@return FMinimapMeshData
function ULevelGenRoomInfo:GetMinimapTriangles() end
---@param World UWorld
---@return boolean
function ULevelGenRoomInfo:ExtractFromWorld(World) end
---@param DoorType FName
---@return boolean
function ULevelGenRoomInfo:ContainsDoorOfType(DoorType) end


---@class ULevelGenRoomInfos : UObject
---@field Infos TArray<ULevelGenRoomInfo>
---@field NameToRoom TMap<FString, ULevelGenRoomInfo>
ULevelGenRoomInfos = {}

function ULevelGenRoomInfos:Sort() end
---@param RoomName FString
---@return ULevelGenRoomInfo
function ULevelGenRoomInfos:FindRoom(RoomName) end


---@class ULevelGenRoomLocator : UObject
---@field Tranform FTransform
---@field LevelName FString
---@field TranformMtx FMatrix
---@field LocatorType FName
---@field LocatorAttributes TMap<FName, FString>
ULevelGenRoomLocator = {}



---@class ULevelGenRoomObjectData : UObject
---@field Transform FTransform
---@field Guid FGuid
---@field Parameters TMap<FName, FString>
---@field ActorTags TArray<FName>
---@field ComponentTags TArray<FName>
ULevelGenRoomObjectData = {}



---@class ULevelGenRoomObjectDataComponent : UHMQActorComponent
---@field bManualPrepareData boolean
---@field Parameters TMap<FName, FString>
---@field Guid FGuid
---@field OnDataInitialized FLevelGenRoomObjectDataComponentOnDataInitialized
---@field OnDataUpdated FLevelGenRoomObjectDataComponentOnDataUpdated
---@field ObjectDataIndex int32
---@field bNotifyDataUpdatePending boolean
---@field bPrepared boolean
ULevelGenRoomObjectDataComponent = {}

---@param ParameterName FName
---@param ParameterValue FString
function ULevelGenRoomObjectDataComponent:SetParameter(ParameterName, ParameterValue) end
function ULevelGenRoomObjectDataComponent:PrepareData() end
---@return boolean
function ULevelGenRoomObjectDataComponent:IsDataInitialized() end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function ULevelGenRoomObjectDataComponent:HandleSerializeState(Serializer) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function ULevelGenRoomObjectDataComponent:HandleBiomeStateChanged(Biome, NewBiomeState) end
---@return FLevelGenMapRoomObjectDataHandle
function ULevelGenRoomObjectDataComponent:GetDataHandle() end
function ULevelGenRoomObjectDataComponent:CallActorEvents() end
function ULevelGenRoomObjectDataComponent:BroadcastDataUpdated() end


---@class ULevelGenRoomSublevelSelector : UObject
---@field SelectedLevels TSet<FString>
---@field OwningStreamingActor ALevelGenRoomStreamingActor
ULevelGenRoomSublevelSelector = {}

---@param LevelName FString
---@return boolean
function ULevelGenRoomSublevelSelector:ShouldShowLevel(LevelName) end
---@param LevelName FString
---@param NumTimesRoomLoaded int32
---@return boolean
function ULevelGenRoomSublevelSelector:ShouldLoadLevel(LevelName, NumTimesRoomLoaded) end
function ULevelGenRoomSublevelSelector:PrepareForLevelLoads() end
---@param LevelName FString
---@param NumTimesRoomLoaded int32
function ULevelGenRoomSublevelSelector:OnLevelSelectedForLoad(LevelName, NumTimesRoomLoaded) end


---@class ULevelGenRoomSublevelSelectorBase : ULevelGenRoomSublevelSelector
---@field DefaultLevelName FString
---@field bFalse boolean
---@field SelectedSingleVariationSublevelDressing FLevelDressing
---@field SublevelDressings TArray<FLevelDressing>
---@field DressingSelectionMethod EDressingSelectionMethod
---@field DressingSelectionChance float
---@field bRandomDressing boolean
---@field bDifferentRoomEachLoad boolean
---@field bShowEveryRoomLoadAdditionalOptions boolean
---@field bShowLevelDressingsOptions boolean
ULevelGenRoomSublevelSelectorBase = {}



---@class ULevelGenStartLocationOverride : UObject
---@field RoomName FString
---@field RelativePosition FVector
ULevelGenStartLocationOverride = {}



---@class ULevelGenStreamingFocus : UActorComponent
---@field ExtentsOverride float
---@field bAddedToStreamer boolean
---@field bUsePositionDimensionsOverride boolean
---@field ThisLevelGen ALevelGenBaseActor
---@field ThisGridObject USpatialGridObject
---@field PositionOverride FVector
---@field DimensionsOverride FVector
ULevelGenStreamingFocus = {}

---@param Position FVector
---@param dimensions FVector
function ULevelGenStreamingFocus:SetPositionDimensionsOverride(Position, dimensions) end
---@return boolean
function ULevelGenStreamingFocus:RemoveFromStreamer() end
---@return boolean
function ULevelGenStreamingFocus:IsPositionDimensionsOverrideSet() end
---@return boolean
function ULevelGenStreamingFocus:IsAddedToStreamer() end
function ULevelGenStreamingFocus:ClearPositionDimensionsOverride() end
---@return boolean
function ULevelGenStreamingFocus:AreAllRoomsShown() end
---@return boolean
function ULevelGenStreamingFocus:AddToStreamer() end


---@class ULevelStreamingEventProxy : UObject
---@field OnLevelShown FLevelStreamingEventProxyOnLevelShown
---@field OnLevelHidden FLevelStreamingEventProxyOnLevelHidden
---@field OnLevelLoaded FLevelStreamingEventProxyOnLevelLoaded
---@field OnLevelUnloaded FLevelStreamingEventProxyOnLevelUnloaded
---@field ProxiedLevelStreaming ULevelStreamingDynamic
ULevelStreamingEventProxy = {}

function ULevelStreamingEventProxy:OnLevelUnloadedInternal() end
function ULevelStreamingEventProxy:OnLevelShownInternal() end
function ULevelStreamingEventProxy:OnLevelLoadedInternal() end
function ULevelStreamingEventProxy:OnLevelHiddenInternal() end
---@param LevelStreaming ULevelStreamingDynamic
function ULevelStreamingEventProxy:LevelStreamingProxyStatus__DelegateSignature(LevelStreaming) end


---@class ULightningGeneratorComponent : UHMQActorComponent
---@field LightningActorClass TSubclassOf<AActor>
---@field LightningExtent FVector
---@field MinActivePhase int32
---@field MinPlayerDistance float
---@field MaxPlayerDistance float
---@field Phase1MinInterval float
---@field Phase1MaxInterval float
---@field Phase2MinInterval float
---@field Phase2MaxInterval float
---@field MapHorizontalOffset float
---@field MapTopOffset float
---@field MapBottomOffset float
---@field OnLightningGenerated FLightningGeneratorComponentOnLightningGenerated
ULightningGeneratorComponent = {}

function ULightningGeneratorComponent:SpawnTimer() end


---@class ULockOnComponent : UActorComponent
---@field OnLostLineOfSight FLockOnComponentOnLostLineOfSight
---@field OnLosingLineOfSight FLockOnComponentOnLosingLineOfSight
---@field OnPlayerLockOnStateChanged FLockOnComponentOnPlayerLockOnStateChanged
---@field OnPlayerLockOnTargetChanged FLockOnComponentOnPlayerLockOnTargetChanged
---@field OnPlayerLockOnRequestFailed FLockOnComponentOnPlayerLockOnRequestFailed
---@field LockOnType ELockOnType
---@field bIsLockOnAllowed boolean
---@field LockOnAimOffset FRotator
---@field bWantsToLockOnToTarget boolean
---@field bIsPointingAtLockableTarget boolean
---@field OwnerCharacter APlayerCharacter
---@field OwnerPlayerController ATouristPlayerController
---@field LockOnTarget ULockOnTargetComponent
---@field CachedAimAssistComponent UAimAssistComponent
---@field LockOnActivatedSfx UAkAudioEvent
---@field LockOnBrokenSfx UAkAudioEvent
---@field bLockOnButtonHeld boolean
---@field AimTriggerStateIndex int32
ULockOnComponent = {}

---@return boolean
function ULockOnComponent:TryToLockOnToMainTarget() end
function ULockOnComponent:SwitchLockTargetRight() end
function ULockOnComponent:SwitchLockTargetLeft() end
---@param bIsAllowed boolean
function ULockOnComponent:SetLockOnAllowed(bIsAllowed) end
---@param SaveGame UTouristSaveGame
function ULockOnComponent:SaveGameLoaded(SaveGame) end
function ULockOnComponent:OnLockOnToggle() end
function ULockOnComponent:OnLockOnReleased() end
function ULockOnComponent:OnLockOnPressed() end
---@param NewStateIndex int32
function ULockOnComponent:OnAimTriggerStateChanged(NewStateIndex) end
---@return boolean
function ULockOnComponent:IsLockOnAllowed() end
---@return boolean
function ULockOnComponent:IsLockedOnToTarget() end
---@param DirRight boolean
---@return ULockOnTargetComponent
function ULockOnComponent:GetSecondaryLockOnTarget(DirRight) end
---@return float
function ULockOnComponent:GetManualOffsetMax() end
---@return ULockOnTargetComponent
function ULockOnComponent:GetMainLockOnTarget() end
---@return FVector
function ULockOnComponent:GetLockOnTargetPosition() end
---@return ULockOnTargetComponent
function ULockOnComponent:GetLockOnTarget() end
---@return boolean
function ULockOnComponent:GetIsPointingAtLockableTarget() end
---@param NewTarget ULockOnTargetComponent
---@param bIsSwitching boolean
---@return boolean
function ULockOnComponent:ChangeLockOnTo(NewTarget, bIsSwitching) end


---@class ULockOnTargetComponent : UAimAssistTargetComponent
---@field OnLockedByCountChanged FLockOnTargetComponentOnLockedByCountChanged
---@field bIsLockOnAllowed boolean
---@field LockedByComponent TArray<ULockOnComponent>
ULockOnTargetComponent = {}

---@param bIsAllowed boolean
---@param bAllowChangeTarget boolean
---@param bAlsoDisableAimAssist boolean
function ULockOnTargetComponent:SetLockOnAllowed(bIsAllowed, bAllowChangeTarget, bAlsoDisableAimAssist) end
---@return boolean
function ULockOnTargetComponent:IsLockOnAllowed() end
---@return boolean
function ULockOnTargetComponent:IsLockOnActive() end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function ULockOnTargetComponent:HandleSerializeState(Serializer) end
---@param bAllowChangeTarget boolean
function ULockOnTargetComponent:EndLockOnToAll(bAllowChangeTarget) end


---@class ULocomotionAnimCollection : UObject
---@field Animations TArray<UAnimSequence>
---@field LocomotionAnimations TArray<FLocomotionAnim>
---@field SpecialInfoClasses TArray<TSubclassOf<ULocomotionSpecialCharacterInfo_Base>>
---@field ScoringSettings FLocomotionAnimScoringSettings
---@field bPreventRotationToRotationTransitions boolean
---@field MinTimeStretchOverride float
---@field MaxTimeStretchOverride float
ULocomotionAnimCollection = {}

---@param LocomotionAnim FLocomotionAnim
---@param LocomotionData FTouristCharacterLocomotionData
---@return float
function ULocomotionAnimCollection:GetPlayRateForLocomotionAnim(LocomotionAnim, LocomotionData) end
---@param LocomotionData FTouristCharacterLocomotionData
---@param InProgressLocomotionAnim FLocomotionAnim
---@return FLocomotionAnimQueryResult
function ULocomotionAnimCollection:GetBestLocomotionAnim(LocomotionData, InProgressLocomotionAnim) end
function ULocomotionAnimCollection:CacheLocomotionAnimationData() end


---@class ULocomotionAnimPickerBase : UObject
ULocomotionAnimPickerBase = {}

---@param DeltaTime float
---@param Collection ULocomotionAnimCollection
---@param LocomotionData FTouristCharacterLocomotionData
---@return FLocomotionAnimQueryResult
function ULocomotionAnimPickerBase:GetLocomotionAnimFromCollection(DeltaTime, Collection, LocomotionData) end


---@class ULocomotionAnimPicker_Enemy : ULocomotionAnimPickerBase
---@field LocomotionDataInterpolateSpeed float
---@field MinAnimTimeBeforeIdle float
---@field bIgnoreVelocityZ boolean
---@field bUseAnimAverageSpeedAsCurrentSpeed boolean
---@field ProcessedLocomotionData FTouristCharacterLocomotionData
---@field LastQueryResult FLocomotionAnimQueryResult
---@field CurrentAnimTime float
ULocomotionAnimPicker_Enemy = {}



---@class ULocomotionSpecialCharacterInfo_Base : UObject
---@field ScoreMultiplier float
ULocomotionSpecialCharacterInfo_Base = {}

---@param OtherInfo ULocomotionSpecialCharacterInfo_Base
---@return float
function ULocomotionSpecialCharacterInfo_Base:GetSimilarityScore(OtherInfo) end
---@return float
function ULocomotionSpecialCharacterInfo_Base:GetScoreMultiplier() end


---@class ULootComponent : UHMQSceneComponent
---@field bSpawnLootOnDeath boolean
---@field bAdjustSpawnLocationEnabled boolean
---@field Loot TArray<FLootSpawnEntry>
---@field OnSpawnLoot FLootComponentOnSpawnLoot
---@field LootSourceGuid FGuid
ULootComponent = {}

---@param InInstigator AActor
---@param InLoot FLootSpawnEntry
function ULootComponent:SpawnSpecificSingleLoot(InInstigator, InLoot) end
---@param InPlayerCharacter APlayerCharacter
---@param LootGroup ECollectibleDropGroup
---@param SpawnPolicy ECollectibleSpawnPolicy
---@param InInstigator AActor
---@param bFlyOut boolean
---@param bRandomSpawnOffset boolean
---@param SpawnOffset FVector
function ULootComponent:SpawnSpecificPolicyLoot(InPlayerCharacter, LootGroup, SpawnPolicy, InInstigator, bFlyOut, bRandomSpawnOffset, SpawnOffset) end
---@param InPlayerCharacter APlayerCharacter
---@param LootResult FLootResult
---@param SpawnPolicy ECollectibleSpawnPolicy
---@param InInstigator AActor
---@param bFlyOut boolean
---@param bRandomSpawnOffset boolean
---@param SpawnOffset FVector
function ULootComponent:SpawnManualPolicyLoot(InPlayerCharacter, LootResult, SpawnPolicy, InInstigator, bFlyOut, bRandomSpawnOffset, SpawnOffset) end
---@param InInstigator AActor
function ULootComponent:SpawnLoot(InInstigator) end
---@param LootGroup ECollectibleDropGroup
---@param Multiplier float
function ULootComponent:MultiplyLootGroupCount(LootGroup, Multiplier) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function ULootComponent:HandleDeath(DamagedActor, DamageEvent) end
---@param PlayerCharacter APlayerCharacter
---@param Size float
---@return FVector
function ULootComponent:DetermineSpawnOffset(PlayerCharacter, Size) end


---@class ULootManager : UObject
ULootManager = {}

function ULootManager:InitializeTimer() end
function ULootManager:HandleStreamingComplete() end
---@param Properties FDetermineLootProperties
---@param OutLootResult FLootResult
---@return boolean
function ULootManager:DetermineLootWithProperties(Properties, OutLootResult) end
---@param LootGroup ECollectibleDropGroup
---@param SpawnPolicy ECollectibleSpawnPolicy
---@param ExcludeClasses TSet<TSubclassOf<AActor>>
---@param bExcludeChildClasses boolean
---@param RequiredTags TSet<FName>
---@param BlockedTags TSet<FName>
---@param OutLootResult FLootResult
---@param TreatAllAsUnlocked boolean
---@param bAllowUsedMetaModifiers boolean
---@return boolean
function ULootManager:DetermineLootEx(LootGroup, SpawnPolicy, ExcludeClasses, bExcludeChildClasses, RequiredTags, BlockedTags, OutLootResult, TreatAllAsUnlocked, bAllowUsedMetaModifiers) end
---@param LootGroup ECollectibleDropGroup
---@param SpawnPolicy ECollectibleSpawnPolicy
---@param ExcludeClasses TSet<TSubclassOf<AActor>>
---@param bExcludeChildClasses boolean
---@param RequiredTags TSet<FName>
---@param BlockedTags TSet<FName>
---@param Completed FDetermineLootAsyncCompleted
function ULootManager:DetermineLootAsync(LootGroup, SpawnPolicy, ExcludeClasses, bExcludeChildClasses, RequiredTags, BlockedTags, Completed) end
---@param LootGroup ECollectibleDropGroup
---@param SpawnPolicy ECollectibleSpawnPolicy
---@param OutLootResult FLootResult
---@return boolean
function ULootManager:DetermineLoot(LootGroup, SpawnPolicy, OutLootResult) end
---@param NewBione EBiome
function ULootManager:BiomeChanged(NewBione) end


---@class ULootSpawnerComponent : UHMQActorComponent
---@field AltLootGroupProbability float
---@field AltLootGroupThreshold int32
---@field AltLootGroupGuarantee int32
---@field OnSpawnLoot FLootSpawnerComponentOnSpawnLoot
---@field Notifications TArray<FLootSpawnNotification>
ULootSpawnerComponent = {}

---@param LootDefinition FLootSpawnDefinition
---@param LootResult FLootResult
function ULootSpawnerComponent:Server_SpawnSpecificLoot(LootDefinition, LootResult) end
---@param LootDefinition FLootSpawnDefinition
---@param LootResult FLootResult
function ULootSpawnerComponent:Server_SpawnManualLoot(LootDefinition, LootResult) end
---@param LootDefinition FLootSpawnDefinition
function ULootSpawnerComponent:Server_SpawnLoot(LootDefinition) end
function ULootSpawnerComponent:OnRep_Notifications() end
---@param LootDefinition FLootSpawnDefinition
---@param LootResult FLootResult
function ULootSpawnerComponent:ClientSpawnLootActual(LootDefinition, LootResult) end


---@class UMapCaptureComponent : USceneCaptureComponent2D
UMapCaptureComponent = {}


---@class UMapEnvironmentComponent : UHMQActorComponent
---@field GenerationMinInterval float
---@field GenerationMaxInterval float
---@field RoomEnvironmentActorClass TSubclassOf<ARoomEnvironmentActor>
---@field EnvironmentControllerComponent UEnvironmentControllerComponent
---@field SelectedAttributes UEnvironmentAttributesAsset
---@field CreatedAttributes UEnvironmentAttributesAsset
---@field RoomActors TArray<ARoomEnvironmentActor>
---@field RainDataAsset UEnvironmentRainDataAsset
---@field WindDataAsset UEnvironmentWindDataAsset
---@field LightDataAsset UEnvironmentLightDataAsset
---@field SkyDataAsset UEnvironmentSkyDataAsset
---@field FogDataAsset UEnvironmentFogDataAsset
---@field ActiveAttributes UEnvironmentAttributesAsset
---@field EnvironmentSeed int32
---@field GeneratorSeed int32
UMapEnvironmentComponent = {}

---@param NewEnvironmentAttributes UEnvironmentAttributesAsset
function UMapEnvironmentComponent:SetEnvironmentAttributes(NewEnvironmentAttributes) end
function UMapEnvironmentComponent:OnRep_GeneratorSeed() end
function UMapEnvironmentComponent:OnRep_EnvironmentSeed() end
function UMapEnvironmentComponent:OnRep_ActiveAttributes() end
---@param Room ALevelGenRoomStreamingActor
function UMapEnvironmentComponent:HandleRoomShow(Room) end
---@param Room ALevelGenRoomStreamingActor
function UMapEnvironmentComponent:HandleRoomBeginHide(Room) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UMapEnvironmentComponent:HandleBiomeStateChanged(Biome, NewBiomeState) end
---@param WorldContextObject UObject
---@return UMapEnvironmentComponent
function UMapEnvironmentComponent:GetMapEnvironment(WorldContextObject) end
function UMapEnvironmentComponent:GenerateEnvironmentTimer() end
function UMapEnvironmentComponent:GenerateEnvironment() end
function UMapEnvironmentComponent:GenerateDevelopmentRoomActor() end


---@class UMapLandscapeComponent : UHMQActorComponent
---@field bUseRoomLocation boolean
---@field RuntimeLandscapeProperties TMap<EBiome, FBiomeRuntimeLandscapeProperties>
---@field OnLandscapeReady FMapLandscapeComponentOnLandscapeReady
---@field RuntimeLandscape AHMQRuntimeLandscape
---@field ModifierComponents TArray<UHMQRuntimeLandscapeModifierComponent>
---@field ReadyTimerHandle FTimerHandle
---@field PrepareTimerHandle FTimerHandle
UMapLandscapeComponent = {}

---@param RoomName FName
---@param Transform FTransform
---@param DefaultRoomExtent FVector
---@param bDebug boolean
---@return boolean
function UMapLandscapeComponent:PossibleRoomIntersectsRoom(RoomName, Transform, DefaultRoomExtent, bDebug) end
function UMapLandscapeComponent:LandscapeReadyTimer() end
function UMapLandscapeComponent:LandscapePrepareTimer() end
---@return boolean
function UMapLandscapeComponent:IsLandscapeReady() end
---@param InLandscape AHMQRuntimeLandscape
function UMapLandscapeComponent:HandleLandscapeStart(InLandscape) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UMapLandscapeComponent:HandleBiomeStateChanged(Biome, NewBiomeState) end
---@return AHMQRuntimeLandscape
function UMapLandscapeComponent:GetRuntimeLandscape() end
---@param BoundsMin FVector
---@param BoundsMax FVector
---@param Transform FTransform
---@param bDebug boolean
---@return boolean
function UMapLandscapeComponent:BP_IntersectsRoom(BoundsMin, BoundsMax, Transform, bDebug) end


---@class UMasterOverseer : UActorComponent
---@field OnBiomeStateChangedInitializationComplete FMasterOverseerOnBiomeStateChangedInitializationComplete
---@field bAllEnemySpawnsBlocked boolean
---@field OnRoomGameReady FMasterOverseerOnRoomGameReady
---@field OnRoomGameUnready FMasterOverseerOnRoomGameUnready
---@field OnRoomEnemyCountChanged FMasterOverseerOnRoomEnemyCountChanged
---@field OnRoomDataReset FMasterOverseerOnRoomDataReset
---@field BiomeMaps TArray<FBiomeData>
---@field RoomExtraActorSpawns TArray<FRoomExtraActorSpawn>
---@field MinimapIconProxyActors TArray<TWeakObjectPtr<AActor>>
---@field LocatorSpawnExclusions TArray<FTransform>
UMasterOverseer = {}

---@param Context UObject
---@param CardNumber int32
---@return boolean
function UMasterOverseer:UseTemplateCard(Context, CardNumber) end
---@param Context UObject
---@param Actor AActor
---@param RoomIndex int32
---@return FGuid
function UMasterOverseer:StoreActorInRoomSnapshot(Context, Actor, RoomIndex) end
---@param Context UObject
---@param Biome EBiome
---@param DifficultySetting int32
function UMasterOverseer:SetBiomeDifficultySetting(Context, Biome, DifficultySetting) end
---@param Context UObject
---@param RoomIndex int32
---@param UniqueActorGUID FGuid
function UMasterOverseer:RestoreActorFromSnapshot(Context, RoomIndex, UniqueActorGUID) end
---@param Context UObject
---@param RoomIndex int32
---@param bResetOnRoomUnload boolean
function UMasterOverseer:ResetRoomPersistenceData(Context, RoomIndex, bResetOnRoomUnload) end
---@param Context UObject
---@param RoomIndex int32
function UMasterOverseer:ResetAndReloadRoom(Context, RoomIndex) end
---@param Context UObject
---@param RoomIndex int32
---@param ActorTypeToRemove TSubclassOf<AActor>
function UMasterOverseer:RemoveActorSpawnedByRoom(Context, RoomIndex, ActorTypeToRemove) end
---@param StreamActor ALevelGenRoomStreamingActor
function UMasterOverseer:OnRoomShown(StreamActor) end
---@param StreamActor ALevelGenRoomStreamingActor
function UMasterOverseer:OnRoomLoaded(StreamActor) end
---@param StreamActor ALevelGenRoomStreamingActor
function UMasterOverseer:OnRoomHidden(StreamActor) end
---@param RoomIndex int32
function UMasterOverseer:OnRoomDeactivatedTimer(RoomIndex) end
---@param RoomIndex int32
---@param ActivationEventType ERoomActivationEventType
function UMasterOverseer:OnRoomDeactivated(RoomIndex, ActivationEventType) end
---@param StreamActor ALevelGenRoomStreamingActor
function UMasterOverseer:OnRoomBeginShutdown(StreamActor) end
---@param StreamActor ALevelGenRoomStreamingActor
function UMasterOverseer:OnRoomBeginShow(StreamActor) end
---@param StreamActor ALevelGenRoomStreamingActor
function UMasterOverseer:OnRoomBeginHide(StreamActor) end
---@param RoomIndex int32
---@param ActivationEventType ERoomActivationEventType
function UMasterOverseer:OnRoomActivated(RoomIndex, ActivationEventType) end
function UMasterOverseer:OnResumeCompleted() end
---@param Enemy AEnemyBase
function UMasterOverseer:OnEnemyKilled(Enemy) end
---@param Biome EBiome
---@param BiomeState EBiomeState
function UMasterOverseer:OnBiomeStateChanged(Biome, BiomeState) end
---@param NewBiome EBiome
function UMasterOverseer:OnBiomeChanged(NewBiome) end
---@param Context UObject
---@param RoomIndex int32
---@return boolean
function UMasterOverseer:IsRoomReadyByRoomIndex(Context, RoomIndex) end
---@param Context UObject
---@param Location FVector
---@param PreferredRoomIndex int32
---@return boolean
function UMasterOverseer:IsRoomReadyAtLocation(Context, Location, PreferredRoomIndex) end
---@param Context UObject
---@param CardNumber int32
---@return boolean
function UMasterOverseer:HasTemplateCardBeenUsed(Context, CardNumber) end
---@param Context UObject
---@param RoomIndex int32
---@param Fingerprint Fingerprint
---@return boolean
function UMasterOverseer:HasRoomSublevelSetupUnloadedOnce(Context, RoomIndex, Fingerprint) end
---@param Context UObject
---@param RoomIndex int32
---@param EventType ERoomActivationEventType
---@return boolean
function UMasterOverseer:HasRoomHandledActivationEvent(Context, RoomIndex, EventType) end
---@param Context UObject
---@param RoomIndex int32
---@return boolean
function UMasterOverseer:HasRoomBeenUnloadedOnce(Context, RoomIndex) end
---@param Context UObject
---@param RoomIndex int32
---@return boolean
function UMasterOverseer:HasPlayerVisitedRoom(Context, RoomIndex) end
---@param Context UObject
---@return TArray<int32>
function UMasterOverseer:GetUnusedTemplateCards(Context) end
---@param Context UObject
---@param RoomIndex int32
---@param bIncludeMaterializers boolean
---@return int32
function UMasterOverseer:GetTotalNumberOfEnemiesSpawnedInRoom(Context, RoomIndex, bIncludeMaterializers) end
---@param ActorType TSubclassOf<AActor>
---@param RoomIndex int32
---@return int32
function UMasterOverseer:GetSpawnCountOfClassBaseTypeByRoomIndex(ActorType, RoomIndex) end
---@param Context UObject
---@param ActorType TSubclassOf<AActor>
---@return int32
function UMasterOverseer:GetSpawnCountOfClassBaseType(Context, ActorType) end
---@param WorldContextObject UObject
---@param ActorType TSubclassOf<AActor>
---@param RoomIndex int32
---@return TArray<AActor>
function UMasterOverseer:GetRoomTrackedActorsByTypeByRoomIndex(WorldContextObject, ActorType, RoomIndex) end
---@param Context UObject
---@param RoomIndex int32
---@return Fingerprint
function UMasterOverseer:GetRoomSublevelFingerprint(Context, RoomIndex) end
---@param WorldContextObject UObject
---@param RoomIndex int32
---@return FName
function UMasterOverseer:GetRoomName(WorldContextObject, RoomIndex) end
---@param Context UObject
---@param Level ULevel
---@return int32
function UMasterOverseer:GetRoomIndexByLevel(Context, Level) end
---@param Context UObject
---@param Position FVector
---@param PreferredRoomIndex int32
---@return int32
function UMasterOverseer:GetRoomIndexAtPosition(Context, Position, PreferredRoomIndex) end
---@param Context UObject
---@param RoomIndex int32
---@return TArray<AActor>
function UMasterOverseer:GetRoomActors(Context, RoomIndex) end
---@param Context UObject
---@param RoomIndex int32
---@return int32
function UMasterOverseer:GetNumberOfEnemiesWaitingToSpawn(Context, RoomIndex) end
---@param Context UObject
---@param RoomIndex int32
---@return int32
function UMasterOverseer:GetNumberOfEnemiesInRoom(Context, RoomIndex) end
---@param Context UObject
---@return TMap<FString, int32>
function UMasterOverseer:GetGlobalEnemiesSortedList(Context) end
---@param Context UObject
---@param RoomIndex int32
---@return TArray<AActor>
function UMasterOverseer:GetEnemySpawnersWaitingToSpawn(Context, RoomIndex) end
---@param Context UObject
---@param Biome EBiome
---@return int32
function UMasterOverseer:GetBiomeDifficultySetting(Context, Biome) end
---@param Context UObject
---@param RoomIndex int32
---@return TArray<AEnemyBase>
function UMasterOverseer:GetAliveAndActiveEnemiesInRoom(Context, RoomIndex) end
---@param WorldContextObject UObject
---@return EBiome
function UMasterOverseer:GetActiveBiome(WorldContextObject) end
---@param Context UObject
---@param CardsToFree TArray<int32>
---@return boolean
function UMasterOverseer:FreeTemplateCards(Context, CardsToFree) end
function UMasterOverseer:DoImgui() end
---@param RoomIndex int32
---@param bIsDeactivationDespawn boolean
function UMasterOverseer:DespawnDespawnablesInRoom(RoomIndex, bIsDeactivationDespawn) end
---@param Context UObject
---@param Cards TArray<int32>
---@return boolean
function UMasterOverseer:DefineAllowedTemplateCards(Context, Cards) end
---@param Context UObject
function UMasterOverseer:CaptureTestPersistenceSnapshot(Context) end
---@param WorldContextObject UObject
---@return boolean
function UMasterOverseer:AreAllSpawnsblocked(WorldContextObject) end
---@param Context UObject
function UMasterOverseer:ApplyTestPersistenceSnapshot(Context) end
---@param Context UObject
---@param RoomIndex int32
---@param SpawnedActor AActor
function UMasterOverseer:AddActorSpawnedByRoom(Context, RoomIndex, SpawnedActor) end


---@class UMediaData : UPrimaryDataAsset
---@field MediaSource UMediaSource
---@field MediaTexture UMediaTexture
---@field MediaMaterial UMaterialInterface
---@field StartAudioEvent UAkAudioEvent
---@field StopAudioEvent UAkAudioEvent
---@field ShowFrameDelay int32
---@field StartFadeDuration float
---@field StopFadeDuration float
---@field StopFadeOffset float
---@field Looping boolean
---@field Subtitles1 FName
---@field Subtitles2 FName
---@field bSubtitlesInEnglish boolean
UMediaData = {}



---@class UMediaUserWidget : UHMQUserWidget
UMediaUserWidget = {}


---@class UMeleeAttack : UDataAsset
---@field InputBlendOutThreshold float
---@field InputBlendOutTime float
---@field InputBlendOutMovementType EBlendOutMovementType
---@field GameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field bUseMovementCurve boolean
---@field InvulnerabilityType EMeleeInvulnerabilityType
---@field AnimMontageMove UAnimMontage
---@field AnimMontageAttack UAnimMontage
---@field AnimationTimedGameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field AnimPlayRate float
---@field Damages TArray<FTouristDamageDescriptor>
---@field AreaAttackRadius float
---@field AreaAttackOrigin EAreaAttackOrigin
---@field AreaAttackCollisionShapeIndex int32
---@field AreaAttackDamages TArray<FTouristDamageDescriptor>
---@field AreaAttackEffect TSubclassOf<AEffectContainer>
---@field AreaAttackImpulse float
---@field AreaAttackFalloff float
---@field HitStopDuration float
---@field HitStopIn float
---@field HitStopOut float
---@field HitStopStrength float
---@field KillStopDuration float
---@field KillStopIn float
---@field KillStopOut float
---@field KillStopStrength float
---@field HitStopRecipent EHitStopRecipent
---@field bIsGroundSlam boolean
---@field GroundSlamMinHeight float
---@field GroundSlamGravityBoost float
---@field GroundSlamCancelBlendOutDuration float
---@field AttackStartEffect TSubclassOf<AEffectContainer>
---@field VegetationDisplacementWeight float
---@field VegetationDisplacementPow float
---@field FluidImpulseStrength float
---@field TracePositionCurve FInterpCurveVector
---@field TraceRotationCurve FInterpCurveQuat
UMeleeAttack = {}



---@class UMeshGlitchComponent : UActorComponent
---@field GlitchMaterial UMaterialInterface
---@field GlitchSpeed float
---@field MeshHeight float
---@field TargetMesh UMeshComponent
---@field OriginalTargetMaterials TArray<UMaterialInterface>
---@field GlitchMaterialInstance UMaterialInstanceDynamic
UMeshGlitchComponent = {}

---@param State EMeshGlitchState
function UMeshGlitchComponent:ChangeState(State) end
---@param StartState EMeshGlitchState
---@param Mesh UMeshComponent
function UMeshGlitchComponent:Attach(StartState, Mesh) end


---@class UMetaModifierBaseComponent : UHMQActorComponent
---@field OnMetaModifierChanged FMetaModifierBaseComponentOnMetaModifierChanged
---@field OnBaseMetaModifierChanged FMetaModifierBaseComponentOnBaseMetaModifierChanged
---@field OnMetaModifierDestroyed FMetaModifierBaseComponentOnMetaModifierDestroyed
---@field CodeName FName
---@field SpawnParams FMetaModifierSpawnParams
---@field Type EMetaModifierType
---@field Name FText
---@field Description FText
---@field Name2 FText
---@field Description2 FText
---@field Icon1 TSoftObjectPtr<UTexture2D>
---@field Icon2 TSoftObjectPtr<UTexture2D>
---@field ModTags TSet<FName>
---@field ModBlockedTags TSet<FName>
---@field ModRequiredTags TSet<FName>
---@field ModAlwaysPairWithTags TSet<FName>
---@field ModPreferPairWithTags TSet<FName>
---@field ActivationsUntilRemoved int32
---@field CachedOwnerCharacter ATouristCharacter
---@field OwnerComponent UMetaModifierOwnerComponent
---@field ConnectionComponent UMetaModifierConnectionComponent
---@field ConnectionEventsComponent UMetaModifierConnectionComponent
---@field bPrerequisitesOk boolean
---@field RepData FMetaModifierRepData
UMetaModifierBaseComponent = {}

---@param bPromoteChildren boolean
function UMetaModifierBaseComponent:Server_DestroyComponent(bPromoteChildren) end
---@param Text FText
---@return FText
function UMetaModifierBaseComponent:PropertifyText(Text) end
function UMetaModifierBaseComponent:OnRep_UntilRemoved() end
---@param OldRepData FMetaModifierRepData
function UMetaModifierBaseComponent:OnRep_RepData(OldRepData) end
---@param bPromoteChildren boolean
function UMetaModifierBaseComponent:Multicast_DestroyComponent(bPromoteChildren) end
---@param ConnectionComp UMetaModifierConnectionComponent
function UMetaModifierBaseComponent:HandleConnectionsChanged(ConnectionComp) end
---@param ConnectionComp UMetaModifierConnectionComponent
---@param MetaModComp UMetaModifierBaseComponent
function UMetaModifierBaseComponent:HandleConnectionRemoved(ConnectionComp, MetaModComp) end
---@param ConnectionComp UMetaModifierConnectionComponent
---@param MetaModComp UMetaModifierBaseComponent
function UMetaModifierBaseComponent:HandleConnectionAdded(ConnectionComp, MetaModComp) end
---@param ConnectionComp UMetaModifierConnectionComponent
---@param ModifierComp UMetaModifierBaseComponent
function UMetaModifierBaseComponent:HandleConnectedModifierChanged(ConnectionComp, ModifierComp) end
---@return ATouristCharacter
function UMetaModifierBaseComponent:GetConnectedCharacter() end
function UMetaModifierBaseComponent:DestroyMetaModifier() end


---@class UMetaModifierComponent : UMetaModifierBaseComponent
---@field DamageMultiplier float
---@field FullHealthDamageMultiplier float
---@field LowHealthDamageMultiplier float
---@field StandingStillDamageMultiplier float
---@field MidAirDamageMultiplier float
---@field LockOnDamageMultiplier float
---@field CriticalShotDamageMultiplier float
---@field PosWeaponModDamageMultiplierWhileCursed float
---@field DamageToHealthConversionMultiplier float
---@field PositiveClarityDamageMultiplier float
---@field NegativeClarityDamageMultiplier float
---@field ClarityThreshold float
---@field MaxHealthDelta float
---@field bInvincibility boolean
---@field bNoHealing boolean
---@field bNoLockon boolean
---@field bNoFocusAim boolean
---@field bNoShooting boolean
---@field bNoStartingWeapon boolean
---@field bDamageOnHealthCollecting boolean
---@field bDieFromNextDamage boolean
---@field bAbsorbAllDamage boolean
---@field bRemoveCurses boolean
---@field bEnableDoubleJump boolean
---@field bShowAllMapPOIs boolean
---@field bNoWeaponPickups boolean
---@field DisableCollectClass TSubclassOf<AActor>
---@field bDisableNegativeWeaponMods boolean
---@field ExtraLifeProbability float
---@field ExtraLives int32
---@field ExtraLifeHealth float
---@field bExtraLifeTransform boolean
---@field ExtraLifeTransform FTransform
---@field ExtraLifeBiome EBiome
---@field ExtraLifeActor AActor
---@field ExtraLifeGuid FGuid
---@field ExtraLifePriority int32
---@field bExtraLifeObjectComponentRequired boolean
---@field bExtraLifeShared boolean
---@field SelfDamageChanceOnFireBullet float
---@field SelfDamageAmountOnFireBullet float
---@field SelfDamagePercentOnFireBullet float
---@field bFullHealthOnUpgrade boolean
---@field bFullHealthOnKeyUse boolean
---@field bFullHealthOnDoorUnlock boolean
---@field DamageInvulnerabilityTimeDelta float
---@field DashCooldownDelta float
---@field DashCooldownMultiplier float
---@field MovementSpeedMultiplier float
---@field SprintSpeedMultiplier float
---@field MovementAccelerationMultiplier float
---@field MovementDecelerationMultiplier float
---@field MaxHealthUpgradeAmountSign int32
---@field MaxHealthUpgradeAmountUntilRemoved int32
---@field MaxHealthUpgradeAdd int32
---@field MaxHealthUpgradeModifyMaxSanity float
---@field BossKillsUntilRemoved int32
---@field ActiveReloadsUntilRemoved int32
---@field ActiveReloadReceiveDamage float
---@field ActiveReloadModifySanity float
---@field ActiveReloadChildName FName
---@field ActiveReloadChainDamage FMetaModifierChainDamage
---@field DamageCountUntilRemoved int32
---@field BoughtItemsUntilRemoved int32
---@field KeysUsedUntilRemoved int32
---@field KeysCollectedUntilRemoved int32
---@field KeysCollectedUntilRemovedKeyType EInventoryKeyType
---@field KillsUntilRemoved int32
---@field DamageReceivedUntilRemoved float
---@field DamageReceivedModifySanity float
---@field ItemsCollectedUntilRemoved int32
---@field ItemsCollectedUntilRemovedClass TSubclassOf<ACollectibleBase>
---@field ItemsCollectedExcludedClasses TArray<TSubclassOf<ACollectibleBase>>
---@field ItemsCollectedExcludedTypes TArray<ECollectibleType>
---@field CriticalHitsUntilRemoved int32
---@field GunUpgradesUntilRemoved int32
---@field HealthSacrificedUntilRemoved float
---@field SanityGainedUntilRemoved float
---@field ModsCollectedUntilRemovedTypes TArray<EMetaModifierType>
---@field ModsCollectedUntilRemoved int32
---@field ModifierLifetime float
---@field HealthWhenRemoved float
---@field HealthRegenPerSecond float
---@field HealthRegenBeginThreshold float
---@field HealthRegenEndThreshold float
---@field bHealthRegenOnlyActiveWhenIdle boolean
---@field bHealthRegenOnlyActiveWhenNotShooting boolean
---@field bHealthRegenOnlyActiveWhenInAir boolean
---@field HealthDrainPerSecond float
---@field HealEffect TSubclassOf<AEffectContainer>
---@field HealEffectSharedTag FName
---@field HealthDrainBeginThreshold float
---@field HealthDrainEndThreshold float
---@field bHealthDrainOnlyActiveWhenMoving boolean
---@field bHealthDrainOnlyActiveWhenShooting boolean
---@field bHealthDrainOnlyActiveWhenOnGround boolean
---@field EnemyAggressionModifierPercent float
---@field bEnemiesSplitOnDeath boolean
---@field MaxEnemySplitRecursion int32
---@field VisualSocketName FName
---@field Visual2SocketName FName
---@field VisualScale float
---@field Visual2Scale float
---@field StaticMeshName FString
---@field StaticMesh2Name FString
---@field VisualActorClass TSubclassOf<AActor>
---@field bVisualActorShared boolean
---@field VisualActorSocketName FName
---@field CollectibleSuckRadiusMultiplier float
---@field PerfectDodgeExplosionDamage float
---@field PerfectDodgeExplosionRadius float
---@field PerfectDodgeExplosionEffectName FName
---@field PerfectDodgesUntilRemoved int32
---@field PerfectDodgeChildName FName
---@field PerfectDodgeModifySanity float
---@field EnemyKillSpawnActor TSubclassOf<AActor>
---@field EnemyKillSpawnActorLifeSpan float
---@field bEnemyKillSpawnActorOnGround boolean
---@field DamageOnHardLanding float
---@field DamageOnManualCollecting float
---@field DamageOnKeyUse float
---@field EnemyKillBulletEvent FMetaModifierBulletEvent
---@field EnemyHitBulletEvent FMetaModifierBulletEvent
---@field OwnerHitBulletEvent FMetaModifierBulletEvent
---@field ModifySanity float
---@field ModifySanityOneShot float
---@field SanityValueMultiplierNeg float
---@field SanityValueMultiplierPos float
---@field SanityValueMinDelta float
---@field SanityValueMaxDelta float
---@field SanityModifiedPerCoinCollected float
---@field SanityValueDeltaPerSecond float
---@field MinAcceptableHealthPercentage float
---@field MaxAcceptableHealthPercentage float
---@field RequiresUpgrades int32
---@field RequiresParasites int32
---@field RequiresImpossibleFragments int32
---@field MinAcceptableMoney int32
---@field MaxAcceptableMoney int32
---@field ItemDropRateModifier float
---@field LootOverride FMetaModifierLootData
---@field AltLootOverride FMetaModifierLootData
---@field EnemyAltDropGroupChanceModifier float
---@field EnemyKillCoinDropMultiplier float
---@field LootSubCountMultiplierSourceClass TSubclassOf<AActor>
---@field LootSubCountMultiplierType ECollectibleType
---@field LootSubCountMultiplierGroup ECollectibleDropGroup
---@field LootSubCountMultiplierRadius float
---@field LootSubCountMultiplier float
---@field LoseMoneyPercentOnDamage float
---@field MoneyDrainPerSecond float
---@field ValueMultiplier FMetaModifierValueData
---@field DamageIncreaseByMoneyMultiplier float
---@field DamageIncreaseByMoneyMultiplierMaximum float
---@field HealthRegainedByMoneyCollected float
---@field DamageReceivedModifierPercent int32
---@field EnemyMovementSpeedModifierPercent int32
---@field ShopPriceModifierPercent int32
---@field ShopPriceFragmentModifierPercent int32
---@field NextShopClosedChance float
---@field bShopRestockEnabled boolean
---@field CriticalHitGainHealth float
---@field ReplaceDamageImpactType EDamageImpactType
---@field ReplaceDamageImpactTypeWith EDamageImpactType
---@field ReplaceDamageImpactTypeProbability float
---@field CriticalHitReceiveDamage float
---@field CriticalHitModifySanity float
---@field CriticalHitEnemyExplosionDamage float
---@field CriticalHitEnemyExplosionRadius float
---@field ModifyProficiency int32
---@field bResetProficiencyOnMainGunUpgrade boolean
---@field ProficiencyMultiplicativePos float
---@field bProficiencyGainHalted boolean
---@field ProficiencyAdditivePos int32
---@field ProficiencyMultiplicativeNeg float
---@field ProficiencyAdditiveNeg int32
---@field MinAcceptableSanityPercent float
---@field MaxAcceptableSanityPercent float
---@field MinAcceptableCurseCount int32
---@field MaxAcceptableCurseCount int32
---@field CurseProbability float
---@field CursedCurrencyProbability float
---@field CursedHealthProbability float
---@field CursedChestProbability float
---@field PsychoticEpisodeProbability float
---@field EliteEnemyProbability float
---@field bCriticalHitEnabled boolean
---@field bReloadMinigameEnabled boolean
---@field GameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field AttachEffectContainerClass TSubclassOf<AEffectContainer>
---@field DetachEffectContainerClass TSubclassOf<AEffectContainer>
---@field ExplosionEffectName FName
---@field ConsumeItemClass TSubclassOf<AActor>
---@field ConsumeItemsUntilRemoved int32
---@field KillComboModifySanity float
---@field MainWeaponUpgradeModifySanity float
---@field KillEliteModifySanity float
---@field KillBossModifySanity float
---@field HealthDeltaModifySanity float
---@field HealthDeltaMin float
---@field HealthDeltaMax float
---@field ModifySanityWhenDetached float
---@field WeaponCooldownAdditive float
---@field WeaponCooldownTag FName
---@field MeleeCooldownAdditive float
---@field MeleeCooldownMultiplier float
---@field MeleeReachMultiplier float
---@field MeleeDamageMultiplier float
---@field WeaponFireRateMultiplier float
---@field AltFireCooldownAdditive float
---@field AltFireCooldownOneOffAdjustment float
---@field bBlocksAltFire boolean
---@field ImpulseScaleOnWeaponFire float
---@field HealMultiplier float
---@field InteractsUntilRemoved int32
---@field InteractsUntilRemovedClass TSubclassOf<AActor>
---@field DisableMetaModifierTypes TArray<EMetaModifierType>
---@field CurseEffectTypeOverride FName
---@field CurseConditionTypeOverride FName
---@field SimultaneousKillsUntilRemoved int32
---@field SimultaneousKillsInterval float
---@field SimultaneousKillsRequiredCount int32
---@field CurrencyAdditionalLifeSpan float
---@field DashEnemyCollisionCauseDamage float
---@field DashEnemyCollisionCauseDamageTypeClass TSubclassOf<UTouristDamageType>
---@field DashEnemyCollisionCauseDamageEffect TSubclassOf<AEffectContainer>
---@field MeleeKillChainDamage FMetaModifierChainDamage
---@field LowHealthStateRequired int32
---@field AdrenalineRequiredLevel int32
---@field AdrenalineChildModToSpawnOnEachAdrenalineLevelGain FName
---@field AdrenalineChildModToSpawnOnAdrenalineLevelReset FName
---@field HitsRequiredToDrainAdrenaline int32
---@field AddAdrenalineEnemyKillsRequired int32
---@field ChildStackCount int32
---@field ChildMetaModToSpawn FName
---@field SpawnOnItemCollectClass TSubclassOf<ACollectibleBase>
---@field SpawnOnItemCollectChildName FName
---@field SkillNodeEquipCost int32
---@field SkillNodeSuperCost int32
---@field SkillNodeSuperId FName
---@field SkillNodeCurseId FName
---@field bDisableSkillNode boolean
---@field DisableSkillNodeCodeName FName
---@field bDisableWeaponTrait boolean
---@field bCurseApplied boolean
---@field WorldTimeDilation float
---@field WorldTimeDilationWhenMoving float
---@field BulletsExplodeUponDeath boolean
---@field BulletsExplodeUponDeathRadius float
---@field BulletsExplodeUponDeathDamageMultiplier float
---@field BulletsExplodeUponDeathVfx FName
---@field GravityModifier float
---@field LandingBounceFactor float
---@field LandingBounceMinimumVelocity float
---@field ConsumeKeyTypes TArray<EInventoryKeyType>
---@field ConsumeKeyProbability float
---@field ConsumeConsumableProbability float
---@field MaxHealthUpgradeIncreaseAmount float
---@field FeatureEnabled FName
---@field FeatureEnabledProbability float
---@field FeatureDisabled FName
---@field FeatureDisabledProbability float
---@field bComboModSwitchOnConnect boolean
---@field bComboModSwitchOnDisconnect boolean
---@field bComboModSwitchOnSpawn boolean
---@field ComboModSwitchType EMetaModifierType
---@field ComboModSwitchSrcType1 FName
---@field ComboModSwitchSrcType2 FName
---@field ComboModSwitchDstType1 FName
---@field ComboModSwitchDstType2 FName
---@field DamageTargetLowHealthMultiplier float
---@field DamageTargetLowHealthPercent float
---@field TargetWeakPointDamageMultiplier float
---@field LootSpawnWeightGroup ECollectibleDropGroup
---@field LootSpawnWeightActorClass TSubclassOf<AActor>
---@field LootSpawnWeightAdditive float
---@field LootSpawnWeightMultiplicative float
---@field bActivateOnSpawnWeigtedLoot boolean
---@field EventA FMetaModifierCombinationEvent
---@field EventB FMetaModifierCombinationEvent
---@field EventAActivationsUntilRemoved int32
---@field EventBActivationsUntilRemoved int32
---@field IncreasePocketCount int32
---@field BulletDamageTypeMultiplierClass TSubclassOf<UDamageType>
---@field BulletDamageTypeMultiplier float
---@field bStackableTemporaryBuff boolean
---@field SelectedDisabledMetaModifier FName
---@field VisualActorDynamicPlacement FName
---@field ClarityUntilRemoved float
---@field bClarityUntilRemovedGainMode boolean
---@field OwnerHitInstigatorHealAmount float
---@field ModifyClarityCost float
---@field bModifyClarityCostAdditiveMode boolean
---@field ArtefactSlotCount int32
---@field ParasiteState int32
---@field ParasitePhase float
---@field CurseConditionWidgetName FName
---@field CurseConditionOriginalValue int32
---@field VisualActor AActor
---@field bAbsorbAllDamageHandled boolean
---@field AppliedGameplayEffects FTouristGameplayEffectHandle
---@field CriticalHitDamageMultiplierLifeTime float
---@field bHealthRegenActive boolean
---@field bHealthDrainActive boolean
---@field JumpStartVelocity float
---@field DisabledSkillNodeComponent UMetaModifierComponent
UMetaModifierComponent = {}

function UMetaModifierComponent:SimultaneousKillsTimer() end
---@param InteractingController AController
---@param InteractTarget AActor
function UMetaModifierComponent:OnPlayerInteract(InteractingController, InteractTarget) end
---@param Gun APlayerWeapon
function UMetaModifierComponent:OnOwningGunUpgraded(Gun) end
---@param DeltaSanity float
---@param SanityPercent float
---@param bSanityStateChanged boolean
---@param NewSanityState ASanityState
function UMetaModifierComponent:OnOwnerSanityChanged(DeltaSanity, SanityPercent, bSanityStateChanged, NewSanityState) end
---@param hit FHitResult
---@param Velocity FVector
---@param bHardLand boolean
function UMetaModifierComponent:OnOwnerLanding(hit, Velocity, bHardLand) end
---@param KeyType EInventoryKeyType
---@param amount int32
function UMetaModifierComponent:OnOwnerKeyUsed(KeyType, amount) end
---@param KeyType EInventoryKeyType
---@param amount int32
---@param Delta int32
function UMetaModifierComponent:OnOwnerKeyAmountChanged(KeyType, amount, Delta) end
function UMetaModifierComponent:OnOwnerJumped() end
---@param Item ACollectibleBase
---@param bManually boolean
function UMetaModifierComponent:OnOwnerItemCollected(Item, bManually) end
---@param Dealer AActor
---@param ItemClass TSubclassOf<AActor>
---@param Price int32
function UMetaModifierComponent:OnOwnerItemBought(Dealer, ItemClass, Price) end
---@param amount float
function UMetaModifierComponent:OnOwnerHealthSacrificed(amount) end
---@param Gun APlayerWeapon
function UMetaModifierComponent:OnOwnerGunUpgraded(Gun) end
---@param EventType EEnemyTargetDodgeEventType
function UMetaModifierComponent:OnOwnerDodgedEnemy(EventType) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UMetaModifierComponent:OnOwnerDamageTaken(DamagedActor, DamageEvent) end
---@param Enemy AActor
---@param DamageEvent FTouristDamageEvent
---@param bCriticalHit boolean
function UMetaModifierComponent:OnOwnerDamagedEnemy(Enemy, DamageEvent, bCriticalHit) end
---@param TargetActor AActor
---@param DamageEvent FTouristDamageEvent
function UMetaModifierComponent:OnDamageAbsorbed(TargetActor, DamageEvent) end
---@param LootSpawner ULootSpawnerComponent
---@param LootGroup ECollectibleDropGroup
---@param SpawnedActor AActor
function UMetaModifierComponent:HandleSpawnLoot(LootSpawner, LootGroup, SpawnedActor) end
---@param RoomIndex int32
function UMetaModifierComponent:HandleRoomExplored(RoomIndex) end
---@param RoomIndex int32
function UMetaModifierComponent:HandleRoomCleared(RoomIndex) end
---@param PlayerCharacter APlayerCharacter
---@param StaggeredActor AActor
---@param DamageEvent FTouristDamageEvent
function UMetaModifierComponent:HandleOwnerStaggeredActor(PlayerCharacter, StaggeredActor, DamageEvent) end
---@param Actor AActor
---@param DamageEvent FTouristDamageEvent
---@param bCriticalHit boolean
function UMetaModifierComponent:HandleOwnerKilledActor(Actor, DamageEvent, bCriticalHit) end
---@param HealthComponent UHealthComponent
function UMetaModifierComponent:HandleOwnerHealthChanged(HealthComponent) end
---@param amount float
---@param HealType EHealType
function UMetaModifierComponent:HandleOwnerHealed(amount, HealType) end
---@param OldLevel int32
---@param NewLevel int32
function UMetaModifierComponent:HandleOwnerAdrenalineLevelUpdated(OldLevel, NewLevel) end
---@param Inventory UInventory
---@param Key EInventoryKeyType
function UMetaModifierComponent:HandleNoConsumeKey(Inventory, Key) end
---@param Inventory UInventory
---@param Consumable UConsumableComponent
function UMetaModifierComponent:HandleNoConsumeConsumable(Inventory, Consumable) end
---@param Attribute USimpleAttributeComponent
function UMetaModifierComponent:HandleMaxHealthUpgradeConsumed(Attribute) end
---@param Attribute USimpleAttributeComponent
---@param OldValue float
function UMetaModifierComponent:HandleMaxHealthUpgradeChanged(Attribute, OldValue) end
function UMetaModifierComponent:HandleMainWeaponReloadMinigameSuccess() end
---@param NewWeapon APlayerGun
---@param OldWeapon APlayerGun
function UMetaModifierComponent:HandleMainWeaponChanged(NewWeapon, OldWeapon) end
---@param HealthComponent UHealthComponent
---@param bIsLowHealth boolean
function UMetaModifierComponent:HandleLowHealthModeChanged(HealthComponent, bIsLowHealth) end
---@param Inventory UInventory
---@param InventoryItem UHMQInventoryItemComponent
function UMetaModifierComponent:HandleInventoryItemConsume(Inventory, InventoryItem) end
---@param bPerfectDodge boolean
---@param bHitWall boolean
function UMetaModifierComponent:HandleDashStop(bPerfectDodge, bHitWall) end
---@param DashComponent UDashAbilityComponent
---@param bPerfectDodge boolean
---@param DashLevel int32
function UMetaModifierComponent:HandleDashStart(DashComponent, bPerfectDodge, DashLevel) end
---@param Delta float
---@param Total float
function UMetaModifierComponent:HandleClarityChanged(Delta, Total) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function UMetaModifierComponent:HandleCapsuleEndOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function UMetaModifierComponent:HandleCapsuleBeginOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
---@param bSuccess boolean
---@param cooldown float
function UMetaModifierComponent:HandleAltFireUse(bSuccess, cooldown) end
---@param bActive boolean
function UMetaModifierComponent:HandleAltFireReady(bActive) end
function UMetaModifierComponent:HandleAdrenalineReset() end
---@param ActorControllerComp UActorControllerComponent
function UMetaModifierComponent:HandleActorControllerStateChanged(ActorControllerComp) end


---@class UMetaModifierConnectionComponent : UMetaModifierContainerComponent
---@field OnConnectionAdded FMetaModifierConnectionComponentOnConnectionAdded
---@field OnConnectionRemoved FMetaModifierConnectionComponentOnConnectionRemoved
---@field OnConnectionsChanged FMetaModifierConnectionComponentOnConnectionsChanged
---@field OnModifierChanged FMetaModifierConnectionComponentOnModifierChanged
---@field OnModifiersChanged FMetaModifierConnectionComponentOnModifiersChanged
---@field ConnectedMetaModifiers TSet<UMetaModifierBaseComponent>
---@field DisconnectedMetaModifiers TSet<UMetaModifierBaseComponent>
UMetaModifierConnectionComponent = {}

---@param ModifierComp UMetaModifierBaseComponent
function UMetaModifierConnectionComponent:HandleModifierChanged(ModifierComp) end
---@param MetaModifierClass TSubclassOf<UMetaModifierBaseComponent>
---@param OutMetaModifiers TArray<UMetaModifierBaseComponent>
function UMetaModifierConnectionComponent:BP_GetDisconnectedMetaModifiersOfClass(MetaModifierClass, OutMetaModifiers) end


---@class UMetaModifierContainerComponent : UHMQActorComponent
UMetaModifierContainerComponent = {}

---@param Tag FName
---@return boolean
function UMetaModifierContainerComponent:ModHasTag(Tag) end
---@param Type EMetaModifierType
---@return boolean
function UMetaModifierContainerComponent:HasMetaModifierOfType(Type) end
---@param CodeName FName
---@return boolean
function UMetaModifierContainerComponent:HasMetaModifier(CodeName) end
---@param Types TSet<EMetaModifierType>
---@param OutMetaModifiers TArray<UMetaModifierBaseComponent>
function UMetaModifierContainerComponent:GetMetaModifiersOfTypes(Types, OutMetaModifiers) end
---@param Type EMetaModifierType
---@param OutMetaModifiers TArray<UMetaModifierBaseComponent>
function UMetaModifierContainerComponent:GetMetaModifiersOfType(Type, OutMetaModifiers) end
---@param OutMetaModifiers TArray<UMetaModifierBaseComponent>
function UMetaModifierContainerComponent:GetMetaModifiers(OutMetaModifiers) end
---@param Type EMetaModifierType
---@param OutNames TSet<FName>
function UMetaModifierContainerComponent:GetMetaModifierNamesOfType(Type, OutNames) end
---@param OutNames TSet<FName>
function UMetaModifierContainerComponent:GetMetaModifierNames(OutNames) end
---@param Pawn APawn
---@param Types TSet<EMetaModifierType>
---@param OutInfos TArray<FMetaModifierInfo>
function UMetaModifierContainerComponent:GetMetaModifierInfosOfTypes(Pawn, Types, OutInfos) end
---@param Pawn APawn
---@param Type EMetaModifierType
---@param OutInfos TArray<FMetaModifierInfo>
function UMetaModifierContainerComponent:GetMetaModifierInfosOfType(Pawn, Type, OutInfos) end
---@param Types TSet<EMetaModifierType>
---@return int32
function UMetaModifierContainerComponent:GetMetaModifierCountOfTypes(Types) end
---@param Type EMetaModifierType
---@return int32
function UMetaModifierContainerComponent:GetMetaModifierCountOfType(Type) end
---@param CodeName FName
---@return UMetaModifierBaseComponent
function UMetaModifierContainerComponent:GetMetaModifier(CodeName) end
---@param MetaModifier UMetaModifierBaseComponent
---@return boolean
function UMetaModifierContainerComponent:ContainsMetaModifier(MetaModifier) end
---@param MetaModifierClass TSubclassOf<UMetaModifierBaseComponent>
---@param OutMetaModifiers TArray<UMetaModifierBaseComponent>
function UMetaModifierContainerComponent:BP_GetMetaModifiersOfClass(MetaModifierClass, OutMetaModifiers) end


---@class UMetaModifierOwnerComponent : UMetaModifierContainerComponent
---@field OnModifierAdded FMetaModifierOwnerComponentOnModifierAdded
---@field OnModifierRemoved FMetaModifierOwnerComponentOnModifierRemoved
---@field OnCanSpawnModifier FMetaModifierOwnerComponentOnCanSpawnModifier
---@field ExistingMods TArray<UMetaModifierBaseComponent>
UMetaModifierOwnerComponent = {}

---@param MetaModifierType EMetaModifierType
function UMetaModifierOwnerComponent:SpawnRandomMetaModifier(MetaModifierType) end
---@param MetaModifierClass TSubclassOf<UMetaModifierBaseComponent>
function UMetaModifierOwnerComponent:SpawnMetaModifierOfClass(MetaModifierClass) end
---@param CodeName FName
function UMetaModifierOwnerComponent:SpawnMetaModifier(CodeName) end
---@param MetaModifierClass TSubclassOf<UMetaModifierBaseComponent>
function UMetaModifierOwnerComponent:Server_SpawnMetaModifierOfClass(MetaModifierClass) end
---@param CodeName FName
---@param Data TArray<uint8>
---@param Params FMetaModifierSpawnParams
function UMetaModifierOwnerComponent:Server_SpawnMetaModifier(CodeName, Data, Params) end
---@param MetaModifierType EMetaModifierType
---@return FName
function UMetaModifierOwnerComponent:SelectRandomMetaModifier(MetaModifierType) end
function UMetaModifierOwnerComponent:RejectSpawnModifier() end
---@param ModifierName FName
---@return boolean
function UMetaModifierOwnerComponent:IsAcceptableModifier(ModifierName) end
function UMetaModifierOwnerComponent:DestroyAllMetaModifiers() end
---@param MetaModifierName FName
function UMetaModifierOwnerComponent:Client_MetaModifierRemoved(MetaModifierName) end
---@param MetaModifierName FName
---@param ModifierLifetime float
function UMetaModifierOwnerComponent:Client_MetaModifierChanged(MetaModifierName, ModifierLifetime) end
---@param MetaModifierName FName
function UMetaModifierOwnerComponent:Client_MetaModifierAdded(MetaModifierName) end


---@class UMinimapMouseVelocityDataAsset : UDataAsset
---@field MouseRotateVelocity float
---@field MousePanVelocity float
---@field MouseZoomVelocity float
UMinimapMouseVelocityDataAsset = {}



---@class UMinimapObject : USphereComponent
---@field VisibilityUpdateMode EMinimapIconVisibilitySetting
---@field RevealRadius float
---@field bIconIsStatic boolean
---@field bAutomaticIconBasedOnType boolean
---@field bLeaveTrail boolean
---@field DistanceBetweenTrailItems float
---@field MaxTrailCount int32
---@field TrailFadePercent float
---@field bAllowIconDetach boolean
---@field RoomIndex int32
---@field ReferredRoomIndex int32
---@field IconActor AMinimapIcon
---@field MinimapPainter AMinimapPainter
---@field ObjectType EMinimapObjectType
---@field SettingsAsset UStaticMinimapIconSettings
---@field bIconSettingsOverridden boolean
---@field OverrideIconSettings FMinimapIconSettings
---@field HighlightRequests int32
---@field IconGUID FGuid
UMinimapObject = {}

function UMinimapObject:SetupSpehereSettings() end
---@param NewSettingsAsset UStaticMinimapIconSettings
function UMinimapObject:SetSettingsAsset(NewSettingsAsset) end
---@param InOverrideIconSettings FMinimapIconSettings
function UMinimapObject:SetOverrideIconSettings(InOverrideIconSettings) end
---@param NewType EMinimapObjectType
function UMinimapObject:SetObjectType(NewType) end
---@param synced boolean
function UMinimapObject:SetMinimapIconTickSyncedToMinimap(synced) end
---@param Serializer TScriptInterface<IDespawnableActorSerializer>
function UMinimapObject:SerializeState(Serializer) end
function UMinimapObject:RequestHighLightEnable() end
function UMinimapObject:RequestHighLightDisable() end
---@param bOldIconSettingsOverriden boolean
function UMinimapObject:OnRep_SettingsOverridden(bOldIconSettingsOverriden) end
---@param OldSettingsAsset UStaticMinimapIconSettings
function UMinimapObject:OnRep_SettingsAsset(OldSettingsAsset) end
---@param OldOverrideIconSettings FMinimapIconSettings
function UMinimapObject:OnRep_OverrideIconSettings(OldOverrideIconSettings) end
---@param OldObjectType EMinimapObjectType
function UMinimapObject:OnRep_ObjectType(OldObjectType) end
---@param OldIconGuid FGuid
function UMinimapObject:OnRep_IconGuid(OldIconGuid) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function UMinimapObject:OnOverlapBegin(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
function UMinimapObject:MinimapUpdated() end
function UMinimapObject:MinimapGenerated() end
---@return boolean
function UMinimapObject:IsHighlighted() end
---@return EMinimapObjectType
function UMinimapObject:GetObjectType() end
---@return boolean
function UMinimapObject:GetIconSettingsOverridden() end
function UMinimapObject:DisableIconOverride() end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UMinimapObject:BiomeStateChanged(Biome, NewBiomeState) end


---@class UMontageAnimActionPicker : UObject
UMontageAnimActionPicker = {}

---@param SequenceIndex int32
---@param Action UCharacterAnimAction_Composite
---@param PreviousPlayedMontageAction UCharacterAnimAction_Montage
---@param OwnerAnimInstance UTouristCharacterAnimInstance
---@return UCharacterAnimAction_Montage
function UMontageAnimActionPicker:PickMontageAction(SequenceIndex, Action, PreviousPlayedMontageAction, OwnerAnimInstance) end


---@class UMotionWarpData : UDataAsset
---@field bRotateActorToEndRot boolean
---@field AnimMontage UAnimMontage
---@field bUseMontageTiming boolean
---@field AnimMontagePlayRate float
---@field AnimMontageStartTime float
---@field MotionWarpPoints TArray<FMotionWarpPoint>
---@field ForwardCurve UCurveFloat
---@field UpCurve UCurveFloat
UMotionWarpData = {}



---@class UMouseSensitivityDataAsset : UDataAsset
---@field MouseSensitivity FSliderControls
---@field ADSMouseSensitivity FSliderControls
UMouseSensitivityDataAsset = {}



---@class UMultiSpawnerComponent : UCommandScriptComponent
---@field SpawnAreaWidth float
---@field SpawnAreaDepth float
---@field SpawnCellWidth float
---@field SpawnCellDepth float
---@field SpawnClasses TArray<TSubclassOf<AActor>>
---@field SpawnClassesUserPolicy TArray<ECollectibleUserPolicy>
---@field SpawnedObjects int32
UMultiSpawnerComponent = {}

function UMultiSpawnerComponent:Spawn() end
function UMultiSpawnerComponent:ClearSpawns() end
---@param SoftSpawnClass TSoftClassPtr<AActor>
---@param bUnique boolean
---@param UserPolicy ECollectibleUserPolicy
function UMultiSpawnerComponent:AddSpawnSoftClass(SoftSpawnClass, bUnique, UserPolicy) end
---@param Group ECollectibleDropGroup
---@param SpawnPolicy ECollectibleSpawnPolicy
---@param MinCount int32
---@param MaxCount int32
---@param bUnique boolean
function UMultiSpawnerComponent:AddSpawnGroup(Group, SpawnPolicy, MinCount, MaxCount, bUnique) end
---@param ActorClass TSubclassOf<AActor>
---@param bUnique boolean
---@param UserPolicy ECollectibleUserPolicy
function UMultiSpawnerComponent:AddSpawnClass(ActorClass, bUnique, UserPolicy) end


---@class UMultiplayerRankComponent : UActorComponent
---@field OnRankChanged FMultiplayerRankComponentOnRankChanged
---@field OnRankPointsChanged FMultiplayerRankComponentOnRankPointsChanged
---@field OnRankRewards FMultiplayerRankComponentOnRankRewards
---@field RankPoints int32
---@field BasePointsNeededForRank int32
---@field PointsNeededForRankIncreasePerRank int32
---@field BossPoints int32
---@field MaxRank int32
---@field BaseEtherRewardPerRank int32
---@field EtherRewardStepCount int32
---@field EtherAdditiveAmount int32
---@field IgnoredEnemyTypes TSet<TSoftClassPtr<AEnemyBase>>
---@field RankUpEffect TSubclassOf<AEffectContainer>
UMultiplayerRankComponent = {}

---@param ThingParams FUpdateThingStatsParams
---@param BeforeValue int32
---@param AfterValue int32
function UMultiplayerRankComponent:ThingStatsChanged(ThingParams, BeforeValue, AfterValue) end
---@param ClientPoints int32
function UMultiplayerRankComponent:ServerSetClientValue(ClientPoints) end
---@param Enemy AEnemyBase
---@param DamageEvent FTouristDamageEvent
---@param bCriticalHit boolean
function UMultiplayerRankComponent:OwnerEnemyKilled(Enemy, DamageEvent, bCriticalHit) end
---@param OldPoints int32
function UMultiplayerRankComponent:OnRep_RankPoints(OldPoints) end
function UMultiplayerRankComponent:MultiplayerStatusChanged() end
---@param RewardRank int32
---@param ClariryAmountToGive int32
function UMultiplayerRankComponent:Multicast_GiveClarity(RewardRank, ClariryAmountToGive) end
---@param OldRank int32
---@param NewRank int32
function UMultiplayerRankComponent:HandleRankChanged(OldRank, NewRank) end


---@class UMultiplayerRewardsComponent : UActorComponent
---@field OnTierChanged FMultiplayerRewardsComponentOnTierChanged
---@field OnTierProgress FMultiplayerRewardsComponentOnTierProgress
---@field Tier int32
---@field Progress int32
---@field PointsPerTier int32
---@field BossPoints int32
---@field MaxTier int32
---@field IgnoredEnemyTypes TSet<TSoftClassPtr<AEnemyBase>>
UMultiplayerRewardsComponent = {}

---@param ThingParams FUpdateThingStatsParams
---@param BeforeValue int32
---@param AfterValue int32
function UMultiplayerRewardsComponent:ThingStatsChanged(ThingParams, BeforeValue, AfterValue) end
---@param Enemy AEnemyBase
---@param DamageEvent FTouristDamageEvent
---@param bCriticalHit boolean
function UMultiplayerRewardsComponent:OwnerEnemyKilled(Enemy, DamageEvent, bCriticalHit) end
---@param OldTier int32
function UMultiplayerRewardsComponent:OnRep_Tier(OldTier) end
---@param OldProgress int32
function UMultiplayerRewardsComponent:OnRep_Progress(OldProgress) end
function UMultiplayerRewardsComponent:MultiplayerStatusChanged() end


---@class UMusicSelection : UDataAsset
---@field SwitchName FName
---@field Layer EMusicLayer
UMusicSelection = {}



---@class UMusicianNavigationContextComponent : UActorComponent
UMusicianNavigationContextComponent = {}


---@class UMusicianNavigationGenerator : UObject
UMusicianNavigationGenerator = {}

---@param Context UMusicianNavigationContextComponent
---@param Success boolean
---@param Results TArray<FMusicianNavigationQueryResult>
function UMusicianNavigationGenerator:GeneratePoints(Context, Success, Results) end


---@class UMusicianNavigationSampler : UObject
UMusicianNavigationSampler = {}

---@param Points TArray<FMusicianNavigationQueryResult>
---@param Success boolean
---@param Results FMusicianNavigationQueryResult
function UMusicianNavigationSampler:SamplePoints(Points, Success, Results) end
---@param Points TArray<FMusicianNavigationQueryResult>
---@param Success boolean
---@param Result FMusicianNavigationQueryResult
function UMusicianNavigationSampler:ExecuteSample(Points, Success, Result) end


---@class UMusicianNavigationScoreNormalizer : UObject
UMusicianNavigationScoreNormalizer = {}

---@param Points TArray<FMusicianNavigationQueryResult>
---@param Lower float
---@param Upper float
---@param Results TArray<FMusicianNavigationQueryResult>
function UMusicianNavigationScoreNormalizer:NormalizePoints(Points, Lower, Upper, Results) end
---@param Points TArray<FMusicianNavigationQueryResult>
---@param Results TArray<FMusicianNavigationQueryResult>
function UMusicianNavigationScoreNormalizer:ExecuteNormalization(Points, Results) end


---@class UMusicianNavigationTest : UObject
UMusicianNavigationTest = {}

---@param Context UMusicianNavigationContextComponent
---@param Point FVector
---@param Success boolean
---@param Score float
function UMusicianNavigationTest:RunTest(Context, Point, Success, Score) end
---@param Context UMusicianNavigationContextComponent
---@param Point FMusicianNavigationQueryResult
---@param Success boolean
---@param Result FMusicianNavigationQueryResult
function UMusicianNavigationTest:ExecuteTest(Context, Point, Success, Result) end
---@param PreviousScore float
---@param Input float
---@param Output float
function UMusicianNavigationTest:AccumulateScore(PreviousScore, Input, Output) end


---@class UMusicianWeaponCommandScriptComponent : UWeaponCommandScriptComponent
---@field Prescript UMusicianWeaponPrescript
UMusicianWeaponCommandScriptComponent = {}



---@class UMusicianWeaponPrescript : UObject
UMusicianWeaponPrescript = {}


---@class UNGPBulletHandlerComponent : UActorComponent
---@field EffectName FName
---@field BulletColor FLinearColor
---@field BulletRadius float
UNGPBulletHandlerComponent = {}

---@param index int32
---@param NewLocation FVector
function UNGPBulletHandlerComponent:UpdatePfxLocation(index, NewLocation) end
---@param EffectName FName
---@param SpawnLocation FVector
---@param BulletSpace EBulletHandlerSpace
---@param OverrideBulletColor FLinearColor
---@return int32
function UNGPBulletHandlerComponent:SpawnPfxEffect(EffectName, SpawnLocation, BulletSpace, OverrideBulletColor) end
---@param SpawnLocation FVector
---@param BulletSpace EBulletHandlerSpace
---@return int32
function UNGPBulletHandlerComponent:SpawnPfx(SpawnLocation, BulletSpace) end
---@param index int32
function UNGPBulletHandlerComponent:RemovePfx(index) end
function UNGPBulletHandlerComponent:RemoveAllPfx() end
---@param index int32
---@return FVector
function UNGPBulletHandlerComponent:GetPfxWorldLocation(index) end
---@return int32
function UNGPBulletHandlerComponent:GetPfxCount() end
---@param index int32
---@return boolean
function UNGPBulletHandlerComponent:ContainsPfxIndex(index) end


---@class UNativeActivitiesManager : UObject
UNativeActivitiesManager = {}

---@param ActivityId FName
---@param TaskID FName
function UNativeActivitiesManager:StartTask(ActivityId, TaskID) end
---@param ActivityId FName
function UNativeActivitiesManager:StartActivity(ActivityId) end
---@param ActivityId FName
---@param TaskID FName
---@param Availability boolean
function UNativeActivitiesManager:SetTaskAvailability(ActivityId, TaskID, Availability) end
---@param ActivityId FName
---@param Availability boolean
function UNativeActivitiesManager:SetActivityAvailability(ActivityId, Availability) end
---@param ActivityId FName
---@return boolean
function UNativeActivitiesManager:IsActivityStarted(ActivityId) end
---@param ActivityId FName
---@return boolean
function UNativeActivitiesManager:IsActivityCompleted(ActivityId) end
---@param ActivityId FName
---@return boolean
function UNativeActivitiesManager:IsActivityAvailable(ActivityId) end
---@param ActivityId FName
---@param TaskID FName
---@param ActivityOutcome EActivityOutcome
function UNativeActivitiesManager:EndTask(ActivityId, TaskID, ActivityOutcome) end
---@param ActivityId FName
---@param ActivityOutcome EActivityOutcome
function UNativeActivitiesManager:EndActivity(ActivityId, ActivityOutcome) end


---@class UNavArea_Jump : UNavArea
UNavArea_Jump = {}


---@class UNetworkErrorTutorialWidget : UPauseMenu
---@field FailureType ESocialNetworkError
---@field bWasKicked boolean
UNetworkErrorTutorialWidget = {}



---@class UNotificationWidget : UTouristWidgetBase
---@field duration float
---@field InitialDelay float
---@field FrameHeadingTextOverride FText
---@field bIsWarning boolean
---@field bIsCelebration boolean
---@field OnNotificationVisibilityChangeHandled FNotificationWidgetOnNotificationVisibilityChangeHandled
---@field OnNotificationComplete FNotificationWidgetOnNotificationComplete
UNotificationWidget = {}

---@param Message FText
function UNotificationWidget:SetNotificationMessage(Message) end
---@param bVisible boolean
function UNotificationWidget:NotificationVisibilityChanged(bVisible) end
function UNotificationWidget:NotificationComplete() end
function UNotificationWidget:NotificationAppearing() end
---@param bActive boolean
---@param FrameColor FLinearColor
---@param BackgroundColor FLinearColor
function UNotificationWidget:GetStyleOverride(bActive, FrameColor, BackgroundColor) end
---@param bVisible boolean
function UNotificationWidget:BroadcastNotificationVisibilityChangeHandled(bVisible) end


---@class UObjectiveComponent : UHMQSceneComponent
---@field ObjectiveName FName
---@field DefaultParentObjectiveName FName
---@field bOptional boolean
---@field bDestroyOwner boolean
---@field bDestroyAsChild boolean
---@field OnTickObjective FObjectiveComponentOnTickObjective
---@field OnBeginObjective FObjectiveComponentOnBeginObjective
---@field OnEndObjective FObjectiveComponentOnEndObjective
---@field OnObjectiveModified FObjectiveComponentOnObjectiveModified
---@field OnChildObjectiveAdded FObjectiveComponentOnChildObjectiveAdded
---@field OnChildObjectiveRemoved FObjectiveComponentOnChildObjectiveRemoved
---@field ParentObjectiveComponent UObjectiveComponent
---@field ChildObjectiveComponents TArray<UObjectiveComponent>
---@field ClientLocalChildObjectiveComponents TArray<UObjectiveComponent>
---@field ObjectiveSystemComponent UObjectiveSystemComponent
---@field HUDDetailsComponent UHUDDetailsComponent
---@field HUDDetailsData FHUDDetailsData
---@field SelfState EObjectiveState
---@field ChildState EObjectiveState
---@field TotalState EObjectiveState
UObjectiveComponent = {}

---@param DeltaTime float
function UObjectiveComponent:TickObjective(DeltaTime) end
function UObjectiveComponent:SetSuccess() end
---@param bNewOptional boolean
function UObjectiveComponent:SetOptional(bNewOptional) end
function UObjectiveComponent:SetModified() end
---@param WidgetClass TSubclassOf<UUserWidget>
function UObjectiveComponent:SetHUDWidgetClass(WidgetClass) end
---@param Title FText
function UObjectiveComponent:SetHUDTitle(Title) end
---@param NewDetails FHUDDetailsData
function UObjectiveComponent:SetHUDDetails(NewDetails) end
---@param Description FText
function UObjectiveComponent:SetHUDDescription(Description) end
function UObjectiveComponent:SetFailure() end
function UObjectiveComponent:SetComplete() end
---@param bNewBlocked boolean
function UObjectiveComponent:SetBlocked(bNewBlocked) end
---@param ObjectiveData FSerializedObjectiveComponent
---@param bSave boolean
---@return boolean
function UObjectiveComponent:SerializeObjectiveData(ObjectiveData, bSave) end
---@param ChildObjective UObjectiveComponent
function UObjectiveComponent:RemoveChildObjective(ChildObjective) end
function UObjectiveComponent:OnRep_HUDDetailsData() end
---@param OldChildObjectives TArray<UObjectiveComponent>
function UObjectiveComponent:OnRep_ChildObjectiveComponents(OldChildObjectives) end
---@return boolean
function UObjectiveComponent:IsPrimaryObjective() end
---@return boolean
function UObjectiveComponent:IsBlocked() end
---@return EObjectiveState
function UObjectiveComponent:GetTotalState() end
---@return EObjectiveState
function UObjectiveComponent:GetSelfState() end
---@return UObjectiveComponent
function UObjectiveComponent:GetParentObjective() end
---@return UObjectiveSystemComponent
function UObjectiveComponent:GetObjectiveSystemComponent() end
---@return FName
function UObjectiveComponent:GetObjectiveName() end
---@return EObjectiveState
function UObjectiveComponent:GetChildState() end
---@param OutChildObjectives TArray<UObjectiveComponent>
function UObjectiveComponent:GetChildObjectives(OutChildObjectives) end
---@param InObjectiveName FName
---@param bRecursive boolean
---@return UObjectiveComponent
function UObjectiveComponent:FindChildObjective(InObjectiveName, bRecursive) end
function UObjectiveComponent:ContinueObjective() end
function UObjectiveComponent:ClearModified() end
---@return boolean
function UObjectiveComponent:CanDestroyObjective() end
function UObjectiveComponent:BP_EndObjective() end
function UObjectiveComponent:BP_ContinueObjective() end
function UObjectiveComponent:BP_BeginObjective() end
---@param ObjectiveClass TSubclassOf<UObjectiveComponent>
---@param InObjectiveName FName
---@return UObjectiveComponent
function UObjectiveComponent:AddChildObjectiveComponent(ObjectiveClass, InObjectiveName) end
---@param ActorClass TSubclassOf<AActor>
---@param InObjectiveName FName
---@return UObjectiveComponent
function UObjectiveComponent:AddChildObjectiveActor(ActorClass, InObjectiveName) end
---@param ChildObjective UObjectiveComponent
function UObjectiveComponent:AddChildObjective(ChildObjective) end


---@class UObjectiveSystemComponent : UHMQActorComponent
---@field DefaultObjectiveActorClass TSubclassOf<AActor>
---@field bHostOnly boolean
---@field bAllowDuplicates boolean
---@field bAddUniqueNamesOnlyOnce boolean
---@field OnObjectiveAdded FObjectiveSystemComponentOnObjectiveAdded
---@field OnObjectiveRemoved FObjectiveSystemComponentOnObjectiveRemoved
---@field OnObjectiveModified FObjectiveSystemComponentOnObjectiveModified
---@field OnChildObjectiveAdded FObjectiveSystemComponentOnChildObjectiveAdded
---@field OnChildObjectiveRemoved FObjectiveSystemComponentOnChildObjectiveRemoved
---@field ObjectiveComponents TArray<UObjectiveComponent>
---@field ClientLocalObjectiveComponents TArray<UObjectiveComponent>
UObjectiveSystemComponent = {}

---@param ObjectiveClass TSubclassOf<UObjectiveComponent>
---@param InObjectiveName FName
---@return UObjectiveComponent
function UObjectiveSystemComponent:SpawnObjectiveComponent(ObjectiveClass, InObjectiveName) end
---@param ActorClass TSubclassOf<AActor>
---@param InObjectiveName FName
---@return UObjectiveComponent
function UObjectiveSystemComponent:SpawnObjectiveActor(ActorClass, InObjectiveName) end
---@param WorldContextObject UObject
---@param ObjectiveName FName
---@param ObjectiveState EObjectiveState
function UObjectiveSystemComponent:SetObjectiveStateForAllPlayers(WorldContextObject, ObjectiveName, ObjectiveState) end
---@param Objective UObjectiveComponent
function UObjectiveSystemComponent:RemoveObjective(Objective) end
---@param OldObjectives TArray<UObjectiveComponent>
function UObjectiveSystemComponent:OnRep_ObjectiveComponents(OldObjectives) end
---@return int32
function UObjectiveSystemComponent:GetTotalObjectiveCount() end
---@param WorldContextObject UObject
---@param PlayerIndex int32
---@return UObjectiveSystemComponent
function UObjectiveSystemComponent:GetPlayerObjectiveSystem(WorldContextObject, PlayerIndex) end
---@param OutObjectives TArray<UObjectiveComponent>
function UObjectiveSystemComponent:GetObjectives(OutObjectives) end
---@param WorldContextObject UObject
---@param OutObjectiveSystems TArray<UObjectiveSystemComponent>
function UObjectiveSystemComponent:GetAllPlayersObjectiveSystemComponents(WorldContextObject, OutObjectiveSystems) end
---@param InObjectiveName FName
---@param bRecursive boolean
---@return UObjectiveComponent
function UObjectiveSystemComponent:FindObjective(InObjectiveName, bRecursive) end
---@param Biome EBiome
---@param BiomeState EBiomeState
function UObjectiveSystemComponent:BiomeStateChanged(Biome, BiomeState) end
---@param WorldContextObject UObject
---@param ObjectiveClass TSubclassOf<UObjectiveComponent>
---@param ObjectiveName FName
function UObjectiveSystemComponent:AddObjectiveComponentForAllPlayers(WorldContextObject, ObjectiveClass, ObjectiveName) end
---@param ObjectiveClass TSubclassOf<UObjectiveComponent>
---@param InObjectiveName FName
---@return UObjectiveComponent
function UObjectiveSystemComponent:AddObjectiveComponent(ObjectiveClass, InObjectiveName) end
---@param ActorClass TSubclassOf<AActor>
---@param InObjectiveName FName
---@return UObjectiveComponent
function UObjectiveSystemComponent:AddObjectiveActor(ActorClass, InObjectiveName) end
---@param Objective UObjectiveComponent
function UObjectiveSystemComponent:AddObjective(Objective) end


---@class UOffscreenPointerManagerComponent : UActorComponent
---@field OnScreenThingPointerClass TSubclassOf<UOnScreenThingPointer>
---@field bStartEnabled boolean
---@field ThingPointers TMap<AActor, UOnScreenThingPointer>
---@field QueuedRegisters TArray<AActor>
UOffscreenPointerManagerComponent = {}

---@param TargetActor AActor
function UOffscreenPointerManagerComponent:UnregisterInteractable(TargetActor) end
---@param TargetActor AActor
---@param Visibility ESlateVisibility
function UOffscreenPointerManagerComponent:SetInteractableVisibility(TargetActor, Visibility) end
---@param TargetActor AActor
function UOffscreenPointerManagerComponent:RegisterInteractable(TargetActor) end


---@class UOnScreenPointerLibrary : UBlueprintFunctionLibrary
UOnScreenPointerLibrary = {}

---@param DeltaTime float
---@param OnScreenPointersToSort TArray<UOnScreenThingPointer>
---@param ParentCanvas UCanvasPanel
---@param ViewProjectionMatrix FMatrix
---@param ScreenSize FVector2D
---@param CameraLocation FVector
---@param CameraRotation FRotator
---@param bSortByDistance boolean
function UOnScreenPointerLibrary:UpdateOnScreenPointers(DeltaTime, OnScreenPointersToSort, ParentCanvas, ViewProjectionMatrix, ScreenSize, CameraLocation, CameraRotation, bSortByDistance) end


---@class UOnScreenThingPointer : UTouristWidgetBase
---@field bFollowTarget boolean
---@field TargetPoint FVector
---@field TargetActor AActor
---@field bAlsoShowOffscreen boolean
---@field bAutoManageVisibility boolean
---@field bIsCombatPointer boolean
---@field DistanceToCamera float
---@field MaxVisibleDistance float
---@field MinVisibleDistance float
---@field MinCameraDirDotProduct float
---@field FadeToHide boolean
---@field ScreenOffset FVector2D
---@field HideWhenDead boolean
---@field bCurrentOnScreen boolean
---@field bIsOnScreen boolean
---@field CurrentAngleToTarget float
UOnScreenThingPointer = {}

function UOnScreenThingPointer:UpdatePostMove() end
---@param DeltaTime float
function UOnScreenThingPointer:Update(DeltaTime) end
---@param TargetVector FVector
---@return FVector2D
function UOnScreenThingPointer:ProjectVectorToScreen(TargetVector) end
function UOnScreenThingPointer:PostConstruct() end
---@param Start FVector
---@param End FVector
---@param TraceChannel ETraceTypeQuery
---@param ActorsToIgnore TArray<AActor>
---@param LatentInfo FLatentActionInfo
---@param OutHit FHitResult
function UOnScreenThingPointer:LineOfSight(Start, End, TraceChannel, ActorsToIgnore, LatentInfo, OutHit) end
---@param Range float
---@return boolean
function UOnScreenThingPointer:IsPlayerWithinRange(Range) end
---@return boolean
function UOnScreenThingPointer:IsPlayerControllerInCinematicMode() end
---@return float
function UOnScreenThingPointer:DistanceToPlayer() end


---@class UOptionalRoomSpawnerComponent : UActorComponent
---@field OptionalSpawnGroupName FName
UOptionalRoomSpawnerComponent = {}



---@class UOverheatingClip : UGunClip
---@field MaxBullets float
---@field CurrentBullets float
---@field BulletsFired_Replicated float
---@field BulletsFired_Local float
---@field ReloadTimeActive float
---@field ReloadCurveActive UCurveFloat
---@field ReloadTimePassive float
---@field ReloadCurvePassive UCurveFloat
---@field PassiveReloadPauseTime float
---@field bCanCooldownBeManuallyStarted boolean
---@field bStartManualCooldownFromZero boolean
---@field bUseCooldown boolean
---@field bIsActiveCooldownActive boolean
UOverheatingClip = {}



---@class UOverlayHUD_Base : UHMQUserWidget
---@field IndicatorCanvas UCanvasPanel
---@field CachedPlayer APlayerCharacter
---@field SkipController UCinematicSkipControllerComponent
---@field OnScreenPointersToSort TArray<UOnScreenThingPointer>
UOverlayHUD_Base = {}

---@param bActive boolean
---@param bTriggered boolean
---@param Percent float
---@param Opacity float
function UOverlayHUD_Base:UpdateSkipState(bActive, bTriggered, Percent, Opacity) end
---@param Message FText
---@param duration float
function UOverlayHUD_Base:ShowOverlayCommsMessage(Message, duration) end
---@param TargetClass TSubclassOf<UOnScreenThingPointer>
---@param TargetPoint FVector
---@param TargetActor AActor
---@return UOnScreenThingPointer
function UOverlayHUD_Base:AddOnScreenThingPointerAdvanced(TargetClass, TargetPoint, TargetActor) end
---@param TargetClass TSubclassOf<UOnScreenThingPointer>
---@return UOnScreenThingPointer
function UOverlayHUD_Base:AddOnScreenThingPointer(TargetClass) end


---@class UPOIProximityInvokerComponent : UHMQActorComponent
---@field OverlapComponentName FName
---@field ProximityParams FPOIProximityParams
---@field OverlapComponent UPrimitiveComponent
---@field OverlappedActors TSet<AActor>
UPOIProximityInvokerComponent = {}

---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function UPOIProximityInvokerComponent:EndOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex) end
---@param OverlappedComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function UPOIProximityInvokerComponent:BeginOverlap(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult) end


---@class UPOIProximitySensorComponent : UActorComponent
---@field OnEnter FPOIProximitySensorComponentOnEnter
---@field OnExit FPOIProximitySensorComponentOnExit
UPOIProximitySensorComponent = {}



---@class UPSNSignInWidget : UPauseMenu
---@field LinkState EPSNLinkState
---@field QRTexture2D UTexture2D
UPSNSignInWidget = {}

function UPSNSignInWidget:UpdateQRCode() end
function UPSNSignInWidget:UpdateLinkQRImage() end
function UPSNSignInWidget:UpdateLinkButtonState() end
function UPSNSignInWidget:StartPSNUnlink() end
function UPSNSignInWidget:StartPSNLink() end
---@param bWasSuccessful boolean
function UPSNSignInWidget:OnUpdateRegisterPSNAccount(bWasSuccessful) end
---@param bWasSuccessful boolean
---@param URL FString
function UPSNSignInWidget:OnUpdateQRCode(bWasSuccessful, URL) end
function UPSNSignInWidget:OnPlatformDisConnected() end
function UPSNSignInWidget:OnPlatformConnected() end
---@param bWasSuccessful boolean
---@param URL FString
function UPSNSignInWidget:LaunchURL(bWasSuccessful, URL) end
---@return boolean
function UPSNSignInWidget:IsPSNLinkEnabled() end
---@param bWasSuccessful boolean
function UPSNSignInWidget:DeregisterComplete(bWasSuccessful) end


---@class UParticleAudioComponent : USceneComponent
---@field Enabled boolean
---@field bManualInit boolean
---@field OneShotMode boolean
---@field LimitEventsInOneShotMode boolean
---@field UseEventGroupingManagerPool boolean
---@field AkEvent UAkAudioEvent
---@field AkEventStop UAkAudioEvent
---@field EventStopFadeTime int32
---@field MaxEventResponse int32
---@field NGParticleComponentName FName
---@field NGParticleEventName FName
---@field NumAudioEmitters int32
---@field PlayerCameraMix float
---@field OcclusionInterval float
---@field AttenuationScaleFactor float
---@field EmitterLerpAlpha float
---@field DistanceEnableThreshold float
---@field EmittersHoldParticles boolean
---@field ParticleRTPCs TArray<FString>
---@field SortParticlesBy FString
---@field SortLowestValueFirst boolean
---@field TickIntervalWhenInside float
---@field TickIntervalWhenOutside float
---@field OnParticleAudioStarted FParticleAudioComponentOnParticleAudioStarted
---@field OnParticleAudioStopped FParticleAudioComponentOnParticleAudioStopped
---@field Emitters TArray<FParticleAudioEmitterInfo>
---@field NGParticles UNGParticleComponent
UParticleAudioComponent = {}

---@param AkComponent UAkComponent
function UParticleAudioComponent:UpdateEmitterThatSwapped(AkComponent) end
---@param Event UAkAudioEvent
function UParticleAudioComponent:PostEventToAllEmitters(Event) end
---@param Event UAkAudioEvent
function UParticleAudioComponent:PostEventToAllActiveEmitters(Event) end
---@param Component UNGParticleComponent
function UParticleAudioComponent:OnEffectInitialized(Component) end
---@param Component UNGParticleComponent
function UParticleAudioComponent:OnEffectFinished(Component) end
---@param Component UNGParticleComponent
---@param Args FNGParticleEventArgs
function UParticleAudioComponent:OnEffectEvent(Component, Args) end
---@return TArray<FParticleAudioEmitterInfo>
function UParticleAudioComponent:GetEmitters() end
function UParticleAudioComponent:DelayedInit() end


---@class UPatternFire : UGunFiringBehavior
---@field bIsFiring boolean
---@field bResetPatternOnStart boolean
---@field Delay float
---@field PatternIndex int32
---@field Patterns TArray<FPatternFireElement>
UPatternFire = {}



---@class UPauseMenu : UHMQScreenWidget
---@field bUseFirstPersonTransition boolean
---@field bUsePlayerMenuTransition boolean
---@field bRequireCloseMenuActionBinding boolean
---@field bCloseOnAcceptingInvite boolean
---@field PCInputDevice EPCInputDevices
---@field bPCEnableParticleUpdate boolean
---@field OpenSound UAkAudioEvent
---@field CloseSound UAkAudioEvent
UPauseMenu = {}

---@param TabIndex int32
function UPauseMenu:SetSavedPauseMenuTabIndex(TabIndex) end
function UPauseMenu:RestartGame() end
function UPauseMenu:OnCloseMenu() end
function UPauseMenu:MultiplayerStatusChanged() end
function UPauseMenu:MultiplayerInvitePending() end
---@param ActionName FName
---@param EventType EInputEvent
---@param bConsume boolean
---@param bExecuteWhenPaused boolean
---@param Callback FListenBetterForInputActionCallback
function UPauseMenu:ListenBetterForInputAction(ActionName, EventType, bConsume, bExecuteWhenPaused, Callback) end
function UPauseMenu:InputAction_CloseMenu() end
---@return int32
function UPauseMenu:GetSavedPauseMenuTabIndex() end
---@return UPlayerHUDInfo
function UPauseMenu:GetHUDInfo() end
---@param FirstPersonComp UPlayerFirstPersonModeComponent
function UPauseMenu:FirstPersonTransitionComplete(FirstPersonComp) end
function UPauseMenu:ExitToMainMenu() end
function UPauseMenu:EnterTransitionSkipped() end
function UPauseMenu:ControllerSettingsChanged() end


---@class UPauseMenuSayDialogueWidget : UTouristWidgetBase
---@field ParagraphWidgetType TSubclassOf<UPauseMenuSayParagraphWidget>
---@field ParagraphVerticalBox UVerticalBox
---@field ParagraphWidgetList TArray<UPauseMenuSayParagraphWidget>
UPauseMenuSayDialogueWidget = {}

---@param SequenceName FName
---@param EntrySeparator FText
---@param WorldContextObject UObject
---@param LanguageOverride FString
function UPauseMenuSayDialogueWidget:SetDialogueForSequence(SequenceName, EntrySeparator, WorldContextObject, LanguageOverride) end


---@class UPauseMenuSayParagraphWidget : UTouristWidgetBase
---@field SaySpeaker FString
---@field SayText FString
---@field IndentParagraph boolean
UPauseMenuSayParagraphWidget = {}

function UPauseMenuSayParagraphWidget:SetupWidget() end


---@class UPeripheralDisconnectWidget : UPauseMenu
---@field PeripheralType EPeripheralType
UPeripheralDisconnectWidget = {}



---@class UPhotoModeManagerComponent : UHMQActorComponent
---@field CinematicEndBlockTimer float
---@field BiomeChangedBlockTimer float
UPhotoModeManagerComponent = {}

---@param ManagerComp UCinematicManagerComponent
function UPhotoModeManagerComponent:OnCinematicEnd(ManagerComp) end
---@param NewBiome EBiome
function UPhotoModeManagerComponent:OnBiomeChange(NewBiome) end
---@return boolean
function UPhotoModeManagerComponent:IsPhotoModeBlocked() end


---@class UPhotoModeMenu : UPauseMenu
---@field SelectedTabIndex int32
---@field SelectedSettingIndex int32
---@field SelectionLoopCount int32
---@field SelectionAccelerationLoop int32
---@field AccelerationTierSpacing int32
---@field AccelerationTierSpeedStep int32
---@field bUIHidden boolean
---@field bAdjustmentsHidden boolean
---@field bWereAdjustmentsVisibleWhenHidingUI boolean
---@field bGridHidden boolean
---@field bWasGridVisibleWhenHidingUI boolean
---@field bScreenshotInProgress boolean
---@field bExitInputHeld boolean
---@field ExitProgress float
---@field ExitTimer float
---@field bTimeDilationMode boolean
---@field TimeDilationValue float
---@field LogoScaleMax float
---@field LogoScaleMin float
---@field DefaultLogoScale float
---@field DefaultLogoPosX float
---@field DefaultLogoPosY float
---@field LogoDecorations TArray<FDecorationEntry>
---@field SelectableTabs TArray<UVerticalBox>
UPhotoModeMenu = {}

function UPhotoModeMenu:UpdateExitWidget() end
function UPhotoModeMenu:ToggleDebugInfo() end
function UPhotoModeMenu:TakeScreenshotBP() end
---@return FText
function UPhotoModeMenu:TakeScreenShot() end
function UPhotoModeMenu:StartScreenshot() end
---@param NewDilation float
function UPhotoModeMenu:SetTimeDilation(NewDilation) end
---@param Canvas UCanvasPanel
---@param scale float
---@param LogoBounds FVector2D
function UPhotoModeMenu:SetLogoScale(Canvas, scale, LogoBounds) end
---@param Canvas UCanvasPanel
---@param SliderValues FVector2D
---@param LogoBounds FVector2D
function UPhotoModeMenu:SetLogoPosition(Canvas, SliderValues, LogoBounds) end
function UPhotoModeMenu:ScreenshotFinishedBP() end
function UPhotoModeMenu:ScreenshotFinished() end
---@return boolean
function UPhotoModeMenu:IsTimeDilationModeEnabled() end
---@return boolean
function UPhotoModeMenu:IsHoldingExitInput() end
function UPhotoModeMenu:InputUp() end
function UPhotoModeMenu:InputTabRight() end
function UPhotoModeMenu:InputTabLeft() end
function UPhotoModeMenu:InputRight() end
function UPhotoModeMenu:InputLeft() end
function UPhotoModeMenu:InputDown() end
---@return float
function UPhotoModeMenu:GetTimeDilation() end
---@return int32
function UPhotoModeMenu:GetTabCount() end
---@param TabIndex int32
---@return UVerticalBox
function UPhotoModeMenu:GetTabByIndex(TabIndex) end
---@return int32
function UPhotoModeMenu:GetSliderSpeed() end
---@return UVerticalBox
function UPhotoModeMenu:GetSelectedTab() end
---@return FVector2D
function UPhotoModeMenu:GetScreenSize() end
---@return float
function UPhotoModeMenu:GetExitProgress() end
function UPhotoModeMenu:EndHoldExit() end
function UPhotoModeMenu:ActionToggleUI() end
function UPhotoModeMenu:ActionToggleGrid() end
function UPhotoModeMenu:ActionToggleAdjustments() end
function UPhotoModeMenu:ActionResetCurrentTabSettings() end


---@class UPingActorAdornmentWidget : UActorAdornmentWidget
---@field UseAlternateColor boolean
---@field IconSettings UStaticMinimapIconSettings
---@field Image_Icon UImage
---@field Text_Distance UTextBlock
---@field Texture_Icon UTexture2D
---@field Color_Icon FLinearColor
---@field Animation_Intro UWidgetAnimation
UPingActorAdornmentWidget = {}



---@class UPingableComponent : UActorComponent
---@field DestroyWhenPinged boolean
---@field IsPinged boolean
---@field UseAlternateColor boolean
---@field PingRequestGuid FGuid
---@field bIsEnemyPing boolean
---@field bIsItemPing boolean
---@field Adornment TSubclassOf<UPingActorAdornmentWidget>
---@field PingTimeout float
---@field OriginalMinimapObject UMinimapObject
---@field PingMinimapObject UMinimapObject
---@field AdornmentWidget UPingActorAdornmentWidget
---@field PingEvent UAkAudioEvent
---@field RemotePingEvent UAkAudioEvent
UPingableComponent = {}

---@param PingGuid FGuid
---@param AlternateColor boolean
function UPingableComponent:Ping(PingGuid, AlternateColor) end
function UPingableComponent:CancelPing() end


---@class UPlasmaRayComponent : UActorComponent
---@field OnRayHit FPlasmaRayComponentOnRayHit
---@field MaxDistance float
---@field CollisionRadius float
---@field ControlPointCount int32
---@field Flexibility float
---@field MoveSpeed float
---@field RotationSpeed float
UPlasmaRayComponent = {}

function UPlasmaRayComponent:StopFiring() end
function UPlasmaRayComponent:StartFiring() end
---@return FVector
function UPlasmaRayComponent:GetStartLocation() end
---@return FVector
function UPlasmaRayComponent:GetStartForward() end
---@return TArray<FVector>
function UPlasmaRayComponent:GetSplinePoints() end


---@class UPlayerAbilitySystemComponent : UTouristAbilitySystemComponent
UPlayerAbilitySystemComponent = {}


---@class UPlayerAnimInstance : UTouristCharacterAnimInstance
---@field PlayerCharacter APlayerCharacter
---@field CurrentHitReactionHeavyCooldown float
---@field FloorCorrectionZTarget float
---@field PlayerCapsuleFloatingHeight float
---@field FlyingModeBehaviour int32
---@field LeftFootIKSocketName FName
---@field RightFootIKSocketName FName
---@field FootIKTraceAbove float
---@field FootIKTraceBelow float
---@field FootIKLimitsIdleMin FVector
---@field FootIKLimitsIdleMax FVector
---@field FootIKLimitsMovingMin FVector
---@field FootIKLimitsMovingMax FVector
---@field PelvisOffsetWalking UCurveFloat
---@field PelvisOffsetRunning UCurveFloat
---@field ZOffsetInterpSpeedInputRange FVector2D
---@field ZOffsetInterpSpeedValueRange FVector2D
---@field ExtraZOffsetInterpSpeedFromFootLock float
---@field FloorCorrectionZTraceAbove float
---@field FloorCorrectionZTraceBelow float
---@field FloorCorrectionZRange FVector2D
---@field FloorCorrectionZInterpSpeed float
---@field FloorCorrectionZInterpSpeedCancel float
---@field RotationOffsetInterpSpeed float
---@field LimitInterpSpeed float
---@field StairsActorTagName FName
---@field PelvisOffsetZ float
---@field FloorCorrectionZ float
---@field LeftFootData FFootData
---@field RightFootData FFootData
UPlayerAnimInstance = {}

---@param WorldVector FVector
---@param ForwardRot FRotator
---@param OutYawOffset float
---@param OutCardinalDir ECardinalDirection
---@param ForwardAreaAngle float
---@param BackwardAreaAngle float
function UPlayerAnimInstance:WorldVectorAndForwardToCardinal(WorldVector, ForwardRot, OutYawOffset, OutCardinalDir, ForwardAreaAngle, BackwardAreaAngle) end
---@param Gun APlayerWeapon
function UPlayerAnimInstance:WeaponFired(Gun) end
---@param Player APlayerCharacter
---@param DeltaTime float
---@param bMoving boolean
---@param bRunning boolean
function UPlayerAnimInstance:UpdateFootIKData(Player, DeltaTime, bMoving, bRunning) end
---@param DeltaTime float
---@param bUpdateAim boolean
---@param bUpdateDash boolean
---@param YawOffset float
---@param RootYawOffsetInterpSpeed float
---@param TwistReductionForwardBack float
---@param TwistReductionLeftRight float
---@param InOutSmoothedRootYawOffset float
---@param Velocity FVector
---@param CameraRot FRotator
---@param InOutCardinalAngles FVector4
---@param OutCardinalDir uint8
---@param OutCardinalRotYaw float
---@param InOutDashCardinalAngles FVector4
---@param OutDashCardinalDir uint8
---@param ForwardAreaAngle float
---@param BackwardAreaAngle float
function UPlayerAnimInstance:UpdateCardinalValues(DeltaTime, bUpdateAim, bUpdateDash, YawOffset, RootYawOffsetInterpSpeed, TwistReductionForwardBack, TwistReductionLeftRight, InOutSmoothedRootYawOffset, Velocity, CameraRot, InOutCardinalAngles, OutCardinalDir, OutCardinalRotYaw, InOutDashCardinalAngles, OutDashCardinalDir, ForwardAreaAngle, BackwardAreaAngle) end
---@param InBlendOutTime float
---@param InGroupName FName
function UPlayerAnimInstance:StopAllMontagesInGroup(InBlendOutTime, InGroupName) end
function UPlayerAnimInstance:Revived() end
---@param Weapon APlayerWeapon
function UPlayerAnimInstance:ReloadMinigameSuccess(Weapon) end
---@param Montage UAnimMontage
---@param GameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@param MontagePlayRate float
---@param MontageStartTime float
---@param ReturnValueType EMontagePlayReturnType
---@param bStopAllMontages boolean
---@param bRemoveEffectsAtMontageBlendOut boolean
---@param AllowBlendOutNotifyName FName
---@param BlendOutWithInput EThresholdType
---@param InputBlendOutThreshold float
---@param InputBlendOutDuration float
---@param bBlendOutWithJump boolean
---@param bBlendOutWithAiming boolean
---@param bRemoveEffectsAtAllowBlendOut boolean
---@param RemoveEffectsNotifyName FName
---@param StackType EGameplayEffectStackType
---@return float
function UPlayerAnimInstance:PlayMontageWithGameplayEffects(Montage, GameplayEffects, MontagePlayRate, MontageStartTime, ReturnValueType, bStopAllMontages, bRemoveEffectsAtMontageBlendOut, AllowBlendOutNotifyName, BlendOutWithInput, InputBlendOutThreshold, InputBlendOutDuration, bBlendOutWithJump, bBlendOutWithAiming, bRemoveEffectsAtAllowBlendOut, RemoveEffectsNotifyName, StackType) end
---@param Montage UAnimMontage
---@param GameplayEffect TSubclassOf<UGameplayEffect>
---@param MontagePlayRate float
---@param MontageStartTime float
---@param ReturnValueType EMontagePlayReturnType
---@param bStopAllMontages boolean
---@param bRemoveEffectsAtMontageBlendOut boolean
---@param AllowBlendOutNotifyName FName
---@param BlendOutWithInput EThresholdType
---@param InputBlendOutThreshold float
---@param InputBlendOutDuration float
---@param bBlendOutWithJump boolean
---@param bBlendOutWithAiming boolean
---@param bRemoveEffectsAtAllowBlendOut boolean
---@param RemoveEffectsNotifyName FName
---@param StackType EGameplayEffectStackType
---@return float
function UPlayerAnimInstance:PlayMontageWithGameplayEffect(Montage, GameplayEffect, MontagePlayRate, MontageStartTime, ReturnValueType, bStopAllMontages, bRemoveEffectsAtMontageBlendOut, AllowBlendOutNotifyName, BlendOutWithInput, InputBlendOutThreshold, InputBlendOutDuration, bBlendOutWithJump, bBlendOutWithAiming, bRemoveEffectsAtAllowBlendOut, RemoveEffectsNotifyName, StackType) end
---@param hit FHitResult
---@param Velocity FVector
---@param bHardLand boolean
function UPlayerAnimInstance:PlayerLanded(hit, Velocity, bHardLand) end
---@param NewWeapon APlayerGun
---@param OldWeapon APlayerGun
function UPlayerAnimInstance:OnPlayerSelectedGunChanged(NewWeapon, OldWeapon) end
---@param NewMainWeapon APlayerGun
---@param OldMainWeapon APlayerGun
function UPlayerAnimInstance:OnPlayerMainWeaponChanged(NewMainWeapon, OldMainWeapon) end
---@param NotifyName FName
---@param BranchingPointNotifyPayload FBranchingPointNotifyPayload
function UPlayerAnimInstance:OnNotifyEndReceived(NotifyName, BranchingPointNotifyPayload) end
---@param NotifyName FName
---@param BranchingPointNotifyPayload FBranchingPointNotifyPayload
function UPlayerAnimInstance:OnNotifyBeginReceived(NotifyName, BranchingPointNotifyPayload) end
---@param Montage UAnimMontage
function UPlayerAnimInstance:MontageStarted(Montage) end
---@param Montage UAnimMontage
---@param bInterrupted boolean
function UPlayerAnimInstance:MontageEnded(Montage, bInterrupted) end
---@param Montage UAnimMontage
---@param bInterrupted boolean
function UPlayerAnimInstance:MontageBlendingOut(Montage, bInterrupted) end
---@param LootBox ALootBox
function UPlayerAnimInstance:LootBoxOpened(LootBox) end
---@param Item ACollectibleBase
---@param bManually boolean
function UPlayerAnimInstance:ItemCollected(Item, bManually) end
---@param InGroupName FName
---@return boolean
function UPlayerAnimInstance:IsAnyMontagePlayingInGroup(InGroupName) end
---@param Hazard UObject
---@param bCaught boolean
function UPlayerAnimInstance:ImmobilizingHazardStateChanged(Hazard, bCaught) end
---@param Hardness float
---@param duration float
function UPlayerAnimInstance:HardLand(Hardness, duration) end
function UPlayerAnimInstance:HandleReloadMinigameSuccess() end
function UPlayerAnimInstance:FellOutOfWorldTeleported() end
function UPlayerAnimInstance:FellOutOfWorldCompleted() end
---@param Door ADoor
---@param Key EInventoryKeyType
function UPlayerAnimInstance:DoorUnlocked(Door, Key) end
---@param bPerfectDodge boolean
---@param bHitWall boolean
function UPlayerAnimInstance:DashStopped(bPerfectDodge, bHitWall) end
---@param DashComponent UDashAbilityComponent
---@param bPerfectDodge boolean
---@param DashLevel int32
function UPlayerAnimInstance:DashStarted(DashComponent, bPerfectDodge, DashLevel) end
---@param NewWeapon APlayerWeapon
---@param OldWeapon APlayerWeapon
function UPlayerAnimInstance:ChangeSelectedGun(NewWeapon, OldWeapon) end
---@param NewMainWeapon APlayerWeapon
---@param OldMainWeapon APlayerWeapon
function UPlayerAnimInstance:ChangeMainWeapon(NewMainWeapon, OldMainWeapon) end
---@param AbilityEndedData FAbilityEndedData
function UPlayerAnimInstance:AbilityEndedCallback(AbilityEndedData) end
---@param AbilityEnded UGameplayAbility
---@param bWasCancelled boolean
function UPlayerAnimInstance:AbilityEnded(AbilityEnded, bWasCancelled) end
---@param AbilityActivated UGameplayAbility
function UPlayerAnimInstance:AbilityActivated(AbilityActivated) end


---@class UPlayerAssetManager : UObject
---@field SuitData TMap<ESuitType, TSoftObjectPtr<UPlayerSuitData>>
---@field SuitAssetData TMap<ESuitType, FPlayerSuitAsset>
UPlayerAssetManager = {}



---@class UPlayerAttributeSet : UTouristAttributeSet
---@field MovementMode FGameplayAttributeData
---@field MaxAcceleration FGameplayAttributeData
---@field MaxAccelerationInterpSpeed FGameplayAttributeData
---@field WalkMaxSpeed FGameplayAttributeData
---@field WalkMaxSpeedInterpSpeed FGameplayAttributeData
---@field RunMaxSpeed FGameplayAttributeData
---@field RunMaxSpeedInterpSpeed FGameplayAttributeData
---@field RotationScale FGameplayAttributeData
---@field JumpZVelocity FGameplayAttributeData
---@field JumpHeightScale FGameplayAttributeData
---@field GroundFriction FGameplayAttributeData
---@field FallingLateralFriction FGameplayAttributeData
---@field MovementScale FGameplayAttributeData
---@field MovementScaleInterpSpeed FGameplayAttributeData
---@field AimScale FGameplayAttributeData
---@field AimScaleInterpSpeed FGameplayAttributeData
---@field GravityScale FGameplayAttributeData
---@field GravityScaleInterpSpeed FGameplayAttributeData
---@field TerminalVelocity FGameplayAttributeData
---@field TerminalVelocityInterpSpeed FGameplayAttributeData
UPlayerAttributeSet = {}

---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_WalkMaxSpeedInterpSpeed(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_WalkMaxSpeed(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_TerminalVelocityInterpSpeed(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_TerminalVelocity(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_RunMaxSpeedInterpSpeed(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_RunMaxSpeed(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_RotationScale(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_MovementScaleInterpSpeed(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_MovementScale(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_MovementMode(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_MaxAccelerationInterpSpeed(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_MaxAcceleration(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_JumpZVelocity(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_JumpHeightScale(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_GroundFriction(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_GravityScaleInterpSpeed(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_GravityScale(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_FallingLateralFriction(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_AimScaleInterpSpeed(OldValue) end
---@param OldValue FGameplayAttributeData
function UPlayerAttributeSet:OnRep_AimScale(OldValue) end


---@class UPlayerDeathHandlerComponent : UDeathHandlerComponent
UPlayerDeathHandlerComponent = {}


---@class UPlayerFellOutOfWorldComponent : UPlayerRespawnBaseComponent
---@field OnFellOutOfWorldStart FPlayerFellOutOfWorldComponentOnFellOutOfWorldStart
---@field OnFellOutOfWorldTeleported FPlayerFellOutOfWorldComponentOnFellOutOfWorldTeleported
---@field OnFellOutOfWorldComplete FPlayerFellOutOfWorldComponentOnFellOutOfWorldComplete
---@field OnFellOutOfWorldStateChanged FPlayerFellOutOfWorldComponentOnFellOutOfWorldStateChanged
---@field InvulnerabilityDuration float
---@field ImmobilityDuration float
---@field FellOutOfWorldDamage float
---@field FellOutOfWorldGameplayEffect TSubclassOf<UGameplayEffect>
---@field PreprocessDuration float
---@field ProcessDuration float
---@field PostprocessDuration float
---@field FadeOutDelay float
---@field FadeOutDuration float
---@field FadeInDuration float
---@field FellAudio UAkAudioEvent
---@field FallingDeathAudioVO UAkAudioEvent
---@field HealthComponent UHealthComponent
---@field DeathSystemComponent UDeathSystemComponent
UPlayerFellOutOfWorldComponent = {}

---@param NewSentDamageEventId int32
function UPlayerFellOutOfWorldComponent:Server_SetSentDamageEventId(NewSentDamageEventId) end
---@param DamageEventId int32
function UPlayerFellOutOfWorldComponent:MulticastPreprocessFellOutOfWorld(DamageEventId) end
---@return boolean
function UPlayerFellOutOfWorldComponent:IsHandlingFall() end
---@param DamageType UDamageType
function UPlayerFellOutOfWorldComponent:FellOutOfWorld(DamageType) end


---@class UPlayerFirstPersonModeComponent : UHMQSceneComponent
---@field FieldOfView float
---@field BlendDuration float
---@field TriggerAlpha float
---@field ZoomFieldOfView float
---@field ZoomInterpSpeed float
---@field CameraModificationCurve UCurveFloat
---@field GameplayEffectsInFirstPerson TArray<TSubclassOf<UGameplayEffect>>
---@field OnActivateCompleted FPlayerFirstPersonModeComponentOnActivateCompleted
---@field OnDeactivateCompleted FPlayerFirstPersonModeComponentOnDeactivateCompleted
---@field CameraSpringArmComp UHMQCameraSpringArmComponent
---@field CameraComp UCameraComponent
---@field ActorControllerComp UActorControllerComponent
---@field InputComp UInputComponent
UPlayerFirstPersonModeComponent = {}

function UPlayerFirstPersonModeComponent:UnlockCounted() end
function UPlayerFirstPersonModeComponent:LockCounted() end
---@return boolean
function UPlayerFirstPersonModeComponent:IsFullyActive() end
---@return boolean
function UPlayerFirstPersonModeComponent:IsDeactivating() end
---@return boolean
function UPlayerFirstPersonModeComponent:IsActivating() end
function UPlayerFirstPersonModeComponent:HandleZoomReleased() end
function UPlayerFirstPersonModeComponent:HandleZoomPressed() end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UPlayerFirstPersonModeComponent:HandleDamageReceived(DamagedActor, DamageEvent) end
function UPlayerFirstPersonModeComponent:HandleActionCancel() end
---@return APlayerController
function UPlayerFirstPersonModeComponent:GetPlayerController() end
---@return AHMQPlayerCameraManager
function UPlayerFirstPersonModeComponent:GetPlayerCameraManager() end
function UPlayerFirstPersonModeComponent:DeactivateCounted() end
function UPlayerFirstPersonModeComponent:ActivateCounted() end


---@class UPlayerFluidComponent : UFluid3DComponent
---@field FluidVelocityTextureName FName
---@field ResourceManager UNGPResourceManager
---@field CachedNGPMC UNGPManagerComponent
UPlayerFluidComponent = {}



---@class UPlayerGlitchComponent : UActorComponent
---@field ProxyClass TSubclassOf<APlayerGlitchProxy>
---@field OnLocalGlitchStateChanged FPlayerGlitchComponentOnLocalGlitchStateChanged
---@field ActiveProxy APlayerGlitchProxy
---@field CurrentStates TArray<EPlayerGlitchState>
---@field CurrentMeshTransforms TArray<FTransform>
UPlayerGlitchComponent = {}

---@param State EPlayerGlitchState
---@param Target EPlayerGlitchTarget
---@param MeshTransform FTransform
function UPlayerGlitchComponent:ServerChangeState(State, Target, MeshTransform) end


---@class UPlayerHUDInfo : UActorComponent
---@field OnPlayerChanged FPlayerHUDInfoOnPlayerChanged
---@field OnPlayerBinded FPlayerHUDInfoOnPlayerBinded
---@field OnHealthChanged FPlayerHUDInfoOnHealthChanged
---@field OnMaxHealthChanged FPlayerHUDInfoOnMaxHealthChanged
---@field OnDamageTaken FPlayerHUDInfoOnDamageTaken
---@field OnLowHealthModeChanged FPlayerHUDInfoOnLowHealthModeChanged
---@field OnCriticalHealthModeChanged FPlayerHUDInfoOnCriticalHealthModeChanged
---@field OnDashStateChanged FPlayerHUDInfoOnDashStateChanged
---@field OnDashCooldownChanged FPlayerHUDInfoOnDashCooldownChanged
---@field OnMainWeaponChanged FPlayerHUDInfoOnMainWeaponChanged
---@field OnMeleeWeaponChanged FPlayerHUDInfoOnMeleeWeaponChanged
---@field OnWeaponFired FPlayerHUDInfoOnWeaponFired
---@field ObLockOnStateChanged FPlayerHUDInfoObLockOnStateChanged
---@field OnLockOnTargetChanged FPlayerHUDInfoOnLockOnTargetChanged
---@field OnLockOnLostLineOfSight FPlayerHUDInfoOnLockOnLostLineOfSight
---@field OnLockOnLosingLineOfSight FPlayerHUDInfoOnLockOnLosingLineOfSight
---@field OnLockOnRequestFailed FPlayerHUDInfoOnLockOnRequestFailed
---@field OnEnemyKilledTowardsAdrenaline FPlayerHUDInfoOnEnemyKilledTowardsAdrenaline
---@field OnPocketCountChanged FPlayerHUDInfoOnPocketCountChanged
---@field OnSelectedPocketChanged FPlayerHUDInfoOnSelectedPocketChanged
---@field OnPocketItemReplicated FPlayerHUDInfoOnPocketItemReplicated
---@field OnMetaModifiersChanged FPlayerHUDInfoOnMetaModifiersChanged
---@field OnMetaModifierConnectionAdded FPlayerHUDInfoOnMetaModifierConnectionAdded
---@field OnMetaModifierConnectionRemoved FPlayerHUDInfoOnMetaModifierConnectionRemoved
---@field OnMetaModifierConnectionChanged FPlayerHUDInfoOnMetaModifierConnectionChanged
---@field OnAdrenalineBeginPlay FPlayerHUDInfoOnAdrenalineBeginPlay
---@field OnAdrenalineReset FPlayerHUDInfoOnAdrenalineReset
---@field OnAdrenalineMetaModifierAdded FPlayerHUDInfoOnAdrenalineMetaModifierAdded
---@field OnAdrenalineLevelChanged FPlayerHUDInfoOnAdrenalineLevelChanged
---@field OnTimedWeaponUpgradeActivated FPlayerHUDInfoOnTimedWeaponUpgradeActivated
---@field OnTimedWeaponUpgradePending FPlayerHUDInfoOnTimedWeaponUpgradePending
---@field OnKeyAmountChanged FPlayerHUDInfoOnKeyAmountChanged
---@field OnClarityAmountChanged FPlayerHUDInfoOnClarityAmountChanged
---@field OnArtefactCollected FPlayerHUDInfoOnArtefactCollected
---@field OnArtefactRemoved FPlayerHUDInfoOnArtefactRemoved
---@field OnWeaponUpgradeCollected FPlayerHUDInfoOnWeaponUpgradeCollected
---@field OnUnlockItemCollected FPlayerHUDInfoOnUnlockItemCollected
---@field OnUnlockItemApplied FPlayerHUDInfoOnUnlockItemApplied
---@field OnUnlockItemsRemoved FPlayerHUDInfoOnUnlockItemsRemoved
---@field OnXrayCollected FPlayerHUDInfoOnXrayCollected
---@field OnLogMessage FPlayerHUDInfoOnLogMessage
---@field OnCurseStateChanged FPlayerHUDInfoOnCurseStateChanged
---@field OnCurseLifted FPlayerHUDInfoOnCurseLifted
---@field OnMainWeaponClipStatusChanged FPlayerHUDInfoOnMainWeaponClipStatusChanged
---@field OnSanityChanged FPlayerHUDInfoOnSanityChanged
---@field OnExtraLifeConsumed FPlayerHUDInfoOnExtraLifeConsumed
---@field OnMainWeaponReloadStarted FPlayerHUDInfoOnMainWeaponReloadStarted
---@field OnMainWeaponReloadDone FPlayerHUDInfoOnMainWeaponReloadDone
---@field OnMainWeaponReloadMinigameDone FPlayerHUDInfoOnMainWeaponReloadMinigameDone
---@field OnInteractionProgress FPlayerHUDInfoOnInteractionProgress
---@field OnProficiencyBeginPlay FPlayerHUDInfoOnProficiencyBeginPlay
---@field OnProficiencyPointsChanged FPlayerHUDInfoOnProficiencyPointsChanged
---@field OnProficiencyLevelChanged FPlayerHUDInfoOnProficiencyLevelChanged
---@field OnProficiencyGainChanged FPlayerHUDInfoOnProficiencyGainChanged
---@field OnEnemyDodged FPlayerHUDInfoOnEnemyDodged
---@field OnSecretAreaFound FPlayerHUDInfoOnSecretAreaFound
---@field OnPlayerRoomChanged FPlayerHUDInfoOnPlayerRoomChanged
---@field OnPlayerFireAllowedChanged FPlayerHUDInfoOnPlayerFireAllowedChanged
---@field OnPlayerLookOnAllowedChanged FPlayerHUDInfoOnPlayerLookOnAllowedChanged
---@field OnRoomCleared FPlayerHUDInfoOnRoomCleared
---@field OnEnemyDamaged FPlayerHUDInfoOnEnemyDamaged
---@field OnEnemyKilled FPlayerHUDInfoOnEnemyKilled
---@field OnEliteEnemyAggroed FPlayerHUDInfoOnEliteEnemyAggroed
---@field OnItemCollected FPlayerHUDInfoOnItemCollected
---@field OnDataBankEntryAdded FPlayerHUDInfoOnDataBankEntryAdded
---@field OnDataBankEntryUpdated FPlayerHUDInfoOnDataBankEntryUpdated
---@field OnShipLogEntryAdded FPlayerHUDInfoOnShipLogEntryAdded
---@field OnXenoarchiveSetComplete FPlayerHUDInfoOnXenoarchiveSetComplete
---@field OnReceivedMetaModDamage FPlayerHUDInfoOnReceivedMetaModDamage
---@field OnShowHealth FPlayerHUDInfoOnShowHealth
---@field OnHideHealth FPlayerHUDInfoOnHideHealth
---@field OnInventoryChanged FPlayerHUDInfoOnInventoryChanged
---@field OnInventoryThingDestroyed FPlayerHUDInfoOnInventoryThingDestroyed
---@field OnMaxHealthUpgradeChanged FPlayerHUDInfoOnMaxHealthUpgradeChanged
---@field OnMaxHealthUpgradeMaxReached FPlayerHUDInfoOnMaxHealthUpgradeMaxReached
---@field OnMaxHealthUpgradeConsumed FPlayerHUDInfoOnMaxHealthUpgradeConsumed
---@field OnMaxHealthUpgradeMaxChanged FPlayerHUDInfoOnMaxHealthUpgradeMaxChanged
---@field OnRemoteMaxHealthUpgradeChanged FPlayerHUDInfoOnRemoteMaxHealthUpgradeChanged
---@field OnRemoteMaxHealthUpgradeMaxReached FPlayerHUDInfoOnRemoteMaxHealthUpgradeMaxReached
---@field OnRemoteMaxHealthUpgradeConsumed FPlayerHUDInfoOnRemoteMaxHealthUpgradeConsumed
---@field OnRemoteMaxHealthUpgradeMaxChanged FPlayerHUDInfoOnRemoteMaxHealthUpgradeMaxChanged
---@field OnGameplayFlagChanged FPlayerHUDInfoOnGameplayFlagChanged
---@field OnImmobilizedStateChanged FPlayerHUDInfoOnImmobilizedStateChanged
---@field OnMeleeCooldownChanged FPlayerHUDInfoOnMeleeCooldownChanged
---@field OnAltFireUsed FPlayerHUDInfoOnAltFireUsed
---@field OnAltFireActiveChanged FPlayerHUDInfoOnAltFireActiveChanged
---@field OnAltFirePreparationChanged FPlayerHUDInfoOnAltFirePreparationChanged
---@field OnAltFireReady FPlayerHUDInfoOnAltFireReady
---@field OnFocusAimStatusChanged FPlayerHUDInfoOnFocusAimStatusChanged
---@field OnAimStatusChanged FPlayerHUDInfoOnAimStatusChanged
---@field OnHookShotStart FPlayerHUDInfoOnHookShotStart
---@field OnHookShotStop FPlayerHUDInfoOnHookShotStop
---@field OnGameplayStarted FPlayerHUDInfoOnGameplayStarted
---@field OnHUDBootAnimationReady FPlayerHUDInfoOnHUDBootAnimationReady
---@field OnCinematicStart FPlayerHUDInfoOnCinematicStart
---@field OnPlayerReviveStarted FPlayerHUDInfoOnPlayerReviveStarted
---@field OnPlayerRevived FPlayerHUDInfoOnPlayerRevived
---@field OnCommunicationDone FPlayerHUDInfoOnCommunicationDone
---@field OnRoomLockdownChanged FPlayerHUDInfoOnRoomLockdownChanged
---@field OnItemDiscovered FPlayerHUDInfoOnItemDiscovered
---@field OnPlayerDownStateChanged FPlayerHUDInfoOnPlayerDownStateChanged
---@field OnRemotePlayerDownStateChanged FPlayerHUDInfoOnRemotePlayerDownStateChanged
---@field OnPlayerRevivingStateChanged FPlayerHUDInfoOnPlayerRevivingStateChanged
---@field OnObjectiveAdded FPlayerHUDInfoOnObjectiveAdded
---@field OnObjectiveRemoved FPlayerHUDInfoOnObjectiveRemoved
---@field OnObjectiveModified FPlayerHUDInfoOnObjectiveModified
---@field OnChildObjectiveAdded FPlayerHUDInfoOnChildObjectiveAdded
---@field OnChildObjectiveRemoved FPlayerHUDInfoOnChildObjectiveRemoved
---@field OnGameplayTagChanged FPlayerHUDInfoOnGameplayTagChanged
---@field OnWeaponTraitLevelUnlocked FPlayerHUDInfoOnWeaponTraitLevelUnlocked
---@field OnWeaponTraitUnlockProgress FPlayerHUDInfoOnWeaponTraitUnlockProgress
---@field OnMainWeaponTraitsReplicated FPlayerHUDInfoOnMainWeaponTraitsReplicated
---@field OnBeginDiscovery FPlayerHUDInfoOnBeginDiscovery
---@field OnEndDiscovery FPlayerHUDInfoOnEndDiscovery
---@field OnPauseMenuOpened FPlayerHUDInfoOnPauseMenuOpened
---@field OnDashDisableDebuffChanged FPlayerHUDInfoOnDashDisableDebuffChanged
---@field OnPlayerJumped FPlayerHUDInfoOnPlayerJumped
---@field OnTutorialQueued FPlayerHUDInfoOnTutorialQueued
---@field OnBiomeChanged FPlayerHUDInfoOnBiomeChanged
---@field OnChallengeModeBegin FPlayerHUDInfoOnChallengeModeBegin
---@field OnChallengeModeEnd FPlayerHUDInfoOnChallengeModeEnd
---@field OnExtraLivesChanged FPlayerHUDInfoOnExtraLivesChanged
---@field OnGameplayAbilityLevelChanged FPlayerHUDInfoOnGameplayAbilityLevelChanged
---@field OnNoConsumeKey FPlayerHUDInfoOnNoConsumeKey
---@field OnNoConsumeConsumable FPlayerHUDInfoOnNoConsumeConsumable
---@field OnMultiplayerRankChanged FPlayerHUDInfoOnMultiplayerRankChanged
---@field OnMultiplayerRankProgress FPlayerHUDInfoOnMultiplayerRankProgress
---@field OnMultiplayerRankRewards FPlayerHUDInfoOnMultiplayerRankRewards
---@field OnMultiplayerRewardsTierChanged FPlayerHUDInfoOnMultiplayerRewardsTierChanged
---@field OnMultiplayerRewardsProgress FPlayerHUDInfoOnMultiplayerRewardsProgress
---@field OnRemoteTargetBound FPlayerHUDInfoOnRemoteTargetBound
---@field OnRemoteTargetUnbound FPlayerHUDInfoOnRemoteTargetUnbound
---@field OnRemotePlayerNameChanged FPlayerHUDInfoOnRemotePlayerNameChanged
---@field OnRemoteHealthChanged FPlayerHUDInfoOnRemoteHealthChanged
---@field OnRemoteMaxHealthChanged FPlayerHUDInfoOnRemoteMaxHealthChanged
---@field OnRemoteLowHealthModeChanged FPlayerHUDInfoOnRemoteLowHealthModeChanged
---@field OnRemoteCriticalHealthModeChanged FPlayerHUDInfoOnRemoteCriticalHealthModeChanged
---@field OnRemoteMultiplayerRankChanged FPlayerHUDInfoOnRemoteMultiplayerRankChanged
---@field OnRemoteMultiplayerRankProgress FPlayerHUDInfoOnRemoteMultiplayerRankProgress
---@field OnRemoteCurseStatusChanged FPlayerHUDInfoOnRemoteCurseStatusChanged
---@field OnTetheringStateChanged FPlayerHUDInfoOnTetheringStateChanged
---@field OnClientTetheringStateChanged FPlayerHUDInfoOnClientTetheringStateChanged
---@field OnHealthRegenStateChanged FPlayerHUDInfoOnHealthRegenStateChanged
---@field OnMultiplayerClientLeft FPlayerHUDInfoOnMultiplayerClientLeft
---@field Target ATouristCharacter
---@field RemoteTarget ABasePlayerCharacter
---@field health float
---@field MaxHealth float
---@field DefaultMaxHealth float
---@field IsMaxHealthAtMaximum boolean
---@field bLowHealthMode boolean
---@field bCriticalHealthMode boolean
---@field RemoteHealth float
---@field RemoteMaxHealth float
---@field RemoteDefaultMaxHealth float
---@field bRemoteIsMaxHealthAtMaximum boolean
---@field bRemoteLowHealthMode boolean
---@field bRemoteCriticalHealthMode boolean
UPlayerHUDInfo = {}

---@param ItemClass TSubclassOf<ACollectibleBase>
function UPlayerHUDInfo:XrayCollected(ItemClass) end
---@param Weapon APlayerWeapon
function UPlayerHUDInfo:WeaponUpgraded(Weapon) end
---@param Name FText
---@param WeaponCategory EWeaponCategory
function UPlayerHUDInfo:WeaponUpgradeCollected(Name, WeaponCategory) end
---@param TraitType uint8
---@param TraitLevel int32
---@param UnlockGoal int32
---@param UnlockProgress int32
function UPlayerHUDInfo:WeaponTraitUnlockProgress(TraitType, TraitLevel, UnlockGoal, UnlockProgress) end
---@param Weapon APlayerGun
function UPlayerHUDInfo:WeaponTraitsReplicated(Weapon) end
---@param TraitType uint8
---@param NewLevel int32
function UPlayerHUDInfo:WeaponTraitLevelUnlocked(TraitType, NewLevel) end
---@param Upgrade FTimedGunUpgrades
function UPlayerHUDInfo:WeaponTimedUpgradePending(Upgrade) end
---@param Upgrade FTimedGunUpgrades
function UPlayerHUDInfo:WeaponTimedUpgradeActivated(Upgrade) end
---@param Weapon APlayerWeapon
function UPlayerHUDInfo:WeaponFired(Weapon) end
function UPlayerHUDInfo:UnlockItemsRemoved() end
---@param ItemClassName FName
function UPlayerHUDInfo:UnlockItemCollected(ItemClassName) end
---@param TutorialWidget UTouristTutorialWidget
function UPlayerHUDInfo:TutorialQueued(TutorialWidget) end
---@param ThingParams FUpdateThingStatsParams
---@param ValueBefore int32
---@param ValueAfter int32
function UPlayerHUDInfo:ThingStatsChanged(ThingParams, ValueBefore, ValueAfter) end
---@param TraitType uint8
function UPlayerHUDInfo:SetPendingWeaponTraitItem(TraitType) end
---@param ItemName FName
function UPlayerHUDInfo:SetPendingDatabankMenuItem(ItemName) end
function UPlayerHUDInfo:SecretAreaFound() end
---@param DeltaSanity float
---@param SanityPercent float
---@param bSanityStateChanged boolean
---@param NewSanityState ASanityState
function UPlayerHUDInfo:SanityChanged(DeltaSanity, SanityPercent, bSanityStateChanged, NewSanityState) end
---@param RoomIndex int32
function UPlayerHUDInfo:RoomCleared(RoomIndex) end
---@param bIsReviving boolean
---@param BeingRevived APlayerCharacter
---@param ReviveProgress float
function UPlayerHUDInfo:RevivingStateChanged(bIsReviving, BeingRevived, ReviveProgress) end
function UPlayerHUDInfo:ReviveStarted() end
function UPlayerHUDInfo:ReviveCompleted() end
function UPlayerHUDInfo:RetriggerRemoteTargetEvents() end
---@param PlayerCharacter ABasePlayerCharacter
function UPlayerHUDInfo:RemotePlayerNameReplicated(PlayerCharacter) end
---@param MultiplayerRankComponent UMultiplayerRankComponent
function UPlayerHUDInfo:RemoteMultiplayerRankProgress(MultiplayerRankComponent) end
---@param MultiplayerRankComponent UMultiplayerRankComponent
function UPlayerHUDInfo:RemoteMultiplayerRankChanged(MultiplayerRankComponent) end
---@param ConnectionComp UMetaModifierConnectionComponent
---@param MetaModifier UMetaModifierBaseComponent
function UPlayerHUDInfo:RemoteMetaModifierConnectionRemoved(ConnectionComp, MetaModifier) end
---@param ConnectionComp UMetaModifierConnectionComponent
---@param MetaModifier UMetaModifierBaseComponent
function UPlayerHUDInfo:RemoteMetaModifierConnectionAdded(ConnectionComp, MetaModifier) end
---@param Attribute USimpleAttributeComponent
function UPlayerHUDInfo:RemoteMaxHealthUpgradeMaxReached(Attribute) end
---@param Attribute USimpleAttributeComponent
function UPlayerHUDInfo:RemoteMaxHealthUpgradeMaxChanged(Attribute) end
---@param Attribute USimpleAttributeComponent
function UPlayerHUDInfo:RemoteMaxHealthUpgradeConsumed(Attribute) end
---@param Attribute USimpleAttributeComponent
---@param OldValue float
function UPlayerHUDInfo:RemoteMaxHealthUpgradeChanged(Attribute, OldValue) end
---@param HealthComponent UHealthComponent
function UPlayerHUDInfo:RemoteMaxHealthChanged(HealthComponent) end
---@param HealthComponent UHealthComponent
---@param bIsLowHealth boolean
function UPlayerHUDInfo:RemoteLowHealthModeChanged(HealthComponent, bIsLowHealth) end
---@param HealthComponent UHealthComponent
function UPlayerHUDInfo:RemoteHealthChanged(HealthComponent) end
---@param bIsDowned boolean
---@param BeingRevivedBy APlayerCharacter
---@param bIsBeingRevived boolean
---@param ReviveProgress float
function UPlayerHUDInfo:RemoteDownedStateChanged(bIsDowned, BeingRevivedBy, bIsBeingRevived, ReviveProgress) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UPlayerHUDInfo:RemoteDeath(DamagedActor, DamageEvent) end
---@param HealthComponent UHealthComponent
---@param bIsCriticalHealth boolean
function UPlayerHUDInfo:RemoteCriticalHealthModeChanged(HealthComponent, bIsCriticalHealth) end
---@param Params FPOIProximityParams
function UPlayerHUDInfo:ProximityExit(Params) end
---@param Params FPOIProximityParams
function UPlayerHUDInfo:ProximityEnter(Params) end
---@param Proficiency UProficiencyComponent
---@param DeltaPoints int32
function UPlayerHUDInfo:ProficiencyPointsChanged(Proficiency, DeltaPoints) end
---@param Proficiency UProficiencyComponent
---@param bIncreased boolean
function UPlayerHUDInfo:ProficiencyLevelChanged(Proficiency, bIncreased) end
---@param ProficiencyComponent UProficiencyComponent
function UPlayerHUDInfo:ProficiencyBeginPlay(ProficiencyComponent) end
---@param PocketsComponent UPocketsComponent
---@param PocketIndex int32
function UPlayerHUDInfo:PocketItemReplicated(PocketsComponent, PocketIndex) end
function UPlayerHUDInfo:PlayerStateReplicated() end
---@param PlayerState APlayerState
---@param NewRoomIndex int32
---@param OldRoomIndex int32
function UPlayerHUDInfo:PlayerRoomChanged(PlayerState, NewRoomIndex, OldRoomIndex) end
function UPlayerHUDInfo:PlayerJumped() end
---@param bFireAllowed boolean
function UPlayerHUDInfo:PlayerFireAllowedChanged(bFireAllowed) end
---@param ObjectiveSystem UObjectiveSystemComponent
---@param Objective UObjectiveComponent
function UPlayerHUDInfo:ObjectiveRemoved(ObjectiveSystem, Objective) end
---@param ObjectiveSystem UObjectiveSystemComponent
---@param Objective UObjectiveComponent
function UPlayerHUDInfo:ObjectiveModified(ObjectiveSystem, Objective) end
---@param ObjectiveSystem UObjectiveSystemComponent
---@param Objective UObjectiveComponent
function UPlayerHUDInfo:ObjectiveAdded(ObjectiveSystem, Objective) end
---@param Inventory UInventory
---@param KeyType EInventoryKeyType
function UPlayerHUDInfo:NoConsumeKey(Inventory, KeyType) end
---@param Inventory UInventory
---@param Consumable UConsumableComponent
function UPlayerHUDInfo:NoConsumeConsumable(Inventory, Consumable) end
---@param MultiplayerRewardsComponent UMultiplayerRewardsComponent
function UPlayerHUDInfo:MultiplayerRewardsTierChanged(MultiplayerRewardsComponent) end
---@param MultiplayerRewardsComponent UMultiplayerRewardsComponent
function UPlayerHUDInfo:MultiplayerRewardsProgress(MultiplayerRewardsComponent) end
---@param Rank int32
---@param Clarity int32
function UPlayerHUDInfo:MultiplayerRankRewards(Rank, Clarity) end
---@param MultiplayerRankComponent UMultiplayerRankComponent
function UPlayerHUDInfo:MultiplayerRankProgress(MultiplayerRankComponent) end
---@param MultiplayerRankComponent UMultiplayerRankComponent
function UPlayerHUDInfo:MultiplayerRankChanged(MultiplayerRankComponent) end
function UPlayerHUDInfo:MultiplayerClientLeft() end
---@param MetaModifiers TArray<UMetaModifierComponent>
function UPlayerHUDInfo:MetaModifiersChanged(MetaModifiers) end
---@param ConnectionComp UMetaModifierConnectionComponent
---@param MetaModifier UMetaModifierBaseComponent
function UPlayerHUDInfo:MetaModifierConnectionRemoved(ConnectionComp, MetaModifier) end
---@param ConnectionComp UMetaModifierConnectionComponent
---@param MetaModifier UMetaModifierBaseComponent
function UPlayerHUDInfo:MetaModifierConnectionChanged(ConnectionComp, MetaModifier) end
---@param ConnectionComp UMetaModifierConnectionComponent
---@param MetaModifier UMetaModifierBaseComponent
function UPlayerHUDInfo:MetaModifierConnectionAdded(ConnectionComp, MetaModifier) end
---@param Weapon APlayerWeapon
---@param BulletsInClip float
---@param ClipPercent float
function UPlayerHUDInfo:MeleeWeaponClipStatusChanged(Weapon, BulletsInClip, ClipPercent) end
---@param NewWeapon AMeleeWeaponBase
---@param OldWeapon AMeleeWeaponBase
function UPlayerHUDInfo:MeleeWeaponChanged(NewWeapon, OldWeapon) end
---@param Attribute USimpleAttributeComponent
function UPlayerHUDInfo:MaxHealthUpgradeMaxReached(Attribute) end
---@param Attribute USimpleAttributeComponent
function UPlayerHUDInfo:MaxHealthUpgradeMaxChanged(Attribute) end
---@param Attribute USimpleAttributeComponent
function UPlayerHUDInfo:MaxHealthUpgradeConsumed(Attribute) end
---@param Attribute USimpleAttributeComponent
---@param OldValue float
function UPlayerHUDInfo:MaxHealthUpgradeChanged(Attribute, OldValue) end
---@param HealthComponent UHealthComponent
function UPlayerHUDInfo:MaxHealthChanged(HealthComponent) end
---@param ReloadTime float
function UPlayerHUDInfo:MainWeaponReloadStarted(ReloadTime) end
function UPlayerHUDInfo:MainWeaponReloadMinigameSuccess() end
function UPlayerHUDInfo:MainWeaponReloadMinigameFail() end
function UPlayerHUDInfo:MainWeaponReloadDone() end
---@param Weapon APlayerWeapon
---@param BulletsInClip float
---@param ClipPercent float
function UPlayerHUDInfo:MainWeaponClipStatusChanged(Weapon, BulletsInClip, ClipPercent) end
---@param NewWeapon APlayerGun
---@param OldWeapon APlayerGun
function UPlayerHUDInfo:MainWeaponChanged(NewWeapon, OldWeapon) end
---@param HealthComponent UHealthComponent
---@param bIsLowHealth boolean
function UPlayerHUDInfo:LowHealthModeChanged(HealthComponent, bIsLowHealth) end
---@param LockOnComponent ULockOnComponent
---@param TargetComponent ULockOnTargetComponent
function UPlayerHUDInfo:LockOnTargetChanged(LockOnComponent, TargetComponent) end
---@param bIsLockedOn boolean
---@param bIsPointingAtTarget boolean
---@param LockOnComponent ULockOnComponent
function UPlayerHUDInfo:LockOnStateChanged(bIsLockedOn, bIsPointingAtTarget, LockOnComponent) end
function UPlayerHUDInfo:LockOnRequestFailed() end
function UPlayerHUDInfo:LockOnLostLineOfSight() end
---@param phase float
function UPlayerHUDInfo:LockOnLosingLineOfSight(phase) end
---@param KeyType EInventoryKeyType
---@param amount int32
---@param Delta int32
function UPlayerHUDInfo:KeyAmountChanged(KeyType, amount, Delta) end
---@param ItemClass TSubclassOf<ACollectibleBase>
function UPlayerHUDInfo:ItemUnlocked(ItemClass) end
---@param Item AActor
---@param bStatsDiscovered boolean
function UPlayerHUDInfo:ItemDiscovered(Item, bStatsDiscovered) end
---@param Item ACollectibleBase
---@param bManually boolean
function UPlayerHUDInfo:ItemCollected(Item, bManually) end
---@param Hazard UObject
---@param bCaught boolean
function UPlayerHUDInfo:ImmobilizedStateChanged(Hazard, bCaught) end
function UPlayerHUDInfo:HUDBootAnimationReady() end
---@param bCancelled boolean
function UPlayerHUDInfo:HookShotStop(bCancelled) end
---@param HookShotComponent UHookShotAbilityComponent
---@param HookShotLevel int32
function UPlayerHUDInfo:HookShotStart(HookShotComponent, HookShotLevel) end
---@param HealthComponent UHealthComponent
function UPlayerHUDInfo:HealthChanged(HealthComponent) end
---@param Weapon APlayerWeapon
function UPlayerHUDInfo:HandleWeaponUpgradeRemoved(Weapon) end
---@param PocketsComponent UPocketsComponent
---@param Modification int32
function UPlayerHUDInfo:HandleSelectedPocketChanged(PocketsComponent, Modification) end
---@param RoomIndex int32
---@param bLocked boolean
---@param Source UObject
function UPlayerHUDInfo:HandleRoomLockdownChanged(RoomIndex, bLocked, Source) end
---@param PocketsComponent UPocketsComponent
function UPlayerHUDInfo:HandlePocketCountChanged(PocketsComponent) end
---@param Destruction FInventoryThingDestruction
function UPlayerHUDInfo:HandleInventoryThingDestroyed(Destruction) end
---@param Inventory UHMQInventoryComponent
function UPlayerHUDInfo:HandleInventoryChanged(Inventory) end
---@param Discoverable UDiscoverableComponent
function UPlayerHUDInfo:HandleEndDiscovery(Discoverable) end
---@param Discoverable UDiscoverableComponent
function UPlayerHUDInfo:HandleBeginDiscovery(Discoverable) end
---@return APlayerCharacter
function UPlayerHUDInfo:GetTargetPlayerCharacter() end
---@return UInventory
function UPlayerHUDInfo:GetTargetInventory() end
---@return ATouristCharacter
function UPlayerHUDInfo:GetTargetCharacter() end
---@return APlayerCharacter
function UPlayerHUDInfo:GetRemoteTargetPlayerCharacter() end
---@param Location FVector
---@param Rotation FRotator
function UPlayerHUDInfo:GetPlayerTransform(Location, Rotation) end
---@param TraitType uint8
---@param bDefined boolean
function UPlayerHUDInfo:GetPendingWeaponTraitItem(TraitType, bDefined) end
---@param ItemName FName
---@param bDefined boolean
function UPlayerHUDInfo:GetPendingDatabankMenuItem(ItemName, bDefined) end
---@return ATouristPlayerController
function UPlayerHUDInfo:GetOwnerPlayerController() end
---@param Weapon float
---@param Melee float
function UPlayerHUDInfo:GetDamageModifierDisplayPercent(Weapon, Melee) end
---@param Location FVector
---@param Rotation FRotator
function UPlayerHUDInfo:GetCameraTransform(Location, Rotation) end
function UPlayerHUDInfo:GameplayStarted() end
---@param SaveGame UTouristSaveGame
---@param Flag FName
function UPlayerHUDInfo:GameplayFlagChanged(SaveGame, Flag) end
---@param bIsFocusAiming boolean
function UPlayerHUDInfo:FocusAimStatusChanged(bIsFocusAiming) end
---@param MetaModifier UMetaModifierComponent
function UPlayerHUDInfo:ExtraLifeConsumed(MetaModifier) end
---@param NewEnemiesKilledCount int32
function UPlayerHUDInfo:EnemyKilledTowardsAdrenaline(NewEnemiesKilledCount) end
---@param Enemy AActor
---@param DamageEvent FTouristDamageEvent
---@param bCriticalHit boolean
function UPlayerHUDInfo:EnemyKilled(Enemy, DamageEvent, bCriticalHit) end
---@param EventType EEnemyTargetDodgeEventType
function UPlayerHUDInfo:EnemyDodged(EventType) end
---@param Enemy AActor
---@param DamageEvent FTouristDamageEvent
function UPlayerHUDInfo:EnemyDamageEventClientSim(Enemy, DamageEvent) end
---@param Enemy AActor
---@param DamageEvent FTouristDamageEvent
---@param bCriticalHit boolean
function UPlayerHUDInfo:EnemyDamageEvent(Enemy, DamageEvent, bCriticalHit) end
---@param Enemy AEnemyBase
function UPlayerHUDInfo:EliteEnemyAggroed(Enemy) end
---@param bIsDowned boolean
---@param BeingRevivedBy APlayerCharacter
---@param bIsBeingRevived boolean
---@param ReviveProgress float
function UPlayerHUDInfo:DownedStateChanged(bIsDowned, BeingRevivedBy, bIsBeingRevived, ReviveProgress) end
---@param Pawn APawn
function UPlayerHUDInfo:DetachFromTarget(Pawn) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UPlayerHUDInfo:Death(DamagedActor, DamageEvent) end
---@param DashComponent UDashAbilityComponent
---@param bPerfectDodge boolean
---@param DashLevel int32
function UPlayerHUDInfo:DashStarted(DashComponent, bPerfectDodge, DashLevel) end
---@param bPerfectDodge boolean
---@param bHitWall boolean
function UPlayerHUDInfo:DashEnded(bPerfectDodge, bHitWall) end
---@param bActive boolean
function UPlayerHUDInfo:DashDisableDebuffActive(bActive) end
---@param CooldownProgress float
function UPlayerHUDInfo:DashCooldownChanged(CooldownProgress) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UPlayerHUDInfo:DamageTaken(DamagedActor, DamageEvent) end
---@param CodeName FName
---@param bStillCursed boolean
function UPlayerHUDInfo:CurseLifted(CodeName, bStillCursed) end
---@param HealthComponent UHealthComponent
---@param bIsCriticalHealth boolean
function UPlayerHUDInfo:CriticalHealthModeChanged(HealthComponent, bIsCriticalHealth) end
---@param Delta float
---@param Total float
function UPlayerHUDInfo:ClarityChanged(Delta, Total) end
---@param CineMan UCinematicManagerComponent
function UPlayerHUDInfo:CinematicStart(CineMan) end
---@param ObjectiveSystem UObjectiveSystemComponent
---@param ParentObjective UObjectiveComponent
---@param ChildObjective UObjectiveComponent
function UPlayerHUDInfo:ChildObjectiveRemoved(ObjectiveSystem, ParentObjective, ChildObjective) end
---@param ObjectiveSystem UObjectiveSystemComponent
---@param ParentObjective UObjectiveComponent
---@param ChildObjective UObjectiveComponent
function UPlayerHUDInfo:ChildObjectiveAdded(ObjectiveSystem, ParentObjective, ChildObjective) end
---@param GameMode USocialChallengeGameMode
function UPlayerHUDInfo:ChallengeModeEnd(GameMode) end
---@param GameMode USocialChallengeGameMode
function UPlayerHUDInfo:ChallengeModeBegin(GameMode) end
---@param NewBiome EBiome
function UPlayerHUDInfo:BiomeChanged(NewBiome) end
---@param Pawn APawn
function UPlayerHUDInfo:AttachToTarget(Pawn) end
---@param CodeName FName
function UPlayerHUDInfo:ArtefactRemoved(CodeName) end
---@param CodeName FName
function UPlayerHUDInfo:ArtefactCollected(CodeName) end
---@param bSuccess boolean
---@param cooldown float
function UPlayerHUDInfo:AltFireUsed(bSuccess, cooldown) end
---@param bActive boolean
function UPlayerHUDInfo:AltFireReady(bActive) end
---@param bActive boolean
function UPlayerHUDInfo:AltFirePreparationChanged(bActive) end
---@param bActive boolean
function UPlayerHUDInfo:AltFireActiveChanged(bActive) end
function UPlayerHUDInfo:AdrenalineReset() end
---@param NewLevel int32
---@param MetaModName FName
---@param ChildMetaModName FName
function UPlayerHUDInfo:AdrenalineMetaModifierAdded(NewLevel, MetaModName, ChildMetaModName) end
---@param OldLevel int32
---@param NewLevel int32
function UPlayerHUDInfo:AdrenalineLevelChanged(OldLevel, NewLevel) end
---@param AdrenalineComponent UAdrenalineComponent
function UPlayerHUDInfo:AdrenalineBeginPlay(AdrenalineComponent) end


---@class UPlayerHealthBar : UTouristWidgetBase
---@field HealthBar UHMQComplexProgressBar
---@field HealthBar_Extra UHMQComplexProgressBar
---@field HealthBar_Extra_Slot UHorizontalBoxSlot
---@field CanvasPanel_DefaultMaxHealth UCanvasPanel
---@field BarConstraints USizeBox
---@field SizeBox_HealthBar USizeBox
---@field FillShadowBrushImage UUserWidget
---@field FillGlowBrushImage UUserWidget
---@field FillGlowBrushImage_Extra UUserWidget
---@field Image_MaxHealthMarker1 UImage
---@field Image_MaxHealthMarker2 UImage
---@field glow UWidgetAnimation
---@field bRemotePlayer boolean
---@field HealthUnitWidth float
---@field CurrentHealth float
---@field PreviousHealth float
---@field CurrentMaxHealth float
---@field PreviousMaxHealth float
---@field DefaultMaxHealth float
---@field bLowHealth boolean
---@field bCriticalHealth boolean
---@field LinearColor_HealthBarBackgound FLinearColor
---@field LinearColor_Border FLinearColor
---@field LinearColor_BorderCriticalHealth FLinearColor
---@field LinearColor_FillShadowLowHealth FLinearColor
---@field LinearColor_LowHealth FLinearColor
---@field LinearColor_CriticalHealth FLinearColor
---@field LinearColor_CriticalHealthFlash FLinearColor
UPlayerHealthBar = {}

---@param MaxWidth float
function UPlayerHealthBar:SetMaxWidth(MaxWidth) end
---@param NewHealth float
---@param NewMaxHealth float
---@param bMaxHealthAtMaximum boolean
function UPlayerHealthBar:NativeHealthChanged(NewHealth, NewMaxHealth, bMaxHealthAtMaximum) end
---@param HealthComponent UHealthComponent
---@param bIsLowHealth boolean
function UPlayerHealthBar:LowHealthModeChanged(HealthComponent, bIsLowHealth) end
---@param bInitialUpdate boolean
function UPlayerHealthBar:HealthChanged(bInitialUpdate) end
---@param HealthComponent UHealthComponent
---@param bIsCriticalHealth boolean
function UPlayerHealthBar:CriticalHealthModeChanged(HealthComponent, bIsCriticalHealth) end


---@class UPlayerMovementComponent : UTouristMovementComponent
---@field bUseFallingStepUp boolean
---@field OnLedgeMove FPlayerMovementComponentOnLedgeMove
UPlayerMovementComponent = {}

---@param Timestamp float
---@param InAccel FVector_NetQuantize10
---@param ClientLoc FVector_NetQuantize100
---@param CompressedMoveFlags uint32
---@param ViewRoll uint8
---@param ViewYawPitch uint32
---@param ClientMovementBase UPrimitiveComponent
---@param ClientBaseBoneName FName
---@param ClientMovementMode uint8
---@param ExtendedMoveData FPlayerCharacterExtMoveData
function UPlayerMovementComponent:ExtServerMoveWithBase(Timestamp, InAccel, ClientLoc, CompressedMoveFlags, ViewRoll, ViewYawPitch, ClientMovementBase, ClientBaseBoneName, ClientMovementMode, ExtendedMoveData) end
---@param Timestamp float
---@param InAccel FVector_NetQuantize10
---@param ClientLoc FVector_NetQuantize100
---@param CompressedMoveFlags uint32
---@param ViewRoll uint8
---@param ViewYawPitch uint32
---@param ClientMovementMode uint8
---@param ExtendedMoveData FPlayerCharacterExtMoveData
function UPlayerMovementComponent:ExtServerMoveNoBase(Timestamp, InAccel, ClientLoc, CompressedMoveFlags, ViewRoll, ViewYawPitch, ClientMovementMode, ExtendedMoveData) end
---@param TimeStamp0 float
---@param InAccel0 FVector_NetQuantize10
---@param PendingFlags uint32
---@param OldViewYawPitch uint32
---@param Timestamp float
---@param InAccel FVector_NetQuantize10
---@param ClientLoc FVector_NetQuantize100
---@param NewFlags uint32
---@param ViewRoll uint8
---@param ViewYawPitch uint32
---@param ClientMovementBase UPrimitiveComponent
---@param ClientBaseBoneName FName
---@param ClientMovementMode uint8
---@param ExtendedMoveData FPlayerCharacterExtMoveData
function UPlayerMovementComponent:ExtServerMoveDualWithBase(TimeStamp0, InAccel0, PendingFlags, OldViewYawPitch, Timestamp, InAccel, ClientLoc, NewFlags, ViewRoll, ViewYawPitch, ClientMovementBase, ClientBaseBoneName, ClientMovementMode, ExtendedMoveData) end
---@param TimeStamp0 float
---@param InAccel0 FVector_NetQuantize10
---@param PendingFlags uint32
---@param OldViewYawPitch uint32
---@param Timestamp float
---@param InAccel FVector_NetQuantize10
---@param ClientLoc FVector_NetQuantize100
---@param NewFlags uint32
---@param ViewRoll uint8
---@param ViewYawPitch uint32
---@param ClientMovementMode uint8
---@param ExtendedMoveData FPlayerCharacterExtMoveData
function UPlayerMovementComponent:ExtServerMoveDualNoBase(TimeStamp0, InAccel0, PendingFlags, OldViewYawPitch, Timestamp, InAccel, ClientLoc, NewFlags, ViewRoll, ViewYawPitch, ClientMovementMode, ExtendedMoveData) end
---@param TimeStamp0 float
---@param InAccel0 FVector_NetQuantize10
---@param PendingFlags uint32
---@param OldViewYawPitch uint32
---@param Timestamp float
---@param InAccel FVector_NetQuantize10
---@param ClientLoc FVector_NetQuantize100
---@param NewFlags uint32
---@param ViewRoll uint8
---@param ViewYawPitch uint32
---@param ClientMovementBase UPrimitiveComponent
---@param ClientBaseBoneName FName
---@param ClientMovementMode uint8
---@param ExtendedMoveData FPlayerCharacterExtMoveData
function UPlayerMovementComponent:ExtServerMoveDualHybridRootMotion(TimeStamp0, InAccel0, PendingFlags, OldViewYawPitch, Timestamp, InAccel, ClientLoc, NewFlags, ViewRoll, ViewYawPitch, ClientMovementBase, ClientBaseBoneName, ClientMovementMode, ExtendedMoveData) end


---@class UPlayerMpDowningComponent : UDeathHandlerComponent
---@field TeleportFadeDuration float
---@field TeleportHoldDuration float
---@field TeleportFadeDistanceThreshold float
---@field Notification TSubclassOf<UNotificationWidget>
---@field ReviverHealthCost float
---@field ReviveHealAmount float
---@field MinReviveHealth float
---@field DamagePfxForReviver FName
---@field HUDParamCollection UMaterialParameterCollection
---@field bDownedPulseEffectEnabled boolean
---@field DownedPulseEffectParamName FName
---@field bShowDownedPulseEffectForAll boolean
---@field HealthReceivedFromReviver float
UPlayerMpDowningComponent = {}

---@param WhoToRevive APlayerCharacter
---@param HealthTransferred float
function UPlayerMpDowningComponent:ServerBeginRevive(WhoToRevive, HealthTransferred) end
function UPlayerMpDowningComponent:PreTeleportFadedOut() end
function UPlayerMpDowningComponent:PostTeleportHold() end
function UPlayerMpDowningComponent:PostTeleportFadedIn() end
---@param State EDownedState
function UPlayerMpDowningComponent:OnDownedStateChanged(State) end
function UPlayerMpDowningComponent:NotifyRevived() end
function UPlayerMpDowningComponent:NotifyCollapsed() end
---@return APlayerController
function UPlayerMpDowningComponent:GetPlayerController() end
---@return APlayerCharacter
function UPlayerMpDowningComponent:GetPlayerCharacter() end


---@class UPlayerNGParticleComponent : UNGParticleComponent
---@field bOwnerAsTargetPlayer boolean
---@field bUsePlayerMeshResource boolean
---@field bIsRemotePlayerParam boolean
---@field IsRemotePlayerParamName FName
---@field bPlayerPositionParam boolean
---@field PlayerPositionParamName FName
---@field bPlayerRotationParam boolean
---@field PlayerRotationParamName FName
---@field bPlayerVelocityParam boolean
---@field PlayerVelocityParamName FName
---@field bPlayerMeshPositionParam boolean
---@field PlayerMeshPositionParamName FName
---@field bPlayerMeshRotationParam boolean
---@field PlayerMeshRotationParamName FName
---@field bPlayerGroundPosParam boolean
---@field PlayerGroundPosParamName FName
---@field bUseLastWalkedOnPlayerGroundPos boolean
UPlayerNGParticleComponent = {}

---@param InTargetPlayer APlayerCharacter
function UPlayerNGParticleComponent:SetTargetPlayer(InTargetPlayer) end
---@param bEnabled boolean
function UPlayerNGParticleComponent:MeshResourceEnabled(bEnabled) end


---@class UPlayerRespawnBaseComponent : UDeathHandlerComponent
---@field InvisibleToEnemiesDuration float
---@field InvisibleToEnemiesEffect TSubclassOf<UGameplayEffect>
UPlayerRespawnBaseComponent = {}

---@return APlayerController
function UPlayerRespawnBaseComponent:GetPlayerController() end
---@return APlayerCharacter
function UPlayerRespawnBaseComponent:GetPlayerCharacter() end


---@class UPlayerReviveComponent : UPlayerRespawnBaseComponent
---@field CollapseFrontMontage UAnimMontage
---@field ReviveFrontMontage UAnimMontage
---@field CollapseBackMontage UAnimMontage
---@field ReviveBackMontage UAnimMontage
---@field ReviveMetaModifierComp UMetaModifierComponent
---@field FocusComp ULevelGenStreamingFocus
---@field ReviveMontage UAnimMontage
---@field StreamingTimerHandle FTimerHandle
UPlayerReviveComponent = {}

function UPlayerReviveComponent:ReviveStreamingTimer() end
function UPlayerReviveComponent:ReviveProcessTimer() end
function UPlayerReviveComponent:ReviveFinalizeTimer() end
function UPlayerReviveComponent:ReviveCollapseTimer() end
---@param ReviveModifier UMetaModifierComponent
---@param DamageDirection FVector
function UPlayerReviveComponent:MulticastBeginRevive(ReviveModifier, DamageDirection) end
function UPlayerReviveComponent:BeginGlitchOut() end
function UPlayerReviveComponent:BeginGlitchIn() end


---@class UPlayerSanityComponent : UHMQActorComponent
---@field OnSanityChanged FPlayerSanityComponentOnSanityChanged
---@field OnSanityReset FPlayerSanityComponentOnSanityReset
---@field OnSanityMaxChanged FPlayerSanityComponentOnSanityMaxChanged
---@field SanityStateClass TSubclassOf<ASanityState>
---@field bAutoResetSanity boolean
---@field ResetSpeed float
---@field InitialMaximumSanityValue float
---@field InitialSanityValue float
---@field FallFromWorldSanityDelta FMinMaxFloat
---@field HealingSanityDeltaPerPoint FMinMaxFloat
---@field SmallCurseCureSanityDelta FMinMaxFloat
---@field LargeCurseCureSanityDelta FMinMaxFloat
---@field EnemyKillSanityDelta FMinMaxFloat
---@field EliteEnemyKillSanityDelta FMinMaxFloat
---@field BossEnemyKillSanityDelta FMinMaxFloat
---@field CriticalHitSanityDelta FMinMaxFloat
---@field KillComboUpThreshold int32
---@field KillComboUpSanityDelta FMinMaxFloat
---@field CriticalHitComboSanityDelta TMap<int32, FMinMaxFloat>
---@field CriticalDodgeEnemyKillSanityDelta FMinMaxFloat
---@field LootBoxOpenSanityDelta TMap<TSoftClassPtr<ALootBox>, FMinMaxFloat>
---@field XRayOperationSuccessSanityDelta FMinMaxFloat
---@field XRayOperationFailureSanityDelta FMinMaxFloat
---@field MainWeaponFullyUpgradedSanityDelta FMinMaxFloat
---@field SubWeaponFullyUpgradedSanityDelta FMinMaxFloat
---@field DestructiblePlantTouchSanityDelta FMinMaxFloat
---@field DestructiblePlantDestroySanityDelta FMinMaxFloat
---@field RoomClearSanityDelta FMinMaxFloat
---@field ImmobilizedSanityDelta TMap<TSoftClassPtr<UObject>, FImmobilizedSanityDelta>
---@field ReceivedEnemyDamageSanityDelta FMinMaxFloat
---@field ReceivedDamageSanityDelta FMinMaxFloat
---@field CurrentSanityState ASanityState
---@field MaximumSanityValue float
---@field CurrentSanityValue float
---@field CurrentSanityStateIndex int32
---@field SanityValueAudio UAkAudioEvent
---@field SanityStateIndexMin int32
---@field SanityStateIndexMax int32
---@field CurrentImmobilizingHazard UObject
---@field MetaModConnectionComp UMetaModifierConnectionComponent
UPlayerSanityComponent = {}

---@param value float
function UPlayerSanityComponent:SetMaxSanity(value) end
---@param bImmediate boolean
function UPlayerSanityComponent:ResetSanity(bImmediate) end
---@param HealthComp UHealthComponent
function UPlayerSanityComponent:OwnerRevived(HealthComp) end
---@param Enemy UObject
---@param bCaught boolean
function UPlayerSanityComponent:OwnerImmobilizedStateChanged(Enemy, bCaught) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UPlayerSanityComponent:OwnerDamageTaken(DamagedActor, DamageEvent) end
---@param Delta float
function UPlayerSanityComponent:ModifySanity(Delta) end
---@param amount float
function UPlayerSanityComponent:ModifyMaxSanity(amount) end
---@param ConnectionComp UMetaModifierConnectionComponent
function UPlayerSanityComponent:MetaModifiersChanged(ConnectionComp) end
---@return boolean
function UPlayerSanityComponent:IsResetSanityActive() end
---@return boolean
function UPlayerSanityComponent:IsFullSanity() end
---@return float
function UPlayerSanityComponent:GetSanityPercent() end
---@return float
function UPlayerSanityComponent:GetSanity() end
---@param Delta float
---@return float
function UPlayerSanityComponent:GetModifiedSanityDelta(Delta) end
---@return float
function UPlayerSanityComponent:GetModifiedMaxSanity() end
---@return float
function UPlayerSanityComponent:GetModifiedInitialMaxSanity() end
---@return float
function UPlayerSanityComponent:GetMaxSanity() end
---@return float
function UPlayerSanityComponent:GetInitialMaxSanity() end


---@class UPlayerSoftCollisionComponent : UCharacterSoftCollisionComponent
---@field SoftCollisionSettings FPlayerSoftCollisionSettings
---@field TargetForce FVector
---@field CurrentForce FVector
---@field ForceSmoothingIn float
---@field ForceSmoothingOut float
---@field bImmovable boolean
UPlayerSoftCollisionComponent = {}

---@param InSoftCollisionSettings FPlayerSoftCollisionSettings
function UPlayerSoftCollisionComponent:UpdateSoftCollisionSettings(InSoftCollisionSettings) end
---@param bInImmovable boolean
function UPlayerSoftCollisionComponent:SetImmovable(bInImmovable) end


---@class UPlayerSuitData : UDataAsset
---@field SuitSkeletalMesh USkeletalMesh
---@field SuitAttachments TArray<FSuitAttachmentData>
---@field SuitSceneComponentData TArray<FSuitSceneComponentData>
UPlayerSuitData = {}



---@class UPlayerTetheringComponent : UActorComponent
---@field OnTetherStateChanged FPlayerTetheringComponentOnTetherStateChanged
---@field MPTetheringRoomStreamerActorClass TSubclassOf<AActor>
---@field SpawnedMPTetherStreamingActor TWeakObjectPtr<AActor>
---@field TetheringSettings UPlayerTetheringSettingsDataAsset
---@field ReplicatedTetheringStatus FPlayerTetheringStatus
---@field OwnerController ATouristPlayerController
---@field FriendControllerOnServer ATouristPlayerController
---@field DistanceBetweenPlayers float
---@field ZDiffBetweenPlayers float
---@field WarningStateTimer float
UPlayerTetheringComponent = {}

---@param Reason EPlayerTetheringReason
---@return boolean
function UPlayerTetheringComponent:ShouldUseEasingForReason(Reason) end
---@param Reason EPlayerTetheringReason
function UPlayerTetheringComponent:ServerTetherToOtherPlayer(Reason) end
function UPlayerTetheringComponent:OnRep_TetheringStatus() end
---@param RoomIndex int32
---@param bLocked boolean
---@param Source UObject
function UPlayerTetheringComponent:HandleRoomLockdownChanged(RoomIndex, bLocked, Source) end
---@return float
function UPlayerTetheringComponent:GetWarningStateTimer() end
---@return UPlayerTetheringSettingsDataAsset
function UPlayerTetheringComponent:GetTetheringSettings() end
---@return float
function UPlayerTetheringComponent:GetRelativeDistanceFromTrigger() end
---@return EPlayerTetheringState
function UPlayerTetheringComponent:GetCurrentTetheringState() end
---@return EPlayerTetheringReason
function UPlayerTetheringComponent:GetCurrentTetheringReason() end


---@class UPlayerTetheringSettingsDataAsset : UDataAsset
---@field DefaultSettings FPlayerTetheringSettings
---@field SettingsPerBiome TMap<EBiome, FPlayerTetheringSettings>
---@field bRelativeDistanceIgnoresVertical boolean
---@field HostMaxDistanceToSafeLocation float
---@field bCheckMinDistanceToTargetSafeLocation boolean
---@field PostTetherInvulnerabilityDuration float
---@field TetheringGameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field UntilTeleportArrivedGameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@field bShowReasonOnlyForSuddenTethering boolean
---@field bCalculateDistanceForUiOnClient boolean
---@field DepartDuration float
---@field DepartGlitchOnTime float
---@field ArriveDuration float
---@field ArriveGlitchOffTime float
---@field bSuddenTetheringEase boolean
---@field SuddenTetheringReasons uint8
---@field SuddenTetheringEaseDuration float
---@field bSuddenTetheringFadeOut boolean
---@field SuddenTetheringFadeOutDelay float
---@field SuddenTetheringFadeInDuration float
UPlayerTetheringSettingsDataAsset = {}



---@class UPocketItemComponent : UHMQActorComponent
---@field ItemTag FGameplayTag
---@field PocketTag FGameplayTag
---@field PocketIndex int32
UPocketItemComponent = {}

function UPocketItemComponent:OnRep_PocketIndex() end
---@param Inventory UHMQInventoryComponent
---@param Item UHMQInventoryItemComponent
function UPocketItemComponent:HandleAddToInventory(Inventory, Item) end


---@class UPocketsComponent : UHMQActorComponent
---@field MaxPocketCount int32
---@field OnPocketCountChanged FPocketsComponentOnPocketCountChanged
---@field OnSelectedPocketChanged FPocketsComponentOnSelectedPocketChanged
---@field OnSelectAndConsumePressed FPocketsComponentOnSelectAndConsumePressed
---@field OnSelectAndConsumeReleased FPocketsComponentOnSelectAndConsumeReleased
---@field OnNominationIndexChanged FPocketsComponentOnNominationIndexChanged
---@field OnPocketSelectAndConsumeVisuals FPocketsComponentOnPocketSelectAndConsumeVisuals
---@field OnPocketItemReplicated FPocketsComponentOnPocketItemReplicated
---@field bConsumableCollectionNominationActive boolean
---@field PocketWithUnusable int32
---@field bCanNominate boolean
---@field PocketIndexWithDuplicate int32
---@field bIsItemInAnyPocket boolean
---@field PocketCount int32
---@field PocketIndex int32
---@field InventoryComp UHMQInventoryComponent
---@field NominationIndex int32
UPocketsComponent = {}

---@param IsInRange boolean
---@param InventoryCollectible AActor
function UPocketsComponent:UpdateCanNominate(IsInRange, InventoryCollectible) end
---@param NewLocation FVector
function UPocketsComponent:SetDropLocationOverride(NewLocation) end
function UPocketsComponent:Server_OptimizePockets() end
---@param Modification int32
function UPocketsComponent:Server_ModifySelectedPocket(Modification) end
function UPocketsComponent:OptimizePockets() end
---@param OldPocketIndex int32
function UPocketsComponent:OnRep_PocketIndex(OldPocketIndex) end
function UPocketsComponent:OnRep_PocketCount() end
function UPocketsComponent:MoveNominationIndex() end
---@param Modification int32
function UPocketsComponent:ModifySelectedPocket(Modification) end
---@param InventoryCollectible AActor
---@return boolean
function UPocketsComponent:IsItemInAnyPocket(InventoryCollectible) end
---@return boolean
function UPocketsComponent:IsAnyPocketEmpty() end
---@param ItemTag FGameplayTag
---@return boolean
function UPocketsComponent:HasItemTagInAnyPocket(ItemTag) end
---@param direction int32
---@param bPressed boolean
function UPocketsComponent:HandleModifyAction(direction, bPressed) end
---@param Comp UMetaModifierConnectionComponent
function UPocketsComponent:HandleMetaModifiersChanged(Comp) end
---@param SaveGame UTouristSaveGame
---@param Flag FName
function UPocketsComponent:HandleFlagChanged(SaveGame, Flag) end
---@param Inventory UHMQInventoryComponent
---@param Item UHMQInventoryItemComponent
function UPocketsComponent:HandleAddItem(Inventory, Item) end
---@return UPocketItemComponent
function UPocketsComponent:GetSelectedPocketItem() end
---@return int32
function UPocketsComponent:GetSelectedPocket() end
---@param index int32
---@return int32
function UPocketsComponent:GetPocketItemStackCount(index) end
---@param index int32
---@return TArray<UPocketItemComponent>
function UPocketsComponent:GetPocketItemStack(index) end
---@param index int32
---@return UPocketItemComponent
function UPocketsComponent:GetPocketItem(index) end
---@return int32
function UPocketsComponent:GetPocketCount() end
---@return int32
function UPocketsComponent:GetNominationIndex() end
---@return int32
function UPocketsComponent:GetNextAvailablePocket() end
---@param ItemTag FGameplayTag
---@return UPocketItemComponent
function UPocketsComponent:GetItemWithTagInAnyPocket(ItemTag) end
---@param ItemTag FGameplayTag
---@return int32
function UPocketsComponent:GetIndexWithTagInAnyPocket(ItemTag) end
---@return int32
function UPocketsComponent:GetCurrentAvailablePocket() end
---@param Pocket int32
---@param bPressed boolean
function UPocketsComponent:ConsumeItem(Pocket, bPressed) end
function UPocketsComponent:ClearDropLocationOverride() end
---@return boolean
function UPocketsComponent:AreAllPocketsEmpty() end


---@class UPreventFallingOffWorld : UActorComponent
---@field bDisableComponent boolean
---@field bDisableSimulatePhysicsOnAngenSpawns boolean
---@field bDisableSimulatePhysicsOnLevelPlacedActors boolean
---@field bAdjustLocationToGround boolean
---@field LocationAdjustmentMethod ELocationAdjustementMethod
---@field ActorHitOption EOnActorHit
---@field bAdjustRuntimeSpawnedActorLocationToGround boolean
---@field RuntimeSpawnedActorHeightAdjustmentAmount float
---@field PhysicsAdjustmentTimer FCountdownTimer
---@field bShowExtraPhysicsOptions boolean
---@field bShowLocationAdjustmentOptions boolean
---@field bShowActorHitOptions boolean
UPreventFallingOffWorld = {}

---@param HitComponent UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param NormalImpulse FVector
---@param hit FHitResult
function UPreventFallingOffWorld:OnRootPhysicsHit(HitComponent, OtherActor, OtherComp, NormalImpulse, hit) end
---@param ReasonToDisablePhysics FString
---@param bDisablePhysics boolean
function UPreventFallingOffWorld:DisableOwnerSimulatedPhysics(ReasonToDisablePhysics, bDisablePhysics) end


---@class UPreviewPanelsDataTable : UDataTable
UPreviewPanelsDataTable = {}


---@class UProficiencyComponent : UActorComponent
---@field OnProficiencyBeginPlay FProficiencyComponentOnProficiencyBeginPlay
---@field OnPointsChanged FProficiencyComponentOnPointsChanged
---@field OnLevelChanged FProficiencyComponentOnLevelChanged
---@field Settings UProficiencySettings
---@field Level int32
---@field LevelPoints float
---@field LevelPercent float
UProficiencyComponent = {}

---@param NewLevel int32
function UProficiencyComponent:SetLevel(NewLevel) end
---@param Points float
---@param bAllowMetaMods boolean
---@param BiomeMultiplierTag FName
function UProficiencyComponent:ServerAddPoints(Points, bAllowMetaMods, BiomeMultiplierTag) end
---@param ForceZeroLevel boolean
function UProficiencyComponent:Reset(ForceZeroLevel) end
---@param Weapon APlayerWeapon
function UProficiencyComponent:OwnerWeaponUpgraded(Weapon) end
---@param OldWeapon APlayerWeapon
---@param NewWeapon APlayerWeapon
function UProficiencyComponent:OwnerWeaponChanged(OldWeapon, NewWeapon) end
---@param Enemy AEnemyBase
---@param DamageEvent FTouristDamageEvent
---@param bCriticalHit boolean
function UProficiencyComponent:OwnerEnemyKilled(Enemy, DamageEvent, bCriticalHit) end
function UProficiencyComponent:OnRep_LevelPoints() end
function UProficiencyComponent:OnRep_Level() end
---@param Comp UMetaModifierConnectionComponent
function UProficiencyComponent:OnOwnerMetaModifiersChanged(Comp) end
---@param Player APlayerCharacter
---@param DamageEvent FTouristDamageEvent
function UProficiencyComponent:OnDeath(Player, DamageEvent) end
---@return boolean
function UProficiencyComponent:IsMaxLevel() end
---@return int32
function UProficiencyComponent:GetUltimateMaxLevel() end
---@return UProficiencySettings
function UProficiencyComponent:GetSettings() end
---@param Class UClass
---@return float
function UProficiencyComponent:GetPointsForEnemyKill(Class) end
---@return int32
function UProficiencyComponent:GetMaxLevel() end
---@return int32
function UProficiencyComponent:GetLevelPoints() end
---@return int32
function UProficiencyComponent:GetLevel() end
---@param Points float
---@param bAllowMetaMods boolean
---@param BiomeMultiplierTag FName
function UProficiencyComponent:AddPoints(Points, bAllowMetaMods, BiomeMultiplierTag) end


---@class UProficiencySettings : UDataAsset
---@field LevelUpCost TArray<int32>
---@field MaxLevel int32
---@field PointsForEnemyKill float
---@field OverridePointsForEnemyKill TMap<FSoftClassPath, float>
---@field PointsForFirstWeaponUpgrade float
---@field PointsForWeaponUpgrade float
---@field PointsForDroppingUpgradeableWeapon float
---@field MultiplayerScalingValue float
---@field ProficiencyTraitTierGates TArray<int32>
---@field UnlockableTraitLevelGates TArray<int32>
---@field AltFireLevelGates TArray<int32>
---@field Defaults TArray<FProficiencyDefault>
UProficiencySettings = {}



---@class UProgressManager : UHMQActorComponent
---@field OnRoomLockdownChanged FProgressManagerOnRoomLockdownChanged
---@field OnPlayerRoomChanged FProgressManagerOnPlayerRoomChanged
---@field OnAchievementLogUpdated FProgressManagerOnAchievementLogUpdated
---@field OnPlayerAbilitesChanged FProgressManagerOnPlayerAbilitesChanged
---@field OnSecretAreaFound FProgressManagerOnSecretAreaFound
---@field OnRoomCleared FProgressManagerOnRoomCleared
---@field OnRoomExplored FProgressManagerOnRoomExplored
---@field OnItemDiscovered FProgressManagerOnItemDiscovered
---@field OnGameplayStarted FProgressManagerOnGameplayStarted
---@field OnGameplayEnded FProgressManagerOnGameplayEnded
---@field CombatRoomActivations int32
---@field PlayerIdToRoomIndex TMap<int32, int32>
---@field EnabledTeleports TArray<ATeleport>
---@field LockdownInfos TArray<FLockdownRoomInfo>
---@field ManualLockdownDisableRequests int32
---@field ExploredRooms TSet<int32>
---@field ExcludedExploreRooms TSet<int32>
---@field ExitedRooms TSet<int32>
---@field ClearedRooms TSet<int32>
---@field RoomsOnLockdown TSet<int32>
---@field TotalCombatRoomActivations int32
---@field TotalExploredRooms int32
---@field TotalClearedRooms int32
---@field BiomeExploredRooms int32
---@field ShutdownBiome EBiome
---@field RoomIndexWithLockDisabled int32
UProgressManager = {}

---@param RoomIndex int32
---@param bCleared boolean
function UProgressManager:SetRoomCleared(RoomIndex, bCleared) end
---@param WorldContextObject UObject
function UProgressManager:SecretAreaFound(WorldContextObject) end
---@param Biome EBiome
---@param State EBiomeState
function UProgressManager:OnBiomeStateChanged(Biome, State) end
---@param RoomIndex int32
---@param bNewLock boolean
---@param Source UObject
function UProgressManager:MulticastLockdownChanged(RoomIndex, bNewLock, Source) end
---@param RoomIndex int32
---@return boolean
function UProgressManager:IsRoomSourceOfLockDown(RoomIndex) end
---@param RoomIndex int32
---@return boolean
function UProgressManager:IsRoomLockeddown(RoomIndex) end
---@return boolean
function UProgressManager:IsAnyRoomLockeddown() end
---@return int32
function UProgressManager:GetTotalExploredRooms() end
---@return int32
function UProgressManager:GetTotalCombatRoomActivations() end
---@return int32
function UProgressManager:GetTotalClearedRooms() end
---@return int32
function UProgressManager:GetPlayerRoomProgressionDifficulty() end
---@return int32
function UProgressManager:GetLocalPlayerRoom() end
---@param WorldContextObject UObject
---@return float
function UProgressManager:GetExplorationProgress(WorldContextObject) end
---@return int32
function UProgressManager:GetBiomeExploredRooms() end
---@param RoomIndex int32
function UProgressManager:ExcludeRoomExploration(RoomIndex) end
---@param RoomIndex int32
---@param Source UObject
---@return boolean
function UProgressManager:DeactivateRoomLockdown(RoomIndex, Source) end
---@param GameMode USocialChallengeGameMode
function UProgressManager:ChallengeModeEnd(GameMode) end
---@param GameMode USocialChallengeGameMode
function UProgressManager:ChallengeModeBegin(GameMode) end
---@param RoomIndex int32
---@param Source UObject
---@return boolean
function UProgressManager:ActivateRoomLockdown(RoomIndex, Source) end


---@class UProgressionKeyComponent : UHMQActorComponent
---@field PersistentFlag FName
UProgressionKeyComponent = {}

---@param SaveGame UTouristSaveGame
---@param Flag FName
function UProgressionKeyComponent:HandleFlagChanged(SaveGame, Flag) end


---@class UProgressionLockComponent : UHMQActorComponent
---@field PersistentFlag FName
---@field MainProgressionActor AActor
---@field LockMaterial UMaterialInterface
---@field LockSettings TSubclassOf<UProgressionLockSettings>
---@field AddedProgressionActors TArray<AActor>
---@field StaticMeshCounter int32
---@field SkeletalMeshCounter int32
---@field StaticMeshComponents TArray<UStaticMeshComponent>
---@field SkeletalMeshComponents TArray<USkeletalMeshComponent>
---@field DynamicMaterial UMaterialInstanceDynamic
UProgressionLockComponent = {}

---@param Actor AActor
function UProgressionLockComponent:SetMainProgressionActor(Actor) end
---@param InActor AActor
---@param EndPlayReason EEndPlayReason::Type
function UProgressionLockComponent:HandleMainProgressionActorEndPlay(InActor, EndPlayReason) end
---@param SaveGame UTouristSaveGame
---@param Flag FName
function UProgressionLockComponent:HandleFlagChanged(SaveGame, Flag) end
---@param Actor AActor
function UProgressionLockComponent:AddProgressionActor(Actor) end


---@class UProgressionLockSettings : UObject
---@field FlagToColors TMap<FName, FLinearColor>
UProgressionLockSettings = {}

---@param Flag FName
---@param bLocked boolean
---@param Material UMaterialInstanceDynamic
function UProgressionLockSettings:ModifyMaterial(Flag, bLocked, Material) end
---@param Flag FName
---@param bLocked boolean
---@return FLinearColor
function UProgressionLockSettings:ConvertFlagToColor(Flag, bLocked) end


---@class UProgressionLockableComponent : UHMQActorComponent
---@field OnGatherProgressionActors FProgressionLockableComponentOnGatherProgressionActors
---@field OnLockStateChanged FProgressionLockableComponentOnLockStateChanged
---@field LockComponent UProgressionLockComponent
---@field ActorControllers TArray<UActorControllerComponent>
---@field bLockInitialized boolean
UProgressionLockableComponent = {}

function UProgressionLockableComponent:RefreshLock() end
---@return boolean
function UProgressionLockableComponent:IsLockable() end
---@return UProgressionLockComponent
function UProgressionLockableComponent:GetLock() end


---@class UPylonLauncherComponent : UActorComponent
---@field DamageTypeClass TSubclassOf<UTouristDamageType>
---@field MaxPylonConnectionDistance float
---@field MaxEnemiesDamagedPerFrame int32
---@field BeamDamageRadius float
---@field ObjectTypesToDamage TArray<EObjectTypeQuery>
---@field LOSTraceChannel ECollisionChannel
---@field BeamEffectName FName
---@field BeamColor FLinearColor
---@field Audio_PlayPylonConnectionSound UAkAudioEvent
---@field Audio_StopPylonConnectionSound UAkAudioEvent
---@field Audio_PlayPylonConnectionExpireSound UAkAudioEvent
---@field Audio_MaxConnectionEmitters int32
---@field Audio_MinConnectionEmitterSpacing float
---@field Audio_DeadzoneSizeAtEndOfConnection float
---@field Audio_ConnectionEmitterMaxDistance float
---@field Audio_TargetLocationPlayerFactor float
---@field Pylons TArray<APylonLauncherPylon>
---@field PylonConnections TArray<FPylonConnection>
---@field PendingDamages TArray<FPylonDamageEntry>
---@field AllParticleComponents TArray<UNGParticleComponent>
---@field FreeParticleComponents TArray<UNGParticleComponent>
---@field AllAkComponents TArray<UAkComponent>
---@field FreeAkComponents TArray<UAkComponent>
---@field AudioConnections TArray<FPylonConnectionAudio>
UPylonLauncherComponent = {}

---@param bUpdateAudio boolean
function UPylonLauncherComponent:UpdateConnections(bUpdateAudio) end
function UPylonLauncherComponent:TraceBeamHits() end
function UPylonLauncherComponent:RemoveDeadPylons() end
---@param BeamHits TMap<AActor, UNGParticleComponent>
function UPylonLauncherComponent:ProcessBeamHits(BeamHits) end
function UPylonLauncherComponent:ProcessAsyncTraceResults() end
function UPylonLauncherComponent:MarkConnectionsDirty() end
---@param Connection FPylonConnection
---@return boolean
function UPylonLauncherComponent:IsValidConnection(Connection) end
---@return boolean
function UPylonLauncherComponent:HandleDealDamage() end
---@return TArray<UAkComponent>
function UPylonLauncherComponent:GetAllAkComponents() end
function UPylonLauncherComponent:Cleanup() end
---@param Entry FPylonDamageEntry
function UPylonLauncherComponent:AddDamage(Entry) end


---@class URadiusIndicatorComponent : UProceduralMeshComponent
---@field Radius float
---@field EdgeWidth float
---@field NumSegments int32
---@field BlinkInterval float
---@field InnerColor FLinearColor
---@field EdgeColor FLinearColor
URadiusIndicatorComponent = {}

---@param NewRadius float
function URadiusIndicatorComponent:SetRadius(NewRadius) end


---@class URagdollEnemyDeathBehavior : UEnemyDeathBehaviorBase
---@field RagdollForceMultiplier float
URagdollEnemyDeathBehavior = {}



---@class URainAudioComponent : UActorComponent
---@field PlayRainEvent UAkAudioEvent
---@field StopRainEvent UAkAudioEvent
---@field RainStates TArray<FRainState>
---@field Player USceneComponent
---@field EnvironmentController UEnvironmentControllerComponent
URainAudioComponent = {}



---@class URapidFire : UGunFiringBehavior
---@field bIsFiring boolean
---@field WindupTime float
---@field WindupTimeLeft float
---@field cooldown float
---@field FireRate float
---@field FireRateRandomnessMultiplier float
---@field bResetCooldownOnStopFiring boolean
URapidFire = {}

---@return boolean
function URapidFire:CanFireBulletNow() end


---@class UReloadMinigameComponent : UGunComponent
---@field OnSucceed FReloadMinigameComponentOnSucceed
---@field OnFailed FReloadMinigameComponentOnFailed
---@field ReloadMinigameState EReloadMinigameState_Internal
---@field ReloadMinigameBegin float
---@field ReloadMinigameEnd float
---@field ReloadMinigameGracePeriod float
---@field ReloadMinigameOvercharge float
---@field ReloadMinigameUpgradesDuration float
---@field ReloadMinigameUpgradesFeatureFlag FName
---@field ReloadMinigameUpgradesName FText
---@field ReloadMinigameUpgrades FGunUpgrades
---@field FiringDelayAfterMinigame float
---@field CurrentDelayAfterMinigame float
---@field ReloadMinigameSuccess TSubclassOf<AEffectContainer>
---@field ReloadMinigameFail TSubclassOf<AEffectContainer>
UReloadMinigameComponent = {}

function UReloadMinigameComponent:TriggerMinigameSuccess() end
function UReloadMinigameComponent:StopMinigame() end
function UReloadMinigameComponent:StartMinigame() end
function UReloadMinigameComponent:PlayMinigame() end
function UReloadMinigameComponent:MinigameSuccess() end
function UReloadMinigameComponent:MinigameFail() end
---@return boolean
function UReloadMinigameComponent:IsReloadMinigameInProgress() end
---@return float
function UReloadMinigameComponent:GetReloadMinigameGracePeriod() end
---@return float
function UReloadMinigameComponent:GetReloadMinigameEnd() end
---@return float
function UReloadMinigameComponent:GetReloadMinigameBegin() end
---@return float
function UReloadMinigameComponent:GetReloadMinigameBaseEnd() end
---@return float
function UReloadMinigameComponent:GetReloadMinigameBaseBegin() end
---@return EMinigameProgressState
function UReloadMinigameComponent:GetMinigameProgressState() end
---@return boolean
function UReloadMinigameComponent:AreReloadMinigameUpgradesActive() end


---@class UReloadingClip : UGunClip
---@field MaxBullets int32
---@field CurrentBullets float
---@field BulletsFired_Replicated float
---@field BulletsFired_Local float
---@field ReloadTime float
---@field bIsCurrentlyReloading boolean
---@field CurrentReloadTime float
UReloadingClip = {}

---@return float
function UReloadingClip:GetReloadTimeRemaining() end


---@class URemoteSuckerComponent : USphereComponent
---@field PlayerSuckerComponent USuckerComponent
URemoteSuckerComponent = {}

---@param SuckerComponent USuckerComponent
function URemoteSuckerComponent:SetPlayerSuckerComponent(SuckerComponent) end


---@class UReverseTreeGeneratorComponent : UHMQActorComponent
---@field bPlaceOnLandscape boolean
---@field bApplyLandscapeNormal boolean
---@field bAlwaysAcceptable boolean
---@field bIgnoreOwningLevel boolean
---@field ProcessCountPerTick int32
---@field ThresholdTop float
---@field ThresholdBottom float
---@field LandscapeSampleMultiplier float
---@field StaticMeshComponents TArray<UStaticMeshComponent>
---@field TreeGenerator ATreeGenerator
---@field RuntimeLandscape AHMQRuntimeLandscape
---@field MapLandscape UMapLandscapeComponent
UReverseTreeGeneratorComponent = {}



---@class URocketLauncherSalvoFiringBeahviour : UWeaponFiringBehavior
---@field SalvoRocketCount int32
---@field bRocketFullAuto boolean
---@field SalvoFireRate float
---@field RocketFireRate float
---@field bHasReleasedTrigger boolean
---@field bIsFiring boolean
---@field cooldown float
---@field BeaconWindupTime float
---@field bBeaconFullAuto boolean
---@field BeaconFireRate float
---@field BeaconFireRateRandomnessMultiplier float
---@field bBeaconFireOnTriggerUp boolean
---@field bBeaconFireOnTriggerDown boolean
---@field BeaconWindupTimeLeft float
---@field RocketWindupTime float
---@field bResetCooldownOnStopFiring boolean
---@field RocketWindupTimeLeft float
---@field bFiringSalvo boolean
---@field bStopPending boolean
---@field BulletsLeftInSalvo int32
---@field DelayUntilNextRocket float
---@field bHasFiredBeacons boolean
---@field bHasFiredRockets boolean
---@field bLastWasBeacon boolean
URocketLauncherSalvoFiringBeahviour = {}

---@return boolean
function URocketLauncherSalvoFiringBeahviour:IsRocketShot() end
---@return boolean
function URocketLauncherSalvoFiringBeahviour:IsLastShotInSalvo() end
---@return boolean
function URocketLauncherSalvoFiringBeahviour:IsBeaconShot() end


---@class URogueControllerButtonDataTable : UDataTable
URogueControllerButtonDataTable = {}


---@class URoomConnectorFinder : UActorComponent
---@field ConnectedRoom int32
---@field MyRoomIndex int32
URoomConnectorFinder = {}

---@return boolean
function URoomConnectorFinder:HasConnectedRooms() end


---@class URoomLockdownControlComponent : UHMQActorComponent
---@field bAutoLockdown boolean
---@field bLockdownWhenPlayerSeen boolean
---@field TraceComponentName FName
---@field OnActivationRoomLock FRoomLockdownControlComponentOnActivationRoomLock
---@field OnDeactivationRoomUnlock FRoomLockdownControlComponentOnDeactivationRoomUnlock
---@field EnabledInBiomes int32
---@field CachedRoomDoors TArray<ADoor>
---@field TraceComponent USceneComponent
URoomLockdownControlComponent = {}

function URoomLockdownControlComponent:UpdateLockdown() end
---@param RoomIndexToClearDoorsFor int32
function URoomLockdownControlComponent:TryToClearDoors(RoomIndexToClearDoorsFor) end
---@param bLockdownWhenPlayerSeen boolean
function URoomLockdownControlComponent:SetLockDownWhenPlayerSeen(bLockdownWhenPlayerSeen) end
---@param NewEnabledInBiomes int32
function URoomLockdownControlComponent:SetEnabledInBiomes(NewEnabledInBiomes) end
---@param bNewAutoLockdown boolean
function URoomLockdownControlComponent:SetAutoLockdown(bNewAutoLockdown) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function URoomLockdownControlComponent:HandleBiomeStateChanged(Biome, NewBiomeState) end
---@param bForce boolean
---@return boolean
function URoomLockdownControlComponent:EnableLockdown(bForce) end
function URoomLockdownControlComponent:DisableLockdown() end
---@return boolean
function URoomLockdownControlComponent:CanEnableLockdown() end
---@param Context UObject
---@param RoomIndexToCheckDoorsFor int32
---@return boolean
function URoomLockdownControlComponent:CanAllDoorsLockDown(Context, RoomIndexToCheckDoorsFor) end


---@class URoomModifierGameplayEffectComponent : UHMQActorComponent
---@field GameplayEffectClasses TArray<TSubclassOf<UGameplayEffect>>
---@field Handle FTouristGameplayEffectHandle
URoomModifierGameplayEffectComponent = {}

---@param RoomModifier ARoomModifier
---@param PlayerController APlayerController
function URoomModifierGameplayEffectComponent:HandleExitRoom(RoomModifier, PlayerController) end
---@param RoomModifier ARoomModifier
---@param PlayerController APlayerController
function URoomModifierGameplayEffectComponent:HandleEnterRoom(RoomModifier, PlayerController) end


---@class URoomModifierHUDComponent : UHMQActorComponent
---@field bHideHud boolean
---@field bHideCombatHUD boolean
URoomModifierHUDComponent = {}

---@param RoomModifier ARoomModifier
---@param PlayerController APlayerController
function URoomModifierHUDComponent:HandleExitRoom(RoomModifier, PlayerController) end
---@param RoomModifier ARoomModifier
---@param PlayerController APlayerController
function URoomModifierHUDComponent:HandleEnterRoom(RoomModifier, PlayerController) end


---@class URoomTrackerComponent : UHMQActorComponent
---@field bSelfDestructOutsideRoom boolean
---@field SelfDestructTimer float
---@field OnRoomChanged FRoomTrackerComponentOnRoomChanged
---@field bCalculateEnterExitDistances boolean
---@field CachedGameState ATouristGameState
---@field CurrentRoomIndex int32
---@field NextRoomIndex int32
---@field PrevRoomIndex int32
---@field CurrentDoorTransforms TArray<FTransform>
---@field PrevDoorTransforms TArray<FTransform>
---@field CurrentDoorIndices TArray<int32>
---@field PrevDoorIndices TArray<int32>
---@field EnterDistance float
---@field ExitDistance float
URoomTrackerComponent = {}

---@param DeltaTime float
function URoomTrackerComponent:StandaloneMode_Tick(DeltaTime) end
---@param DestroyedActor AActor
function URoomTrackerComponent:OnOwnerDestroyed(DestroyedActor) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function URoomTrackerComponent:LatentRegisterTracker(Biome, NewBiomeState) end
---@param PreviousRoomIndex int32
---@param CurrentRoomIndex int32
function URoomTrackerComponent:HandleRoomChanged(PreviousRoomIndex, CurrentRoomIndex) end
---@return int32
function URoomTrackerComponent:GetPreviousRoomIndex() end
---@return int32
function URoomTrackerComponent:GetNextRoomIndex() end
---@return float
function URoomTrackerComponent:GetExitDistance() end
---@return float
function URoomTrackerComponent:GetEnterDistance() end
---@return int32
function URoomTrackerComponent:GetCurrentRoomIndex() end


---@class URoomVolumeHazardEnablerBehaviour : UHazardBehaviourComponentBase
---@field bActivatesHazard boolean
---@field bEnablesHazard boolean
URoomVolumeHazardEnablerBehaviour = {}

---@param PlayerState APlayerState
---@param NewRoomIndex int32
---@param OldRoomIndex int32
function URoomVolumeHazardEnablerBehaviour:OnPlayerRoomChanged(PlayerState, NewRoomIndex, OldRoomIndex) end


---@class URootMotionEnemyMovementBehaviour : UBaseEnemyMovementBehaviour
---@field bRequireCharacterFacingDirection boolean
---@field DirectionFacingDotThreshold float
---@field RotationSpeedOverride float
---@field RequestDescriptor FAnimationRequestDescriptor
---@field TargetLocation FVector
---@field bWaitingForAnimationRequest boolean
URootMotionEnemyMovementBehaviour = {}

---@return FVector
function URootMotionEnemyMovementBehaviour:GetTargetLocation() end
---@return FAnimationRequestDescriptor
function URootMotionEnemyMovementBehaviour:GetAnimationRequestDescriptor() end


---@class URootMotionMovementComponent : UActorComponent
---@field Owner ATouristCharacter
---@field CharacterMovement UCharacterMovementComponent
---@field CharacterAnimInstance UTouristCharacterAnimInstance
---@field bIsDeltaCorrecting boolean
---@field DeltaCorrectionInstance FDeltaCorrectionInstance
---@field FrameRootDelta FRootMotionDelta
---@field LocomotionAnimCollection ULocomotionAnimCollection
---@field LocomotionAnimSlotName FName
---@field LocomotionAnimPicker ULocomotionAnimPickerBase
---@field AllowLocationDeltaForAnims EPerLocomotionAnimTypeSetting
---@field AllowRotationDeltaForAnims EPerLocomotionAnimTypeSetting
---@field bConformLocationDeltaToDesiredVelocity boolean
---@field LocomotionAnimLoopBlend float
---@field LocomotionAnimTransitionBlend float
---@field LocomotionAnimTransitionTriggerTimePercentage float
---@field LocomotionAnimMaxSpeedVariance float
---@field TrackedLocomotionBones TArray<FName>
---@field bReduceTransitionFootSliding boolean
---@field FootSlidingReductionSmoothing float
---@field LocomotionAnimBlendType EAlphaBlendOption
---@field RootLocomotionMontage UAnimMontage
---@field RootLocomotionAnimSequence UAnimSequence
---@field CurrentLocomotionAnim FLocomotionAnim
---@field TrackedLocomotionBoneData TArray<FTrackedCharacterBoneData>
---@field LocomotionAnimSpeedVariance float
---@field LocomotionAnimMaxLoops int32
---@field CachedMontages TMap<UAnimSequence, UAnimMontage>
---@field bUseAppliedRootMotion boolean
---@field bAutoConsumeRootDelta boolean
---@field bAllowRootRotationXY boolean
---@field LocomotionSuggestedMovementSpeed float
---@field LocomotionSuggestedMovementDir FVector
---@field LocomotionRootDeltaForFrame FRootMotionDelta
---@field LocomotionFootSlidingReductionForce FVector
---@field OnDeltaCorrectionEvent FRootMotionMovementComponentOnDeltaCorrectionEvent
---@field OnDeltaCorrectionProgress FRootMotionMovementComponentOnDeltaCorrectionProgress
URootMotionMovementComponent = {}

---@param DeltaTime float
function URootMotionMovementComponent:UpdateTrackedLocomotionBones(DeltaTime) end
---@param Target FRootMotionTarget
---@param bLocationIsWorldSpace boolean
function URootMotionMovementComponent:UpdateDeltaCorrectionTarget(Target, bLocationIsWorldSpace) end
---@param OutTime float
---@return boolean
function URootMotionMovementComponent:TryGetCorrectedMontageTime(OutTime) end
---@param DeltaTime float
function URootMotionMovementComponent:TickRootLocomotion(DeltaTime) end
---@param DeltaTime float
function URootMotionMovementComponent:TickDeltaCorrection(DeltaTime) end
---@param BlendOutTime float
function URootMotionMovementComponent:StopCurrentRootLocomotionAnim(BlendOutTime) end
---@param Action UCharacterAnimAction_Montage
---@param CorrectionWindowID uint8
---@param Target FRootMotionTarget
function URootMotionMovementComponent:StartRootDeltaCorrection(Action, CorrectionWindowID, Target) end
---@param InCharacter ATouristCharacter
function URootMotionMovementComponent:RegisterOwner(InCharacter) end
function URootMotionMovementComponent:RefreshDeltaCorrectionTarget() end
---@param bAllowTracking boolean
function URootMotionMovementComponent:PostProcessDeltaCorrectionInstance(bAllowTracking) end
---@return boolean
function URootMotionMovementComponent:IsPlayingRootMotionTranslation() end
---@return boolean
function URootMotionMovementComponent:IsPlayingRootMotionRotation() end
---@return boolean
function URootMotionMovementComponent:IsDeltaCorrecting() end
---@param Montage UAnimMontage
---@param StartTime float
---@param EndTime float
---@param bInWorldSpace boolean
---@return FRootMotionDelta
function URootMotionMovementComponent:GetRootMotionOffset(Montage, StartTime, EndTime, bInWorldSpace) end
---@return UAnimMontage
function URootMotionMovementComponent:GetRootLocomotionMontage() end
---@param Action UCharacterAnimAction_Montage
---@return float
function URootMotionMovementComponent:GetMontageSpeedModifierForAction(Action) end
---@return FRootMotionDelta
function URootMotionMovementComponent:GetFrameRootDelta() end
---@param DeltaTime float
---@param OutForce FVector
---@param bIsMidTransition boolean
function URootMotionMovementComponent:GetFootSlidingReductionForce(DeltaTime, OutForce, bIsMidTransition) end
---@return FLocomotionAnim
function URootMotionMovementComponent:GetCurrentLocomotionAnim() end
---@param AnimMontage UAnimMontage
function URootMotionMovementComponent:EndRootDeltaCorrection(AnimMontage) end
---@param StartCorrectionTime float
---@param EndCorrectionTime float
function URootMotionMovementComponent:DoDeltaCorrectionForInterval(StartCorrectionTime, EndCorrectionTime) end
---@param InRootMotion FTransform
---@param MovementComponent UCharacterMovementComponent
---@return FTransform
function URootMotionMovementComponent:ApplyRootMotionToMovementComponent(InRootMotion, MovementComponent) end
---@param Anim FLocomotionAnim
---@param SettingCondition EPerLocomotionAnimTypeSetting
---@return boolean
function URootMotionMovementComponent:AnimMatchesCondition(Anim, SettingCondition) end


---@class URuntimePlayerRoomKillZ : UActorComponent
---@field bDisableKillZVolumes boolean
---@field KillZVolumesAllowedInBiomes int32
---@field CachedPlayerCharacter TWeakObjectPtr<APlayerCharacter>
---@field ActiveInBiomes int32
URuntimePlayerRoomKillZ = {}

---@param bNewEnabled boolean
function URuntimePlayerRoomKillZ:SetRuntimeKillZEnabled(bNewEnabled) end
---@param bNewEnabled boolean
function URuntimePlayerRoomKillZ:SetKillZUpdateEnabled(bNewEnabled) end
---@param OptionalResetValue float
function URuntimePlayerRoomKillZ:ResetKillZ(OptionalResetValue) end
---@param RoomOverseer ARoomOverseer
---@param RoomIndex int32
function URuntimePlayerRoomKillZ:OnRoomGameReady(RoomOverseer, RoomIndex) end
---@param PreviousRoomIndex int32
---@param CurrentRoomIndex int32
function URuntimePlayerRoomKillZ:OnPlayerRoomChanged(PreviousRoomIndex, CurrentRoomIndex) end
---@param OverlappedActor AActor
---@param OtherActor AActor
function URuntimePlayerRoomKillZ:OnOwnerEndOverlap(OverlappedActor, OtherActor) end
---@param OverlappedActor AActor
---@param OtherActor AActor
function URuntimePlayerRoomKillZ:OnOwnerBeginOverlap(OverlappedActor, OtherActor) end
function URuntimePlayerRoomKillZ:OnFellOutOfWorldStarted() end
function URuntimePlayerRoomKillZ:OnFellOutOfWorldCompleted() end
---@param NewBiome EBiome
function URuntimePlayerRoomKillZ:OnBiomeChanged(NewBiome) end


---@class USafeLocationComponent : UHMQActorComponent
---@field SafeGroundRadius float
---@field SafeGroundTraceDistanceBelowPlayer float
---@field bHandleStreamingFocus boolean
---@field SafeLocation FVector
---@field SafeRotation FRotator
---@field CharacterMovementComp UCharacterMovementComponent
---@field OwnerPlayerCharacter APlayerCharacter
---@field StreamingFocus ULevelGenStreamingFocus
---@field PlayerFellComponent UPlayerFellOutOfWorldComponent
USafeLocationComponent = {}

---@param NewSafeLocation FVector
---@param NewSafeRotation FRotator
function USafeLocationComponent:SetSafeLocationAndRotationWithoutAuthority(NewSafeLocation, NewSafeRotation) end
---@param NewSafeLocation FVector
---@param NewSafeRotation FRotator
function USafeLocationComponent:SetSafeLocationAndRotation(NewSafeLocation, NewSafeRotation) end
function USafeLocationComponent:OnRep_SafeLocation() end
---@return FRotator
function USafeLocationComponent:GetSafeRotation() end
---@return FVector
function USafeLocationComponent:GetSafeLocation() end


---@class USayAttributesComponent : UHMQActorComponent
---@field SpeakerName FName
---@field SpeakerDisplayName FText
---@field DefaultChannel int32
---@field Font FSlateFontInfo
---@field TextColor FLinearColor
USayAttributesComponent = {}



---@class USayBlueprintLibrary : UBlueprintFunctionLibrary
USayBlueprintLibrary = {}

---@param WorldContextObject UObject
---@param ID int32
function USayBlueprintLibrary:SayStopSequence(WorldContextObject, ID) end
---@param WorldContextObject UObject
function USayBlueprintLibrary:SayStopCinematics(WorldContextObject) end
---@param WorldContextObject UObject
function USayBlueprintLibrary:SayStopAll(WorldContextObject) end
---@param WorldContextObject UObject
---@param ID int32
function USayBlueprintLibrary:SayStop(WorldContextObject, ID) end
---@param WorldContextObject UObject
---@param Sequence FSaySequence
---@return int32
function USayBlueprintLibrary:SaySequence(WorldContextObject, Sequence) end
---@param WorldContextObject UObject
---@param DataTableHandle FDataTableRowHandle
---@return int32
function USayBlueprintLibrary:SayDT(WorldContextObject, DataTableHandle) end
---@param WorldContextObject UObject
---@param SayEntry FSayEntry
---@return int32
function USayBlueprintLibrary:Say(WorldContextObject, SayEntry) end
---@param WorldContextObject UObject
---@param ID int32
---@return boolean
function USayBlueprintLibrary:IsSayVisible(WorldContextObject, ID) end
---@param WorldContextObject UObject
---@param ID int32
---@return boolean
function USayBlueprintLibrary:IsSaySequencePending(WorldContextObject, ID) end
---@param WorldContextObject UObject
---@param ID int32
---@return boolean
function USayBlueprintLibrary:IsSayComplete(WorldContextObject, ID) end
---@param WorldContextObject UObject
---@param ID int32
---@return boolean
function USayBlueprintLibrary:IsSayActive(WorldContextObject, ID) end
---@param WorldContextObject UObject
---@param SaySequenceName FName
---@return boolean
function USayBlueprintLibrary:IsLastSaySequence(WorldContextObject, SaySequenceName) end
---@param SequenceName FName
---@param EntrySeparator FText
---@param WorldContextObject UObject
---@param LanguageOverride FString
---@return FText
function USayBlueprintLibrary:GetSaySequenceText(SequenceName, EntrySeparator, WorldContextObject, LanguageOverride) end
---@param SayEntry FSayEntry
---@return float
function USayBlueprintLibrary:GetSaySequenceProgress(SayEntry) end
---@param SequenceName FName
---@return UAkAudioEvent
function USayBlueprintLibrary:GetSaySequencePlayAudio(SequenceName) end
---@param WorldContextObject UObject
---@param SequenceName FName
---@param LineIndex int32
---@param LanguageOverride FString
---@param LocSpeaker FText
---@param RawSpeaker FString
function USayBlueprintLibrary:GetSaySequenceLineSpeaker(WorldContextObject, SequenceName, LineIndex, LanguageOverride, LocSpeaker, RawSpeaker) end
---@param SayEntry FSayEntry
---@return int32
function USayBlueprintLibrary:GetSaySequenceIndex(SayEntry) end
---@param WorldContextObject UObject
---@return USayManagerComponent
function USayBlueprintLibrary:GetSayManager(WorldContextObject) end
---@param SayEntry FSayEntry
---@return int32
function USayBlueprintLibrary:GetSayId(SayEntry) end
---@param WorldContextObject UObject
---@param DataTableHandle FDataTableRowHandle
---@param OutEntry FSayEntry
---@return boolean
function USayBlueprintLibrary:GetSayEntryFromDataTable(WorldContextObject, DataTableHandle, OutEntry) end
---@param SayEntry FSayEntry
---@return FName
function USayBlueprintLibrary:GetSayContext(SayEntry) end
---@param WorldContextObject UObject
---@param Entry FSayEntry
---@return USayAttributesComponent
function USayBlueprintLibrary:GetSayAttributes(WorldContextObject, Entry) end


---@class USayManagerComponent : UHMQActorComponent
---@field OnAddEntry FSayManagerComponentOnAddEntry
---@field OnBeginEntry FSayManagerComponentOnBeginEntry
---@field OnEndEntry FSayManagerComponentOnEndEntry
---@field OnEntryChanged FSayManagerComponentOnEntryChanged
---@field OnEntryComplete FSayManagerComponentOnEntryComplete
---@field CurrentSubtitleMode FString
---@field Entries TArray<FSayEntry>
---@field Sequences TArray<FSaySequence>
---@field AkComponents TArray<UAkComponent>
---@field VisualizerComponent UAkVisualizerComponent
---@field LocalPlayerController APlayerController
---@field CinematicManagerComp UCinematicManagerComponent
---@field ActiveCinematic ACinematicActor
USayManagerComponent = {}

function USayManagerComponent:HandleRestartGame() end
---@param InCinematicManagerComp UCinematicManagerComponent
function USayManagerComponent:HandleCinematicStop(InCinematicManagerComp) end
---@param InCinematicManagerComp UCinematicManagerComponent
function USayManagerComponent:HandleCinematicStart(InCinematicManagerComp) end
---@param EntryId int32
function USayManagerComponent:EndEntry(EntryId) end
---@param EntryId int32
function USayManagerComponent:BeginEntry(EntryId) end
---@param CallbackType EAkCallbackType
---@param CallbackInfo UAkCallbackInfo
function USayManagerComponent:AkAudioCallback(CallbackType, CallbackInfo) end


---@class USessionTimeWidget : UTouristWidgetBase
---@field TextBlock_Time UTextBlock
USessionTimeWidget = {}

function USessionTimeWidget:ChallengeModeEnd() end
function USessionTimeWidget:ChallengeModeBegin() end


---@class USetControllerRotation : UActorComponent
---@field Owner AActor
---@field Parent ASCEAutomationActor
USetControllerRotation = {}



---@class USetPositionBP : UActorComponent
---@field Owner AActor
---@field Parent ASCEAutomationActor
USetPositionBP = {}



---@class USetRelPositionBP : UActorComponent
---@field Owner AActor
---@field Parent ASCEAutomationActor
USetRelPositionBP = {}



---@class USetToActorPosition : UActorComponent
---@field Owner AActor
---@field Parent ASCEAutomationActor
USetToActorPosition = {}



---@class UShipLogData : UObject
---@field Entries TMap<FName, UShipLogEntry>
UShipLogData = {}

---@param Name FName
---@return UShipLogEntry
function UShipLogData:FindEntry(Name) end


---@class UShipLogEntry : UObject
---@field ID FName
---@field Group FName
---@field Name FText
---@field Tiers TArray<FShipLogEntryTier>
---@field Duplicates TSet<FName>
UShipLogEntry = {}

---@param count int32
---@param Required int32
---@param CountOverride int32
function UShipLogEntry:GetTotalTierProgress(count, Required, CountOverride) end
---@param TierIndex int32
---@param OutTier FShipLogEntryTier
---@return boolean
function UShipLogEntry:GetTierIndexData(TierIndex, OutTier) end
---@param InTier int32
---@return int32
function UShipLogEntry:GetTierIndex(InTier) end
---@param InTier int32
---@param OutTier FShipLogEntryTier
---@return boolean
function UShipLogEntry:GetTierData(InTier, OutTier) end
---@return int32
function UShipLogEntry:GetTierCount() end
---@param InTier int32
---@param OutTier FShipLogEntryTier
---@return boolean
function UShipLogEntry:GetTier(InTier, OutTier) end
---@return int32
function UShipLogEntry:GetMaxTier() end
---@return int32
function UShipLogEntry:GetFirstTier() end
---@param value int32
---@return FText
function UShipLogEntry:GetDescription(value) end
---@return float
function UShipLogEntry:GetCurrentTierProgress() end
---@param Key FName
---@param OutKey FText
---@param OutValue FText
---@return boolean
function UShipLogEntry:GetCurrentTierKeyValue(Key, OutKey, OutValue) end
---@return int32
function UShipLogEntry:GetCurrentTierIndex() end
---@param OutTier FShipLogEntryTier
---@return boolean
function UShipLogEntry:GetCurrentTierData(OutTier) end
---@return int32
function UShipLogEntry:GetCurrentTier() end
---@return FText
function UShipLogEntry:GetCurrentDescription() end


---@class UShoulderDroidComponent : UActorComponent
UShoulderDroidComponent = {}

---@param InteractingController AController
---@param InteractTarget AActor
function UShoulderDroidComponent:PlayerInteract(InteractingController, InteractTarget) end


---@class USideBySideBarrel : UGunBarrel
---@field BulletCount int32
---@field BarrelDistance float
USideBySideBarrel = {}



---@class USimpleAttributeComponent : UHMQActorComponent
---@field OnChanged FSimpleAttributeComponentOnChanged
---@field OnMaxReached FSimpleAttributeComponentOnMaxReached
---@field OnConsumed FSimpleAttributeComponentOnConsumed
---@field OnMaxChanged FSimpleAttributeComponentOnMaxChanged
---@field value float
---@field MaxValue float
---@field Updates TArray<FSimpleAttributeValueUpdate>
USimpleAttributeComponent = {}

---@param InValue float
function USimpleAttributeComponent:SetMax(InValue) end
function USimpleAttributeComponent:Reset() end
function USimpleAttributeComponent:OnRep_Updates() end
---@param InValue float
function USimpleAttributeComponent:ModifyValue(InValue) end
---@return float
function USimpleAttributeComponent:GetValue() end
---@return float
function USimpleAttributeComponent:GetMax() end
function USimpleAttributeComponent:Consume() end


---@class USimpleSpread : UGunFiringRotModifier
---@field SpreadPitch float
---@field SpreadYaw float
---@field AccurateSpreadMultiplier float
USimpleSpread = {}



---@class USingleShot : UBurstFire
USingleShot = {}


---@class USkipControllerWidget : UHMQUserWidget
---@field SkipDuration float
---@field bSkipEnabled boolean
---@field bSkippable boolean
---@field OnSkip FSkipControllerWidgetOnSkip
USkipControllerWidget = {}

---@param bActive boolean
---@param bTriggered boolean
---@param Percent float
---@param Opacity float
function USkipControllerWidget:ReceiveUpdateSkipState(bActive, bTriggered, Percent, Opacity) end


---@class USlowdownComponent : UActorComponent
USlowdownComponent = {}

---@param value float
---@param Time float
function USlowdownComponent:IncreaseSlowdownTime(value, Time) end
---@return float
function USlowdownComponent:GetSlowdownFactor() end
---@param value float
---@param Time float
function USlowdownComponent:AddSlowdown(value, Time) end


---@class USocialCapsuleManager : UObject
---@field OnCapsuleDataRefreshed FSocialCapsuleManagerOnCapsuleDataRefreshed
---@field SocialManager UTouristSocialManager
USocialCapsuleManager = {}

function USocialCapsuleManager:OnDisconnected() end
function USocialCapsuleManager:OnConnected() end


---@class USocialChallengeGameMode : UTouristArcadePlayMode
---@field FallenCorpseActorClass TSubclassOf<AActor>
---@field FallenCorpseActorClassReference TSoftClassPtr<AActor>
---@field BiomeSetup TMap<EBiome, FSocialChallengeBiomeSetup>
---@field ActorClassBlacklist TArray<TSubclassOf<AActor>>
---@field GameplayEffectsToStore TArray<TSubclassOf<UGameplayEffect>>
---@field ChallengeState FSocialChallengeGeneratedState
---@field InitialGameState FPersistentGameState
---@field TimeRemaining float
---@field TimeRemainingProgress float
---@field ChallengeManager USocialChallengeManager
---@field BiomeManager UBiomeManager
---@field SavedPlayerState TArray<uint8>
---@field GameplayEffectToStoreStackSize TArray<int32>
---@field DefaultPlayerState TArray<uint8>
USocialChallengeGameMode = {}

function USocialChallengeGameMode:OnRestartGame() end
function USocialChallengeGameMode:OnMultiplayerStatusChanged() end
---@param StateName FName
function USocialChallengeGameMode:OnMatchStateChanged(StateName) end
function USocialChallengeGameMode:OnFinishLevel() end
---@param Character ATouristCharacter
function USocialChallengeGameMode:OnCharacterSpawned(Character) end
---@return FSocialChallengeGeneratedState
function USocialChallengeGameMode:GetChallenge() end
---@param bLoadLevel boolean
---@param bDoScreenFade boolean
function USocialChallengeGameMode:EndChallenge(bLoadLevel, bDoScreenFade) end


---@class USocialChallengeGameOverWidget : UHMQScreenWidget
---@field bChallengeMode boolean
USocialChallengeGameOverWidget = {}

---@param TotalRankings int64
function USocialChallengeGameOverWidget:OnTotalRankRetrieved(TotalRankings) end
---@param Manager UTouristArcadeManager
---@param ID int64
---@param Scores FSocialChallengeScoreCache
---@param ScoreFilter ESocialScoreFilter
function USocialChallengeGameOverWidget:OnScoresUpdated(Manager, ID, Scores, ScoreFilter) end
---@param CurrentRankings int64
function USocialChallengeGameOverWidget:OnRankRetrieved(CurrentRankings) end
---@param ID int64
function USocialChallengeGameOverWidget:GetTotalRank(ID) end


---@class USocialChallengeLeaderboardItemWidget : UTouristWidgetBase
---@field RankText UTextBlock
---@field UsernameText UTextBlock
---@field ScoreText UTextBlock
---@field PhaseAndRoomText UTextBlock
---@field LoadingText FText
---@field NoScoresText FText
---@field IsLocalPlayer boolean
---@field Score FSocialChallengeScore
---@field IsPeeked boolean
USocialChallengeLeaderboardItemWidget = {}

---@param InScore FSocialChallengeScore
function USocialChallengeLeaderboardItemWidget:SetScore(InScore) end
---@param Rank int32
function USocialChallengeLeaderboardItemWidget:ScoreUpdated(Rank) end
function USocialChallengeLeaderboardItemWidget:PeekUpdated() end


---@class USocialChallengeLeaderboardWidget : UTouristWidgetBase
---@field bChallengeMode boolean
---@field ItemClass TSubclassOf<USocialChallengeLeaderboardItemWidget>
---@field VisibleItems int32
---@field TotalRankings int64
---@field LeaderboardScrollAmount int32
---@field ItemsContainer UVerticalBox
---@field ClampRankOne boolean
---@field EnablePeeking boolean
---@field PeekTop boolean
---@field PeekBottom boolean
---@field ScrollUpDelegate FSocialChallengeLeaderboardWidgetScrollUpDelegate
---@field ScrollDownDelegate FSocialChallengeLeaderboardWidgetScrollDownDelegate
---@field ScoreWidgets TArray<USocialChallengeLeaderboardItemWidget>
---@field ArcadeManager UTouristArcadeManager
USocialChallengeLeaderboardWidget = {}

---@param Filter ESocialScoreFilter
function USocialChallengeLeaderboardWidget:SetFilter(Filter) end
---@param Challenge FSocialChallengeGeneratedState
function USocialChallengeLeaderboardWidget:SetChallenge(Challenge) end
---@param Nav EUINavigation
---@return UWidget
function USocialChallengeLeaderboardWidget:ScrollUp(Nav) end
---@param Nav EUINavigation
---@return UWidget
function USocialChallengeLeaderboardWidget:ScrollDown(Nav) end
---@param FullClear boolean
---@param IgnoreDelay boolean
function USocialChallengeLeaderboardWidget:Refresh(FullClear, IgnoreDelay) end
function USocialChallengeLeaderboardWidget:ProgressScrollAcceleration() end
function USocialChallengeLeaderboardWidget:OnScroll() end
---@param Manager UTouristArcadeManager
---@param ID int64
---@param Scores FSocialChallengeScoreCache
---@param Filter ESocialScoreFilter
function USocialChallengeLeaderboardWidget:OnScoresUpdated(Manager, ID, Scores, Filter) end
---@param Manager UTouristArcadeManager
---@param ID int64
---@param Rank int64
function USocialChallengeLeaderboardWidget:OnScoreSubmitted(Manager, ID, Rank) end
---@return boolean
function USocialChallengeLeaderboardWidget:IsRequestingInitialData() end
---@return boolean
function USocialChallengeLeaderboardWidget:IsRequestingData() end
---@return ESocialScoreFilter
function USocialChallengeLeaderboardWidget:GetFilter() end
function USocialChallengeLeaderboardWidget:CacheFocusedScoreWidgetIndex() end


---@class USocialChallengeManager : UTouristArcadeManager
---@field OnChallengeModeAvailabilityChanged FSocialChallengeManagerOnChallengeModeAvailabilityChanged
---@field OnChallengeDataRefreshed FSocialChallengeManagerOnChallengeDataRefreshed
---@field OnChallengeScoresUpdated FSocialChallengeManagerOnChallengeScoresUpdated
---@field OnChallengeScoreSubmitted FSocialChallengeManagerOnChallengeScoreSubmitted
---@field OnChallengeScoreSubmissionFailed FSocialChallengeManagerOnChallengeScoreSubmissionFailed
---@field OnChallengeModeBegin FSocialChallengeManagerOnChallengeModeBegin
---@field OnChallengeModeEnd FSocialChallengeManagerOnChallengeModeEnd
---@field ChallengeGameMode TSoftClassPtr<USocialChallengeGameMode>
---@field ChallengeTierUnlockWidget TSoftClassPtr<UTouristTutorialWidget>
---@field AllowTierUnlockNotificationsRooms TArray<FString>
---@field Tiers TArray<FSocialChallengeTier>
---@field ClarityForCompletion int32
---@field FadeColor FLinearColor
---@field ChallengeGameModeInstance USocialChallengeGameMode
USocialChallengeManager = {}

---@param Challenge FSocialChallengeGeneratedState
---@param bDoScreenFade boolean
function USocialChallengeManager:StartChallenge(Challenge, bDoScreenFade) end
function USocialChallengeManager:RequestRefresh() end
function USocialChallengeManager:OnDisconnected() end
function USocialChallengeManager:OnConnected() end
---@param NewBiome EBiome
---@param NewBiomeState EBiomeState
function USocialChallengeManager:OnBiomeStateChanged(NewBiome, NewBiomeState) end
---@param NewBiome EBiome
function USocialChallengeManager:OnBiomeChanged(NewBiome) end
---@param Biome EBiome
function USocialChallengeManager:MarkBiomeEntered(Biome) end
---@param Biome EBiome
function USocialChallengeManager:MarkBiomeCompleted(Biome) end
---@param TargetBiome EBiome
function USocialChallengeManager:LeaveChallengeBiome(TargetBiome) end
---@param bConsume boolean
---@return boolean
function USocialChallengeManager:IsReturningFromChallenge(bConsume) end
---@return boolean
function USocialChallengeManager:IsChallengeModeAvailable() end
---@return boolean
function USocialChallengeManager:IsChallengeModeActive() end
function USocialChallengeManager:InitAssets() end
---@param State FSocialChallengeGeneratedState
---@return boolean
function USocialChallengeManager:HasStartedChallengeId(State) end
---@return boolean
function USocialChallengeManager:HasRetrievedStateInformation() end
---@return boolean
function USocialChallengeManager:HasCompletedTodaysChallenge() end
---@return int32
function USocialChallengeManager:GetTierCount() end
---@return int32
function USocialChallengeManager:GetPlayerChallengeTier() end
---@param State FSocialChallengeGeneratedState
---@param Score FSocialChallengeScore
---@return boolean
function USocialChallengeManager:GetPlayerChallengeScore(State, Score) end
---@param State FSocialChallengeGeneratedState
---@return FString
function USocialChallengeManager:GetChallengeTimeRemaining(State) end
---@return ESocialChallengeModeAvailability
function USocialChallengeManager:GetChallengeModeAvailability() end
---@param DayOffset int32
---@return FDateTime
function USocialChallengeManager:GetActiveChallengeStartTime(DayOffset) end
---@param DayOffset int32
---@return TArray<FSocialChallengeGeneratedState>
function USocialChallengeManager:GetActiveChallenges(DayOffset) end
---@return USocialChallengeGameMode
function USocialChallengeManager:GetActiveChallengeGameMode() end
---@param Tier int32
---@param DayOffset int32
---@return FSocialChallengeGeneratedState
function USocialChallengeManager:GetActiveChallengeForTier(Tier, DayOffset) end
---@param DayOffset int32
---@return FSocialChallengeGeneratedState
function USocialChallengeManager:GetActiveChallengeForPlayerTier(DayOffset) end
---@param seed int32
---@return FSocialChallengeGeneratedLoadoutState
function USocialChallengeManager:GenerateLoadout(seed) end
---@param TargetBiome EBiome
function USocialChallengeManager:EnterChallengeBiome(TargetBiome) end
---@param Tier int32
function USocialChallengeManager:DEBUG_SetTier(Tier) end
function USocialChallengeManager:DEBUG_ResetCompletion() end
function USocialChallengeManager:DEBUG_Randomize() end
function USocialChallengeManager:DEBUG_CycleTier() end
---@param OldBiome EBiome
---@param NewBiome EBiome
function USocialChallengeManager:BiomeHasChanged(OldBiome, NewBiome) end
---@param Loadout FSocialChallengeGeneratedLoadoutState
---@param Player APlayerCharacter
function USocialChallengeManager:ApplyLoadout(Loadout, Player) end


---@class USocialChallengeScoreBonusArchetype : UObject
---@field Name FText
---@field Group FText
---@field NegetiveBonus boolean
---@field Instanced boolean
---@field SortOrder int32
---@field MultiplierAdjustmentMode ESocialChallengeMultiplierAdjustmentMode
---@field MultiplierValue float
USocialChallengeScoreBonusArchetype = {}

---@param Data FSocialChallengeScoreData
---@param ArcadeManager UTouristArcadeManager
---@return FSocialChallengeBonusCalculateResult
function USocialChallengeScoreBonusArchetype:Calculate(Data, ArcadeManager) end


---@class USocialChallengeSelectMenu : UPauseMenu
---@field Leaderboard USocialChallengeLeaderboardWidget
USocialChallengeSelectMenu = {}

function USocialChallengeSelectMenu:InputAction_ToggleFilter() end
---@return float
function USocialChallengeSelectMenu:GetChallengeClarityRewardValue() end


---@class USocialConfig : UObject
USocialConfig = {}


---@class USocialDummyNetworkState : USocialNetworkState
USocialDummyNetworkState = {}


---@class USocialGameplaytype : UObject
USocialGameplaytype = {}


---@class USocialGhostLabelExtendedData : UObject
---@field bShowClarity boolean
---@field bShowTrapProbability boolean
---@field TrapProbability float
USocialGhostLabelExtendedData = {}



---@class USocialGhostManager : UObject
---@field GhostAvengedNotification TSubclassOf<UGhostReplyNotificationWidget>
---@field GhostLootedNotification TSubclassOf<UGhostReplyNotificationWidget>
---@field GhostReplyActorClass TSubclassOf<AActor>
---@field GhostReplyActorClassReference TSoftClassPtr<AActor>
---@field BiomeCorpseRetentionImportance TMap<EBiome, double>
---@field ReplayTimeAfterDeathCapture float
---@field ReplyNotificationCooldown float
---@field MinGameplayReplayLength float
---@field MaxGameplayReplayLength float
---@field MinReplayAreaMaxDimension float
---@field MinTimeBetweenGhostSpawns int32
---@field MinDistanceBetweenGhostSpawns int32
---@field MaxGhostsPerBiome int32
---@field PlayDirectionTrendHistory int32
---@field MaxTimeBetweenZombieSpawns float
---@field GhostActorClass TSubclassOf<AActor>
---@field GhostActorClassReference TSoftClassPtr<AActor>
---@field CachedLevelsWithValidSpawners TSet<ULevel>
---@field SocialManager UTouristSocialManager
---@field RegisteredBiomeManager UBiomeManager
---@field RegisteredPlayer APlayerCharacter
USocialGhostManager = {}

---@param StreamingRoom ALevelGenRoomStreamingActor
function USocialGhostManager:OnRoomShown(StreamingRoom) end
---@param Character APlayerCharacter
---@param DamageEvent FTouristDamageEvent
function USocialGhostManager:OnPlayerDeathComplete(Character, DamageEvent) end
---@param Character APlayerCharacter
---@param DamageEvent FTouristDamageEvent
function USocialGhostManager:OnPlayerDeath(Character, DamageEvent) end
---@param Map ULevelGenMapIngame
function USocialGhostManager:OnMapReady(Map) end
function USocialGhostManager:OnLoadedGhostReplyClass() end
function USocialGhostManager:OnLoadedGhostClass() end
function USocialGhostManager:OnDisconnected() end
function USocialGhostManager:OnConnected() end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function USocialGhostManager:OnBiomeStateChanged(Biome, NewBiomeState) end
function USocialGhostManager:NotifyDeathComplete() end
function USocialGhostManager:DoImguiOverlay() end
---@param bIgnoreUnlocks boolean
---@return boolean
function USocialGhostManager:CanSpawnGhosts(bIgnoreUnlocks) end


---@class USocialGhostPlaybackComponent : UActorComponent
---@field LoadedAssets TMap<FString, UObject>
---@field OriginTransform FTransform
---@field SourceMesh UPoseableMeshComponent
---@field Replay FSocialGhostReplay
---@field AttachedMeshes TArray<UMeshComponent>
USocialGhostPlaybackComponent = {}



---@class USocialGhostRecorderComponent : UActorComponent
---@field DebugVisualizerActor TSoftClassPtr<AActor>
---@field SourceMesh USkeletalMeshComponent
---@field Replay FSocialGhostReplay
---@field CurrentPrimaryWeapon APlayerGun
---@field CurrentPrimaryWeaponMeshes TArray<UMeshComponent>
---@field CurrentMeleeWeapon AMeleeWeaponBase
---@field CurrentMeleeWeaponMeshes TArray<UMeshComponent>
USocialGhostRecorderComponent = {}

---@param OverlappedActor AActor
---@param OtherActor AActor
function USocialGhostRecorderComponent:OnOwnerEndOverlap(OverlappedActor, OtherActor) end
---@param OverlappedActor AActor
---@param OtherActor AActor
function USocialGhostRecorderComponent:OnOwnerBeginOverlap(OverlappedActor, OtherActor) end


---@class USocialInvitationContainerWidget : UHMQScreenWidget
---@field ItemClass TSubclassOf<USocialInvitationItemWidget>
---@field InvitationWidgets TArray<USocialInvitationItemWidget>
USocialInvitationContainerWidget = {}

function USocialInvitationContainerWidget:SetContainerVisible() end
---@param Type EInviteDecideType
---@param SessionIdStr FString
function USocialInvitationContainerWidget:OnAcceptDecided(Type, SessionIdStr) end
function USocialInvitationContainerWidget:BuildInvitationList() end


---@class USocialInvitationItemWidget : UHMQUserWidget
---@field SessionIdStr FString
USocialInvitationItemWidget = {}

---@param DisplayName FText
---@param Avatar UTexture2D
---@param Platform EGamePlatform
function USocialInvitationItemWidget:SetInvitationDetails(DisplayName, Avatar, Platform) end
---@return FString
function USocialInvitationItemWidget:GetSessionIdStr() end


---@class USocialInviteAcceptDecideWidget : UHMQUserWidget
USocialInviteAcceptDecideWidget = {}

function USocialInviteAcceptDecideWidget:ShowInvite() end
---@param PlayerId FText
function USocialInviteAcceptDecideWidget:SetInviteText(PlayerId) end
---@param Type EInviteDecideType
function USocialInviteAcceptDecideWidget:OnDecided(Type) end


---@class USocialInviteItemWidget : UTouristListViewEntry
---@field InviteWidget USocialInviteWidget
---@field FriendIndex int32
---@field GamePlatform EGamePlatform
---@field OnlineStatus EOnlineStatus
USocialInviteItemWidget = {}

---@param Platform EGamePlatform
function USocialInviteItemWidget:SetGamePlatformIcon(Platform) end
---@param UserName FText
function USocialInviteItemWidget:SetDisplayName(UserName) end


---@class USocialInviteWidget : UHMQScreenWidget
---@field UsernameText UTextBlock
---@field ItemClass TSubclassOf<USocialInviteItemWidget>
---@field VisibleItems int32
---@field FriendWidgets TArray<USocialInviteItemWidget>
USocialInviteWidget = {}

function USocialInviteWidget:UpdateInviteFriendsPage() end
function USocialInviteWidget:Refresh() end
---@param FriendIndex int32
function USocialInviteWidget:OnInvited(FriendIndex) end
function USocialInviteWidget:MultiplayerStateChanged() end
---@param FriendIndex int32
---@param FriendDetail FInviteFriendDetail
---@return boolean
function USocialInviteWidget:GetFriendDetail(FriendIndex, FriendDetail) end
---@param bSelected boolean
function USocialInviteWidget:CloseWidget(bSelected) end
function USocialInviteWidget:BuildInviteFriendsPage() end


---@class USocialLobbyDeviceScreenWidget : UHMQScreenWidget
---@field LobbyDevice ASocialLobbyDevice
USocialLobbyDeviceScreenWidget = {}

---@param State ESocialMultiplayerState
function USocialLobbyDeviceScreenWidget:UpdateMultiplayerState(State) end
---@param bSuccess boolean
function USocialLobbyDeviceScreenWidget:UpdateMatchmaking(bSuccess) end
function USocialLobbyDeviceScreenWidget:TimeoutWaitingSession() end
---@param Mode ESocialLobbyDeviceWidgetMode
function USocialLobbyDeviceScreenWidget:SwitchMode(Mode) end
---@param Prompt1 FText
---@param Prompt2 FText
function USocialLobbyDeviceScreenWidget:SetDebugPrompts(Prompt1, Prompt2) end
function USocialLobbyDeviceScreenWidget:MultiplayerStateChanged() end
---@param bSuccess boolean
function USocialLobbyDeviceScreenWidget:MultiplayerMatchmakingDone(bSuccess) end
---@param bSuccess boolean
---@param ErrorCode int32
function USocialLobbyDeviceScreenWidget:MultiplayerInviteDialogClosed(bSuccess, ErrorCode) end
function USocialLobbyDeviceScreenWidget:JoinPublicGame() end
---@return boolean
function USocialLobbyDeviceScreenWidget:IsSimulationMode() end
---@param TestIndex int32
---@return boolean
function USocialLobbyDeviceScreenWidget:IsDevTesting(TestIndex) end
function USocialLobbyDeviceScreenWidget:HostPublicGame() end
function USocialLobbyDeviceScreenWidget:HostPrivateGame() end
function USocialLobbyDeviceScreenWidget:DebugCommand2() end
function USocialLobbyDeviceScreenWidget:DebugCommand1() end
function USocialLobbyDeviceScreenWidget:Close() end


---@class USocialManager_Dummy : UTouristSocialManager
USocialManager_Dummy = {}


---@class USocialManager_Epic : USocialManager_PC
USocialManager_Epic = {}


---@class USocialManager_NP : UTouristSocialManager
USocialManager_NP = {}


---@class USocialManager_PC : UTouristSocialManager
---@field SocialGameplaytype USocialGameplaytype
---@field OnInternetConnectionChanged FSocialManager_PCOnInternetConnectionChanged
USocialManager_PC = {}

function USocialManager_PC:PrepareToUpdateAchievements() end
---@param MultiplayerRankComponent UMultiplayerRankComponent
function USocialManager_PC:OnMultiplayerRankChanged(MultiplayerRankComponent) end
---@param Character ATouristCharacter
function USocialManager_PC:OnCharacterSpawned(Character) end
---@return boolean
function USocialManager_PC:IsConnectedToInternet() end
---@return EGamePlatform
function USocialManager_PC:GetGamePlatform() end
---@return FText
function USocialManager_PC:GetCurrentPlayerAccountId() end


---@class USocialManager_Steam : USocialManager_PC
USocialManager_Steam = {}

function USocialManager_Steam:LinkEpicAccount() end
---@return boolean
function USocialManager_Steam:IsEpicAccountLinked() end
---@return boolean
function USocialManager_Steam:IsEOSDesktopCrossplayReady() end


---@class USocialNetworkState : UObject
USocialNetworkState = {}


---@class USocialPartyManager : UObject
---@field OnMultiplayerInviteDialogClosed FSocialPartyManagerOnMultiplayerInviteDialogClosed
---@field SocialManager UTouristSocialManager
USocialPartyManager = {}



---@class USocialPedestalManager : UObject
---@field OnPedestalDataRefreshed FSocialPedestalManagerOnPedestalDataRefreshed
---@field OnRewardsUpdated FSocialPedestalManagerOnRewardsUpdated
---@field RewardAvailableNotification TSubclassOf<UNotificationWidget>
---@field SocialManager UTouristSocialManager
---@field PendingRewards TArray<FSocialUsePedestalRecord>
USocialPedestalManager = {}

---@return int32
function USocialPedestalManager:PendingRewardCount() end
function USocialPedestalManager:OnDisconnected() end
function USocialPedestalManager:OnConnected() end
---@param ResourceType EPedestalResource
---@return float
function USocialPedestalManager:GetTakeQuantity(ResourceType) end
---@param ResourceType EPedestalResource
---@return float
function USocialPedestalManager:GetTakeClarityQuantity(ResourceType) end
---@param ResourceType EPedestalResource
---@return float
function USocialPedestalManager:GetGiveQuantity(ResourceType) end
---@param ResourceType EPedestalResource
---@return float
function USocialPedestalManager:GetGiveClarityQuantity(ResourceType) end


---@class USocialSessionManager : UObject
---@field SocialManager UTouristSocialManager
USocialSessionManager = {}



---@class USocialVoiceChatManager : UObject
---@field OnLocalPlayerSpeakingChanged FSocialVoiceChatManagerOnLocalPlayerSpeakingChanged
---@field OnRemotePlayerSpeakingChanged FSocialVoiceChatManagerOnRemotePlayerSpeakingChanged
---@field OnTextMessageReceived FSocialVoiceChatManagerOnTextMessageReceived
USocialVoiceChatManager = {}

---@param bTextToSpeech boolean
function USocialVoiceChatManager:SetVoiceChatTextToSpeech(bTextToSpeech) end
---@param bSpeechToText boolean
function USocialVoiceChatManager:SetVoiceChatSpeechToText(bSpeechToText) end
---@param Volume float
function USocialVoiceChatManager:SetVoiceChatOutputVolume(Volume) end
function USocialVoiceChatManager:SetVoiceChatOutput() end
---@param bMute boolean
function USocialVoiceChatManager:SetVoiceChatMute(bMute) end
---@param VoiceChatMode EVoiceChatMode
function USocialVoiceChatManager:SetVoiceChatMode(VoiceChatMode) end
---@param Volume float
function USocialVoiceChatManager:SetVoiceChatInputVolume(Volume) end
function USocialVoiceChatManager:SetVoiceChatInput() end
---@param bUseGameEffects boolean
function USocialVoiceChatManager:SetVoiceChatGameEffects(bUseGameEffects) end
---@param bEnabled boolean
function USocialVoiceChatManager:SetVoiceChatEnabled(bEnabled) end
---@param bDeafen boolean
function USocialVoiceChatManager:SetVoiceChatDeafen(bDeafen) end
---@param Message FString
function USocialVoiceChatManager:SendTextChatMessage(Message) end
---@param Message FString
function USocialVoiceChatManager:ReadMessageAloud(Message) end
---@return boolean
function USocialVoiceChatManager:IsVivoxEnabled() end
---@return boolean
function USocialVoiceChatManager:IsRemoteClientTalking() end
---@return boolean
function USocialVoiceChatManager:IsOwningClientTalking() end
---@return int32
function USocialVoiceChatManager:GetNumberOfChannelParticipants() end


---@class USoftCollisionComponent : UActorComponent
---@field CollisionInstances TArray<FSoftCollisionInstance>
---@field TotalForceAppliedThisFrame FVector
---@field OnForceApplied FSoftCollisionComponentOnForceApplied
---@field CollisionCategory ECharacterCollisionCategory
---@field bUseCollisionNormals boolean
USoftCollisionComponent = {}

function USoftCollisionComponent:UpdateSoftCollisionInstances() end
---@param DeltaTime float
function USoftCollisionComponent:PostHandleSoftCollision(DeltaTime) end
---@return boolean
function USoftCollisionComponent:IsCollisionValid() end
---@param Instance FSoftCollisionInstance
---@param DeltaTime float
function USoftCollisionComponent:HandleSoftCollision(Instance, DeltaTime) end
---@param OtherActor AActor
---@return FVector
function USoftCollisionComponent:GetSoftCollisionPushOrigin(OtherActor) end
---@return TArray<FSoftCollisionInstance>
function USoftCollisionComponent:GetSoftCollisionInstances() end
---@return UPrimitiveComponent
function USoftCollisionComponent:GetPrimitiveComponent() end
---@return FVector
function USoftCollisionComponent:GetForceAppliedThisFrame() end
---@return ECharacterCollisionCategory
function USoftCollisionComponent:GetCollisionCategory() end
---@param force FVector
---@param DeltaTime float
function USoftCollisionComponent:ApplyCollisionForce(force, DeltaTime) end


---@class USpawnVisualComponent : UActorComponent
---@field OnSpawnVisualStarted FSpawnVisualComponentOnSpawnVisualStarted
USpawnVisualComponent = {}

---@param InCategory FName
function USpawnVisualComponent:SetSpawnCategory(InCategory) end


---@class USplineProceduralMeshComponent : UProceduralMeshComponent
---@field Material UMaterialInterface
---@field UseWorldCoordinates boolean
---@field HandleCollisions boolean
---@field PolyCount int32
---@field Radius float
USplineProceduralMeshComponent = {}

---@param Points TArray<FVector>
---@param FirstPointUpVector FVector
function USplineProceduralMeshComponent:SetPoints(Points, FirstPointUpVector) end
---@param Active boolean
function USplineProceduralMeshComponent:SetMeshActive(Active) end


---@class UStandardEnemyDeathBehavior : UEnemyDeathBehaviorBase
---@field DeathPfx FName
---@field DeathPfxs TArray<FName>
---@field ParticleMultipliers TMap<FName, float>
---@field DeathEffectContainers TArray<TSubclassOf<AEffectContainer>>
---@field DeathSounds TArray<UAkAudioEvent>
---@field DeathPfxMeshResource FName
---@field DeathPfxDuration float
---@field DeathPfxSocket FName
---@field bIgnoreSocketAttachment boolean
---@field TextureBindings TMap<FName, UTexture>
---@field AudioParams FEnemyDeathParticleAudioParams
---@field DeathAnimRequest FAnimationRequestDescriptor
---@field bAutoTriggerRagdoll boolean
---@field RagdollWaitTime float
---@field bAutoTriggerPfx boolean
---@field PfxWaitTime float
---@field PostPfxMeshHideDelay int32
---@field bSetZeroVelocityOnRagdollStart boolean
---@field bAddOwnerVelocityToRagdoll boolean
---@field bApplyImpulseFromDamage boolean
---@field bApplyImpulseAtDamageLocation boolean
---@field MinRagdollImpulse float
---@field ImpulseForcePerDamage float
---@field bWaitingForAnimRequest boolean
---@field HideCharacterMeshFrameCountdown int32
---@field DeathPCs TArray<UNGParticleComponent>
---@field DeathPCStartTime float
---@field bTriggeredPfx boolean
---@field bTriggeredRagdoll boolean
---@field SpawnedParticleCount int32
UStandardEnemyDeathBehavior = {}

function UStandardEnemyDeathBehavior:TriggerRagdoll() end
function UStandardEnemyDeathBehavior:SpawnDeathPfx() end
function UStandardEnemyDeathBehavior:CacheDeathPfx() end


---@class UStandardEnemyMovementBehaviour : UBaseEnemyMovementBehaviour
---@field SpeedMultiplier float
---@field TurnBrakePercentage float
---@field TurnBrakeScaling float
---@field CustomTurnBrakeCurve UCurveFloat
---@field bShouldCheckForGroundOnMovement boolean
---@field bShouldNavmeshRaycast boolean
---@field bAllowStrafing boolean
---@field bAlwaysPreferStrafing boolean
---@field bUsingRootMotion boolean
---@field MaxSpeedForSegmentLengthCurve UCurveFloat
UStandardEnemyMovementBehaviour = {}



---@class UStardustMovementComponent : UPawnMovementComponent
---@field MaxSpeed float
---@field Acceleration float
---@field Deceleration float
---@field TurningBoost float
---@field PlanetaryVelocity FRotator
---@field RotationInterpSpeed float
---@field bPositionCorrected boolean
---@field PlanetComponent UStardustPlanetComponent
---@field SphereComponent UStardustSphereComponent
UStardustMovementComponent = {}



---@class UStardustPlanetComponent : UHMQSceneComponent
---@field SphereComponent USphereComponent
UStardustPlanetComponent = {}



---@class UStardustSceneComponent : UHMQSceneComponent
---@field PlanetComponent UStardustPlanetComponent
UStardustSceneComponent = {}



---@class UStardustSphereComponent : USphereComponent
---@field PlanetComponent UStardustPlanetComponent
UStardustSphereComponent = {}



---@class UStartMachineSettings : UDataAsset
---@field Thresholds TArray<int32>
UStartMachineSettings = {}



---@class UStartPlayerAI : UActorComponent
---@field Owner AActor
---@field Parent ASCEAutomationActor
UStartPlayerAI = {}



---@class UStaticMinimapIconSettings : UDataAsset
---@field Settings FMinimapIconSettings
UStaticMinimapIconSettings = {}



---@class USuckSourceComponent : UHMQMovementComponent
---@field bSuckEnabled boolean
---@field bSuckAutomatically boolean
---@field bImmediateCompletion boolean
---@field SuckForce float
---@field SuckMaxSpeedHorizontal float
---@field SuckMaxSpeedVertical float
---@field SuckDragPerSecond float
---@field SuckMaxDuration float
---@field SuckLostDuration float
---@field SuckCancelDuration float
---@field SuckTargetRadius float
---@field SuckVerticalMultiplierUpwards float
---@field SuckVerticalMultiplierDownwards float
---@field OnTryActivate FSuckSourceComponentOnTryActivate
---@field OnSuckerChanged FSuckSourceComponentOnSuckerChanged
---@field OnSuckerReached FSuckSourceComponentOnSuckerReached
---@field OnSuckerLost FSuckSourceComponentOnSuckerLost
---@field OnSuckCancelled FSuckSourceComponentOnSuckCancelled
---@field ControllerComponentName FName
---@field AudioComponentName FName
---@field AudioVelocityRTPCName FString
---@field SuckerComponent USuckerComponent
---@field ControllerComponent UPhysicsControllerComponent
---@field AudioComponent UAkComponent
USuckSourceComponent = {}

---@param NewSuckerComponent USuckerComponent
---@return boolean
function USuckSourceComponent:TrySuck(NewSuckerComponent) end
function USuckSourceComponent:RejectActivate() end
---@return boolean
function USuckSourceComponent:IsAtSucker() end
---@return boolean
function USuckSourceComponent:HasSucker() end
---@return USuckerComponent
function USuckSourceComponent:GetSuckerComponent() end
function USuckSourceComponent:ClearSuckerComponent() end


---@class USuckerComponent : USphereComponent
---@field TargetCollectibleTypes TSet<TSubclassOf<ACollectibleBase>>
---@field BaseSuckRadius float
---@field CollectRadius float
---@field SuckLocationSocketName FName
---@field SourceComponents TArray<USuckSourceComponent>
---@field RemoteSuckerComponents TArray<URemoteSuckerComponent>
---@field OwnerMesh USkeletalMeshComponent
---@field SuckerLocationUpdateFrame uint64
---@field SuckerLocation FVector
USuckerComponent = {}

---@param MetaModifierConnectionComp UMetaModifierConnectionComponent
function USuckerComponent:HandleMetaModsChanged(MetaModifierConnectionComp) end


---@class USupportedResolutionsTable : UDataTable
---@field Table FSupportedResolutionsTableRow
USupportedResolutionsTable = {}



---@class USusResSaveGame : UHMQSaveGame
---@field OnSaveGameModified FSusResSaveGameOnSaveGameModified
---@field OnSaveGameReset FSusResSaveGameOnSaveGameReset
---@field SuspendAndResumeData FSuspendAndResumeData
USusResSaveGame = {}

function USusResSaveGame:ResetGameData() end


---@class USusResValidSaveGame : UHMQSaveGame
---@field OnSaveGameModified FSusResValidSaveGameOnSaveGameModified
---@field OnSaveGameReset FSusResValidSaveGameOnSaveGameReset
---@field bSuspendAndResumeDataValid boolean
---@field ResumeFailureCount int32
---@field SusResSaveVersion int32
---@field CurrentSusResSaveVersion int32
USusResValidSaveGame = {}

function USusResValidSaveGame:ResetGameData() end


---@class USuspendAndResume : UObject
---@field OnResumeCompleted FSuspendAndResumeOnResumeCompleted
---@field CurrentAutoSaveMode uint8
USuspendAndResume = {}

---@return boolean
function USuspendAndResume:ValidateResumePointIntegrity() end
---@param bAllowed boolean
function USuspendAndResume:SetQuitWithSuspendAllowed(bAllowed) end
---@param AutoSaveMode uint8
function USuspendAndResume:SetAutoSaveMode(AutoSaveMode) end
function USuspendAndResume:SaveSuspendData() end
function USuspendAndResume:ResumeStarted() end
function USuspendAndResume:ResumeCompleted() end
---@param bAllowed boolean
function USuspendAndResume:PCQuitWithSuspendAllowed(bAllowed) end
function USuspendAndResume:OnRestartGame() end
---@param PlayerState APlayerState
---@param NewRoomIndex int32
---@param OldRoomIndex int32
function USuspendAndResume:OnPlayerRoomChanged(PlayerState, NewRoomIndex, OldRoomIndex) end
---@param Character APlayerCharacter
---@param DamageEvent FTouristDamageEvent
function USuspendAndResume:OnPlayerDeath(Character, DamageEvent) end
function USuspendAndResume:OnMultiplayerStateChanged() end
---@param Pawn APawn
function USuspendAndResume:OnLocalPlayerUnpossessed(Pawn) end
---@param Pawn APawn
function USuspendAndResume:OnLocalPlayerPossessed(Pawn) end
---@param NewBiome EBiome
function USuspendAndResume:OnBiomeChanged(NewBiome) end
function USuspendAndResume:LoadWorldSuspendData() end
function USuspendAndResume:LoadSuspendData() end
function USuspendAndResume:LoadPlayerSuspendData() end
---@param Context UObject
---@return boolean
function USuspendAndResume:IsSavingSuspendData(Context) end
---@param Context UObject
---@return boolean
function USuspendAndResume:IsResumingRestorePoint(Context) end
---@return boolean
function USuspendAndResume:IsBiomeReady() end
---@return uint8
function USuspendAndResume:GetAutoSaveMode() end
---@param WorldContextObject UObject
---@return USuspendAndResume
function USuspendAndResume:Get(WorldContextObject) end
function USuspendAndResume:ClearSuspendData() end
---@return boolean
function USuspendAndResume:CanResumeWithInitialPayload() end
---@return FResumePointCreationResult
function USuspendAndResume:CanResumePointBeCreated() end
---@param value boolean
function USuspendAndResume:BlockSaving(value) end


---@class USysSettingsTab : UPauseMenu
---@field OwningSysSettingsMenu USystemSettingsMenu
---@field OwningHorizontalBox UHorizontalBox
---@field LeftHandVBox UVerticalBox
---@field VerticalOptionSwitcher UWidgetSwitcher
---@field VerticalTabIndex int32
---@field ScrollBarIndex int32
---@field bIsNavigatingLeftPanel boolean
---@field isRebinding boolean
---@field isUnbinding boolean
---@field bIsValueFocused boolean
---@field changesOccured boolean
---@field bBackedOut boolean
---@field bSkipUpdateFocus boolean
---@field bDownInputDisabled boolean
USysSettingsTab = {}

function USysSettingsTab:UpdatePreview() end
---@param NewFocusTarget USystemSettingBase
function USysSettingsTab:UpdateFocusedTab(NewFocusTarget) end
function USysSettingsTab:UpdateControllerPreview() end
function USysSettingsTab:TogglePreset() end
function USysSettingsTab:StartBenchmark() end
function USysSettingsTab:ShowMenuPreset() end
function USysSettingsTab:SetNavigationToLeftPanel() end
---@param NewFocusTarget UWidget
---@return boolean
function USysSettingsTab:SetFocusToTab(NewFocusTarget) end
---@param NewFocusTarget UWidget
---@param bForce boolean
---@return boolean
function USysSettingsTab:SetFocusToSetting(NewFocusTarget, bForce) end
function USysSettingsTab:SaveToPreset() end
function USysSettingsTab:RestoreToDefault() end
function USysSettingsTab:PreviewControls() end
---@param TabChanged boolean
function USysSettingsTab:OnTabEntered(TabChanged) end
function USysSettingsTab:OnSelect() end
function USysSettingsTab:OnDPadUp() end
function USysSettingsTab:OnDPadRight() end
function USysSettingsTab:OnDPadLeft() end
function USysSettingsTab:OnDPadDown() end
function USysSettingsTab:NavigateToPreset() end
---@return boolean
function USysSettingsTab:IsVideoScreenVerticalTab() end
---@return boolean
function USysSettingsTab:IsLeftHandVBoxCollapsed() end
---@return boolean
function USysSettingsTab:IsKeyboardRebindingTab() end
---@return boolean
function USysSettingsTab:IsControllerRebindingTab() end
---@return int32
function USysSettingsTab:GetKeyboardRebindingIndex() end
---@return int32
function USysSettingsTab:GetControllerRebindingIndex() end
function USysSettingsTab:ChangeGameLanguage() end
---@param isScrollingDown boolean
function USysSettingsTab:BP_UpdateFocus(isScrollingDown) end
function USysSettingsTab:BP_OnSelect() end
function USysSettingsTab:ApplyPreset() end
function USysSettingsTab:ApplyChangesWarning() end


---@class USystemSettingBase : UTouristWidgetBase
---@field PreviewType PreviewPanelType
---@field OwningSysSettingsTab USysSettingsTab
---@field OwningSysSettingsMenu USystemSettingsMenu
---@field OnDPadLeft FSystemSettingBaseOnDPadLeft
---@field OnDPadRight FSystemSettingBaseOnDPadRight
---@field OnToggled FSystemSettingBaseOnToggled
---@field OnMouseOver FSystemSettingBaseOnMouseOver
---@field OnUpdatedVisuals FSystemSettingBaseOnUpdatedVisuals
---@field DownInputDisabled boolean
---@field CanChangeValue boolean
---@field BodyTitle FText
---@field BodyDescription FText
---@field DescriptionImage UTexture2D
---@field ExpectedPreviewState E_RequiredPreviewState
---@field bIsSetting boolean
---@field bIsTabButton boolean
---@field bIsMouseOver boolean
USystemSettingBase = {}

---@return boolean
function USystemSettingBase:SwitchTabByPress() end
---@return FText
function USystemSettingBase:GetWidgetTitleText() end


---@class USystemSettingsMenu : UPauseMenu
---@field OnShoulderPressed FSystemSettingsMenuOnShoulderPressed
---@field OnShoulderReleased FSystemSettingsMenuOnShoulderReleased
---@field bIsExitEnabled boolean
---@field HorizontalTabBox UHorizontalBox
---@field HorizontalTabSwitcher UWidgetSwitcher
---@field OptionPreviewSwitcher UWidgetSwitcher
---@field KeyMappingsContainer UPanelWidget
---@field ControllerOverridePreview UWidget
---@field KeyboardOverridePreview UWidget
---@field HorizontalTabIndex int32
---@field bSystemMenuKeyDown boolean
---@field bSystemTabRebinding boolean
---@field bIsOnBootGraphicSettings boolean
USystemSettingsMenu = {}

---@param currentSetting USystemSettingBase
function USystemSettingsMenu:UpdatePreview(currentSetting) end
---@param newTabFocus UWidget
function USystemSettingsMenu:SetHorizontalTab(newTabFocus) end
---@param FocusedTab USystemSettingBase
function USystemSettingsMenu:OnTabFocused(FocusedTab) end
function USystemSettingsMenu:OnSpecialRight() end
function USystemSettingsMenu:OnShoulderRight() end
function USystemSettingsMenu:OnShoulderLeft() end
---@param FocusedSystemSetting USystemSettingBase
function USystemSettingsMenu:OnSettingFocused(FocusedSystemSetting) end
---@param bIsNavigatingLeft boolean
function USystemSettingsMenu:LeftPanelFocusChanged(bIsNavigatingLeft) end
function USystemSettingsMenu:GoBackToGraphicSettings() end
---@param WorldContextObject UObject
---@return UPanelWidget
function USystemSettingsMenu:GetKeyMappingsContainer(WorldContextObject) end
---@param WorldContextObject UObject
---@return UWidget
function USystemSettingsMenu:GetKeyboardOverridePreview(WorldContextObject) end
---@return USysSettingsTab
function USystemSettingsMenu:GetCurrentTab() end
---@param WorldContextObject UObject
---@return UWidget
function USystemSettingsMenu:GetControllerOverridePreview(WorldContextObject) end
function USystemSettingsMenu:EndBenchmark() end
function USystemSettingsMenu:BP_RecompileShadersReleased() end
function USystemSettingsMenu:BP_RecompileShadersPressed() end
function USystemSettingsMenu:BP_RebindingBackOut() end
function USystemSettingsMenu:BP_CloseMenu() end
function USystemSettingsMenu:BP_BenchmarkReleased() end
function USystemSettingsMenu:BP_BenchmarkPressed() end


---@class UTTBossMoveComponent : UActorComponent
---@field OnMovementFinished FTTBossMoveComponentOnMovementFinished
UTTBossMoveComponent = {}

function UTTBossMoveComponent:Reset() end
---@param InPivot FVector
---@param InYawMovement float
---@param InPitchMovement float
---@param InFinalRadius float
---@param InCurve UCurveVector
---@param InHeight float
---@param InMaxSpeed float
---@param InAcceleration float
---@param InDeceleration float
---@return boolean
function UTTBossMoveComponent:RequestOrbitMovement(InPivot, InYawMovement, InPitchMovement, InFinalRadius, InCurve, InHeight, InMaxSpeed, InAcceleration, InDeceleration) end
---@param InTarget FVector
---@param InCurve UCurveVector
---@param InHeight float
---@param InMaxSpeed float
---@param InAcceleration float
---@param InDeceleration float
---@return boolean
function UTTBossMoveComponent:RequestLinearMovement(InTarget, InCurve, InHeight, InMaxSpeed, InAcceleration, InDeceleration) end
---@param InDistanceOrPercentage boolean
---@param InTargetOrSource boolean
---@param InValue float
---@return boolean
function UTTBossMoveComponent:QueryHasFinished(InDistanceOrPercentage, InTargetOrSource, InValue) end
---@param InDistanceOrPercentage boolean
---@param InTargetOrSource boolean
---@param InValue float
---@return boolean
function UTTBossMoveComponent:QueryDistance(InDistanceOrPercentage, InTargetOrSource, InValue) end
---@return boolean
function UTTBossMoveComponent:IsMoving() end
---@return float
function UTTBossMoveComponent:GetTotalDistance() end
---@return float
function UTTBossMoveComponent:GetMovementRatio() end
---@return float
function UTTBossMoveComponent:GetDistanceTraveled() end
---@return float
function UTTBossMoveComponent:GetDistanceFromTarget() end
---@param InOffset FVector
function UTTBossMoveComponent:AddDirectOffsetToActor(InOffset) end
function UTTBossMoveComponent:AbortMovement() end


---@class UTargetMarker : UGunFiringBehavior
---@field FireRate float
---@field OnScreenThingPointerClass TSubclassOf<UOnScreenThingPointer>
---@field OnMarkSoundEvent UAkAudioEvent
---@field LockedTargets TArray<ULockOnTargetComponent>
---@field PendingFireTargets TArray<ULockOnTargetComponent>
---@field HUDThingPointers TMap<ULockOnTargetComponent, UOnScreenThingPointer>
---@field PendingFireDelay float
---@field SeekingTargetsRequests int32
---@field DirectionEnforcer UForceWorldDirection
---@field bFiringHeld boolean
---@field HudReference ATouristHUD
UTargetMarker = {}

function UTargetMarker:RequestStopSeekingTargets() end
function UTargetMarker:RequestStartSeekingTargets() end
---@return boolean
function UTargetMarker:IsSeekingTargets() end
---@return boolean
function UTargetMarker:FireAtTargets() end


---@class UTeleportMenu : UPauseMenu
---@field TeleportSound UAkAudioEvent
---@field TeleportFailSound UAkAudioEvent
---@field bSnapCursor boolean
---@field bSetMinimapCameraTargetEnabled boolean
---@field SnapSpeed float
---@field SnapDelay float
---@field DefaultZoom float
---@field ZoomBounds FMinMaxFloat
---@field MaxTeleports int32
---@field FocusTeleportIconSettings UStaticMinimapIconSettings
---@field ZoomLevel float
---@field Teleports TArray<ATeleport>
---@field ActivatedTeleport ATeleport
---@field FocusTeleport ATeleport
---@field ActivatedTeleportProjectedPosition FVector2D
---@field FocusTeleportProjectedPosition FVector2D
---@field TeleportsPerPage int32
UTeleportMenu = {}

---@param NewZoomLevel float
function UTeleportMenu:SetZoomLevel(NewZoomLevel) end
---@param index int32
function UTeleportMenu:SetFocusTeleportIndex(index) end
---@param HasFocusItem boolean
function UTeleportMenu:SetCursorState(HasFocusItem) end
function UTeleportMenu:SelectTeleport() end
---@param DownedState EDownedState
function UTeleportMenu:OnDownedStateChanged(DownedState) end
function UTeleportMenu:OnCancelLocalPlayerInteraction() end
---@param Teleport ATeleport
---@param index int32
function UTeleportMenu:NewTeleportEnabled(Teleport, index) end
function UTeleportMenu:MinimapPanned() end
function UTeleportMenu:InputAction_Select() end
---@param index int32
function UTeleportMenu:FocusTeleportChanged(index) end
function UTeleportMenu:FocusPreviousTeleport() end
function UTeleportMenu:FocusPreviousPageTeleport() end
function UTeleportMenu:FocusNextTeleport() end
function UTeleportMenu:FocusNextPageTeleport() end
function UTeleportMenu:EnableMapControls() end
function UTeleportMenu:DisableMapControls() end


---@class UTeleporterHandler : USceneComponent
---@field OnCharacterArrival FTeleporterHandlerOnCharacterArrival
---@field OnCharacterDeparture FTeleporterHandlerOnCharacterDeparture
---@field CurrentTarget UTeleporterHandler
---@field Location FVector
---@field OverrideDestinationLocation FVector
UTeleporterHandler = {}

---@param Target FVector
function UTeleporterHandler:SetTeleportOverrideDestination(Target) end
---@param Target FVector
function UTeleporterHandler:SetTeleportLocation(Target) end
---@param Target UTeleporterHandler
function UTeleporterHandler:SetTarget(Target) end
---@param Player ATouristCharacter
---@param Handler UTeleporterHandler
function UTeleporterHandler:OnCharacterDeparted(Player, Handler) end
---@param Player ATouristCharacter
---@param Handler UTeleporterHandler
function UTeleporterHandler:OnCharacterArrived(Player, Handler) end
---@return FVector
function UTeleporterHandler:GetTeleportOverrideDestination() end
---@return FVector
function UTeleporterHandler:GetTeleportLocation() end
---@return UTeleporterHandler
function UTeleporterHandler:GetTarget() end
---@param CharToTeleport APlayerCharacter
function UTeleporterHandler:DoTeleport(CharToTeleport) end


---@class UThingDestructionComponent : UHMQActorComponent
---@field bDestroyArtefactEnabled boolean
---@field bDestroyWeaponModEnabled boolean
---@field bDestroyDoorKeyEnabled boolean
---@field bDestroyFragmentEnabled boolean
---@field bDestroyWeaponUpgradeEnabled boolean
---@field bDestroyMaxHealthUpgradeEnabled boolean
---@field DestructionMaxMoneyDecrease int32
---@field DestructionMaxHealthDecrease float
---@field DestructionEffect TSubclassOf<AEffectContainer>
---@field OnThingDestroyed FThingDestructionComponentOnThingDestroyed
UThingDestructionComponent = {}

---@param AllowedTypes TSet<EInventoryThingDestructionType>
function UThingDestructionComponent:Server_DestroyThing(AllowedTypes) end
---@param DestructionType EInventoryThingDestructionType
function UThingDestructionComponent:Multicast_ShowDestructionVisuals(DestructionType) end
---@param Inventory UInventory
function UThingDestructionComponent:HandleCursesFull(Inventory) end
---@param AllowedTypes TSet<EInventoryThingDestructionType>
function UThingDestructionComponent:DestroyThing(AllowedTypes) end
---@param ThingDestruction FInventoryThingDestruction
function UThingDestructionComponent:Client_BroadcastThingDestroyed(ThingDestruction) end


---@class UThreatComponent : USceneComponent
---@field Type EThreatType
---@field Level EThreatLevel
---@field duration float
---@field Time float
UThreatComponent = {}

function UThreatComponent:StopThreat() end
---@param InType EThreatType
---@param InThreatLevel EThreatLevel
---@param InDuration float
function UThreatComponent:StartThreat(InType, InThreatLevel, InDuration) end


---@class UThreatIndicatorComponent : USceneComponent
---@field ThreatDetectionDistance float
---@field IndicatorMesh UStaticMesh
---@field IndicatorMeshPreparing UStaticMesh
---@field IndicatorMeshAttacking UStaticMesh
---@field IndicatorMaterial UMaterialInterface
---@field MaterialOpacityParameterName FName
---@field MaterialThreatLevelParameterName FName
---@field MaterialFlashStrengthParameterName FName
---@field VisibilityInterpSpeed float
---@field IndicatorOffset FVector
---@field IndicatorDefaultScale FVector
---@field ScaleOverDistanceCurve UCurveFloat
---@field ThreatPreparePulseScale float
---@field ThreatPreparePulseSpeed float
---@field ThreatAttackPulseScale float
---@field ThreatAttackPulseSpeed float
---@field ThreatLevelSmoothing float
---@field IndicatorRing UInstancedStaticMeshComponent
---@field IndicatorRingMesh UStaticMesh
---@field IndicatorRingMaterial UMaterialInterface
---@field ThreatLevelParams UMaterialParameterCollection
UThreatIndicatorComponent = {}



---@class UThreatManager : UActorComponent
---@field WarningTime float
---@field bIgnoreOnScreenThreat boolean
---@field bCheckBulletObstacles boolean
---@field MinDistance float
---@field BulletMaxDistance float
---@field BulletMaxProximityDistance float
---@field ThreatMaxDistance float
---@field BeamMaxDistance float
---@field DamageShapesMaxDistance float
---@field DamageShapesMinDistance float
---@field TraceChannel ECollisionChannel
---@field AcceptedDamageTarget uint8
---@field NumSteps int32
---@field DataFadeOutDelay float
---@field CachedPlayerController APlayerController
---@field ThreatList TArray<FThreatData>
---@field AngleStep float
UThreatManager = {}

---@param WorldContextObject UObject
---@return UThreatManager
function UThreatManager:Get(WorldContextObject) end
---@param InOwner UObject
---@param InType EThreatType
---@param InWorldLocation FVector
---@param InWorldVelocity FVector
---@param InThreatLevel EThreatLevel
---@param InTarget UObject
function UThreatManager:AddThreat(InOwner, InType, InWorldLocation, InWorldVelocity, InThreatLevel, InTarget) end


---@class UTimelessTowerManager : UTouristArcadeManager
---@field PlayModeClass TSubclassOf<UTouristArcadePlayMode>
---@field PlayMode UTouristArcadePlayMode
UTimelessTowerManager = {}

---@return int32
function UTimelessTowerManager:GetPhase() end
function UTimelessTowerManager:EndTimelessTower() end
function UTimelessTowerManager:BeginTimelessTower() end


---@class UTimelessTowerPlayMode : UTouristArcadePlayMode
---@field EnemyClassificationMultipliers TMap<EEnemyClassification, float>
---@field DeteriorationIntervals TArray<float>
---@field DeteriorationPauseEvents TMap<EDeteriorationEventType, float>
---@field DeteriorationDelayEvents TMap<EDeteriorationEventType, float>
---@field ItemCollectionDeteriorationExcludeClasses TArray<TSubclassOf<AActor>>
---@field DeteriorationDisabledRoomTags TSet<FName>
---@field DeteriorationEnabledByEnemiesRoomTags TSet<FName>
---@field ScoringDisabledRoomTags TSet<FName>
---@field ExtraProficiencyLevelThreshold int32
---@field MultiplierDeteriorationPauseOvertimeDuration float
---@field OnPhaseBegin FTimelessTowerPlayModeOnPhaseBegin
---@field OnPhaseEnd FTimelessTowerPlayModeOnPhaseEnd
---@field OnDeteriorationPauseBegin FTimelessTowerPlayModeOnDeteriorationPauseBegin
---@field OnDeteriorationPauseEnd FTimelessTowerPlayModeOnDeteriorationPauseEnd
---@field OnDeteriorationBegin FTimelessTowerPlayModeOnDeteriorationBegin
---@field OnDeteriorationEnd FTimelessTowerPlayModeOnDeteriorationEnd
---@field OnDeteriorationDelay FTimelessTowerPlayModeOnDeteriorationDelay
---@field OnDisplayCountersChanged FTimelessTowerPlayModeOnDisplayCountersChanged
---@field PlrCharacter APlayerCharacter
---@field DisplayPhaseCounter int32
---@field DisplayRoomCounter int32
---@field SeenRooms TSet<int32>
UTimelessTowerPlayMode = {}

---@param Tag FName
---@param bNewEnabled boolean
function UTimelessTowerPlayMode:SetDeteriorationEnabledByTag(Tag, bNewEnabled) end
---@param phase int32
function UTimelessTowerPlayMode:ReceivePhaseEnd(phase) end
---@param phase int32
function UTimelessTowerPlayMode:ReceivePhaseBegin(phase) end
---@param duration float
function UTimelessTowerPlayMode:PauseDeterioration(duration) end
---@param Enemy AEnemyBase
function UTimelessTowerPlayMode:NumEnemiesChanged(Enemy) end
---@return boolean
function UTimelessTowerPlayMode:IsDeteriorationEnabled() end
---@param RoomIndex int32
function UTimelessTowerPlayMode:HandleRoomExplored(RoomIndex) end
---@param PlayerState APlayerState
---@param NewRoomIndex int32
---@param OldRoomIndex int32
function UTimelessTowerPlayMode:HandlePlayerRoomChanged(PlayerState, NewRoomIndex, OldRoomIndex) end
---@param Actor AActor
---@param DamageEvent FTouristDamageEvent
---@param bCriticalHit boolean
function UTimelessTowerPlayMode:HandlePlayerKilledActor(Actor, DamageEvent, bCriticalHit) end
---@param Item ACollectibleBase
---@param bManually boolean
function UTimelessTowerPlayMode:HandlePlayerItemCollected(Item, bManually) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
function UTimelessTowerPlayMode:HandlePlayerDamageTaken(DamagedActor, DamageEvent) end
---@param Enemy AActor
---@param DamageEvent FTouristDamageEvent
---@param bCriticalHit boolean
function UTimelessTowerPlayMode:HandlePlayerDamagedEnemy(Enemy, DamageEvent, bCriticalHit) end
function UTimelessTowerPlayMode:HandlePlayerAdrenalineReset() end
---@return float
function UTimelessTowerPlayMode:GetHighestMultipler() end
---@return int32
function UTimelessTowerPlayMode:GetDisplayRoomCounter() end
---@return int32
function UTimelessTowerPlayMode:GetDisplayPhaseCounter() end
---@return EDeteriorationState
function UTimelessTowerPlayMode:GetDeteriorationState() end
---@return float
function UTimelessTowerPlayMode:GetDeteriorationPauseAlpha() end
---@return int64
function UTimelessTowerPlayMode:GetBestScore() end
---@return int32
function UTimelessTowerPlayMode:GetBestRoom() end
---@return int32
function UTimelessTowerPlayMode:GetBestPhase() end
---@return float
function UTimelessTowerPlayMode:GetAverageMultiplier() end
---@return float
function UTimelessTowerPlayMode:GetAdrenalineMultiplier() end
---@return int32
function UTimelessTowerPlayMode:GetAdrenalineLevel() end
---@param EventType EDeteriorationEventType
function UTimelessTowerPlayMode:EventDeterioration(EventType) end
---@param duration float
function UTimelessTowerPlayMode:DelayDeterioration(duration) end


---@class UTouristAbilityBlueprintLibrary : UBlueprintFunctionLibrary
UTouristAbilityBlueprintLibrary = {}

---@param AbilityActor AActor
---@param EffectClasses TArray<TSubclassOf<UGameplayEffect>>
---@param StackType EGameplayEffectStackType
---@return FTouristGameplayEffectHandle
function UTouristAbilityBlueprintLibrary:PushGameplayEffects(AbilityActor, EffectClasses, StackType) end
---@param AbilityActor AActor
---@param EffectClass TSubclassOf<UGameplayEffect>
---@param StackType EGameplayEffectStackType
---@return FTouristGameplayEffectHandle
function UTouristAbilityBlueprintLibrary:PushGameplayEffect(AbilityActor, EffectClass, StackType) end
---@param AbilityActor AActor
---@param EffectClasses TArray<TSubclassOf<UGameplayEffect>>
---@param StacksToRemove int32
function UTouristAbilityBlueprintLibrary:PopGameplayEffectsByClass(AbilityActor, EffectClasses, StacksToRemove) end
---@param Handle FTouristGameplayEffectHandle
function UTouristAbilityBlueprintLibrary:PopGameplayEffects(Handle) end
---@param AbilityActor AActor
---@param EffectClass TSubclassOf<UGameplayEffect>
---@param StacksToRemove int32
---@return int32
function UTouristAbilityBlueprintLibrary:PopGameplayEffectByClass(AbilityActor, EffectClass, StacksToRemove) end
---@param EffectClass TSubclassOf<UGameplayEffect>
---@return boolean
function UTouristAbilityBlueprintLibrary:GameplayEffectHasDurationAsPolicy(EffectClass) end
---@param Handle FTouristGameplayEffectHandle
---@return boolean
function UTouristAbilityBlueprintLibrary:GameplayEffectHandle_IsValid(Handle) end


---@class UTouristAbilitySystemComponent : UAbilitySystemComponent
---@field AttributeSetClass TSubclassOf<UTouristAttributeSet>
---@field AttributeDataTable UDataTable
---@field DefaultAbilitySet UTouristGameplayAbilitySet
---@field AppliedGEClasses TArray<TSubclassOf<UGameplayEffect>>
---@field AppliedGECounters TArray<int32>
UTouristAbilitySystemComponent = {}

---@param Tag FGameplayTag
---@param Level int32
---@param bForce boolean
---@return boolean
function UTouristAbilitySystemComponent:SetAbilityLevelByTag(Tag, Level, bForce) end
---@param AbilityClass TSubclassOf<UGameplayAbility>
---@param Level int32
---@param bForce boolean
---@return boolean
function UTouristAbilitySystemComponent:SetAbilityLevel(AbilityClass, Level, bForce) end
---@param AbilityClass TSubclassOf<UGameplayAbility>
---@param NewLevel int32
function UTouristAbilitySystemComponent:MulticastAbilityLevelChanged(AbilityClass, NewLevel) end
---@param Tag FGameplayTag
---@return int32
function UTouristAbilitySystemComponent:IsAbilityActiveByTag(Tag) end
---@param AbilityClass TSubclassOf<UGameplayAbility>
---@return int32
function UTouristAbilitySystemComponent:IsAbilityActive(AbilityClass) end
---@param Tag FGameplayTag
---@return int32
function UTouristAbilitySystemComponent:GetAbilityLevelByTag(Tag) end
---@param AbilityClass TSubclassOf<UGameplayAbility>
---@return int32
function UTouristAbilitySystemComponent:GetAbilityLevel(AbilityClass) end
---@param Tag FGameplayTag
---@param bUseInstance boolean
---@return UGameplayAbility
function UTouristAbilitySystemComponent:GetAbilityByTag(Tag, bUseInstance) end
---@param AbilityClass TSubclassOf<UGameplayAbility>
---@param bUseInstance boolean
---@return UGameplayAbility
function UTouristAbilitySystemComponent:GetAbilityByClass(AbilityClass, bUseInstance) end
---@param AbilityClass TSubclassOf<UGameplayAbility>
---@return boolean
function UTouristAbilitySystemComponent:CanActivateAbility(AbilityClass) end


---@class UTouristAnimationUtil : UBlueprintFunctionLibrary
UTouristAnimationUtil = {}

---@param Character ATouristCharacter
---@param LimbSocketNames TArray<FName>
---@param QuerySettings FTouristIKQuerySettings
---@return FTouristIKQueryResult
function UTouristAnimationUtil:QueryIKForCharacter(Character, LimbSocketNames, QuerySettings) end
---@param Anim UCharacterAnimAction_Montage
---@param Actor AActor
---@param StartingLocation FVector
---@param StartingRotation FRotator
---@param DesiredVisibleLocation FVector
---@return boolean
function UTouristAnimationUtil:IsLocationVisibleAfterAnimRootMotionForActorFromLocation(Anim, Actor, StartingLocation, StartingRotation, DesiredVisibleLocation) end
---@param Anim UCharacterAnimAction_Montage
---@param StartingLocation FVector
---@param StartingRotation FRotator
---@param MeshScale FVector
---@param DesiredVisibleLocation FVector
---@param ContextObject AActor
---@return boolean
function UTouristAnimationUtil:IsLocationVisibleAfterAnimRootMotion(Anim, StartingLocation, StartingRotation, MeshScale, DesiredVisibleLocation, ContextObject) end
---@param Anim UCharacterAnimAction_Montage
---@param Actor AActor
---@param StartingLocation FVector
---@param StartingRotation FRotator
---@param NumRaycasts int32
---@return boolean
function UTouristAnimationUtil:IsAnimRootMotionPathClearForActorFromLocation(Anim, Actor, StartingLocation, StartingRotation, NumRaycasts) end
---@param Anim UCharacterAnimAction_Montage
---@param StartingLocation FVector
---@param StartingRotation FRotator
---@param MeshScale FVector
---@param CapsuleRadius float
---@param CapsuleHalfHeight float
---@param NumRaycasts int32
---@param ContextObject AActor
---@return boolean
function UTouristAnimationUtil:IsAnimRootMotionPathClear(Anim, StartingLocation, StartingRotation, MeshScale, CapsuleRadius, CapsuleHalfHeight, NumRaycasts, ContextObject) end
---@param AnimSequence UAnimSequence
---@param StartTime float
---@param EndTime float
---@return FRotator
function UTouristAnimationUtil:GetNormalizedAnimRootMotionRotation(AnimSequence, StartTime, EndTime) end
---@param Montage UAnimMontage
---@return float
function UTouristAnimationUtil:GetMontageRateScale(Montage) end
---@param SkeletalMeshComponent USkeletalMeshComponent
---@param BoneIndex int32
---@param bInParentSpace boolean
---@param bIncludeRoot boolean
---@return FTransform
function UTouristAnimationUtil:GetBoneRefPoseTransform(SkeletalMeshComponent, BoneIndex, bInParentSpace, bIncludeRoot) end
---@param AnimSequence UAnimSequence
---@param CharacterBoneData TArray<FTrackedCharacterBoneData>
---@param DeltaTime float
---@return float
function UTouristAnimationUtil:GetAnimTimeMatchingBoneData(AnimSequence, CharacterBoneData, DeltaTime) end
---@param AnimSequence UAnimSequence
---@param CharacterBoneData TArray<FTrackedCharacterBoneData>
---@param DeltaTime float
---@param OutTime float
---@param OutScore float
function UTouristAnimationUtil:GetAnimTimeAndScoreMatchingBoneData(AnimSequence, CharacterBoneData, DeltaTime, OutTime, OutScore) end
---@param AnimSequence UAnimSequence
---@param CharacterBoneData TArray<FTrackedCharacterBoneData>
---@param SampleTime float
---@return float
function UTouristAnimationUtil:GetAnimPoseMatchingScoreForFrame(AnimSequence, CharacterBoneData, SampleTime) end
---@param AnimMontage UAnimMontage
---@param MontageTime float
---@param MontageTrack int32
---@param OutSequenceTime float
---@return UAnimSequenceBase
function UTouristAnimationUtil:GetAnimDataFromMontage(AnimMontage, MontageTime, MontageTrack, OutSequenceTime) end
---@param AnimSequenceBase UAnimSequenceBase
---@param CurveName FName
---@param Time float
---@return float
function UTouristAnimationUtil:GetAnimCurveValueAtTime(AnimSequenceBase, CurveName, Time) end
---@param AnimSequence UAnimSequence
---@param SequenceTime float
---@param BoneNames TArray<FName>
---@param bInParentSpace boolean
---@return TArray<FTransform>
function UTouristAnimationUtil:GetAnimBoneTransformsAtTime(AnimSequence, SequenceTime, BoneNames, bInParentSpace) end
---@param AnimSequence UAnimSequence
---@param SequenceTime float
---@param BoneName FName
---@param bInParentSpace boolean
---@param bIncludeRoot boolean
---@return FTransform
function UTouristAnimationUtil:GetAnimBoneTransformAtTime(AnimSequence, SequenceTime, BoneName, bInParentSpace, bIncludeRoot) end
---@param AnimationMontage UAnimMontage
---@param NotifyEvents TArray<FAnimNotifyEvent>
function UTouristAnimationUtil:GetAnimationNotifyEventsFromMontage(AnimationMontage, NotifyEvents) end
---@param Anim UAnimMontage
---@param StartTime float
---@param EndTime float
---@return FRootMotionDelta
function UTouristAnimationUtil:ExtractMontageRootMotionDelta(Anim, StartTime, EndTime) end
---@param Anim UAnimSequence
---@param StartTime float
---@param EndTime float
---@return FRootMotionDelta
function UTouristAnimationUtil:ExtractAnimRootMotionDelta(Anim, StartTime, EndTime) end
---@param Character ATouristCharacter
---@param LimbSocketName FName
---@param QuerySettings FTouristIKQuerySettings
---@return FTouristIKLimbResult
function UTouristAnimationUtil:CalculateIKResultForLimb(Character, LimbSocketName, QuerySettings) end


---@class UTouristArcadeManager : UObject
---@field BonusArchetypes TArray<TSubclassOf<USocialChallengeScoreBonusArchetype>>
---@field OnScoresUpdated FTouristArcadeManagerOnScoresUpdated
---@field OnScoreSubmitted FTouristArcadeManagerOnScoreSubmitted
---@field OnScoreSubmissionFailed FTouristArcadeManagerOnScoreSubmissionFailed
---@field OnRankingsRefreshed FTouristArcadeManagerOnRankingsRefreshed
---@field OnBeginManager FTouristArcadeManagerOnBeginManager
---@field OnEndManager FTouristArcadeManagerOnEndManager
---@field SocialManager UTouristSocialManager
---@field SystemComp UTouristArcadeSystemComponent
UTouristArcadeManager = {}

function UTouristArcadeManager:RefreshRankings() end
---@return boolean
function UTouristArcadeManager:IsSubmittingScore() end
---@return boolean
function UTouristArcadeManager:IsScoreRequestInProgress() end
---@return boolean
function UTouristArcadeManager:IsRequestingScore() end
---@return boolean
function UTouristArcadeManager:IsRefreshingRankings() end
---@return boolean
function UTouristArcadeManager:IsManagerActive() end
---@return UTouristArcadePlayMode
function UTouristArcadeManager:GetPlayMode() end
---@return int32
function UTouristArcadeManager:GetMaxHistoricalData() end


---@class UTouristArcadePlayMode : UObject
---@field MultiplierCurve UCurveFloat
---@field MinMultiplier float
---@field MaxMultiplier float
---@field MultiplierScale float
---@field MilestoneNotification TSubclassOf<UChallengeMilestoneNotificationWidget>
---@field OnBonusAwarded FTouristArcadePlayModeOnBonusAwarded
---@field OnMultiplierIncrease FTouristArcadePlayModeOnMultiplierIncrease
---@field OnMultiplierReset FTouristArcadePlayModeOnMultiplierReset
---@field OnChallengeBeatMilestone FTouristArcadePlayModeOnChallengeBeatMilestone
---@field OnScoreCalculated FTouristArcadePlayModeOnScoreCalculated
---@field TimeElapsed float
---@field TotalScore int64
---@field PreviousScoreBonuses TArray<FSocialChallengeScoreBonus>
---@field ScoreInstances TArray<FSocialChallengeScoreInstance>
---@field CombinedScoreBonuses TArray<FSocialChallengeScoreBonus>
---@field PlayerModifierNames TSet<FName>
---@field EnemyModifierNames TSet<FName>
---@field MilestoneScores TArray<FSocialChallengeScore>
UTouristArcadePlayMode = {}

function UTouristArcadePlayMode:SubmitScore() end
function UTouristArcadePlayMode:MarkGotToEnd() end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UTouristArcadePlayMode:HandleBiomeStateChanged(Biome, NewBiomeState) end
---@return FSocialChallengeScoreData
function UTouristArcadePlayMode:GetScoreData() end
---@return FString
function UTouristArcadePlayMode:GetNextMilestoneUsername() end
---@return int64
function UTouristArcadePlayMode:GetNextMilestoneScore() end
---@return int64
function UTouristArcadePlayMode:GetNextMilestoneRank() end
---@return float
function UTouristArcadePlayMode:GetCurrentScoreMultiplier() end
---@return int64
function UTouristArcadePlayMode:GetCurrentScore() end
---@return TArray<FSocialChallengeScoreBonus>
function UTouristArcadePlayMode:GetCombinedScoreBonuses() end
---@return TSet<FName>
function UTouristArcadePlayMode:GetAvailablePlayerModifiers() end
---@return TSet<FName>
function UTouristArcadePlayMode:GetAvailableEnemyModifiers() end
---@param FinalScore boolean
function UTouristArcadePlayMode:CalculateScore(FinalScore) end


---@class UTouristArcadeSystemComponent : UHMQActorComponent
---@field OnBeginArcadeManager FTouristArcadeSystemComponentOnBeginArcadeManager
---@field OnEndArcadeManager FTouristArcadeSystemComponentOnEndArcadeManager
---@field ActiveArcadeManager UTouristArcadeManager
UTouristArcadeSystemComponent = {}

---@return UTouristArcadeManager
function UTouristArcadeSystemComponent:GetArcadeManager() end


---@class UTouristAssetManager : UAssetManager
UTouristAssetManager = {}


---@class UTouristAttributeSet : UAttributeSet
---@field health FGameplayAttributeData
---@field MaxHealth FGameplayAttributeData
UTouristAttributeSet = {}

---@param OldValue FGameplayAttributeData
function UTouristAttributeSet:OnRep_MaxHealth(OldValue) end
---@param OldValue FGameplayAttributeData
function UTouristAttributeSet:OnRep_Health(OldValue) end


---@class UTouristAudioStatics : UBlueprintFunctionLibrary
UTouristAudioStatics = {}

---@param WorldContextObject UObject
function UTouristAudioStatics:StopAllAmbientSounds(WorldContextObject) end
---@param WorldContextObject UObject
function UTouristAudioStatics:StartAllAmbientSounds(WorldContextObject) end


---@class UTouristBTFunctionLibrary : UBlueprintFunctionLibrary
UTouristBTFunctionLibrary = {}

---@param NodeOwner UBTNode
---@param SrcKey FBlackboardKeySelector
---@param DstKey FBlackboardKeySelector
---@return boolean
function UTouristBTFunctionLibrary:CopyBlackboardValue(NodeOwner, SrcKey, DstKey) end


---@class UTouristCaptureWidget : UHMQUserWidget
---@field OnStaticMeshLoaded FTouristCaptureWidgetOnStaticMeshLoaded
---@field TargetRotationSpeed FRotator
---@field TargetRotation FRotator
---@field StaticMesh TSoftObjectPtr<UStaticMesh>
---@field bTwoSided boolean
---@field RenderTarget UTextureRenderTarget2D
---@field CaptureOffset FVector
---@field FieldOfView float
---@field LiveStaticMesh UStaticMesh
UTouristCaptureWidget = {}

---@param UserDataX uint8
---@param UserDataY uint8
---@param UserDataZ uint8
---@param UserDataW uint8
function UTouristCaptureWidget:SetUserData(UserDataX, UserDataY, UserDataZ, UserDataW) end
---@param SoftStaticMesh TSoftObjectPtr<UStaticMesh>
function UTouristCaptureWidget:SetSoftStaticMesh(SoftStaticMesh) end
---@param HardStaticMesh UStaticMesh
function UTouristCaptureWidget:SetHardStaticMesh(HardStaticMesh) end


---@class UTouristCharacterAnimEffectTracker : UActorComponent
---@field OwnerCharacter ATouristCharacter
---@field TrackedLegs TArray<FTrackedCharacterLimb>
---@field NumGroundedLegs int32
---@field bDrawDebug boolean
UTouristCharacterAnimEffectTracker = {}

function UTouristCharacterAnimEffectTracker:UpdateTrackedLimbs() end
---@return TArray<FTrackedCharacterLimb>
function UTouristCharacterAnimEffectTracker:GetTrackedLegs() end
---@return int32
function UTouristCharacterAnimEffectTracker:GetNumGroundedLegs() end
function UTouristCharacterAnimEffectTracker:DrawDebugVisuals() end


---@class UTouristCharacterAnimInstance : UAnimInstance
---@field OwnerCharacter ATouristCharacter
---@field MessagingComponent UAnimationMessagingComponent
---@field bHasActiveRequest boolean
---@field ActiveRequest FAnimationRequest
---@field OwnerLocomotionData FTouristCharacterLocomotionData
---@field OwnerLocomotionAnim FLocomotionAnim
---@field bCancelActiveRequestIfNoActionPlayed boolean
UTouristCharacterAnimInstance = {}

function UTouristCharacterAnimInstance:UpdateAnimationSettings() end
function UTouristCharacterAnimInstance:RemoveControlFlagRequest() end
---@param InCharacter ATouristCharacter
---@param InMessagingComponent UAnimationMessagingComponent
function UTouristCharacterAnimInstance:RegisterOwner(InCharacter, InMessagingComponent) end
---@param Action UCharacterAnimAction_SubInstance
---@param TieToActiveRequest boolean
---@return boolean
function UTouristCharacterAnimInstance:PlaySubInstanceAction(Action, TieToActiveRequest) end
---@param Action UCharacterAnimAction_Montage
---@param CorrectionWindowID uint8
---@param Target FRootMotionTarget
---@param TieToActiveRequest boolean
---@param TimeToStartMontageAt float
---@return boolean
function UTouristCharacterAnimInstance:PlayDeltaCorrectedAction(Action, CorrectionWindowID, Target, TieToActiveRequest, TimeToStartMontageAt) end
---@param Action UCharacterAnimAction_Composite
---@param TieToActiveRequest boolean
---@return boolean
function UTouristCharacterAnimInstance:PlayCompositeAction(Action, TieToActiveRequest) end
---@param Request FAnimationRequest
function UTouristCharacterAnimInstance:OnUntrackedRequestStarted(Request) end
---@param RequestData UAnimRequestDescriptionData_Base
---@param ActionInstance FTrackedAnimActionInstance_Base
---@param SegmentType EAnimationActionSegmentType
function UTouristCharacterAnimInstance:OnRequestActionSegmentReached(RequestData, ActionInstance, SegmentType) end
---@param Owner ATouristCharacter
function UTouristCharacterAnimInstance:OnOwnerRegistered(Owner) end
---@param RequestData UAnimRequestDescriptionData_Base
function UTouristCharacterAnimInstance:OnActiveRequestStarted(RequestData) end
---@param RequestData UAnimRequestDescriptionData_Base
---@param RemovalEventType EAnimationRequestEventType
function UTouristCharacterAnimInstance:OnActiveRequestRemoved(RequestData, RemovalEventType) end
---@param Montage UAnimMontage
---@param bIncludeNonActive boolean
---@return float
function UTouristCharacterAnimInstance:Montage_GetWeight(Montage, bIncludeNonActive) end
---@param Montage UAnimMontage
---@return int32
function UTouristCharacterAnimInstance:Montage_GetActiveInstanceID(Montage) end
---@param Request FAnimationRequest
function UTouristCharacterAnimInstance:HandleUntrackedRequestStarted(Request) end
---@param Montage UAnimMontage
function UTouristCharacterAnimInstance:HandleTargetTrackingRequestedForFrame(Montage) end
---@param Request FAnimationRequest
function UTouristCharacterAnimInstance:HandleRequestStarted(Request) end
---@param RequestData UAnimRequestDescriptionData_Base
---@param RemovalEventType EAnimationRequestEventType
function UTouristCharacterAnimInstance:HandleRequestEnded(RequestData, RemovalEventType) end
---@param Event ECharacterAnimationEvent
function UTouristCharacterAnimInstance:HandleCharacterAnimationEvent(Event) end
---@param Montage UAnimMontage
---@param Event UAnimNotifyState_ActionNamedEvent
---@param TotalDuration float
function UTouristCharacterAnimInstance:HandleAnimationStateActionNamedEvent(Montage, Event, TotalDuration) end
---@param Montage UAnimMontage
---@param EventType EHitboxEventType
---@param EventID int32
function UTouristCharacterAnimInstance:HandleAnimationHitboxEvent(Montage, EventType, EventID) end
---@param Montage UAnimMontage
---@param SegmentType EAnimationActionSegmentType
function UTouristCharacterAnimInstance:HandleAnimationActionSegmentStart(Montage, SegmentType) end
---@param Montage UAnimMontage
---@param Event UAnimNotify_ActionNamedEvent
function UTouristCharacterAnimInstance:HandleAnimationActionNamedEvent(Montage, Event) end
---@return ATouristCharacter
function UTouristCharacterAnimInstance:GetOwner() end
---@param Action UCharacterAnimAction_Composite
---@param ActionIndex int32
---@param OutCorrectionWindowID uint8
---@param OutCorrectionTarget FRootMotionTarget
function UTouristCharacterAnimInstance:GetDeltaCorrectionForCompositeAction(Action, ActionIndex, OutCorrectionWindowID, OutCorrectionTarget) end
---@param CurveName FName
---@param bValid boolean
---@param OutValue float
function UTouristCharacterAnimInstance:GetCurveValueIfExists(CurveName, bValid, OutValue) end
---@param CachedPose FName
---@param BoneName FName
---@param BoneTransform FTransform
---@return boolean
function UTouristCharacterAnimInstance:GetBoneFromPose(CachedPose, BoneName, BoneTransform) end
function UTouristCharacterAnimInstance:FinishActiveRequest() end
function UTouristCharacterAnimInstance:CancelActiveRequest() end
---@param Request FAnimationRequest
---@return boolean
function UTouristCharacterAnimInstance:CanAcceptAnimationRequest(Request) end
---@param Flags uint8
function UTouristCharacterAnimInstance:AddControlFlagRequest(Flags) end


---@class UTouristCheatManager : UHMQCheatManager
---@field DeveloperFlags TArray<FName>
---@field UnpossessedPlayerCharacter APlayerCharacter
---@field SdfDebugEffect UNGParticleComponent
---@field LastLoadoutIndex int32
---@field bDebugKeysEnabled boolean
---@field DebugMenuHoldThreshold float
UTouristCheatManager = {}

function UTouristCheatManager:UpdatePlayerCheckpoint() end
function UTouristCheatManager:UpdateDebugInputBindings() end
function UTouristCheatManager:UnpossessAimAssistTarget() end
---@param ItemClass FString
function UTouristCheatManager:UnlockItem(ItemClass) end
function UTouristCheatManager:UnlockGameTransitionScreen() end
function UTouristCheatManager:UnlockAllItems() end
function UTouristCheatManager:TurnOnVivox() end
---@param ElevatorName FString
---@param bEnabled boolean
function UTouristCheatManager:TTSetElevatorEnabledInPlayerRoom(ElevatorName, bEnabled) end
---@param ElevatorName FString
function UTouristCheatManager:TTInteractWithElevatorInPlayerRoom(ElevatorName) end
function UTouristCheatManager:TTDumpElevatorsInPlayerRoom() end
function UTouristCheatManager:TriggerCrash() end
function UTouristCheatManager:ToggleTGGI() end
function UTouristCheatManager:ToggleSdfDebugEffect() end
function UTouristCheatManager:ToggleRoomEnemyDebug() end
function UTouristCheatManager:ToggleOneshotMode() end
function UTouristCheatManager:ToggleMinimapUpdate() end
function UTouristCheatManager:ToggleIndicatorHUD() end
function UTouristCheatManager:ToggleHUD() end
function UTouristCheatManager:ToggleGodMode() end
function UTouristCheatManager:ToggleFog() end
function UTouristCheatManager:ToggleFlashLight() end
function UTouristCheatManager:ToggleFirstPersonCharacter() end
function UTouristCheatManager:ToggleEnemyHighlight() end
function UTouristCheatManager:ToggleEnemyDemigodMode() end
function UTouristCheatManager:ToggleEnemiesCanSee() end
function UTouristCheatManager:ToggleDuoDemigodMode() end
function UTouristCheatManager:ToggleDemigodMode() end
function UTouristCheatManager:ToggleDebugMusicInfo() end
function UTouristCheatManager:ToggleDebugInputKeys() end
function UTouristCheatManager:ToggleDebugInfo() end
function UTouristCheatManager:ToggleDebugCameraWithTeleport() end
function UTouristCheatManager:ToggleAudio3DMix() end
---@param WeaponClassName FString
function UTouristCheatManager:SwitchPlayerWeapon(WeaponClassName) end
function UTouristCheatManager:StopWwiseProfiling() end
function UTouristCheatManager:StartWwiseProfiling() end
---@param InMode EGameTransitionMode
---@param BiomeConfig FString
function UTouristCheatManager:StartGameTransitionScreen(InMode, BiomeConfig) end
---@param CinematicName FString
function UTouristCheatManager:StartCinematic(CinematicName) end
---@param ModifierType EMetaModifierType
---@param count int32
function UTouristCheatManager:SpawnPlayerRandomMetaModifiersOfType(ModifierType, count) end
---@param MetaModifierName FName
function UTouristCheatManager:SpawnPlayerMetaModifier(MetaModifierName) end
---@param ModifierType EMetaModifierType
function UTouristCheatManager:SpawnPlayerAllMetaModifiersOfType(ModifierType) end
---@param LootGroup ECollectibleDropGroup
---@param bFlyOut boolean
function UTouristCheatManager:SpawnLoot(LootGroup, bFlyOut) end
function UTouristCheatManager:SpawnEnemy() end
function UTouristCheatManager:SpawnCollectible() end
---@param ClassName FString
function UTouristCheatManager:SpawnActor(ClassName) end
function UTouristCheatManager:SocialDump() end
---@param Tier int32
function UTouristCheatManager:SocialChallengeSetTier(Tier) end
function UTouristCheatManager:SocialChallengeResetCompletion() end
function UTouristCheatManager:SocialChallengeCycleTier() end
---@param value float
function UTouristCheatManager:SetTimeDilation(value) end
---@param NewValue int32
function UTouristCheatManager:SetStartMachineIndex(NewValue) end
---@param NewValue float
function UTouristCheatManager:SetStartMachineCounter(NewValue) end
---@param bNewEnabled boolean
function UTouristCheatManager:SetRainEnabled(bNewEnabled) end
---@param bVisibility boolean
function UTouristCheatManager:SetPlayerVisibility(bVisibility) end
---@param bLockdown boolean
function UTouristCheatManager:SetPlayerRoomLockdown(bLockdown) end
---@param value float
function UTouristCheatManager:SetPlayerMaxHealth(value) end
---@param Flag FName
function UTouristCheatManager:SetPersistentFlag(Flag) end
---@param bEnabled boolean
function UTouristCheatManager:SetManualRoomLockdownEnabled(bEnabled) end
---@param LoadoutIndex int32
function UTouristCheatManager:SetLoadout(LoadoutIndex) end
---@param NewLastLoadoutIndex int32
function UTouristCheatManager:SetLastLoadoutIndex(NewLastLoadoutIndex) end
function UTouristCheatManager:SetLastLoadout() end
---@param IsInfiniteAmmo boolean
function UTouristCheatManager:SetInfiniteAmmo(IsInfiniteAmmo) end
---@param bNewReady boolean
function UTouristCheatManager:SetGameTransitionScreenReady(bNewReady) end
function UTouristCheatManager:SetDeveloperSaveGame() end
---@param value int32
function UTouristCheatManager:SetClarity(value) end
---@param Output int32
function UTouristCheatManager:SetAudioOutput(Output) end
---@param Strength int32
function UTouristCheatManager:SetAimAssistStrength(Strength) end
---@param Message FString
function UTouristCheatManager:SendTextMessage(Message) end
---@param SequenceName FName
function UTouristCheatManager:SaySequence(SequenceName) end
---@param Str FString
function UTouristCheatManager:SayFromString(Str) end
function UTouristCheatManager:ResetTimeDilation() end
function UTouristCheatManager:ResetProficiency() end
function UTouristCheatManager:ResetPlayerMaxHealth() end
function UTouristCheatManager:ResetPlayerAbilities() end
function UTouristCheatManager:ResetManualRoomLockdown() end
function UTouristCheatManager:ReplaceConsumables() end
function UTouristCheatManager:RefreshRuntimeLandscape() end
function UTouristCheatManager:RefreshHUD() end
---@param SaveGame UTouristSaveGame
function UTouristCheatManager:ReceiveSetDeveloperSaveGame(SaveGame) end
---@param MediaData UMediaData
function UTouristCheatManager:ReceivePlayMedia(MediaData) end
---@param SaveGame UTouristSaveGame
function UTouristCheatManager:ReceiveClearDeveloperSaveGame(SaveGame) end
function UTouristCheatManager:PossessAimAssistTarget() end
---@param MediaData FString
function UTouristCheatManager:PlayMedia(MediaData) end
function UTouristCheatManager:OpenReceivedInvitation() end
function UTouristCheatManager:OpenInviteUI() end
function UTouristCheatManager:OpenDebugMenu() end
---@param Multiplier float
function UTouristCheatManager:MultiplyTimeDilation(Multiplier) end
---@param Players int32
---@param MetaModifierName FName
function UTouristCheatManager:MPSpawnPlayerMetaModifier(Players, MetaModifierName) end
---@param Progress int32
function UTouristCheatManager:MPSetRewardTierProgress(Progress) end
---@param Tier int32
function UTouristCheatManager:MPSetRewardTier(Tier) end
---@param Players int32
---@param Progress int32
function UTouristCheatManager:MPSetRankProgress(Players, Progress) end
---@param Players int32
---@param Rank int32
function UTouristCheatManager:MPSetRank(Players, Rank) end
---@param Players int32
---@param value float
function UTouristCheatManager:MPSetPlayerMaxHealth(Players, value) end
---@param Players int32
---@param State int32
---@param Target int32
function UTouristCheatManager:MPSetPlayerGlitchState(Players, State, Target) end
---@param Players int32
---@param Flag FName
function UTouristCheatManager:MPSetPersistentFlag(Players, Flag) end
---@param Players int32
---@param value float
function UTouristCheatManager:MPModifyPlayerMaxHealth(Players, value) end
---@param Players int32
---@param KeyType FString
---@param value int32
function UTouristCheatManager:MPModifyPlayerKeys(Players, KeyType, value) end
---@param Players int32
---@param value float
function UTouristCheatManager:MPModifyPlayerHealth(Players, value) end
---@param Players int32
---@param Delta int32
function UTouristCheatManager:MPModifyAdrenalineStep(Players, Delta) end
---@param Players int32
---@param Delta int32
function UTouristCheatManager:MPModifyAdrenalineLevel(Players, Delta) end
---@param Players int32
function UTouristCheatManager:MPKillPlayer(Players) end
---@param Players int32
function UTouristCheatManager:MPInteract(Players) end
---@param Players int32
---@param Flag FName
function UTouristCheatManager:MPClearPersistentFlag(Players, Flag) end
---@param ModValue float
function UTouristCheatManager:ModifyTimeDilation(ModValue) end
---@param Modification float
function UTouristCheatManager:ModifyStartMachineCounter(Modification) end
---@param value float
function UTouristCheatManager:ModifySanity(value) end
---@param Points int32
function UTouristCheatManager:ModifyProficiency(Points) end
---@param value float
function UTouristCheatManager:ModifyPlayerMaxHealth(value) end
---@param KeyType FString
---@param value int32
function UTouristCheatManager:ModifyPlayerKeys(KeyType, value) end
---@param value float
function UTouristCheatManager:ModifyPlayerHealth(value) end
---@param value int32
function UTouristCheatManager:ModifyMoney(value) end
---@param value float
function UTouristCheatManager:ModifyArcadeMultiplier(value) end
---@param Delta int32
function UTouristCheatManager:ModifyAdrenalineStep(Delta) end
---@param Delta int32
function UTouristCheatManager:ModifyAdrenalineLevel(Delta) end
function UTouristCheatManager:MaxPlayerAbilities() end
function UTouristCheatManager:LockGameTransitionScreen() end
---@param LocatorType FName
---@param SpawnActorClassName FString
function UTouristCheatManager:LevelGenRoomLocatorSpawn(LocatorType, SpawnActorClassName) end
function UTouristCheatManager:LeaveEchoChannel() end
function UTouristCheatManager:KillTouristPlayer() end
function UTouristCheatManager:KillClientPlayer() end
function UTouristCheatManager:KillAllEnemiesEverywhere() end
---@param bByPlayer boolean
function UTouristCheatManager:KillAllEnemies(bByPlayer) end
function UTouristCheatManager:KickClient() end
function UTouristCheatManager:JoinEchoChannel() end
---@param WorldContextObject UObject
---@param Branches EDebugMode
function UTouristCheatManager:IsDebugModeEnabled(WorldContextObject, Branches) end
function UTouristCheatManager:InitDebugSettings() end
---@param ClassName FString
---@param Level int32
function UTouristCheatManager:GivePlayerAbility(ClassName, Level) end
---@return UInventory
function UTouristCheatManager:GetPlayerInventory() end
---@return APlayerCharacter
function UTouristCheatManager:GetOuterPlayerCharacter() end
---@return int32
function UTouristCheatManager:GetLastLoadoutIndex() end
---@param DisplayName FString
function UTouristCheatManager:FakeClientInvite(DisplayName) end
---@param FadeDuration float
function UTouristCheatManager:FadeOutScreen(FadeDuration) end
---@param FadeDuration float
function UTouristCheatManager:FadeInScreen(FadeDuration) end
function UTouristCheatManager:EndTutorial() end
function UTouristCheatManager:EndTimelessTower() end
function UTouristCheatManager:DumpRoomObjectDataInstances() end
function UTouristCheatManager:DumpPersistentFlags() end
function UTouristCheatManager:DumpActivityFlagsAndThingStats() end
---@param MetaModifierName FName
function UTouristCheatManager:DestroyPlayerMetaModifier(MetaModifierName) end
---@param ObjectiveName FName
function UTouristCheatManager:DestroyObjectiveByName(ObjectiveName) end
function UTouristCheatManager:DebugVivox() end
---@param damage float
function UTouristCheatManager:DamageTouristPlayer(damage) end
---@param damage float
function UTouristCheatManager:DamageAllEnemies(damage) end
---@param ObjectiveName FName
function UTouristCheatManager:ContinueObjectiveByName(ObjectiveName) end
---@param Flag FName
function UTouristCheatManager:ClearPersistentFlag(Flag) end
function UTouristCheatManager:ClearDeveloperSaveGame() end
---@param ButtonIndex int32
---@param bDown boolean
function UTouristCheatManager:CheckGamepadDebugButtons(ButtonIndex, bDown) end
---@param Branches EDebugMode
function UTouristCheatManager:CheckDebugModeEnabled(Branches) end
function UTouristCheatManager:CaptureTestPersistenceSnapshot() end
---@param EventName FName
function UTouristCheatManager:BPCheat(EventName) end
---@param ElevatorName FString
---@param bEnabled boolean
function UTouristCheatManager:BP_TTSetElevatorEnabledInPlayerRoom(ElevatorName, bEnabled) end
---@param ElevatorName FString
function UTouristCheatManager:BP_TTInteractWithElevatorInPlayerRoom(ElevatorName) end
function UTouristCheatManager:BP_TTDumpElevatorsInPlayerRoom() end
---@param ClassName FString
function UTouristCheatManager:BeginTutorial(ClassName) end
function UTouristCheatManager:BeginTimelessTower() end
function UTouristCheatManager:BeginConnecting() end
function UTouristCheatManager:ApplyTestPersistenceSnapshot() end
---@param ObjectiveClassName FString
---@param ObjectiveName FName
function UTouristCheatManager:AddObjectiveComponent(ObjectiveClassName, ObjectiveName) end
---@param ParentObjectiveName FName
---@param ObjectiveClassName FString
---@param ObjectiveName FName
function UTouristCheatManager:AddChildObjectiveComponent(ParentObjectiveName, ObjectiveClassName, ObjectiveName) end


---@class UTouristCustomNavLinkComponent : UNavLinkCustomComponent
---@field Owner ATouristNavLinkProxy
UTouristCustomNavLinkComponent = {}

---@param InOwner ATouristNavLinkProxy
function UTouristCustomNavLinkComponent:RegisterOwner(InOwner) end


---@class UTouristDamageType : UDamageType
---@field damage float
---@field DamageDuration float
---@field MaxDoTStacks int32
---@field InstantlyTickAtStart boolean
---@field DamageDelay float
---@field WeakPointDamageMultiplier float
---@field Impulse float
---@field ImpactType EDamageImpactType
---@field KnockdownImpulse float
---@field KnockdownAngle float
---@field DamageRadius float
---@field OuterDamage float
---@field Falloff float
---@field bForceTakeDamage boolean
---@field AdditionalInvulnerabilityTime float
---@field bApplyDamageImpact boolean
UTouristDamageType = {}



---@class UTouristDamageTypeConstant : UTouristDamageTypePhysical
UTouristDamageTypeConstant = {}


---@class UTouristDamageTypeCurse : UTouristDamageType
UTouristDamageTypeCurse = {}


---@class UTouristDamageTypeDark : UTouristDamageType
UTouristDamageTypeDark = {}


---@class UTouristDamageTypeDebug : UTouristDamageTypeMeta
UTouristDamageTypeDebug = {}


---@class UTouristDamageTypeExplosion : UTouristDamageTypePhysical
UTouristDamageTypeExplosion = {}


---@class UTouristDamageTypeFire : UTouristDamageType
UTouristDamageTypeFire = {}


---@class UTouristDamageTypeForcedDeath : UTouristDamageTypeMeta
UTouristDamageTypeForcedDeath = {}


---@class UTouristDamageTypeHardLanding : UTouristDamageType
UTouristDamageTypeHardLanding = {}


---@class UTouristDamageTypeHeal : UTouristDamageType
UTouristDamageTypeHeal = {}


---@class UTouristDamageTypeIce : UTouristDamageType
UTouristDamageTypeIce = {}


---@class UTouristDamageTypeItemCollected : UTouristDamageType
UTouristDamageTypeItemCollected = {}


---@class UTouristDamageTypeKeyUsed : UTouristDamageType
UTouristDamageTypeKeyUsed = {}


---@class UTouristDamageTypeKillZ : UTouristDamageType
UTouristDamageTypeKillZ = {}


---@class UTouristDamageTypeLifeLeech : UTouristDamageTypeHeal
UTouristDamageTypeLifeLeech = {}


---@class UTouristDamageTypeMeta : UTouristDamageType
UTouristDamageTypeMeta = {}


---@class UTouristDamageTypeOutOfBounds : UTouristDamageType
UTouristDamageTypeOutOfBounds = {}


---@class UTouristDamageTypePhysical : UTouristDamageType
UTouristDamageTypePhysical = {}


---@class UTouristDamageTypePoison : UTouristDamageType
UTouristDamageTypePoison = {}


---@class UTouristDamageTypeRevive : UTouristDamageType
UTouristDamageTypeRevive = {}


---@class UTouristDamageTypeSacrifice : UTouristDamageType
UTouristDamageTypeSacrifice = {}


---@class UTouristDamageTypeSanity : UTouristDamageType
UTouristDamageTypeSanity = {}


---@class UTouristDamageTypeSelfDamageFromActiveReload : UTouristDamageType
UTouristDamageTypeSelfDamageFromActiveReload = {}


---@class UTouristDamageTypeSelfDamageFromCriticalHit : UTouristDamageType
UTouristDamageTypeSelfDamageFromCriticalHit = {}


---@class UTouristDamageTypeSelfDamageFromShooting : UTouristDamageType
UTouristDamageTypeSelfDamageFromShooting = {}


---@class UTouristDamageTypeShortInvulnerability : UTouristDamageTypeMeta
UTouristDamageTypeShortInvulnerability = {}


---@class UTouristDamageTypeSlash : UTouristDamageTypePhysical
UTouristDamageTypeSlash = {}


---@class UTouristDamageTypeSlashStrong : UTouristDamageTypePhysical
UTouristDamageTypeSlashStrong = {}


---@class UTouristDamageTypeSocialContribution : UTouristDamageTypeMeta
UTouristDamageTypeSocialContribution = {}


---@class UTouristDamageTypeStagger : UTouristDamageType
UTouristDamageTypeStagger = {}


---@class UTouristDamageTypeStaggerWithReset : UTouristDamageTypeStagger
UTouristDamageTypeStaggerWithReset = {}


---@class UTouristDamageTypeWeaken : UTouristDamageType
UTouristDamageTypeWeaken = {}


---@class UTouristDamageUtil : UBlueprintFunctionLibrary
UTouristDamageUtil = {}

---@param Target int32
---@param Mask int32
---@return boolean
function UTouristDamageUtil:MaskTouristDamageTarget(Target, Mask) end
---@param Target int32
---@return uint8
function UTouristDamageUtil:MakeTouristDamageTarget(Target) end
---@param WorldContextObject UObject
---@param DamageEvent FTouristDamageEvent
---@param DamagedActors TArray<AActor>
---@return boolean
function UTouristDamageUtil:ApplyTouristRadialDamageFillDamagedActors(WorldContextObject, DamageEvent, DamagedActors) end
---@param WorldContextObject UObject
---@param DamageEvent FTouristDamageEvent
---@return boolean
function UTouristDamageUtil:ApplyTouristRadialDamage(WorldContextObject, DamageEvent) end
---@param DamagedActor AActor
---@param DamageEvent FTouristDamageEvent
---@param HitResult FHitResult
---@return boolean
function UTouristDamageUtil:ApplyTouristPointDamage(DamagedActor, DamageEvent, HitResult) end
---@param DamageTarget AActor
---@param DamageSource AActor
---@param DamageDescriptor FTouristDamageDescriptor
---@param ImpactLocation FVector
---@return boolean
function UTouristDamageUtil:ApplySimpleTouristDamageFromDescriptorWithLocation(DamageTarget, DamageSource, DamageDescriptor, ImpactLocation) end
---@param DamageTarget AActor
---@param DamageSource AActor
---@param DamageDescriptor FTouristDamageDescriptor
---@return boolean
function UTouristDamageUtil:ApplySimpleTouristDamageFromDescriptor(DamageTarget, DamageSource, DamageDescriptor) end
---@param DamageTarget AActor
---@param DamageSource AActor
---@param DamageAmount float
---@return boolean
function UTouristDamageUtil:ApplySimpleTouristDamage(DamageTarget, DamageSource, DamageAmount) end
---@param DamageTarget APawn
---@param DamageSource AActor
---@param DamageAmount float
function UTouristDamageUtil:ApplyOrTransmitSimpleDamage(DamageTarget, DamageSource, DamageAmount) end


---@class UTouristDebugLibrary : UBlueprintFunctionLibrary
UTouristDebugLibrary = {}

---@param WorldContextObject UObject
---@param MeshComponent USkeletalMeshComponent
---@param Center FVector
---@param Text FString
---@param JointSize float
---@param BoneSize float
---@param bShowBoneNames boolean
---@param BoneColor FLinearColor
---@param VirtualBoneColor FLinearColor
---@param LogCategory FName
---@param bAddToMessageLog boolean
function UTouristDebugLibrary:VisLogSkeletalMeshComponent(WorldContextObject, MeshComponent, Center, Text, JointSize, BoneSize, bShowBoneNames, BoneColor, VirtualBoneColor, LogCategory, bAddToMessageLog) end
---@param WorldContextObject UObject
---@param Center FVector
---@param HalfHeight float
---@param Radius float
---@param Text FString
---@param Rotation FRotator
---@param ObjectColor FLinearColor
---@param LogCategory FName
---@param bAddToMessageLog boolean
function UTouristDebugLibrary:VisLogCapsule(WorldContextObject, Center, HalfHeight, Radius, Text, Rotation, ObjectColor, LogCategory, bAddToMessageLog) end
function UTouristDebugLibrary:DebugCrashUeFatal() end
function UTouristDebugLibrary:DebugCrashNullRef() end
function UTouristDebugLibrary:DebugCauseEnsureMsgf() end
function UTouristDebugLibrary:DebugCauseEnsureAlways() end
function UTouristDebugLibrary:DebugCauseEnsure() end


---@class UTouristEnemyPerceptionComponent : UAIPerceptionComponent
---@field ActivationDistance float
---@field bDisablePathChecks boolean
---@field bPrioritizeReachableTargets boolean
---@field bIsTargetTrackingEnabled boolean
---@field PlayerTrackingUpdateInterval float
---@field KeepTargetTime float
---@field bStayInRoom boolean
---@field bNeverLoseTarget boolean
---@field bDoVisibilityLineTrace boolean
---@field TargetingScheme ETargetScheme
---@field bAlwaysSeeAllPlayers boolean
---@field ActorPathResultsForFrame TMap<AActor, boolean>
---@field OnTargetActorChanged FTouristEnemyPerceptionComponentOnTargetActorChanged
---@field Owner AEnemyControllerBase
---@field TargetActor AActor
---@field LastValidTargetActor AActor
---@field bHasPathToTargetActor boolean
---@field CurrentTargetVisibilityTime float
---@field CurrentTargetTrueVisibilityTime float
---@field DistanceHysteresisPercent float
---@field DistanceHysteresisMin float
---@field PreferredMinimumTargetingTime float
---@field TargetTrackingUpdateTimer float
---@field ForcedAggroTarget AActor
---@field ForcedAggroTargetTimer float
---@field bForcedAggroTargetPerceived boolean
---@field LastKnownTargetLoc FVector
---@field bLastKnownTargetLocValid boolean
---@field thisUpdateTime float
---@field LastTargetChangeTime float
---@field TargetInformation TArray<FTargetInfo>
UTouristEnemyPerceptionComponent = {}

function UTouristEnemyPerceptionComponent:UpdateTargetTracking() end
---@param OldTarget AActor
---@param NewTarget AActor
---@param OldTargetDistance float
---@param NewTargetDistance float
---@return boolean
function UTouristEnemyPerceptionComponent:ShouldSwitchTarget(OldTarget, NewTarget, OldTargetDistance, NewTargetDistance) end
---@param bEnabled boolean
function UTouristEnemyPerceptionComponent:SetTargetTrackingEnabled(bEnabled) end
---@param scheme ETargetScheme
---@param UpdateTarget boolean
---@param FullTargetUpdate boolean
---@return AActor
function UTouristEnemyPerceptionComponent:SetScheme(scheme, UpdateTarget, FullTargetUpdate) end
---@param Distance float
function UTouristEnemyPerceptionComponent:SetActivationDistance(Distance) end
---@param InOwner AEnemyControllerBase
function UTouristEnemyPerceptionComponent:RegisterOwner(InOwner) end
---@param Target AActor
---@return boolean
function UTouristEnemyPerceptionComponent:IsAcceptableTarget(Target) end
---@return boolean
function UTouristEnemyPerceptionComponent:HasPathToTargetActor() end
---@param Actor AActor
---@return boolean
function UTouristEnemyPerceptionComponent:HasPathToPerceivedActor(Actor) end
---@return float
function UTouristEnemyPerceptionComponent:GetTargetVisibilityTime() end
---@return float
function UTouristEnemyPerceptionComponent:GetTargetTrueVisibilityTime() end
---@param scheme ETargetScheme
---@param ignoreFrocedTarget boolean
---@return TArray<AActor>
function UTouristEnemyPerceptionComponent:GetTargetsByScheme(scheme, ignoreFrocedTarget) end
---@param scheme ETargetScheme
---@param ignoreFrocedTarget boolean
---@return AActor
function UTouristEnemyPerceptionComponent:GetTargetActorByScheme(scheme, ignoreFrocedTarget) end
---@param bReturnLastValidIfNull boolean
---@return AActor
function UTouristEnemyPerceptionComponent:GetTargetActor(bReturnLastValidIfNull) end
---@return float
function UTouristEnemyPerceptionComponent:GetSecondsSinceTargetChange() end
---@return TArray<AActor>
function UTouristEnemyPerceptionComponent:GetPerceivedAggroTargets() end
---@param OutValid boolean
---@param OutLocation FVector
function UTouristEnemyPerceptionComponent:GetLastKnownTargetLocation(OutValid, OutLocation) end
---@return AActor
function UTouristEnemyPerceptionComponent:GetForcedAggroTarget() end
---@param Target AActor
---@param AggroTime float
function UTouristEnemyPerceptionComponent:ForceAggroForTarget(Target, AggroTime) end


---@class UTouristFlyingMovementComponent : UTouristMovementComponent
---@field MovementParams TMap<EFlyingMovementParameter, FOverridableFlyingMovementParameter>
---@field MovementParamLookup TArray<FOverridableFlyingMovementParameter>
---@field SyncedMovementValues TArray<float>
---@field EnemyOwner AEnemyBase
---@field OnFlightPath boolean
---@field MinHeightAboveGround float
---@field MinHeightBelowCeiling float
---@field HeightAboveFocus FMinMaxFloat
---@field AngleFromFocusInDegrees FMinMaxFloat
---@field ReactionTime float
---@field DriftSettings FFlyingDriftSettings
---@field bUseRootMotionVelocityMultiplier boolean
---@field NetLocationSnapDistance float
---@field HeightSensingTimer float
---@field GroundHeight float
---@field CeilingHeight float
---@field TimeOutsideFocusHeightBand float
---@field DriftPhase FVector2D
---@field TiltSettings FFlyingTiltSettings
---@field TiltForwardRaw float
---@field TiltSideRaw float
---@field TiltTurnRaw float
---@field TiltAccelForwardRaw float
---@field TiltAccelSideRaw float
---@field CurrentRequest EFlyingMovementRequest
---@field RequestedVector FVector
---@field RequestedSpeed float
---@field RequestedDestination FVector
---@field bFocusPlayer boolean
---@field bFocusPlayerRequested boolean
---@field TimeUnableToReachFocusHeightBand float
---@field SyncedLocation FVector
---@field SyncedRotation FRotator
---@field bPersistentRequest boolean
UTouristFlyingMovementComponent = {}

---@param Param EFlyingMovementParameter
---@param NewValue float
function UTouristFlyingMovementComponent:SetMovementParameterValue(Param, NewValue) end
---@param NewValue float
function UTouristFlyingMovementComponent:SetAllMovementParameterValues(NewValue) end
---@param Multiplier float
function UTouristFlyingMovementComponent:ScaleAllMovementParameterValues(Multiplier) end
---@param Location FVector
---@param bTryToStopAtLocation boolean
function UTouristFlyingMovementComponent:RequestPersistentMoveTowardsLocation(Location, bTryToStopAtLocation) end
---@param TargetVelocityDir FVector
---@param bNormalizeInput boolean
function UTouristFlyingMovementComponent:RequestMoveWithTargetVelocityDir(TargetVelocityDir, bNormalizeInput) end
---@param Location FVector
---@param bTryToStopAtLocation boolean
function UTouristFlyingMovementComponent:RequestMoveTowardsLocation(Location, bTryToStopAtLocation) end
---@param ForcedVelocity FVector
function UTouristFlyingMovementComponent:RequestForceVelocity(ForcedVelocity) end
---@param ForcedSpeed float
---@param Target FVector
function UTouristFlyingMovementComponent:RequestForceSpeedTowardsLocation(ForcedSpeed, Target) end
---@param Param EFlyingMovementParameter
---@param NewValue float
---@param OverrideTime float
function UTouristFlyingMovementComponent:OverrideMovementParameterValue(Param, NewValue, OverrideTime) end
---@param Settings FFlyingMovementSettings
---@param OverrideTime float
function UTouristFlyingMovementComponent:OverrideAllMovementParameterValues(Settings, OverrideTime) end
function UTouristFlyingMovementComponent:OnRep_SyncedRotation() end
function UTouristFlyingMovementComponent:OnRep_SyncedLocation() end
---@return boolean
function UTouristFlyingMovementComponent:IsAtDesiredHeight() end
---@return float
function UTouristFlyingMovementComponent:GetTimeUnableToReachFocusHeight() end
---@param OutForward float
---@param Outside float
---@param OutRot float
function UTouristFlyingMovementComponent:GetTiltValues(OutForward, Outside, OutRot) end
---@param Param EFlyingMovementParameter
---@param bGetBase boolean
---@return float
function UTouristFlyingMovementComponent:GetMovementParameterValue(Param, bGetBase) end
---@param TargetPosition FVector
---@param bOutFoundPath boolean
---@param bOutNeedIntermediatePosition boolean
---@param OutIntermediatePosition FVector
---@param CapsuleTrace boolean
---@param bVisualLog boolean
function UTouristFlyingMovementComponent:GetFlightPathToLocation(TargetPosition, bOutFoundPath, bOutNeedIntermediatePosition, OutIntermediatePosition, CapsuleTrace, bVisualLog) end
---@return float
function UTouristFlyingMovementComponent:GetCachedHeightAboveGround() end
function UTouristFlyingMovementComponent:FocusPlayer() end
function UTouristFlyingMovementComponent:EndPersistentMoveRequest() end
---@param Settings FFlyingMovementSettings
function UTouristFlyingMovementComponent:ApplySettings(Settings) end


---@class UTouristFogManagerComponent : UHMQActorComponent
---@field BiomePlayerOffset TMap<EBiome, float>
---@field BiomeMode TMap<EBiome, ETouristFogManagerMode>
---@field FogModifierComp UHMQFogModifierComponent
---@field CachedPlayerCharacter ABasePlayerCharacter
---@field CachedSafeLocationComp USafeLocationComponent
UTouristFogManagerComponent = {}

---@param NewPlayerLocation FVector
function UTouristFogManagerComponent:SetPlayerLocationOverride(NewPlayerLocation) end
---@param NewState EPlayerTetheringState
---@param Reason EPlayerTetheringReason
function UTouristFogManagerComponent:OnPlayerTetherStateChanged(NewState, Reason) end
---@param PlayerState APlayerState
---@param NewRoomIndex int32
---@param OldRoomIndex int32
function UTouristFogManagerComponent:HandlePlayerRoomChanged(PlayerState, NewRoomIndex, OldRoomIndex) end
---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UTouristFogManagerComponent:HandleBiomeStateChanged(Biome, NewBiomeState) end
function UTouristFogManagerComponent:ClearPlayerLocationOverride() end


---@class UTouristGameInstance : UHMQGameInstance
---@field SaveGameClass TSubclassOf<UTouristSaveGame>
---@field SusResSaveGameClass TSubclassOf<USusResSaveGame>
---@field SusResValidSaveGameClass TSubclassOf<USusResValidSaveGame>
---@field ActivitiesManagerClass TSubclassOf<UActivitiesManager>
---@field SocialManagerClass_PS5 TSubclassOf<UTouristSocialManager>
---@field SocialManagerClass_Dummy TSubclassOf<UTouristSocialManager>
---@field SocialManagerClass_Steam TSubclassOf<UTouristSocialManager>
---@field SocialManagerClass_Epic TSubclassOf<UTouristSocialManager>
---@field TimelessTowerManagerClass TSubclassOf<UTimelessTowerManager>
---@field PlayerAssetManagerClass TSubclassOf<UPlayerAssetManager>
---@field CinematicsManager UCinematicsManager
---@field OnNetworkError FTouristGameInstanceOnNetworkError
---@field OnLevelReset FTouristGameInstanceOnLevelReset
---@field OnFinishLevel FTouristGameInstanceOnFinishLevel
---@field OnRestartGame FTouristGameInstanceOnRestartGame
---@field OnCharacterSpawned FTouristGameInstanceOnCharacterSpawned
---@field OnMonitorOrderRearranged FTouristGameInstanceOnMonitorOrderRearranged
---@field OnSocialInviteAccepted FTouristGameInstanceOnSocialInviteAccepted
---@field OnSaveError FTouristGameInstanceOnSaveError
---@field SaveSlot FString
---@field SaveGame UTouristSaveGame
---@field SusResSaveGame USusResSaveGame
---@field SusResValidSaveGame USusResValidSaveGame
---@field CollectibleManager UCollectibleManager
---@field LootManager ULootManager
---@field InfluxDatabase UTouristInfluxDatabase
---@field PerformanceOverlay UTouristPerformanceOverlay
---@field SocialManager UTouristSocialManager
---@field EntitlementManager UEntitlementManager
---@field NativeActivitiesManager UNativeActivitiesManager
---@field ActivitiesManager UActivitiesManager
---@field SystemDialogManager UHMQSystemDialogManager
---@field TimelessTowerManager UTimelessTowerManager
---@field SuspendAndResume USuspendAndResume
---@field PlayerAssetManager UPlayerAssetManager
---@field ShipLogData UShipLogData
---@field SingleLevelName FString
---@field SingleLevelBiome EBiome
---@field LanguageCodesDataTable UDataTable
---@field SupportedResolutions UDataTable
---@field bIsResolutionSupported boolean
---@field NonSupportedMonitorResolution FIntPoint
---@field NonSupportedMonitorAspectRatioIndex int32
---@field BenchmarkManager UBenchmarkManager
---@field BackgroundMenuTexture UTexture2D
---@field BackgroundWidth int32
---@field BackgroundHeight int32
---@field BackgroundMenuImage UImage
UTouristGameInstance = {}

---@param MonitorID FString
---@param DisplayMode ETouristWindowedMode
function UTouristGameInstance:UpdateNonSupportedResolutionValues(MonitorID, DisplayMode) end
function UTouristGameInstance:UpdateEpicOverlayLanguage() end
---@param NewBootMenuState EBootMenuState
function UTouristGameInstance:SetBootMenuState(NewBootMenuState) end
---@param ManualRestart boolean
---@param ForceBiome EBiome
---@param ForceBiomeConfig UBiomeConfig
function UTouristGameInstance:RestartGame(ManualRestart, ForceBiome, ForceBiomeConfig) end
function UTouristGameInstance:PerformInitialConnection() end
---@param MonitorID FString
---@param DisplayMode ETouristWindowedMode
---@param AspectRatioIndex int32
---@param resolution FIntPoint
---@return int32
function UTouristGameInstance:ParseResolutionToIndex(MonitorID, DisplayMode, AspectRatioIndex, resolution) end
---@param MonitorID FString
---@return int32
function UTouristGameInstance:ParseMonitorToIndex(MonitorID) end
---@param DisplayMode ETouristWindowedMode
---@return int32
function UTouristGameInstance:ParseDisplayModeToIndex(DisplayMode) end
---@param MonitorID FString
---@param DisplayMode ETouristWindowedMode
---@param AspectRatio float
---@return int32
function UTouristGameInstance:ParseAspectRatioToIndex(MonitorID, DisplayMode, AspectRatio) end
---@param SavePriority ESavePriority
function UTouristGameInstance:OnSusResValidSaveGameChanged(SavePriority) end
---@param SavePriority ESavePriority
function UTouristGameInstance:OnSusResSaveGameChanged(SavePriority) end
---@param SavePriority ESavePriority
function UTouristGameInstance:OnSaveGameChanged(SavePriority) end
function UTouristGameInstance:OnMonitorConfigChanged() end
---@return boolean
function UTouristGameInstance:IsTechDebugSingleLevelSet() end
---@param ResolutionToCheck FIntPoint
---@return boolean
function UTouristGameInstance:IsResolutionSupported(ResolutionToCheck) end
---@return boolean
function UTouristGameInstance:IsLevelGenParametersFixed() end
---@return boolean
function UTouristGameInstance:IsDungeonSeedFixed() end
---@return UTimelessTowerManager
function UTouristGameInstance:GetTimelessTowerManager() end
---@return UHMQSystemDialogManager
function UTouristGameInstance:GetSystemDialogManager() end
---@return USuspendAndResume
function UTouristGameInstance:GetSuspendAndResume() end
---@return UTouristSocialManager
function UTouristGameInstance:GetSocialManager() end
---@return UShipLogData
function UTouristGameInstance:GetShipLogData() end
---@param SaveTimeStamp FDateTime
---@param CurrentSaveRequest ESavePriority
---@param bBusy boolean
---@param bEnabled boolean
---@param LatestSaveSizeKiloBytes int32
---@param LatestSaveSizeMaxKiloBytes int32
function UTouristGameInstance:GetSaveInfo(SaveTimeStamp, CurrentSaveRequest, bBusy, bEnabled, LatestSaveSizeKiloBytes, LatestSaveSizeMaxKiloBytes) end
---@return FString
function UTouristGameInstance:GetPrimaryDisplayID() end
---@return UTouristPerformanceOverlay
function UTouristGameInstance:GetPerformanceOverlay() end
---@param MaxResolution FIntPoint
---@param AspectRatioIndex int32
---@return TArray<FIntPoint>
function UTouristGameInstance:GetNonSupportedResolutionValuesForAspectRatio(MaxResolution, AspectRatioIndex) end
---@param MaxResolution FIntPoint
---@return TArray<FSupportedResolutionsTableRow>
function UTouristGameInstance:GetNonSupportedResolutionValues(MaxResolution) end
---@return UNativeActivitiesManager
function UTouristGameInstance:GetNativeActivitiesManager() end
---@return ULootManager
function UTouristGameInstance:GetLootManager() end
---@return UDataTable
function UTouristGameInstance:GetLanguageCodesDataTable() end
---@return UTouristInfluxDatabase
function UTouristGameInstance:GetInfluxManager() end
---@return int32
function UTouristGameInstance:GetFixedDungeonSeed() end
---@return UEntitlementManager
function UTouristGameInstance:GetEntitlementManager() end
---@param MonitorID FString
---@param DisplayMode ETouristWindowedMode
---@param OutMaxSupportedAspectRatio float
---@return FIntPoint
function UTouristGameInstance:GetDisplayMaximumSupportedResolution(MonitorID, DisplayMode, OutMaxSupportedAspectRatio) end
---@return UCollectibleManager
function UTouristGameInstance:GetCollectibleManager() end
---@return EBootMenuState
function UTouristGameInstance:GetBootMenuState() end
---@return TArray<FIntPoint>
function UTouristGameInstance:GetAvailableResolutionsFromSaveGame() end
---@param MonitorID FString
---@param DisplayMode ETouristWindowedMode
---@return TArray<FSupportedResolutionsTableRow>
function UTouristGameInstance:GetAvailableResolutionsForMonitor(MonitorID, DisplayMode) end
---@param MonitorID FString
---@param DisplayMode ETouristWindowedMode
---@param AspectRatioIndex int32
---@return TArray<FIntPoint>
function UTouristGameInstance:GetAvailableResolutionsForAspectRatio(MonitorID, DisplayMode, AspectRatioIndex) end
---@return TArray<FString>
function UTouristGameInstance:GetAllDisplayNames() end
---@return TArray<FString>
function UTouristGameInstance:GetAllDisplayIDs() end
---@return UActivitiesManager
function UTouristGameInstance:GetActivitiesManager() end
---@param bEnable boolean
---@param bSticky boolean
function UTouristGameInstance:EnableFixedDungeonSeed(bEnable, bSticky) end
---@param Params FLevelGenParameters
---@param bEnable boolean
---@param bSticky boolean
function UTouristGameInstance:EnabledFixedLevelGenParameters(Params, bEnable, bSticky) end
function UTouristGameInstance:DoSaveGameImGui() end
---@param NewSeed int32
function UTouristGameInstance:DefineFixedDungeonSeed(NewSeed) end
---@return FLevelGenParameters
function UTouristGameInstance:ConsumeFixedLevelGenParameters() end


---@class UTouristGameplayAbilitySet : UDataAsset
---@field Abilities TArray<FTouristGameplayAbilityBindInfo>
UTouristGameplayAbilitySet = {}



---@class UTouristGameplayCueManager : UGameplayCueManager
UTouristGameplayCueManager = {}


---@class UTouristGameplayStatics : UBlueprintFunctionLibrary
UTouristGameplayStatics = {}

---@param WorldContextObject UObject
---@param Location FVector
---@param LatentInfo FLatentActionInfo
function UTouristGameplayStatics:WaitUntilRoomAtLocationReady(WorldContextObject, Location, LatentInfo) end
---@param Actor AActor
---@param LatentInfo FLatentActionInfo
function UTouristGameplayStatics:WaitUntilActorRoomReady(Actor, LatentInfo) end
---@param WorldContextObject UObject
---@param ThingName FName
---@param ThingType EPersistentThingType
---@param count int32
---@param SavePriority ESavePriority
function UTouristGameplayStatics:UpdateThingStatsByName(WorldContextObject, ThingName, ThingType, count, SavePriority) end
---@param Thing AActor
---@param count int32
---@param SavePriority ESavePriority
function UTouristGameplayStatics:UpdateThingStats(Thing, count, SavePriority) end
---@param DeltaSeconds float
function UTouristGameplayStatics:UpdateHackedTextureStreamingPoolSize(DeltaSeconds) end
---@param Guid FGuid
---@param Character ATouristCharacter
---@param CheckpointActor AActor
---@param Location FVector
---@param Rotation FRotator
---@return boolean
function UTouristGameplayStatics:UpdateCheckpointWithGUID(Guid, Character, CheckpointActor, Location, Rotation) end
---@param Character ATouristCharacter
---@param CheckpointActor AActor
---@param Location FVector
---@param Rotation FRotator
---@return FGuid
function UTouristGameplayStatics:UpdateCheckpoint(Character, CheckpointActor, Location, Rotation) end
---@param WorldContextObject UObject
function UTouristGameplayStatics:UnlockGameTransitionScreen(WorldContextObject) end
---@param WorldContextObject UObject
---@param TransitionName FName
---@param OutResult ETouristFunctionResult
function UTouristGameplayStatics:TryAcquireCriticalTransitionLock(WorldContextObject, TransitionName, OutResult) end
---@param WorldContextObject UObject
---@param TimeDilation float
function UTouristGameplayStatics:TouristSetGlobalTimeDilation(WorldContextObject, TimeDilation) end
---@param WorldContextObject UObject
---@return float
function UTouristGameplayStatics:TouristGetGlobalTimeDilation(WorldContextObject) end
---@param PlayerToTether APlayerCharacter
---@param Reason EPlayerTetheringReason
function UTouristGameplayStatics:TetherToOtherPlayer(PlayerToTether, Reason) end
---@param TargetPlayer APlayerCharacter
---@param Reason EPlayerTetheringReason
function UTouristGameplayStatics:TetherOtherPlayerTo(TargetPlayer, Reason) end
---@param WorldContextObject UObject
---@param LatentInfo FLatentActionInfo
function UTouristGameplayStatics:TeleportPlayerToSuspendLocation(WorldContextObject, LatentInfo) end
---@param WorldContextObject UObject
---@param Biome EBiome
---@param OutResult ETouristFunctionResult
function UTouristGameplayStatics:SwitchIsInBiome(WorldContextObject, Biome, OutResult) end
---@param WorldContextObject UObject
function UTouristGameplayStatics:StoreSaveGame(WorldContextObject) end
---@param WorldContextObject UObject
---@param InMode EGameTransitionMode
---@param InBiomeConfig UBiomeConfig
function UTouristGameplayStatics:StartGameTransitionScreen(WorldContextObject, InMode, InBiomeConfig) end
---@param WorldContextObject UObject
---@param ActorClass TSubclassOf<AActor>
---@param SpawnLocation FVector
---@param SpawnRotation FRotator
---@param CollisionHandlingOverride ESpawnActorCollisionHandlingMethod
---@param Owner AActor
---@param Instigator APawn
---@return AActor
function UTouristGameplayStatics:SpawnTouristActorOfClass(WorldContextObject, ActorClass, SpawnLocation, SpawnRotation, CollisionHandlingOverride, Owner, Instigator) end
---@param Initiator AActor
---@param SpawnLocation FVector
---@param SpawnRotation FRotator
---@param LootResult FLootResult
---@param SpawnPolicy ECollectibleSpawnPolicy
---@param Instigator AActor
---@param bFlyOut boolean
function UTouristGameplayStatics:SpawnSpecificLoot(Initiator, SpawnLocation, SpawnRotation, LootResult, SpawnPolicy, Instigator, bFlyOut) end
---@param Initiator AActor
---@param Transform FTransform
---@param LootGroup ECollectibleDropGroup
---@param LootCount int32
---@param LootProbability float
---@param bFlyOut boolean
function UTouristGameplayStatics:SpawnLoot(Initiator, Transform, LootGroup, LootCount, LootProbability, bFlyOut) end
---@param WorldContextObject UObject
---@param Boss AActor
function UTouristGameplayStatics:ShowBossHealth(WorldContextObject, Boss) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:ShouldTriggersBeHiddenInGame(WorldContextObject) end
---@param PlayerCharacter APlayerCharacter
---@param StaticMesh UStaticMeshComponent
---@param MeshDynamicMaterial UMaterialInstanceDynamic
---@param LightDynamicMaterial UMaterialInstanceDynamic
---@param NGParticle UNGParticleComponent
function UTouristGameplayStatics:SetupCurrencyVisuals(PlayerCharacter, StaticMesh, MeshDynamicMaterial, LightDynamicMaterial, NGParticle) end
---@param WorldContextObject UObject
---@param Flag FName
function UTouristGameplayStatics:SetTutorialFlag(WorldContextObject, Flag) end
---@param WorldContextObject UObject
---@param InPackageName FName
---@param bVisible boolean
function UTouristGameplayStatics:SetTouristStreamingLevelVisibility(WorldContextObject, InPackageName, bVisible) end
---@param WorldContextObject UObject
---@param ThingName FName
---@param Updated boolean
function UTouristGameplayStatics:SetThingStatsUpdatedFlag(WorldContextObject, ThingName, Updated) end
---@param WorldContextObject UObject
---@param ThingName FName
---@param ThingType EPersistentThingType
function UTouristGameplayStatics:SetThingDiscoveredByName(WorldContextObject, ThingName, ThingType) end
---@param SDRMinLum float
function UTouristGameplayStatics:SetSDRMinLum(SDRMinLum) end
---@param WorldContextObject UObject
---@param ID FName
---@param bDisabled boolean
function UTouristGameplayStatics:SetSavingDisabledWithId(WorldContextObject, ID, bDisabled) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@param bNewActive boolean
function UTouristGameplayStatics:SetRoomObjectDataStreamingActive(WorldContextObject, Handle, bNewActive) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@param ParameterName FName
---@param ParameterValue FString
function UTouristGameplayStatics:SetRoomObjectDataParameter(WorldContextObject, Handle, ParameterName, ParameterValue) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@param ParameterName FName
---@param ParameterValue FLevelGenMapRoomObjectDataHandle
function UTouristGameplayStatics:SetRoomObjectDataHandleParameter(WorldContextObject, Handle, ParameterName, ParameterValue) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@param ParameterName FName
---@param ParameterValue boolean
function UTouristGameplayStatics:SetRoomObjectDataBoolParameter(WorldContextObject, Handle, ParameterName, ParameterValue) end
---@param WorldContextObject UObject
---@param Flag FName
---@param bClientToServer boolean
---@param bServerToClient boolean
function UTouristGameplayStatics:SetPersistentGameplayFlag(WorldContextObject, Flag, bClientToServer, bServerToClient) end
---@param WorldContextObject UObject
---@param NewMode EMinimapMode
function UTouristGameplayStatics:SetMinimapMode(WorldContextObject, NewMode) end
---@param WorldContextObject UObject
---@param Tag FName
---@param bEnabled boolean
function UTouristGameplayStatics:SetInteractablesEnabledWithTag(WorldContextObject, Tag, bEnabled) end
---@param WorldContextObject UObject
---@param bNewReady boolean
function UTouristGameplayStatics:SetGameTransitionScreenReady(WorldContextObject, bNewReady) end
---@param DisplayGamma float
function UTouristGameplayStatics:SetDisplayGamma(DisplayGamma) end
---@param WorldContextObject UObject
---@param Flag FName
---@param bEnabled boolean
function UTouristGameplayStatics:SetCycleFlag(WorldContextObject, Flag, bEnabled) end
---@param WorldContextObject UObject
---@param Camera UCameraComponent
---@param Material UMaterialInterface
---@param weight float
---@return boolean
function UTouristGameplayStatics:SetCameraBlendableMaterialWeight(WorldContextObject, Camera, Material, weight) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@return FString
function UTouristGameplayStatics:RoomObjectDataToString(WorldContextObject, Handle) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@param EventName FName
function UTouristGameplayStatics:RoomObjectDataActorEvent(WorldContextObject, Handle, EventName) end
---@param WorldContextObject UObject
---@param bResetSettings boolean
function UTouristGameplayStatics:ResetSaveGame(WorldContextObject, bResetSettings) end
---@param PlayerCharacter APlayerCharacter
function UTouristGameplayStatics:RemoveGear(PlayerCharacter) end
---@param WorldContextObject UObject
---@param TransitionName FName
function UTouristGameplayStatics:ReleaseCriticalTransitionLock(WorldContextObject, TransitionName) end
---@param PlayerCharacter ACharacter
---@param CameraPreset UHMQCameraPreset
---@param GameplayEffects TArray<TSubclassOf<UGameplayEffect>>
---@return FTouristPlayerGameplayStateHandle
function UTouristGameplayStatics:PushPlayerGameplayState(PlayerCharacter, CameraPreset, GameplayEffects) end
---@param WorldContextObject UObject
function UTouristGameplayStatics:PrunePersistentStatisticsDataPoints(WorldContextObject) end
---@param WorldContextObject UObject
---@param AkEvent UAkAudioEvent
---@param PlayerIndex int32
---@return int32
function UTouristGameplayStatics:PostEventToPlayerSounds(WorldContextObject, AkEvent, PlayerIndex) end
---@param WorldContextObject UObject
---@param AkEvent UAkAudioEvent
---@param PlayerIndex int32
---@return int32
function UTouristGameplayStatics:PostEventAtPlayerCamera(WorldContextObject, AkEvent, PlayerIndex) end
---@param WorldContextObject UObject
---@param AkEvent UAkAudioEvent
---@param PlayerIndex int32
---@return int32
function UTouristGameplayStatics:PostEventAtPlayer(WorldContextObject, AkEvent, PlayerIndex) end
---@param Handle FTouristPlayerGameplayStateHandle
function UTouristGameplayStatics:PopPlayerGameplayState(Handle) end
---@param PlayerCharacter APlayerCharacter
---@param ArtefactClass TSubclassOf<AArtefactCollectible>
function UTouristGameplayStatics:PlayerUnlockAndGiveArtefactOfClass(PlayerCharacter, ArtefactClass) end
---@param PlayerCharacter APlayerCharacter
---@param ActorClass TSubclassOf<AActor>
function UTouristGameplayStatics:PlayerUnlockActorOfClass(PlayerCharacter, ActorClass) end
---@param PlayerCharacter APlayerCharacter
---@param AbilityClass TSubclassOf<UGameplayAbility>
---@param Level int32
function UTouristGameplayStatics:PlayerGiveAbility(PlayerCharacter, AbilityClass, Level) end
---@param PlayerCharacter APlayerCharacter
---@param ActorClass TSubclassOf<AActor>
function UTouristGameplayStatics:PlayerCollectActorOfClass(PlayerCharacter, ActorClass) end
---@param WorldContextObject UObject
---@param Flag FName
---@param OutResult ETouristFunctionResult
function UTouristGameplayStatics:OnceTutorialFlag(WorldContextObject, Flag, OutResult) end
---@param WorldContextObject UObject
---@param Flag FName
---@param OutResult ETouristFunctionResult
function UTouristGameplayStatics:OncePersistentGameplayFlag(WorldContextObject, Flag, OutResult) end
---@param WorldContextObject UObject
---@param Flag FName
---@return boolean
function UTouristGameplayStatics:OnceCycleFlag(WorldContextObject, Flag) end
---@param WorldContextObject UObject
---@param Location FVector
---@param bActivate boolean
function UTouristGameplayStatics:ModifyRoomActiveCountAtLocation(WorldContextObject, Location, bActivate) end
---@param WorldContextObject UObject
---@param value FString
---@return FLevelGenMapRoomObjectDataHandle
function UTouristGameplayStatics:MakeRoomObjectDataFromString(WorldContextObject, value) end
---@param WorldContextObject UObject
function UTouristGameplayStatics:LockGameTransitionScreen(WorldContextObject) end
---@param WorldContextObject UObject
function UTouristGameplayStatics:LoadWorldSuspendData(WorldContextObject) end
---@param WorldContextObject UObject
function UTouristGameplayStatics:LoadPlayerSuspendData(WorldContextObject) end
---@param ModType EMetaModifierType
---@return boolean
function UTouristGameplayStatics:IsWeaponModTypeShop(ModType) end
---@param ModType EMetaModifierType
---@return boolean
function UTouristGameplayStatics:IsWeaponModTypePositive(ModType) end
---@param ModType EMetaModifierType
---@return boolean
function UTouristGameplayStatics:IsWeaponModTypeFree(ModType) end
---@param ModType EMetaModifierType
---@return boolean
function UTouristGameplayStatics:IsWeaponModType(ModType) end
---@param WorldContextObject UObject
---@param TutorialName FName
---@return boolean
function UTouristGameplayStatics:IsTutorialNew(WorldContextObject, TutorialName) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsTutorialDone(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsTimelessTowerMode(WorldContextObject) end
---@param Biome EBiome
---@return boolean
function UTouristGameplayStatics:IsTimelessTowerBiome(Biome) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsTimelessTowerAvailable(WorldContextObject) end
---@param Thing AActor
---@return boolean
function UTouristGameplayStatics:IsThingDiscovered(Thing) end
---@param ArtefactName FName
---@return boolean
function UTouristGameplayStatics:IsSkillNode(ArtefactName) end
---@param Character ATouristCharacter
---@param Guid FGuid
---@return boolean
function UTouristGameplayStatics:IsSelectedCheckpointGuid(Character, Guid) end
---@param Character ATouristCharacter
---@param CheckpointActor AActor
---@return boolean
function UTouristGameplayStatics:IsSelectedCheckpoint(Character, CheckpointActor) end
---@param WorldContextObject UObject
---@param Location FVector
---@return boolean
function UTouristGameplayStatics:IsRoomReadyAtLocation(WorldContextObject, Location) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@return boolean
function UTouristGameplayStatics:IsRoomObjectDataValid(WorldContextObject, Handle) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@param Actor AActor
---@return boolean
function UTouristGameplayStatics:IsRoomObjectDataActor(WorldContextObject, Handle, Actor) end
---@param WorldContextObject UObject
---@param RoomIndex int32
---@return boolean
function UTouristGameplayStatics:IsRoomMPGameplayReadByRoomIndex(WorldContextObject, RoomIndex) end
---@param WorldContextObject UObject
---@param RoomIndex int32
---@return boolean
function UTouristGameplayStatics:IsRoomLoaded(WorldContextObject, RoomIndex) end
---@param Character ATouristCharacter
---@return boolean
function UTouristGameplayStatics:IsReloadMinigameEnabled(Character) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsRayTracingSupported(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsPreOrderEdition(WorldContextObject) end
---@param ArtefactName FName
---@return boolean
function UTouristGameplayStatics:IsPositiveModifier(ArtefactName) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsPhotoModeRestricted(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsPhotoModeEnabled(WorldContextObject) end
---@param MetaModifierName FName
---@return boolean
function UTouristGameplayStatics:IsPermanentModifier(MetaModifierName) end
---@param ArtefactName FName
---@return boolean
function UTouristGameplayStatics:IsParasite(ArtefactName) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsNormalMode(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsKioskMode(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsInThirdPerson(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsInFirstPerson(WorldContextObject) end
---@param WorldContextObject UObject
---@param Biome EBiome
---@return boolean
function UTouristGameplayStatics:IsInBiomeOrSingleLevel(WorldContextObject, Biome) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsInBenchmark(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsHouseSequenceDone(WorldContextObject) end
---@param PlayerController APlayerController
---@return boolean
function UTouristGameplayStatics:IsHealthBarScrambled(PlayerController) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsGeneratedMap(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsGameTransitionScreenActive(WorldContextObject) end
---@param PlayerController APlayerController
---@param FeatureName FName
---@param bDefaultValue boolean
---@return boolean
function UTouristGameplayStatics:IsFeatureEnabledForPlayer(PlayerController, FeatureName, bDefaultValue) end
---@param Actor AActor
---@param FeatureName FName
---@param bDefaultValue boolean
---@return boolean
function UTouristGameplayStatics:IsFeatureEnabledForActor(Actor, FeatureName, bDefaultValue) end
---@param WorldContextObject UObject
---@param FeatureName FName
---@param bDefaultValue boolean
---@return boolean
function UTouristGameplayStatics:IsFeatureEnabled(WorldContextObject, FeatureName, bDefaultValue) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsDLCMode(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsDigitalDeluxeEdition(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsDemoMode(WorldContextObject) end
---@param ArtefactName FName
---@return boolean
function UTouristGameplayStatics:IsCurse(ArtefactName) end
---@param Character ATouristCharacter
---@return boolean
function UTouristGameplayStatics:IsCriticalHitEnabled(Character) end
---@param ArtefactName FName
---@return boolean
function UTouristGameplayStatics:IsChallengeModifier(ArtefactName) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsChallengeMode(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsBiomeRunningOrSingleLevel(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsBiomeReadyForPlay(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsBetaBuild(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsArcadeMode(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:IsAnyPlayerMistElevatoring(WorldContextObject) end
---@param WorldContextObject UObject
---@param RoomIndex int32
---@return boolean
function UTouristGameplayStatics:IsAnyPlayerInRoom(WorldContextObject, RoomIndex) end
---@param WorldContextObject UObject
---@param SuitType ESuitType
---@return boolean
function UTouristGameplayStatics:IsAllowedToWearSuit(WorldContextObject, SuitType) end
---@param Actor AActor
---@return boolean
function UTouristGameplayStatics:IsActorInNeverLODLevel(Actor) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
function UTouristGameplayStatics:InvalidateRoomObjectData(WorldContextObject, Handle) end
---@param Component UActorComponent
---@param bInvalidateBuildEnqueuedLighting boolean
---@param bTranslationOnly boolean
function UTouristGameplayStatics:InvalidateLightingCache(Component, bInvalidateBuildEnqueuedLighting, bTranslationOnly) end
---@param Info FText
---@return FInteractionArgs
function UTouristGameplayStatics:InteractPrompt(Info) end
---@return FInteractionArgs
function UTouristGameplayStatics:InteractEmpty() end
---@param Info FText
---@return FInteractionArgs
function UTouristGameplayStatics:InteractBlocked(Info) end
---@param WorldContextObject UObject
function UTouristGameplayStatics:HideBossHealth(WorldContextObject) end
---@param Actor AActor
---@return boolean
function UTouristGameplayStatics:HasValidWorld(Actor) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@param ParameterName FName
---@return boolean
function UTouristGameplayStatics:HasRoomObjectDataParameter(WorldContextObject, Handle, ParameterName) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@param Tags TArray<FName>
---@return boolean
function UTouristGameplayStatics:HasRoomObjectDataActorTagAny(WorldContextObject, Handle, Tags) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@param Tag FName
---@return boolean
function UTouristGameplayStatics:HasRoomObjectDataActorTag(WorldContextObject, Handle, Tag) end
---@param WorldContextObject UObject
---@param Flag FName
---@return boolean
function UTouristGameplayStatics:HasCycleFlag(WorldContextObject, Flag) end
---@param WorldContextObject UObject
---@param CollectibleClassName FName
---@param OutResult ETouristFunctionResult
function UTouristGameplayStatics:HasCollectedCollectibleByName(WorldContextObject, CollectibleClassName, OutResult) end
---@param WorldContextObject UObject
---@param CollectibleClass TSoftClassPtr<ACollectibleBase>
---@param OutResult ETouristFunctionResult
function UTouristGameplayStatics:HasCollectedCollectibleByClass(WorldContextObject, CollectibleClass, OutResult) end
---@param Character ATouristCharacter
---@return boolean
function UTouristGameplayStatics:HasActiveCheckpoint(Character) end
---@param WorldContextObject UObject
---@param XenoglyphSampleId FName
---@param InBiome EBiome
---@param SampleBiome EBiome
---@param CollectedCount int32
---@param TotalCount int32
function UTouristGameplayStatics:GetXenoglyphSampleStatistics(WorldContextObject, XenoglyphSampleId, InBiome, SampleBiome, CollectedCount, TotalCount) end
---@param Weights TArray<float>
---@param Stream FRandomStream
---@return int32
function UTouristGameplayStatics:GetWeightedRandomIndex(Weights, Stream) end
---@param WorldContextObject UObject
---@param Flag FName
---@return boolean
function UTouristGameplayStatics:GetTutorialFlag(WorldContextObject, Flag) end
---@param WorldContextObject UObject
---@param InPackageName FName
---@return ULevelStreaming
function UTouristGameplayStatics:GetTouristStreamingLevel(WorldContextObject, InPackageName) end
---@param WorldContextObject UObject
---@return UTouristFogManagerComponent
function UTouristGameplayStatics:GetTouristFogManager(WorldContextObject) end
---@param WorldContextObject UObject
---@return int32
function UTouristGameplayStatics:GetTimelessTowerPhase(WorldContextObject) end
---@return FName
function UTouristGameplayStatics:GetTimeDilationPlayerTrackName() end
---@param WorldContextObject UObject
---@param ThingName FName
---@return int32
function UTouristGameplayStatics:GetThingStatsCountByName(WorldContextObject, ThingName) end
---@param Thing AActor
---@return int32
function UTouristGameplayStatics:GetThingStatsCount(Thing) end
---@param WorldContextObject UObject
---@param EnemyName FName
---@return FPersistentThingStatistics
function UTouristGameplayStatics:GetThingStats(WorldContextObject, EnemyName) end
---@param Thing AActor
---@return UShipLogEntry
function UTouristGameplayStatics:GetThingShipLogEntry(Thing) end
---@param WorldContextObject UObject
---@param Thing AActor
---@return UShipLogEntry
function UTouristGameplayStatics:GetThingCDOShipLogEntry(WorldContextObject, Thing) end
---@param WorldContextObject UObject
---@return USusResValidSaveGame
function UTouristGameplayStatics:GetSusResValidSaveGame(WorldContextObject) end
---@param WorldContextObject UObject
---@return USusResSaveGame
function UTouristGameplayStatics:GetSusResSaveGame(WorldContextObject) end
---@param origin FVector
---@param NumberOfPoints int32
---@param SpaceBetweenPoints float
---@return TArray<FVector>
function UTouristGameplayStatics:GetSunflowerLocationPatternAtLocation(origin, NumberOfPoints, SpaceBetweenPoints) end
---@param WorldContextObject UObject
---@param OutTags TSet<FName>
---@param bEmpty boolean
function UTouristGameplayStatics:GetSKUTags(WorldContextObject, OutTags, bEmpty) end
---@return ESKURegion
function UTouristGameplayStatics:GetSKU() end
---@param WorldContextObject UObject
---@param GroupName FName
---@param count int32
---@param bNoDuplicates boolean
---@param OutEntries TArray<UShipLogEntry>
function UTouristGameplayStatics:GetShipLogGroupEntries(WorldContextObject, GroupName, count, bNoDuplicates, OutEntries) end
---@param WorldContextObject UObject
---@param Name FName
---@return UShipLogEntry
function UTouristGameplayStatics:GetShipLogEntry(WorldContextObject, Name) end
---@param WorldContextObject UObject
---@return APlayerCharacter
function UTouristGameplayStatics:GetServerPlayerCharacter(WorldContextObject) end
---@param WorldContextObject UObject
---@param Flag FName
---@return int32
function UTouristGameplayStatics:GetSecondsSinceTutorialFlag(WorldContextObject, Flag) end
---@return float
function UTouristGameplayStatics:GetSDRMinLum() end
---@param WorldContextObject UObject
---@return UTouristSaveGame
function UTouristGameplayStatics:GetSaveGame(WorldContextObject) end
---@param PlayerActor AActor
---@param RoomIndex int32
---@return int32
function UTouristGameplayStatics:GetRoomVisitCount(PlayerActor, RoomIndex) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@return FTransform
function UTouristGameplayStatics:GetRoomObjectDataTransform(WorldContextObject, Handle) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@return int32
function UTouristGameplayStatics:GetRoomObjectDataRoomIndex(WorldContextObject, Handle) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@param ParameterName FName
---@param OutParameterValue FString
---@return boolean
function UTouristGameplayStatics:GetRoomObjectDataParameter(WorldContextObject, Handle, ParameterName, OutParameterValue) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@param ParameterName FName
---@param OutParameterValue FLevelGenMapRoomObjectDataHandle
---@return boolean
function UTouristGameplayStatics:GetRoomObjectDataHandleParameter(WorldContextObject, Handle, ParameterName, OutParameterValue) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@return FGuid
function UTouristGameplayStatics:GetRoomObjectDataGuid(WorldContextObject, Handle) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@param ParameterName FName
---@param OutParameterValue boolean
---@return boolean
function UTouristGameplayStatics:GetRoomObjectDataBoolParameter(WorldContextObject, Handle, ParameterName, OutParameterValue) end
---@param WorldContextObject UObject
---@param Handle FLevelGenMapRoomObjectDataHandle
---@return AActor
function UTouristGameplayStatics:GetRoomObjectDataActor(WorldContextObject, Handle) end
---@param WorldContextObject UObject
---@param RoomName FName
---@param LocatorType FName
---@param LocatorAttributes TMap<FName, FString>
---@param OutWorldTransform FTransform
---@return boolean
function UTouristGameplayStatics:GetRoomLocatorWorldTransform(WorldContextObject, RoomName, LocatorType, LocatorAttributes, OutWorldTransform) end
---@param WorldContextObject UObject
---@param RoomName FName
---@param LocatorType FName
---@param LocatorAttributes TMap<FName, FString>
---@param OutWorldLocation FVector
---@return boolean
function UTouristGameplayStatics:GetRoomLocatorWorldLocation(WorldContextObject, RoomName, LocatorType, LocatorAttributes, OutWorldLocation) end
---@param PlayerActor AActor
---@param RoomIndex int32
---@return int32
function UTouristGameplayStatics:GetRoomExitCount(PlayerActor, RoomIndex) end
---@param WorldContextObject UObject
---@param GenerationTag FName
---@param OutLocation FVector
---@return boolean
function UTouristGameplayStatics:GetRoomCenterLocationByGenerationTag(WorldContextObject, GenerationTag, OutLocation) end
---@param WorldContextObject UObject
---@param RoomName FName
---@param OutBoundsMin FVector
---@param OutBoundsMax FVector
---@return boolean
function UTouristGameplayStatics:GetRoomBounds(WorldContextObject, RoomName, OutBoundsMin, OutBoundsMax) end
---@param WorldContextObject UObject
---@return float
function UTouristGameplayStatics:GetRenderThreadFrameTime(WorldContextObject) end
---@param WorldContextObject UObject
---@return APlayerCharacter
function UTouristGameplayStatics:GetRemoteThirdPersonPlayerCharacter(WorldContextObject) end
---@param WorldContextObject UObject
---@return int32
function UTouristGameplayStatics:GetRemotePlayerRoomIndex(WorldContextObject) end
---@param WorldContextObject UObject
---@param PlayerIndex int32
---@return APawn
function UTouristGameplayStatics:GetRemotePlayerPawn(WorldContextObject, PlayerIndex) end
---@param WorldContextObject UObject
---@param PlayerIndex int32
---@return APlayerController
function UTouristGameplayStatics:GetRemotePlayerController(WorldContextObject, PlayerIndex) end
---@param WorldContextObject UObject
---@param PlayerIndex int32
---@return APlayerCharacter
function UTouristGameplayStatics:GetRemotePlayerCharacter(WorldContextObject, PlayerIndex) end
---@param WorldContextObject UObject
---@return AFirstPersonPlayerCharacter
function UTouristGameplayStatics:GetRemoteFirstPersonPlayerCharacter(WorldContextObject) end
---@return FString
function UTouristGameplayStatics:GetProjectVersion() end
---@param WorldContextObject UObject
---@return int32
function UTouristGameplayStatics:GetPlayerSuspendRoomID(WorldContextObject) end
---@param WorldContextObject UObject
---@param Biome EBiome
---@return int32
function UTouristGameplayStatics:GetPlayerDeathCount(WorldContextObject, Biome) end
---@param WorldContextObject UObject
---@param PlayerIndex int32
---@return APlayerCharacter
function UTouristGameplayStatics:GetPlayerCharacter(WorldContextObject, PlayerIndex) end
---@param WorldContextObject UObject
---@param Flag FName
---@return boolean
function UTouristGameplayStatics:GetPersistentGameplayFlagNonTransient(WorldContextObject, Flag) end
---@param WorldContextObject UObject
---@param Flag FName
---@return boolean
function UTouristGameplayStatics:GetPersistentGameplayFlag(WorldContextObject, Flag) end
---@param WorldContextObject UObject
---@return int32
function UTouristGameplayStatics:GetPeakDirectMemoryUsedMB(WorldContextObject) end
---@param WorldContextObject UObject
---@param Reference APlayerCharacter
---@return APlayerCharacter
function UTouristGameplayStatics:GetOtherPlayerCharacter(WorldContextObject, Reference) end
---@param Object UObject
---@return int32
function UTouristGameplayStatics:GetObjectRoomIndex(Object) end
---@param WorldContextObject UObject
---@param GroupNames TArray<FName>
---@param count int32
---@param bNoDuplicates boolean
---@param OutEntries TArray<UShipLogEntry>
function UTouristGameplayStatics:GetMultipleShipLogGroupEntries(WorldContextObject, GroupNames, count, bNoDuplicates, OutEntries) end
---@param WorldContextObject UObject
---@return int32
function UTouristGameplayStatics:GetMultiplayerRank(WorldContextObject) end
---@param ArtefactName FName
---@return EMetaModifierType
function UTouristGameplayStatics:GetMetaModifierType(ArtefactName) end
---@param ArtefactName FName
---@param FieldName FName
---@return FText
function UTouristGameplayStatics:GetMetaModifierText(ArtefactName, FieldName) end
---@param MetaModifierName FName
---@param FieldName FName
---@param DefaultValue FString
---@return FString
function UTouristGameplayStatics:GetMetaModifierString(MetaModifierName, FieldName, DefaultValue) end
---@param ArtefactName FName
---@param ArrayName FName
---@return TSet<FName>
function UTouristGameplayStatics:GetMetaModifierNameSet(ArtefactName, ArrayName) end
---@param ArtefactName FName
---@return FText
function UTouristGameplayStatics:GetMetaModifierName(ArtefactName) end
---@param MetaModifierName FName
---@param FieldName FName
---@param DefaultValue int32
---@return int32
function UTouristGameplayStatics:GetMetaModifierInt(MetaModifierName, FieldName, DefaultValue) end
---@param ArtefactName FName
---@param index int32
---@return TSoftObjectPtr<UTexture2D>
function UTouristGameplayStatics:GetMetaModifierIcon(ArtefactName, index) end
---@param MetaModifierName FName
---@param FieldName FName
---@param DefaultValue float
---@return float
function UTouristGameplayStatics:GetMetaModifierFloat(MetaModifierName, FieldName, DefaultValue) end
---@param ArtefactName FName
---@return FText
function UTouristGameplayStatics:GetMetaModifierDescription(ArtefactName) end
---@param MetaModifierName FName
---@param FieldName FName
---@param DefaultValue FLinearColor
---@return FLinearColor
function UTouristGameplayStatics:GetMetaModifierColor(MetaModifierName, FieldName, DefaultValue) end
---@param WorldContextObject UObject
---@return int32
function UTouristGameplayStatics:GetMainDirectMemorySizeMB(WorldContextObject) end
---@param WorldContextObject UObject
---@return ULootManager
function UTouristGameplayStatics:GetLootManager(WorldContextObject) end
---@param WorldContextObject UObject
---@return APlayerCharacter
function UTouristGameplayStatics:GetLocalThirdPersonPlayerCharacter(WorldContextObject) end
---@param WorldContextObject UObject
---@return FRandomStream
function UTouristGameplayStatics:GetLocalRandomStream(WorldContextObject) end
---@param WorldContextObject UObject
---@return ASanityState
function UTouristGameplayStatics:GetLocalPlayerSanityState(WorldContextObject) end
---@param WorldContextObject UObject
---@return UPlayerSanityComponent
function UTouristGameplayStatics:GetLocalPlayerSanity(WorldContextObject) end
---@param WorldContextObject UObject
---@return int32
function UTouristGameplayStatics:GetLocalPlayerRoomIndex(WorldContextObject) end
---@param WorldContextObject UObject
---@param PlayerIndex int32
---@return APawn
function UTouristGameplayStatics:GetLocalPlayerPawn(WorldContextObject, PlayerIndex) end
---@param WorldContextObject UObject
---@param PlayerIndex int32
---@return APlayerController
function UTouristGameplayStatics:GetLocalPlayerController(WorldContextObject, PlayerIndex) end
---@param WorldContextObject UObject
---@param PlayerIndex int32
---@return APlayerCharacter
function UTouristGameplayStatics:GetLocalPlayerCharacter(WorldContextObject, PlayerIndex) end
---@param WorldContextObject UObject
---@return AFirstPersonPlayerCharacter
function UTouristGameplayStatics:GetLocalFirstPersonPlayerCharacter(WorldContextObject) end
---@param WorldContextObject UObject
---@param PlayerIndex int32
---@return ABasePlayerCharacter
function UTouristGameplayStatics:GetLocalBasePlayerCharacter(WorldContextObject, PlayerIndex) end
---@param Level ULevel
---@return FString
function UTouristGameplayStatics:GetLevelSafeName(Level) end
---@param NamesOnly boolean
---@return TArray<FString>
function UTouristGameplayStatics:GetLevelList(NamesOnly) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:GetIsGameDownloadComplete(WorldContextObject) end
---@return int32
function UTouristGameplayStatics:GetInitialUserIndex() end
---@param WorldContextObject UObject
---@return int32
function UTouristGameplayStatics:GetHackedTextureStreamingPoolSizeLowPeak(WorldContextObject) end
---@param WorldContextObject UObject
---@return int32
function UTouristGameplayStatics:GetHackedTextureStreamingPoolSize(WorldContextObject) end
---@param WorldContextObject UObject
---@return float
function UTouristGameplayStatics:GetGPUFrameTime(WorldContextObject) end
---@param WorldContextObject UObject
---@param RoomName FString
---@param OutLocation FVector
---@return boolean
function UTouristGameplayStatics:GetGeneratedMapRoomCenterLocation(WorldContextObject, RoomName, OutLocation) end
---@param WorldContextObject UObject
---@param OutCenter FVector
---@param OutExtent FVector
---@return boolean
function UTouristGameplayStatics:GetGeneratedMapBounds(WorldContextObject, OutCenter, OutExtent) end
---@param WorldContextObject UObject
---@return UGameTransitionScreenComponent
function UTouristGameplayStatics:GetGameTransitionScreen(WorldContextObject) end
---@param WorldContextObject UObject
---@return float
function UTouristGameplayStatics:GetGameThreadFrameTime(WorldContextObject) end
---@param WorldContextObject UObject
---@param OutTags TSet<FName>
---@param bEmpty boolean
function UTouristGameplayStatics:GetGameTags(WorldContextObject, OutTags, bEmpty) end
---@param WorldContextObject UObject
---@return float
function UTouristGameplayStatics:GetGameplayTime(WorldContextObject) end
---@param Actor AActor
---@param FeatureName FName
---@param DefaultProbability float
---@return float
function UTouristGameplayStatics:GetFeatureEnabledProbability(Actor, FeatureName, DefaultProbability) end
---@param WorldContextObject UObject
---@return float
function UTouristGameplayStatics:GetEliteEnemyProbability(WorldContextObject) end
---@return FString
function UTouristGameplayStatics:GetDisplayOutputDeviceName() end
---@return float
function UTouristGameplayStatics:GetDisplayGamma() end
---@param PlayerController APlayerController
---@param OutDisabledMetaMods TArray<UMetaModifierBaseComponent>
function UTouristGameplayStatics:GetDisabledMetaModifiers(PlayerController, OutDisabledMetaMods) end
---@param WorldContextObject UObject
---@return float
function UTouristGameplayStatics:GetCurseProbability(WorldContextObject) end
---@param WorldContextObject UObject
---@return float
function UTouristGameplayStatics:GetCursedHealthProbability(WorldContextObject) end
---@param WorldContextObject UObject
---@return float
function UTouristGameplayStatics:GetCursedCurrencyProbability(WorldContextObject) end
---@param WorldContextObject UObject
---@return float
function UTouristGameplayStatics:GetCursedChestProbability(WorldContextObject) end
---@param WorldContextObject UObject
---@return ALevelGenBaseActor
function UTouristGameplayStatics:GetCurrentLevelGenActor(WorldContextObject) end
---@param WorldContextObject UObject
---@param MinLifeSpan float
---@param MaxLifeSpan float
---@param MultiplayerIncrease float
---@return float
function UTouristGameplayStatics:GetCurrencyTotalLifeSpan(WorldContextObject, MinLifeSpan, MaxLifeSpan, MultiplayerIncrease) end
---@param WorldContextObject UObject
---@return float
function UTouristGameplayStatics:GetCurrencyAdditionalLifeSpan(WorldContextObject) end
---@param WorldContextObject UObject
---@param KeyType EInventoryKeyType
---@return float
function UTouristGameplayStatics:GetConsumeKeyProbability(WorldContextObject, KeyType) end
---@param WorldContextObject UObject
---@return float
function UTouristGameplayStatics:GetConsumeConsumableProbability(WorldContextObject) end
---@param WorldContextObject UObject
---@return int32
function UTouristGameplayStatics:GetConfiguredFlexibleMemorySizeMB(WorldContextObject) end
---@param Actor AActor
---@return FString
function UTouristGameplayStatics:GetCollectibleDisplayName(Actor) end
---@param WorldContextObject UObject
---@param Location FVector
---@return APlayerCharacter
function UTouristGameplayStatics:GetClosestPlayerCharacter(WorldContextObject, Location) end
---@param WorldContextObject UObject
---@return APlayerCharacter
function UTouristGameplayStatics:GetClientPlayerCharacter(WorldContextObject) end
---@param WorldContextObject UObject
---@return FString
function UTouristGameplayStatics:GetBuildExtraInfo(WorldContextObject) end
---@param WorldContextObject UObject
---@return int32
function UTouristGameplayStatics:GetBossKillCount(WorldContextObject) end
---@param WorldContextObject UObject
---@return int32
function UTouristGameplayStatics:GetAvailableFlexibleMemorySizeMB(WorldContextObject) end
---@param WorldContextObject UObject
---@return int32
function UTouristGameplayStatics:GetAvailableDirectMemorySizeMB(WorldContextObject) end
---@param WorldContextObject UObject
---@return TArray<FPersistentThingStatistics>
function UTouristGameplayStatics:GetAllThingStats(WorldContextObject) end
---@param WorldContextObject UObject
---@param ActorClass TSubclassOf<AActor>
---@param OutDatas TArray<FLevelGenMapRoomObjectDataHandle>
function UTouristGameplayStatics:GetAllRoomObjectDatasOfActorClass(WorldContextObject, ActorClass, OutDatas) end
---@param Types TSet<EMetaModifierType>
---@param OutMetaModifiers TArray<FName>
function UTouristGameplayStatics:GetAllMetaModifiersOfTypes(Types, OutMetaModifiers) end
---@param Type EMetaModifierType
---@param OutMetaModifiers TArray<FName>
function UTouristGameplayStatics:GetAllMetaModifiersOfType(Type, OutMetaModifiers) end
---@param RoomTargetActor AActor
---@param ActorClass TSubclassOf<AActor>
---@param OutActors TArray<AActor>
function UTouristGameplayStatics:GetAllActorsOfClassInSameRoomOfTarget(RoomTargetActor, ActorClass, OutActors) end
---@param RoomContextActor AActor
---@param ActorClass TSubclassOf<AActor>
---@param OutActors TArray<AActor>
function UTouristGameplayStatics:GetAllActorsOfClassInSameRoom(RoomContextActor, ActorClass, OutActors) end
---@param ContextActor AActor
---@param ActorClass TSubclassOf<AActor>
---@param OutActors TArray<AActor>
---@param RoomIndex int32
function UTouristGameplayStatics:GetAllActorsOfClassInRoom(ContextActor, ActorClass, OutActors, RoomIndex) end
---@param WorldContextRoomObject AActor
---@param PlayerIndex int32
---@param ActorClass TSubclassOf<AActor>
---@param OutActors TArray<AActor>
function UTouristGameplayStatics:GetAllActorsOfClassInPlayerRoom(WorldContextRoomObject, PlayerIndex, ActorClass, OutActors) end
---@param Actor AActor
---@return float
function UTouristGameplayStatics:GetActorCurseProbability(Actor) end
---@param Actor AActor
---@param KeyType EInventoryKeyType
---@return float
function UTouristGameplayStatics:GetActorConsumeKeyProbability(Actor, KeyType) end
---@param Actor AActor
---@return float
function UTouristGameplayStatics:GetActorConsumeConsumableProbability(Actor) end
---@param WorldContextObject UObject
---@return UTouristArcadePlayMode
function UTouristGameplayStatics:GetActiveArcadePlayMode(WorldContextObject) end
---@param WorldContextObject UObject
---@return UTouristArcadeManager
function UTouristGameplayStatics:GetActiveArcadeManager(WorldContextObject) end
---@param WorldContextObject UObject
---@return float
function UTouristGameplayStatics:GetAccumulatedCursedCurrencyProbability(WorldContextObject) end
---@param WorldContextObject UObject
function UTouristGameplayStatics:GameplayIntroVideoStarted(WorldContextObject) end
---@param WorldContextObject UObject
function UTouristGameplayStatics:GameplayIntroVideoFinished(WorldContextObject) end
---@param WorldContextObject UObject
---@param Text FText
---@return FText
function UTouristGameplayStatics:FormatGameplayText(WorldContextObject, Text) end
---@param PlayerController APlayerController
function UTouristGameplayStatics:FlushPressedKeys(PlayerController) end
---@param WorldContextObject UObject
---@param SourceLocation FVector
---@param PreferRadius float
---@param MaxRadius float
---@param OutLocation FVector
---@return boolean
function UTouristGameplayStatics:FindNavLocation(WorldContextObject, SourceLocation, PreferRadius, MaxRadius, OutLocation) end
---@param WorldContextObject UObject
---@param pos FVector
---@param MaxDist float
---@param bIgnoreInvulnerable boolean
---@param OutActors TArray<AActor>
function UTouristGameplayStatics:FindEnemyLikeActorsInRange(WorldContextObject, pos, MaxDist, bIgnoreInvulnerable, OutActors) end
---@param PlayerCharacter APlayerCharacter
---@param Clarity float
---@return float
function UTouristGameplayStatics:FilterClarityCost(PlayerCharacter, Clarity) end
---@param WorldContextObject UObject
function UTouristGameplayStatics:EnableSceneRendering(WorldContextObject) end
---@param WorldContextObject UObject
---@param PlayerCharacter APlayerCharacter
---@param Location FVector
---@param Rotation FRotator
---@param LatentInfo FLatentActionInfo
---@param OverrideStreamingSize FVector
function UTouristGameplayStatics:EasyPlayerTeleport(WorldContextObject, PlayerCharacter, Location, Rotation, LatentInfo, OverrideStreamingSize) end
---@param WorldContextObject UObject
function UTouristGameplayStatics:DisableSceneRendering(WorldContextObject) end
---@param WorldContextObject UObject
---@return EBiome
function UTouristGameplayStatics:DetermineCurrentBiome(WorldContextObject) end
---@param WorldContextObject UObject
---@param PossiblyPooledActor AActor
function UTouristGameplayStatics:DestroyPossiblyPooledActor(WorldContextObject, PossiblyPooledActor) end
---@param Actor AActor
---@param Text FText
function UTouristGameplayStatics:DebugTextToLog(Actor, Text) end
---@param WorldContextObject UObject
function UTouristGameplayStatics:CreateResumePoint(WorldContextObject) end
---@param WorldContextObject UObject
---@param TutorialName FName
function UTouristGameplayStatics:ClearTutorialNewFlag(WorldContextObject, TutorialName) end
---@param WorldContextObject UObject
---@param ThingName FName
function UTouristGameplayStatics:ClearThingStatsNewFlag(WorldContextObject, ThingName) end
---@param WorldContextObject UObject
---@param Flag FName
---@param bClientToServer boolean
---@param bServerToClient boolean
function UTouristGameplayStatics:ClearPersistentGameplayFlag(WorldContextObject, Flag, bClientToServer, bServerToClient) end
---@param WorldContextObject UObject
---@return FResumePointCreationResult
function UTouristGameplayStatics:CanResumePointBeCreated(WorldContextObject) end
---@param WorldContextObject UObject
---@param Location FVector
---@param extent FVector
---@param IgnoreGenerationTags TSet<FName>
---@return boolean
function UTouristGameplayStatics:BoxIntersectsRoom(WorldContextObject, Location, extent, IgnoreGenerationTags) end
---@return float
function UTouristGameplayStatics:BadInteractScore() end
---@param WorldContextObject UObject
---@param RoomIndexA int32
---@param RoomIndexB int32
---@return boolean
function UTouristGameplayStatics:AreRoomsNeighbors(WorldContextObject, RoomIndexA, RoomIndexB) end
---@param SourceMeshComp UStaticMeshComponent
---@param TargetMeshComp UStaticMeshComponent
---@param TargetSize float
---@param TargetAlignment FVector
---@param bAllowInvisible boolean
---@return float
function UTouristGameplayStatics:ApplyStaticMesh(SourceMeshComp, TargetMeshComp, TargetSize, TargetAlignment, bAllowInvisible) end
---@param WorldContextObject UObject
---@param IgnorePlayer APlayerCharacter
---@return boolean
function UTouristGameplayStatics:AnyPlayersAlive(WorldContextObject, IgnorePlayer) end
---@param WorldContextObject UObject
---@return boolean
function UTouristGameplayStatics:AllPlayersAlive(WorldContextObject) end
---@param WorldContextObject UObject
---@param TargetClass TSubclassOf<UOnScreenThingPointer>
---@param TargetPoint FVector
---@param TargetActor AActor
---@return UOnScreenThingPointer
function UTouristGameplayStatics:AddOnScreenThingPointerAdvanced(WorldContextObject, TargetClass, TargetPoint, TargetActor) end


---@class UTouristGeometryUtil : UBlueprintFunctionLibrary
UTouristGeometryUtil = {}

---@param Normal FVector
---@param RelativeRotation FRotator
---@return FRotator
function UTouristGeometryUtil:SlopeAnglesFromNormalAndRot(Normal, RelativeRotation) end


---@class UTouristHardwareStats : UObject
UTouristHardwareStats = {}

function UTouristHardwareStats:StopGpuUsageTracking() end
function UTouristHardwareStats:StartGpuUsageTracking() end
---@return int32
function UTouristHardwareStats:GetVideoMemoryUsage() end
---@return int32
function UTouristHardwareStats:GetVideoMemoryTotal() end
---@return int32
function UTouristHardwareStats:GetSystemMemoryUsage() end
---@return int32
function UTouristHardwareStats:GetSystemMemoryTotal() end
---@return float
function UTouristHardwareStats:GetGpuUsage() end
---@return float
function UTouristHardwareStats:GetGpuTemperature() end
---@return float
function UTouristHardwareStats:GetGpuClockSpeed() end
---@return float
function UTouristHardwareStats:GetCpuUsage() end


---@class UTouristHelperLibrary : UBlueprintFunctionLibrary
UTouristHelperLibrary = {}

---@return FString
function UTouristHelperLibrary:WhatIsMyPublicIP() end
---@param Current FVector
---@param Target FVector
---@param DeltaTime float
---@param InterpSpeed float
---@return boolean
function UTouristHelperLibrary:VInterpToCheckChange(Current, Target, DeltaTime, InterpSpeed) end
---@param Current FVector
---@param Target FVector
---@param DeltaTime float
---@param InterpSpeed float
---@return boolean
function UTouristHelperLibrary:VInterpConstantToCheckChange(Current, Target, DeltaTime, InterpSpeed) end
---@param ForwardVector FVector
---@param OtherVector FVector
---@return FRotator
function UTouristHelperLibrary:VectorAngleDifferenceDegrees(ForwardVector, OtherVector) end
---@param TouristPlayerController ATouristPlayerController
function UTouristHelperLibrary:UpdateFirstCachedController(TouristPlayerController) end
---@param TouristPlayerController ATouristPlayerController
---@param ControllerId int32
---@param ControllerInterfaceName FString
function UTouristHelperLibrary:UpdateCachedControllers(TouristPlayerController, ControllerId, ControllerInterfaceName) end
---@param angle float
---@return float
function UTouristHelperLibrary:UnwindAngleDegrees(angle) end
---@param Key FString
---@param value FString
---@return boolean
function UTouristHelperLibrary:TryParseLaunchString(Key, value) end
---@param Actor AActor
---@return boolean
function UTouristHelperLibrary:TriggerForceLevelReload(Actor) end
---@param Input FString
---@param HideTag FString
---@param VisibleLimit int32
---@param Output FString
function UTouristHelperLibrary:TextWriterHelper(Input, HideTag, VisibleLimit, Output) end
---@param Text FText
---@param Tag FString
---@return FText
function UTouristHelperLibrary:TagTextLines(Text, Tag) end
---@param A FVector
---@param B AActor
---@return float
function UTouristHelperLibrary:SquareDistanceToActor(A, B) end
---@param A FVector
---@param B FVector
---@return float
function UTouristHelperLibrary:SquareDistance(A, B) end
---@param AnyWorldObject UObject
---@param TargetFirstPersonStartTag FName
---@param OutNewlySpawnedFirstPersonnell TArray<AFirstPersonPlayerCharacter>
---@return boolean
function UTouristHelperLibrary:SpawnAllPlayersInFirstPerson(AnyWorldObject, TargetFirstPersonStartTag, OutNewlySpawnedFirstPersonnell) end
---@param V float
---@return float
function UTouristHelperLibrary:SmoothStep(V) end
---@param Char ACharacter
---@param NewScale float
function UTouristHelperLibrary:SetRootMotionTranslationScale(Char, NewScale) end
---@param Target USkeletalMeshComponent
---@param InBoneName FName
---@param bNewSimulate boolean
---@return boolean
function UTouristHelperLibrary:SetBodySimulatePhysics(Target, InBoneName, bNewSimulate) end
---@param Target USkeletalMeshComponent
---@param InBoneName FName
---@param PhysicsBlendWeight float
---@return boolean
function UTouristHelperLibrary:SetBodyBlendWeight(Target, InBoneName, PhysicsBlendWeight) end
---@param bPaused boolean
function UTouristHelperLibrary:SetAnalyticsPaused(bPaused) end
---@param IsEnabled boolean
function UTouristHelperLibrary:SetAnalyticsEnabled(IsEnabled) end
---@param MeshComp UMeshComponent
---@param Material UMaterialInterface
function UTouristHelperLibrary:SetAllMeshMaterials(MeshComp, Material) end
---@param MenuScreen FString
function UTouristHelperLibrary:SendAnalyticsEventMenuScreen(MenuScreen) end
---@param BossName FName
---@param phase int32
function UTouristHelperLibrary:SendAnalyticsEventBossPhase(BossName, phase) end
---@param PreviousTime float
---@param WorldContextObject UObject
---@return float
function UTouristHelperLibrary:SecondsSince(PreviousTime, WorldContextObject) end
---@param Vector FVector
---@param Transform FTransform
---@param scale FVector
---@return FVector
function UTouristHelperLibrary:ScaleVectorInLocalSpace(Vector, Transform, scale) end
---@param AnyWorldObject UObject
---@param OutPawnsPlayersReturnedTo TArray<APawn>
---@return boolean
function UTouristHelperLibrary:ReturnAllPlayersFromFirstPerson(AnyWorldObject, OutPawnsPlayersReturnedTo) end
function UTouristHelperLibrary:ResumeBatchingFast() end
---@param Actor AAIController
---@return boolean
function UTouristHelperLibrary:RequestFaceEnemyPerceptionTarget(Actor) end
---@param Enemy AActor
---@param MainPlayer AActor
---@param MaxAngleBetween float
---@param BlendWeight float
---@return FVector
function UTouristHelperLibrary:RequestFaceBothPlayers(Enemy, MainPlayer, MaxAngleBetween, BlendWeight) end
function UTouristHelperLibrary:ReOpenPipelineCacheFile() end
---@param Actor AActor
function UTouristHelperLibrary:RemoveObjectFromRoomEnemyCount(Actor) end
---@return int32
function UTouristHelperLibrary:NumPrecompilesRemaining() end
---@param DamageData FMeleeDamage
---@return FTouristDamageDescriptor
function UTouristHelperLibrary:MakeDamageDescriptorFromMeleeDamage(DamageData) end
---@param ViewProjectionMatrix FMatrix
---@param WorldLocation FVector
---@param ProjectionPosition FVector2D
---@return boolean
function UTouristHelperLibrary:LocationToProjectionWithMatrix(ViewProjectionMatrix, WorldLocation, ProjectionPosition) end
---@param Player APlayerController
---@param WorldLocation FVector
---@param ProjectionPosition FVector2D
---@return boolean
function UTouristHelperLibrary:LocationToProjection(Player, WorldLocation, ProjectionPosition) end
---@param WorldContextObject UObject
---@param LevelName FString
---@param Location FVector
---@param Rotation FRotator
---@param UniqueIdx int32
---@param bOutSuccess boolean
---@return ULevelStreamingDynamic
function UTouristHelperLibrary:LoadLevelInstanceHacked(WorldContextObject, LevelName, Location, Rotation, UniqueIdx, bOutSuccess) end
---@param Text FText
---@return boolean
function UTouristHelperLibrary:IsWideIcon(Text) end
---@return boolean
function UTouristHelperLibrary:IsUnsupportedGPU() end
---@param AnyWorldObject UObject
---@return boolean
function UTouristHelperLibrary:IsRunningEditor(AnyWorldObject) end
---@return boolean
function UTouristHelperLibrary:IsPublicIPReady() end
---@return boolean
function UTouristHelperLibrary:IsPrecompilationRequired() end
---@param WorldContextObj UObject
---@param Point FVector
---@param VolumeClass TSubclassOf<AVolume>
---@return boolean
function UTouristHelperLibrary:IsPointInVolume(WorldContextObj, Point, VolumeClass) end
---@param WorldContextObject UObject
---@param PlayerCharacter APlayerCharacter
---@param Attribute FName
---@return boolean
function UTouristHelperLibrary:IsPlayerInRoomWithAttribute(WorldContextObject, PlayerCharacter, Attribute) end
---@param PlayerState APlayerState
---@return boolean
function UTouristHelperLibrary:IsPlayerInactive(PlayerState) end
---@return boolean
function UTouristHelperLibrary:IsOnWindows() end
---@param FocusEvent FFocusEvent
---@return boolean
function UTouristHelperLibrary:IsNavigationCause(FocusEvent) end
---@param PointerEvent FPointerEvent
---@param InputAction FName
---@return boolean
function UTouristHelperLibrary:IsMouseBoundForInputAction(PointerEvent, InputAction) end
---@param ViewProjectionMatrix FMatrix
---@param WorldLocation FVector
---@return boolean
function UTouristHelperLibrary:IsLocationOnScreenWithMatrix(ViewProjectionMatrix, WorldLocation) end
---@param Player APlayerController
---@param WorldLocation FVector
---@return boolean
function UTouristHelperLibrary:IsLocationOnScreen(Player, WorldLocation) end
---@param Text FText
---@return boolean
function UTouristHelperLibrary:IsKeyboardIcon(Text) end
---@return boolean
function UTouristHelperLibrary:IsIntegratedGPU() end
---@param InputAction FName
---@param WorldContextObj UObject
---@return boolean
function UTouristHelperLibrary:IsInputActionDown(InputAction, WorldContextObj) end
---@param WorldContextObject UObject
---@return boolean
function UTouristHelperLibrary:IsInPauseMenu(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristHelperLibrary:IsInGameMenu(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristHelperLibrary:IsControllerSpeakerAvailable(WorldContextObject) end
---@param A FVector
---@param B FVector
---@param Distance float
---@return boolean
function UTouristHelperLibrary:IsCloserThan2D(A, B, Distance) end
---@param A FVector
---@param B FVector
---@param Distance float
---@return boolean
function UTouristHelperLibrary:IsCloserThan(A, B, Distance) end
---@param Target TSubclassOf<AActor>
---@return boolean
function UTouristHelperLibrary:IsClassReplicatedByDefault(Target) end
---@param KeyEvent FKeyEvent
---@param InputAction FName
---@return boolean
function UTouristHelperLibrary:IsBoundForInputAction(KeyEvent, InputAction) end
---@return boolean
function UTouristHelperLibrary:IsBelowMinimumSpecificationHardware() end
---@param TargetArray TArray<int32>
---@return boolean
function UTouristHelperLibrary:IsArrayEmpty(TargetArray) end
---@return boolean
function UTouristHelperLibrary:IsApplicableToPC() end
---@param Actor AActor
---@return boolean
function UTouristHelperLibrary:IsActorPartOfDestinationBootlayer(Actor) end
---@param duration int64
---@return FString
function UTouristHelperLibrary:Integer64ToString(duration) end
---@param WorldContextObject UObject
---@param RoomIndex int32
---@param Tag FName
---@return boolean
function UTouristHelperLibrary:HasRoomGenerationTagByIndex(WorldContextObject, RoomIndex, Tag) end
---@param WorldContextObject UObject
---@param RoomIndex int32
---@param Tags TSet<FName>
---@return boolean
function UTouristHelperLibrary:HasRoomGenerationTagAnyByIndex(WorldContextObject, RoomIndex, Tags) end
---@param WorldContextObject UObject
---@param RoomIndex int32
---@param AttributeName FName
---@param AttibuteValue FString
---@return boolean
function UTouristHelperLibrary:HasRoomAttributeValueByIndex(WorldContextObject, RoomIndex, AttributeName, AttibuteValue) end
---@param WorldContextObject UObject
---@param RoomIndex int32
---@param AttributeName FName
---@return boolean
function UTouristHelperLibrary:HasRoomAttributeByIndex(WorldContextObject, RoomIndex, AttributeName) end
---@param Player APlayerController
---@return FMatrix
function UTouristHelperLibrary:GetViewProjectionMatrix(Player) end
---@return UTouristRHISettings
function UTouristHelperLibrary:GetTouristRHISettings() end
---@param AnyWorldObject UObject
---@return ATouristGameState
function UTouristHelperLibrary:GetTouristGameState(AnyWorldObject) end
---@param WorldContextObject UObject
---@return UTouristGameInstance
function UTouristHelperLibrary:GetTouristGameInstance(WorldContextObject) end
---@param LocalDirection FVector
---@param DirectionSubdivisions uint8
---@return int32
function UTouristHelperLibrary:GetSubdividedLocalDamageDirectionIndex(LocalDirection, DirectionSubdivisions) end
---@param DamagedActor AActor
---@param DamageDirection FVector
---@param DirectionSubdivisions uint8
---@return int32
function UTouristHelperLibrary:GetSubdividedDamageDirectionIndex(DamagedActor, DamageDirection, DirectionSubdivisions) end
---@param WorldContextObject UObject
---@param bOnlyUnloaded boolean
---@param bOnlyVisibleInEditor boolean
---@param bOnlyPackageNameToLoad boolean
---@return TArray<FName>
function UTouristHelperLibrary:GetStreamableLevels(WorldContextObject, bOnlyUnloaded, bOnlyVisibleInEditor, bOnlyPackageNameToLoad) end
---@param WorldContextObject UObject
---@param RoomIndex int32
---@return FName
function UTouristHelperLibrary:GetRoomNameByIndex(WorldContextObject, RoomIndex) end
---@param WorldContextObject UObject
---@param RoomId int32
---@return TMap<FName, FString>
function UTouristHelperLibrary:GetRoomAttributesByIndex(WorldContextObject, RoomId) end
---@param Player APlayerCharacter
---@param Point FVector
---@param bCheckIn2D boolean
---@return FVector
function UTouristHelperLibrary:GetRelativeDirToPlayerCamera(Player, Point, bCheckIn2D) end
---@param Range FMinMaxFloat
---@return float
function UTouristHelperLibrary:GetRandom(Range) end
---@param AnyWorldObject UObject
---@return UProgressManager
function UTouristHelperLibrary:GetProgressManager(AnyWorldObject) end
---@return int32
function UTouristHelperLibrary:GetPipelineStateMissCount() end
---@return float
function UTouristHelperLibrary:GetPipelineStateHitPercentage() end
---@return int32
function UTouristHelperLibrary:GetPipelineStateCount() end
---@return int32
function UTouristHelperLibrary:GetPipelineLibraryFailureCount() end
---@param Target AActor
---@param TypeFilter TSubclassOf<AActor>
---@param OutActors TArray<AActor>
function UTouristHelperLibrary:GetOtherActorsInSameLevel(Target, TypeFilter, OutActors) end
---@param Object UObject
---@return FName
function UTouristHelperLibrary:GetObjectClassName(Object) end
---@param WorldContextObj UObject
---@param Location FVector
---@param OutNearestPlayer APlayerCharacter
---@param OutDistanceSqr float
function UTouristHelperLibrary:GetNearestPlayerAndDistanceSqr(WorldContextObj, Location, OutNearestPlayer, OutDistanceSqr) end
---@param WorldContextObj UObject
---@param Location FVector
---@return APlayerCharacter
function UTouristHelperLibrary:GetNearestPlayer(WorldContextObj, Location) end
---@param IconType EMiscIcons
---@return FText
function UTouristHelperLibrary:GetMiscIcon(IconType) end
---@param Target AActor
---@return ENetRole
function UTouristHelperLibrary:GetLocalRole(Target) end
---@param WorldContextObj UObject
---@return APlayerCharacter
function UTouristHelperLibrary:GetLocalPlayerCharacter(WorldContextObj) end
---@param Actor AActor
---@param RoomIndex int32
---@return ALevelGenRoomStreamingActor
function UTouristHelperLibrary:GetLevelGenRoomStreamingActorByRoomIndex(Actor, RoomIndex) end
---@param Actor AActor
---@return ALevelGenRoomStreamingActor
function UTouristHelperLibrary:GetLevelGenRoomStreamingActor(Actor) end
---@param WorldContextObject UObject
---@return FLevelGenParameters
function UTouristHelperLibrary:GetLevelGenParameters(WorldContextObject) end
---@param TouristPlayerController ATouristPlayerController
---@return EControllerVendor
function UTouristHelperLibrary:GetLastUsedControllerType(TouristPlayerController) end
---@param Key FKey
---@param IsController boolean
---@param IsPlaystationController boolean
---@param ControllerVendor EControllerVendor
---@return FText
function UTouristHelperLibrary:GetKeyIconTextOfType(Key, IsController, IsPlaystationController, ControllerVendor) end
---@param Key FKey
---@return FText
function UTouristHelperLibrary:GetKeyIconText(Key) end
---@param Key FKey
---@return FName
function UTouristHelperLibrary:GetKeyFName(Key) end
---@param AxisName FName
---@param scale float
---@param IsController boolean
---@param IsPlaystationController boolean
---@param ControllerVendor EControllerVendor
---@return FText
function UTouristHelperLibrary:GetInputAxisIconTextOfTypeAdvanced(AxisName, scale, IsController, IsPlaystationController, ControllerVendor) end
---@param AxisName FName
---@param IsController boolean
---@param IsPlaystationController boolean
---@param ControllerVendor EControllerVendor
---@return FText
function UTouristHelperLibrary:GetInputAxisIconTextOfType(AxisName, IsController, IsPlaystationController, ControllerVendor) end
---@param AxisName FName
---@return FText
function UTouristHelperLibrary:GetInputAxisIconText(AxisName) end
---@param ActionName FName
---@param IsController boolean
---@param IsPlaystationController boolean
---@param ControllerVendor EControllerVendor
---@return FText
function UTouristHelperLibrary:GetInputActionIconTextOfType(ActionName, IsController, IsPlaystationController, ControllerVendor) end
---@param ActionName FName
---@return FText
function UTouristHelperLibrary:GetInputActionIconText(ActionName) end
---@return int32
function UTouristHelperLibrary:GetGraphicsPipelineStateMissCount() end
---@return EGamePlatform
function UTouristHelperLibrary:GetGamePlatform() end
---@return int32
function UTouristHelperLibrary:GetFullRandomInt() end
---@param Source FRuntimeFloatCurve
---@param Time float
---@return float
function UTouristHelperLibrary:GetFloatValue(Source, Time) end
---@param PerceprionComponent UAIPerceptionComponent
---@return ATouristCharacter
function UTouristHelperLibrary:GetEnemyPerceptionTargetAsTouristCharacter(PerceprionComponent) end
---@param Actor AActor
---@return UTouristEnemyPerceptionComponent
function UTouristHelperLibrary:GetEnemyPerceptionComponentFromActor(Actor) end
---@param Player APlayerCharacter
---@param Point FVector
---@param bCheckIn2D boolean
---@return float
function UTouristHelperLibrary:GetDotToPlayerCamera(Player, Point, bCheckIn2D) end
---@param WorldContextObj UObject
---@param RoomIndex int32
---@param OutDoors TArray<ADoor>
function UTouristHelperLibrary:GetDoorsFromRoomIndex(WorldContextObj, RoomIndex, OutDoors) end
---@return float
function UTouristHelperLibrary:GetDefaultShadowDistance() end
---@param WorldContextObject UObject
---@return ULevelGenMapIngame
function UTouristHelperLibrary:GetCurrentBiomeMap(WorldContextObject) end
---@return EControllerVendor
function UTouristHelperLibrary:GetControllerType() end
---@return TArray<FGuid>
function UTouristHelperLibrary:GetControllerGUIDs() end
---@return int32
function UTouristHelperLibrary:GetComputePipelineStateMissCount() end
---@param ProfileName FName
---@param Channel ECollisionChannel
---@return ECollisionResponse
function UTouristHelperLibrary:GetCollisionResponseToChannelFromProfile(ProfileName, Channel) end
---@param WorldContextObject UObject
---@return UCollectibleManager
function UTouristHelperLibrary:GetCollectibleManager(WorldContextObject) end
---@param ClassName FString
---@param bLoadIfNotLoaded boolean
---@return UClass
function UTouristHelperLibrary:GetClassByName(ClassName, bLoadIfNotLoaded) end
---@param FocusEvent FFocusEvent
---@return EFocusCause
function UTouristHelperLibrary:GetCause(FocusEvent) end
---@param AnyWorldObject UObject
---@return UBiomeManager
function UTouristHelperLibrary:GetBiomeManager(AnyWorldObject) end
---@param WorldContextObject UObject
---@param bOnlyAlive boolean
---@param inArray TArray<APlayerCharacter>
function UTouristHelperLibrary:GetAllPlayersCharacter(WorldContextObject, bOnlyAlive, inArray) end
---@param BaseClass UClass
---@param OutClasses TArray<UClass>
function UTouristHelperLibrary:GetAllBlueprintClassesWithBaseClass(BaseClass, OutClasses) end
---@param AssetClass UClass
---@param Skeleton UObject
---@param OutSequences TArray<UAnimSequence>
function UTouristHelperLibrary:GetAllAnimationSequencesReferencedByAsset(AssetClass, Skeleton, OutSequences) end
---@param Actor AActor
---@return FBox
function UTouristHelperLibrary:GetActorMeshBoundsInLocalSpace(Actor) end
---@param Actor AActor
---@return FName
function UTouristHelperLibrary:GetActorLevelName(Actor) end
---@param Map ULevelGenMapIngame
---@param ActorType TSubclassOf<AActor>
---@return int32
function UTouristHelperLibrary:GetActorCountInAngenMap(Map, ActorType) end
---@param WorldContextObject UObject
---@param Text FText
---@param ActionTypes TMap<EInputActionType, FText>
---@param bIsController boolean
---@param bIsPlaystationController boolean
---@param ControllerVendor EControllerVendor
---@return FText
function UTouristHelperLibrary:FormatInputActionTutorial_Manual(WorldContextObject, Text, ActionTypes, bIsController, bIsPlaystationController, ControllerVendor) end
---@param WorldContextObject UObject
---@param Text FText
---@param ActionTypes TMap<EInputActionType, FText>
---@return FText
function UTouristHelperLibrary:FormatInputActionTutorial(WorldContextObject, Text, ActionTypes) end
---@param WorldContextObject UObject
---@param Text FText
---@param bIsController boolean
---@param bIsPlaystationController boolean
---@param ControllerVendor EControllerVendor
---@return FText
function UTouristHelperLibrary:FormatInputActionPC_Manual(WorldContextObject, Text, bIsController, bIsPlaystationController, ControllerVendor) end
---@param WorldContextObject UObject
---@param Text FText
---@return FText
function UTouristHelperLibrary:FormatInputActionPC(WorldContextObject, Text) end
---@param Text FText
---@return FText
function UTouristHelperLibrary:FormatInputAction(Text) end
---@param duration int64
---@return FString
function UTouristHelperLibrary:FormatDuration(duration) end
---@param Current float
---@param Target float
---@param DeltaTime float
---@param InterpSpeed float
---@return boolean
function UTouristHelperLibrary:FInterpToCheckChange(Current, Target, DeltaTime, InterpSpeed) end
---@param Current float
---@param Target float
---@param DeltaTime float
---@param InterpSpeed float
---@return boolean
function UTouristHelperLibrary:FInterpConstantToCheckChange(Current, Target, DeltaTime, InterpSpeed) end
---@param Current float
---@param Target float
---@param DeltaTime float
---@param InterpSpeed float
---@param bClockWise boolean
---@return float
function UTouristHelperLibrary:FInterpAngleWithWay(Current, Target, DeltaTime, InterpSpeed, bClockWise) end
---@param WorldContextObj UObject
---@param Point FVector
---@param Player FVector
---@return FVector
function UTouristHelperLibrary:FindFurthestPositionOverGroundBetweenPointAndPlayer(WorldContextObj, Point, Player) end
---@param A1 float
---@param A2 float
---@return float
function UTouristHelperLibrary:FindDeltaAngleDegrees(A1, A2) end
function UTouristHelperLibrary:FetchPublicIP() end
---@return boolean
function UTouristHelperLibrary:DoesPCAllowShaderCompilation() end
---@param ParentWidget UUserWidget
---@param Class TSubclassOf<UWidget>
---@return UWidget
function UTouristHelperLibrary:CreateUWidget(ParentWidget, Class) end
---@param Class TSubclassOf<UActorComponent>
---@param Outer AActor
---@return UActorComponent
function UTouristHelperLibrary:CreateComponentFromClass(Class, Outer) end
---@param Key FKey
---@return FKey
function UTouristHelperLibrary:ConvertActionKeyToTriggerAxis(Key) end
---@param Outer UObject
---@param SrcComponent UActorComponent
---@param NewName FName
---@return UActorComponent
function UTouristHelperLibrary:CloneComponent(Outer, SrcComponent, NewName) end
---@param SrcActor AActor
---@param NewName FName
---@param CloneAttachedActors boolean
---@return AActor
function UTouristHelperLibrary:CloneActor(SrcActor, NewName, CloneAttachedActors) end
---@param Condition boolean
---@param ErrorMessage FString
function UTouristHelperLibrary:CheckSoft(Condition, ErrorMessage) end
function UTouristHelperLibrary:CancelPendingNetGames() end
---@param MyStartLocation FVector
---@param MySpeed float
---@param TargetStartLocation FVector
---@param TargetVelocity FVector
---@return FVector
function UTouristHelperLibrary:CalculateInterceptionTarget3D(MyStartLocation, MySpeed, TargetStartLocation, TargetVelocity) end
---@param Attacker ACharacter
---@param TargetLocation FVector
---@param TargetVelocity FVector
---@param LocalSpaceLeadMultiplier FVector
---@param bAllowBackwardsLead boolean
---@return FVector
function UTouristHelperLibrary:CalculateAttackLeadToLocation(Attacker, TargetLocation, TargetVelocity, LocalSpaceLeadMultiplier, bAllowBackwardsLead) end
---@param Attacker ACharacter
---@param Target ACharacter
---@param LocalSpaceLeadMultiplier FVector
---@param bAllowBackwardsLead boolean
---@return FVector
function UTouristHelperLibrary:CalculateAttackLead(Attacker, Target, LocalSpaceLeadMultiplier, bAllowBackwardsLead) end
---@param Name FName
---@param Source AActor
---@param Params TArray<FTouristBlueprintAnalyticsEventAttribute>
function UTouristHelperLibrary:BP_SendAnalyticsEvent(Name, Source, Params) end
---@param Actor AActor
function UTouristHelperLibrary:AddObjectToRoomEnemyCount(Actor) end
---@param Class TSubclassOf<UActorComponent>
---@param TargetActor AActor
---@return UActorComponent
function UTouristHelperLibrary:AddInstanceComponentFromClass(Class, TargetActor) end


---@class UTouristInfluxDatabase : UObject
UTouristInfluxDatabase = {}


---@class UTouristListViewEntry : UTouristWidgetBase
UTouristListViewEntry = {}


---@class UTouristMovementComponent : UCharacterMovementComponent
---@field SpeedModifier int32
UTouristMovementComponent = {}

---@param Multiplier float
function UTouristMovementComponent:ScaleMovementSpeed(Multiplier) end
---@param InVelocity FVector
function UTouristMovementComponent:ApplyDirectMovementVelocity(InVelocity) end


---@class UTouristMultiplayerStatics : UBlueprintFunctionLibrary
UTouristMultiplayerStatics = {}

---@param WorldContextObject UObject
---@param ActorClass TSubclassOf<AActor>
---@param SpawnTransform FTransform
---@param CollisionHandlingOverride ESpawnActorCollisionHandlingMethod
---@param Owner AActor
---@param Instigator APawn
---@param MaterializerComponentClass TSubclassOf<UActorComponent>
---@param bPooled boolean
---@param bShouldFlyOut boolean
---@param bCollectDuringFlyOut boolean
---@param bAutoSuckAfterFlyOut boolean
---@param FlyOutMaxDistance float
function UTouristMultiplayerStatics:SpawnActorForClients(WorldContextObject, ActorClass, SpawnTransform, CollisionHandlingOverride, Owner, Instigator, MaterializerComponentClass, bPooled, bShouldFlyOut, bCollectDuringFlyOut, bAutoSuckAfterFlyOut, FlyOutMaxDistance) end
---@param WorldContextObject UObject
---@return boolean
function UTouristMultiplayerStatics:IsMultiplayerEnabled(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristMultiplayerStatics:IsMultiplayerClient(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristMultiplayerStatics:IsMultiplayer(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristMultiplayerStatics:IsJoiningOnlineSession(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristMultiplayerStatics:IsHostingMultiplayer(WorldContextObject) end
---@param WorldContextObject UObject
---@return boolean
function UTouristMultiplayerStatics:HasMultiplayerConnection(WorldContextObject) end
---@param WorldContextObject UObject
---@return float
function UTouristMultiplayerStatics:GetSaturation(WorldContextObject) end
---@param WorldContextObject UObject
---@return int32
function UTouristMultiplayerStatics:GetRemoteTotalActorCount(WorldContextObject) end
---@param WorldContextObject UObject
---@return int32
function UTouristMultiplayerStatics:GetRemoteRelevantActorCount(WorldContextObject) end
---@param WorldContextObject UObject
---@return UNetConnection
function UTouristMultiplayerStatics:GetRemoteNetConnection(WorldContextObject) end
---@param WorldContextObject UObject
---@param In boolean
---@return float
function UTouristMultiplayerStatics:GetRate(WorldContextObject, In) end
---@param WorldContextObject UObject
---@return float
function UTouristMultiplayerStatics:GetPing(WorldContextObject) end
---@param WorldContextObject UObject
---@param bOnlyActive boolean
---@return int32
function UTouristMultiplayerStatics:GetNetworkActorCount(WorldContextObject, bOnlyActive) end
---@param WorldContextObject UObject
---@param In boolean
---@return float
function UTouristMultiplayerStatics:GetLoss(WorldContextObject, In) end
---@param WorldContextObject UObject
---@return TArray<ATouristPlayerState>
function UTouristMultiplayerStatics:GetActivePlayerStates(WorldContextObject) end


---@class UTouristNavArea : UNavArea
---@field TouristAreaFlags TSet<ETouristNavAreaFlags>
UTouristNavArea = {}

---@param Flags ETouristNavAreaFlags
---@return boolean
function UTouristNavArea:HasFlags(Flags) end
---@return ETouristNavAreaFlags
function UTouristNavArea:GetTouristAreaFlags() end


---@class UTouristNavigationUtil : UBlueprintFunctionLibrary
UTouristNavigationUtil = {}

---@param Node FTouristPathNode
---@param Flags ETouristNavAreaFlags
---@return boolean
function UTouristNavigationUtil:PathNodeHasFlags(Node, Flags) end


---@class UTouristOnlineSessionClient : UOnlineSession
UTouristOnlineSessionClient = {}


---@class UTouristPerformanceOverlay : UObject
UTouristPerformanceOverlay = {}

function UTouristPerformanceOverlay:DrawOverlay() end


---@class UTouristPersistentDataComponent : UActorComponent
UTouristPersistentDataComponent = {}


---@class UTouristProjectSettings : UDeveloperSettings
---@field bGodMode boolean
---@field bDemigodMode boolean
---@field bDuoDemigodMode boolean
---@field bAllResources boolean
---@field bSkipCutscenes boolean
---@field bDisableIntroCinematics boolean
---@field DefaultLoadout TSubclassOf<UPrimaryDataAsset>
---@field BootMenuType EBootMenuType
---@field AutoBootMode EProjectBootMode
---@field AutoBootBiome EBiome
---@field AutoBootRoom TSoftObjectPtr<UWorld>
---@field SecondAutoBootRoom TSoftObjectPtr<UWorld>
---@field AutoBootChallengeTier int32
---@field PlayerMetaModifiersToAutoAttach TArray<FName>
---@field bOverrideChallengeGeneration boolean
---@field ChallengeForcedBiome EBiome
---@field ChallengeForcedPositionModifiers TArray<FName>
---@field ChallengeForcedNegativeModifiers TArray<FName>
---@field ChallengeForcedLoadout FSocialChallengeGeneratedLoadoutState
---@field InputMode EMouseInputMode
---@field IsApplicableToPC EEditorMode
---@field bAllEnemySpawnsBlocked boolean
UTouristProjectSettings = {}



---@class UTouristRHISettings : UObject
UTouristRHISettings = {}

---@param RHI ERHIValues
function UTouristRHISettings:SetDefaultGraphicsRHI(RHI) end
---@return boolean
function UTouristRHISettings:IsDefaultRHIDirty() end
---@return ERHIValues
function UTouristRHISettings:GetDefaultGraphicsRHI() end
---@return ERHIValues
function UTouristRHISettings:GetActiveGraphicsRHI() end


---@class UTouristSaveGame : UHMQSaveGame
---@field OnSaveGameModified FTouristSaveGameOnSaveGameModified
---@field OnSaveGameReset FTouristSaveGameOnSaveGameReset
---@field OnFlagChanged FTouristSaveGameOnFlagChanged
---@field OnThingStatsChanged FTouristSaveGameOnThingStatsChanged
---@field HasPerformedSystemValidation boolean
---@field bStartOnline boolean
---@field DamageNumbers boolean
---@field ToggleAltFire boolean
---@field bDisallowAltFireModeIfCantFire boolean
---@field AimInputXDir float
---@field AimInputYDir float
---@field AimInputXSensitivity float
---@field AimInputYSensitivity float
---@field LookInputXSensitivity float
---@field LookInputYSensitivity float
---@field LeftDeadzoneLimit float
---@field LeftOuterDeadzoneLimit float
---@field RightDeadzoneLimit float
---@field RightOuterDeadzoneLimit float
---@field LookAxisHelper float
---@field AimAxisHelper float
---@field AimAssistStrengthType ESettingStrengthType
---@field LockOnType ELockOnType
---@field MinimapViewType EMinimapViewType
---@field MinimapDistance float
---@field FOVModifier int32
---@field CameraShakeModifier float
---@field DisplayGamma float
---@field DisplaySDR float
---@field bInitialDisplayGammaDone boolean
---@field bInitialGameToPlayerConsentDone boolean
---@field bTestAgreementDone boolean
---@field bInitialSettingsDone boolean
---@field bGameResumeHelpDone boolean
---@field bGraphicSettingsDone boolean
---@field bPrecompilationDone boolean
---@field bGameDataDone boolean
---@field bDualsenseDone boolean
---@field bPsnDone boolean
---@field VolumeMaster float
---@field VolumePartyChat float
---@field VolumeEffects float
---@field VolumeMusic float
---@field VolumeVO float
---@field VolumeController float
---@field VolumeHaptics float
---@field MonoMix boolean
---@field BassTuning int32
---@field TrebleTuning int32
---@field DynamicRange int32
---@field PlaybackVolume int32
---@field EnvironmentVolume int32
---@field MidnightMode boolean
---@field FocusDialogue int32
---@field FocusPartyChat int32
---@field FocusSFX int32
---@field AudioOutputIndex int32
---@field AudioOutput EAudioOutputValues
---@field AudioSettingEventNames FAudioSettingsEventNames
---@field AudioLanguageCode FString
---@field bRumbleEnabled boolean
---@field bSticksSwapped boolean
---@field bControllerRotated boolean
---@field bTriggersSwapped boolean
---@field bInteractPress boolean
---@field SprintInputType ESprintInputType
---@field RiskyInteract EInteractType
---@field bTutorialsEnabled boolean
---@field bSubtitlesEnabled boolean
---@field bClosedCaptionsEnabled boolean
---@field SubtitlesMode FString
---@field bHearingImpairedMode boolean
---@field SubtitlesSize int32
---@field SubtitlesColour int32
---@field SpeakerColour int32
---@field SpeakerNameEnabled boolean
---@field BackgroundOpacity int32
---@field ControllerSchemaIndex int32
---@field KeyboardSchemaIndex int32
---@field KeyboardBaseIndex int32
---@field InputActions TArray<FHMQInputAction>
---@field InputAxes TArray<FHMQInputAxis>
---@field CustomKeyboardPreset FKeyMappingPresets
---@field bAltFireInTrigger boolean
---@field bGamepadAltFireInTrigger boolean
---@field PlayerDeathLocations TArray<FPlayerDeathLocation>
---@field InventoryData FInventorySaveData
---@field GameState FPersistentGameState
---@field InitialInventoryData FInventorySaveData
---@field InitialGameState FPersistentGameState
---@field Stats FPersistentStatistics
---@field SocialPlayerState FSocialPlayerState
---@field ActivitiesData FActivitiesData
---@field TimeslessTowerData FTimelessTowerData
---@field MultiplayerData FMultiplayerPersistentData
---@field StartMachineCounterNEW float
---@field StartMachinePreviousCounterNEW float
---@field StartMachineIndex int32
---@field CurrentColorBlindness int32
---@field bCorrectColorDefficiency boolean
---@field CurrentColorBlindnessStrength float
---@field CollectibleColourTone int32
---@field UIColorPreset int32
---@field UIHidableElements FSettingHideUIElements
---@field ShowWindowsPerformance FSettingShowWindowsPerformance
---@field WindowsPerformanceFontSize int32
---@field bDynamicHUD boolean
---@field bBloomDisabled boolean
---@field BloomOnBootCached int32
---@field bMotionBlurDisabled boolean
---@field MotionBlurOnBootCached int32
---@field bUIVFXDisabled boolean
---@field CrosshairLineThickness int32
---@field CrosshairScale int32
---@field PlayerSuitType ESuitType
---@field bFirstSuitUIEnter boolean
---@field bFirstShipUIEnter boolean
---@field bFirstChallengeScreenUIEnter boolean
---@field CachedServerConfig FString
---@field EnableHDROnStart boolean
---@field RecommendQualityPreset boolean
---@field AutochangeControllerPreset boolean
---@field ShowControllerWarning boolean
---@field QualityPreset EQualityPreset
---@field DefaultQualityPreset EQualityPreset
---@field DefaultScreenOptimisation EScreenOptimisation
---@field DefaultResolutionScale float
---@field CustomPreset FGraphicsPreset
---@field bVSyncEnabled boolean
---@field bRaytracedReflectionsEnabled boolean
---@field bRaytracedAudioEnabled boolean
---@field bRaytracedShadowsEnabled boolean
---@field RayTracedShadowQuality int32
---@field RayTracedReflectionQuality int32
---@field bScreenSpaceReflectionEnabled boolean
---@field FramesPerSecLimit float
---@field DLSS EDLSSMode
---@field DLSSSharpness float
---@field bDLSSFrameGen boolean
---@field Reflex EReflexMode
---@field XeSS EXeSSMode
---@field FSR EFSRMode
---@field NIS ENISMode
---@field Contrast float
---@field UIContrast float
---@field VRSMode EVRSMode
---@field ScreenOptimisation EScreenOptimisation
---@field bFirstRayTracingScreenOptimisationNudge boolean
---@field UltrawideVideoSettings EUltrawideVideoSettings
---@field UltrawideCinematicVideoSettings EUltrawideVideoSettings
---@field UltrawideHUDSettings EUltrawideHUDSettings
---@field PerformanceHUDSettings EUltrawideHUDSettings
---@field FilmGrainSettings float
---@field AltFireIndicatorSettings boolean
---@field EmissiveIntensity float
---@field CursorStyleKBM EMouseCursorStyle
---@field bIsControllerUsed boolean
---@field bIsPlaystationControllerUsed boolean
---@field ControllerVendor EControllerVendor
---@field MouseInputXDir float
---@field MouseInputYDir float
---@field MouseSensitivity float
---@field ADSMouseSensitivity float
---@field MouseSize float
---@field CurrentMonitorID FString
---@field CurrentWindowMode ETouristWindowedMode
---@field CurrentAspectRatioIndex int32
---@field CurrentResolution FIntPoint
---@field HorizontalSafeZonePadding float
---@field VerticalSafeZonePadding float
---@field UIAspectRatioPadding float
---@field RenderAspectRatioPadding float
---@field PerformanceAspectRatioPadding float
---@field GameDataCategory EGameDataCategory
---@field bHDREnabled boolean
---@field AudioRegion ESKURegion
---@field DynResMinScaling float
---@field AchievementsCompletion TMap<FName, boolean>
---@field HiddenAchievementsCompletion TMap<FName, boolean>
---@field WeaponTraitsProgress TArray<FCachedWeaponData>
---@field SeenActivities TArray<FName>
---@field SeenTrophies TArray<FName>
---@field bIsMouseMovementHandlerEnabled boolean
---@field PauseOnFocusLost boolean
---@field BenchmarkResults boolean
---@field BenchmarkGPU float
---@field BenchmarkCPU float
---@field BenchmarkFPS float
---@field ResolutionQualityNormalized float
---@field DepthOfField int32
---@field bScreenReader boolean
---@field IsCheckpointActive boolean
---@field GameLanguage FString
---@field PSNLinkData FPSNLinkData
---@field PoppiesCollected int32
---@field ControllerChanged FTouristSaveGameControllerChanged
---@field ViewportResized FTouristSaveGameViewportResized
UTouristSaveGame = {}

---@param NewData FInventoryWeaponTraitData
---@param Player APlayerCharacter
function UTouristSaveGame:UpdateWeaponTraitData(NewData, Player) end
function UTouristSaveGame:UpdateHudControllerSettings() end
function UTouristSaveGame:UpdateControllerRebindings() end
---@param WorldContextObject UObject
function UTouristSaveGame:TransmitInputType(WorldContextObject) end
---@param NewValue EXeSSMode
function UTouristSaveGame:SetXeSS(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetWindowsPerformanceFontSize(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetVSyncEnabled(NewValue) end
---@param NewValue EVRSMode
function UTouristSaveGame:SetVrsMode(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetVolumeVO(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetVolumePartyChat(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetVolumeMusic(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetVolumeMaster(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetVolumeHaptics(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetVolumeEffects(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetVolumeController(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetVerticalSafeZonePadding(NewValue) end
---@param NewValue EUltrawideVideoSettings
function UTouristSaveGame:SetUltrawideVideoSettings(NewValue) end
---@param NewValue EUltrawideHUDSettings
function UTouristSaveGame:SetUltrawideHUDSettings(NewValue) end
---@param NewValue EUltrawideVideoSettings
function UTouristSaveGame:SetUltrawideCinematicVideoSettings(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetUIVFXDisabled(NewValue) end
---@param NewValue FSettingHideUIElements
function UTouristSaveGame:SetUIHidableElements(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetUIContrast(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetUIColorPreset(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetUIAspectRatioPadding(NewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetTutorialsEnabled(bNewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetTriggersSwapped(bNewValue) end
---@param NewValue int32
function UTouristSaveGame:SetTrebleTuning(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetToggleAltFire(NewValue) end
function UTouristSaveGame:SetTestAgreementDone() end
---@param NewValue int32
function UTouristSaveGame:SetSubtitlesSize(NewValue) end
---@param NewValue FString
function UTouristSaveGame:SetSubtitlesMode(NewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetSubtitlesEnabled(bNewValue) end
---@param NewValue int32
function UTouristSaveGame:SetSubtitlesColour(NewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetSticksSwapped(bNewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetStartOnline(NewValue) end
---@param NewValue ESprintInputType
function UTouristSaveGame:SetSprintInputType(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetSpeakerNameEnabled(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetSpeakerColour(NewValue) end
---@param NewValue FSettingShowWindowsPerformance
function UTouristSaveGame:SetShowWindowsPerformance(NewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetShowControllerWarning(bNewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetScreenSpaceReflectionEnabled(NewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetScreenReader(bNewValue) end
---@param NewValue EScreenOptimisation
function UTouristSaveGame:SetScreenOptimisation(NewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetRumbleEnabled(bNewValue) end
---@param NewValue EInteractType
function UTouristSaveGame:SetRiskyInteract(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetRightOuterDeadzoneLimit(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetRightDeadzoneLimit(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetResolutionQualityNormalized(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetRenderAspectRatioPadding(NewValue) end
---@param NewValue EReflexMode
function UTouristSaveGame:SetReflex(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetRaytracedShadowsEnabled(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetRayTracedShadowQuality(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetRaytracedReflectionsEnabled(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetRayTracedReflectionQuality(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetRaytracedAudioEnabled(NewValue) end
---@param Preset EQualityPreset
function UTouristSaveGame:SetQualityPreset(Preset) end
function UTouristSaveGame:SetPsnDone() end
function UTouristSaveGame:SetPrecompilationDone() end
---@param NewValue int32
function UTouristSaveGame:SetPoppiesCollected(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetPlaybackVolume(NewValue) end
---@param NewValue EUltrawideHUDSettings
function UTouristSaveGame:SetPerformanceHUDSettings(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetPerformanceAspectRatioPadding(NewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetPauseOnFocusLost(bNewValue) end
---@param NewValue ENISMode
function UTouristSaveGame:SetNIS(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetMouseSize(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetMouseSensitivity(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetMouseInputYDir(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetMouseInputXDir(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetMotionBlurDisabled(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetMonoMix(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetMinimapDistance(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetMidnightMode(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetLookInputYSensitivity(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetLookInputXSensitivity(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetLookAxisHelper(NewValue) end
---@param NewValue ELockOnType
function UTouristSaveGame:SetLockOnType(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetLeftOuterDeadzoneLimit(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetLeftDeadzoneLimit(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetKeyboardSchemaIndex(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetKeyboardBaseIndex(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetIsPlaystationControllerUsed(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetIsControllerUsed(NewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetIsCheckpointActive(bNewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetInteractPress(bNewValue) end
---@param WorldContextObject UObject
---@param InputKey FKey
function UTouristSaveGame:SetInputType(WorldContextObject, InputKey) end
function UTouristSaveGame:SetInitialSettingsDone() end
function UTouristSaveGame:SetInitialGameToPlayerConsentDone() end
function UTouristSaveGame:SetInitialDisplayGammaDone() end
---@param NewValue float
function UTouristSaveGame:SetHorizontalSafeZonePadding(NewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetHearingImpairedMode(bNewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetHDREnabled(bNewValue) end
function UTouristSaveGame:SetGraphicSettingsDone() end
function UTouristSaveGame:SetGameResumeHelpDone() end
---@param WorldContextObject UObject
---@param NewControllerVendor EControllerVendor
function UTouristSaveGame:SetGamepadType(WorldContextObject, NewControllerVendor) end
---@param NewValue boolean
function UTouristSaveGame:SetGamepadAltFireInTrigger(NewValue) end
---@param NewValue FString
function UTouristSaveGame:SetGameLanguage(NewValue) end
function UTouristSaveGame:SetGameDataDone() end
---@param NewValue EGameDataCategory
function UTouristSaveGame:SetGameDataCategory(NewValue) end
---@param NewValue EFSRMode
function UTouristSaveGame:SetFSR(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetFramesPerSecLimit(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetFOVModifier(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetFocusSFX(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetFocusPartyChat(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetFocusDialogue(NewValue) end
---@param Flag FName
---@return boolean
function UTouristSaveGame:SetFlag(Flag) end
---@param NewValue boolean
function UTouristSaveGame:SetFirstSuitUIEnter(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetFirstShipUIEnter(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetFirstRayTracingScreenOptimisationNudge(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetFirstChallengeScreenUIEnter(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetFilmGrainSettings(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetEnvironmentVolume(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetEmissiveIntensity(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetDynResMinScaling(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetDynamicRange(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetDynamicHUD(NewValue) end
function UTouristSaveGame:SetDualsenseDone() end
---@param NewValue float
function UTouristSaveGame:SetDLSSSharpness(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetDLSSFrameGen(NewValue) end
---@param NewValue EDLSSMode
function UTouristSaveGame:SetDLSS(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetDisplaySDR(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetDisplayGamma(NewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetDisallowAltFireModeIfCantFire(bNewValue) end
---@param NewValue int32
function UTouristSaveGame:SetDepthOfField(NewValue) end
---@param NewValue EScreenOptimisation
function UTouristSaveGame:SetDefaultScreenOptimisation(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetDefaultResolutionScale(NewValue) end
---@param Preset EQualityPreset
function UTouristSaveGame:SetDefaultQualityPreset(Preset) end
---@param NewValue boolean
function UTouristSaveGame:SetDamageNumbers(NewValue) end
---@param NewValue ETouristWindowedMode
function UTouristSaveGame:SetCurrentWindowMode(NewValue) end
---@param NewValue FIntPoint
function UTouristSaveGame:SetCurrentResolution(NewValue) end
---@param NewValue FString
function UTouristSaveGame:SetCurrentMonitorID(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetCurrentColorBlindnessStrength(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetCurrentColorBlindness(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetCurrentAspectRatioIndex(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetCrosshairScale(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetCrosshairLineThickness(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetCorrectColorDefficiency(NewValue) end
---@param NewValue EControllerVendor
function UTouristSaveGame:SetControllerVendor(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetControllerSchemaIndex(NewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetControllerRotated(bNewValue) end
---@param NewValue float
function UTouristSaveGame:SetContrast(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetCollectibleColourTone(NewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetClosedCaptionsEnabled(bNewValue) end
---@param NewValue float
function UTouristSaveGame:SetCameraShakeModifier(NewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetBloomDisabled(NewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetBenchmarkResults(bNewValue) end
---@param NewValue float
function UTouristSaveGame:SetBenchmarkGPU(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetBenchmarkFPS(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetBenchmarkCPU(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetBassTuning(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetBackgroundOpacity(NewValue) end
---@param bNewValue boolean
function UTouristSaveGame:SetAutoControllerPreset(bNewValue) end
---@param NewValue ESKURegion
function UTouristSaveGame:SetAudioRegion(NewValue) end
---@param NewValue int32
function UTouristSaveGame:SetAudioOutputIndex(NewValue) end
---@param NewValue EAudioOutputValues
function UTouristSaveGame:SetAudioOutput(NewValue) end
---@param LanguageCode FString
function UTouristSaveGame:SetAudioLanguageCode(LanguageCode) end
---@param bNewValue boolean
function UTouristSaveGame:SetAltFireInTrigger(bNewValue) end
---@param NewValue boolean
function UTouristSaveGame:SetAltFireIndicatorSettings(NewValue) end
function UTouristSaveGame:SetAllTutorialFlag() end
---@param NewValue float
function UTouristSaveGame:SetAimInputYSensitivity(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetAimInputYDir(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetAimInputXSensitivity(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetAimInputXDir(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetAimAxisHelper(NewValue) end
---@param NewValue ESettingStrengthType
function UTouristSaveGame:SetAimAssistStrengthType(NewValue) end
---@param NewValue float
function UTouristSaveGame:SetADSMouseSensitivity(NewValue) end
function UTouristSaveGame:ResetGameData() end
function UTouristSaveGame:ResetFirstTimeEnterUIs() end
---@param WorldContextObject UObject
---@param NewMonitorID FString
---@param NewResolution FIntPoint
---@param NewWindowMode ETouristWindowedMode
---@param bForceApply boolean
function UTouristSaveGame:RequestScreenSettingsChange(WorldContextObject, NewMonitorID, NewResolution, NewWindowMode, bForceApply) end
---@param InputAxisName FString
function UTouristSaveGame:RemoveInputAxis(InputAxisName) end
---@param InputActionName FString
function UTouristSaveGame:RemoveInputAction(InputActionName) end
function UTouristSaveGame:RebuildMissingInputKeyOnLoad() end
---@param OutMetaModifiers TArray<FName>
function UTouristSaveGame:PopFutureMetaModifiers(OutMetaModifiers) end
function UTouristSaveGame:OnLoaded() end
---@param WorldContextObject UObject
function UTouristSaveGame:OnInputBindingsUpdated(WorldContextObject) end
---@return boolean
function UTouristSaveGame:IsScreenOptimisationRecommendedAsDefault() end
---@return boolean
function UTouristSaveGame:IsRumbleEnabled() end
---@return boolean
function UTouristSaveGame:IsResolutionScalingRecommendedAsDefault() end
---@return boolean
function UTouristSaveGame:IsMotionBlurAllowed() end
---@param TraitName FName
---@param Player APlayerCharacter
---@return FInventoryWeaponTraitData
function UTouristSaveGame:GetWeaponTraitData(TraitName, Player) end
---@return TArray<FPersistentThingStatistics>
function UTouristSaveGame:GetThingStatsArray() end
---@param WorldContextObject UObject
---@return float
function UTouristSaveGame:GetScreenResolutionScaling(WorldContextObject) end
---@param Preset EQualityPreset
---@return FGraphicsPreset
function UTouristSaveGame:GetGraphicsPreset(Preset) end
---@param Flag FName
---@return boolean
function UTouristSaveGame:GetFlagNonTransient(Flag) end
---@param Flag FName
---@return boolean
function UTouristSaveGame:GetFlag(Flag) end
---@return boolean
function UTouristSaveGame:GetDefaultSubtitlesEnabled() end
---@return FString
function UTouristSaveGame:GetDefaultSubtitleLanguage() end
---@return FString
function UTouristSaveGame:GetDefaultAudioLanguageCode() end
---@param bInvertX boolean
---@param bInvertY boolean
function UTouristSaveGame:GetDefaultAimDirections(bInvertX, bInvertY) end
---@param PosX float
---@param SizeX float
---@param SizeY float
---@param RenderAspectRatio float
---@param UIAspectRatio float
---@param DefaultWidthMidPoint float
---@param WidgetSizeX float
---@return float
function UTouristSaveGame:GetCollectibleDiscoveryHorizontalPosition(PosX, SizeX, SizeY, RenderAspectRatio, UIAspectRatio, DefaultWidthMidPoint, WidgetSizeX) end
---@param UserConfirmed boolean
---@param WorldContextObject UObject
function UTouristSaveGame:ConfirmScreenSettings(UserConfirmed, WorldContextObject) end
---@param Flag FName
---@return boolean
function UTouristSaveGame:ClearFlag(Flag) end
function UTouristSaveGame:ClearAllFlags() end
---@param NewMouseCursorStyle EMouseCursorStyle
function UTouristSaveGame:ChangeKBMCursorStyle(NewMouseCursorStyle) end
---@param WeaponName FName
---@param NewData FInventoryWeaponTraitData
---@param KillCount int32
function UTouristSaveGame:CacheWeaponTraitsProgress(WeaponName, NewData, KillCount) end
function UTouristSaveGame:CacheBootValues() end
function UTouristSaveGame:CacheBootUIColours() end
---@param WorldContextObject UObject
function UTouristSaveGame:ApplyUIVFXEffects(WorldContextObject) end
function UTouristSaveGame:ApplyUIContrast() end
function UTouristSaveGame:ApplyUIColour() end
---@param WorldContextObject UObject
function UTouristSaveGame:ApplySettings(WorldContextObject) end
function UTouristSaveGame:ApplyResolutionScaling() end
function UTouristSaveGame:ApplyMotionBlurQuality() end
function UTouristSaveGame:ApplyMaxFPS() end
---@param Overlay UOverlay
---@param IsHUDBase boolean
function UTouristSaveGame:ApplyHUDSafeZone(Overlay, IsHUDBase) end
---@param bSave boolean
function UTouristSaveGame:ApplyGraphicsCustom(bSave) end
---@param bSave boolean
function UTouristSaveGame:ApplyGraphics(bSave) end
function UTouristSaveGame:ApplyFilmGrain() end
function UTouristSaveGame:ApplyDynResMinScaling() end
function UTouristSaveGame:ApplyDLSSSharpness() end
function UTouristSaveGame:ApplyDepthOfField() end
---@param WorldContextObject UObject
function UTouristSaveGame:ApplyCrosshairThickness(WorldContextObject) end
function UTouristSaveGame:ApplyColourBlindFilter() end
function UTouristSaveGame:ApplyColorContrast() end
function UTouristSaveGame:ApplyCollectibleColour() end
function UTouristSaveGame:ApplyBloomQuality() end
---@param UIAspectRatio float
---@param RenderAspectRatio float
---@param PerformanceAspectRatio float
---@param IsPreviewHUD boolean
function UTouristSaveGame:ApplyAspectRatioPadding(UIAspectRatio, RenderAspectRatio, PerformanceAspectRatio, IsPreviewHUD) end
---@param InputAxis FHMQInputAxis
function UTouristSaveGame:AddInputAxis(InputAxis) end
---@param InputAction FHMQInputAction
function UTouristSaveGame:AddInputAction(InputAction) end
---@param MetaModifierName FName
function UTouristSaveGame:AddFutureMetaModifier(MetaModifierName) end


---@class UTouristScreenManager : UHMQScreenManager
UTouristScreenManager = {}


---@class UTouristSocialManager : UObject
---@field CapsuleManagerClass TSubclassOf<USocialCapsuleManager>
---@field ChallengeManagerClass TSubclassOf<USocialChallengeManager>
---@field GhostManagerClass TSubclassOf<USocialGhostManager>
---@field PedestalManagerClass TSubclassOf<USocialPedestalManager>
---@field SessionManagerClass TSubclassOf<USocialSessionManager>
---@field PartyManagerClass TSubclassOf<USocialPartyManager>
---@field VoiceChatManagerClass TSubclassOf<USocialVoiceChatManager>
---@field NetworkErrorTutorial TSubclassOf<UNetworkErrorTutorialWidget>
---@field PlayerLeftNotification TSubclassOf<UNotificationWidget>
---@field PlayerJoinedNotification TSubclassOf<UNotificationWidget>
---@field TextDatabaseClass TSubclassOf<UHMQPolyglotTextDatabase>
---@field BlockedUserWarning TSubclassOf<UHMQScreenWidget>
---@field PingTutorialClass TSoftClassPtr<UTouristTutorialWidget>
---@field PermaprogressItemTutorialClass TSoftClassPtr<UTouristTutorialWidget>
---@field PlayGoInitialPayloadTutorialClass TSoftClassPtr<UTouristTutorialWidget>
---@field InviteSelectClass TSubclassOf<USocialInviteWidget>
---@field InviteContainerClass TSubclassOf<USocialInvitationContainerWidget>
---@field InviteAcceptDecideClass TSubclassOf<USocialInviteAcceptDecideWidget>
---@field InviteAcceptDecide USocialInviteAcceptDecideWidget
---@field ServerConfig UTouristSocialServerConfig
---@field OnUnlockClarityTrophy FTouristSocialManagerOnUnlockClarityTrophy
---@field OnClarityChanged FTouristSocialManagerOnClarityChanged
---@field OnConnected FTouristSocialManagerOnConnected
---@field OnConnectingFinished FTouristSocialManagerOnConnectingFinished
---@field OnDisconnected FTouristSocialManagerOnDisconnected
---@field OnMultiplayerFeaturesAvailableChanged FTouristSocialManagerOnMultiplayerFeaturesAvailableChanged
---@field OnMultiplayerStatusChanged FTouristSocialManagerOnMultiplayerStatusChanged
---@field OnMultiplayerStateChanged FTouristSocialManagerOnMultiplayerStateChanged
---@field OnMultiplayerMatchmakingDone FTouristSocialManagerOnMultiplayerMatchmakingDone
---@field OnMultiplayerClientLeft FTouristSocialManagerOnMultiplayerClientLeft
---@field OnGameDisconnected FTouristSocialManagerOnGameDisconnected
---@field CapsuleManager USocialCapsuleManager
---@field PedestalManager USocialPedestalManager
---@field GhostManager USocialGhostManager
---@field ChallengeManager USocialChallengeManager
---@field SessionManager USocialSessionManager
---@field PartyManager USocialPartyManager
---@field VoiceChatManager USocialVoiceChatManager
---@field TextDatabase UHMQPolyglotTextDatabase
---@field NetworkState USocialNetworkState
---@field bFinishedAct1AsClient boolean
---@field AvatersCache TMap<FString, UTexture2D>
UTouristSocialManager = {}

function UTouristSocialManager:ShowNextMatchReview() end
---@param Player APlayerController
---@return boolean
function UTouristSocialManager:ShouldUserBeSpectator(Player) end
---@return boolean
function UTouristSocialManager:ShouldSkipIntroCinematics() end
---@param Finished boolean
function UTouristSocialManager:SetFinishedAct1AsClient(Finished) end
---@param Enable boolean
function UTouristSocialManager:SetExternalConnectionHandling(Enable) end
---@param Tag FName
---@param bEnabled boolean
function UTouristSocialManager:SetErrorMessagesEnabled(Tag, bEnabled) end
---@param amount float
function UTouristSocialManager:SetClarity(amount) end
function UTouristSocialManager:NotifyGameDisconnect() end
---@param Screen UHMQScreenWidget
---@param NewScreenName FName
function UTouristSocialManager:NetworkErrorExited(Screen, NewScreenName) end
---@param Screen UHMQScreenWidget
function UTouristSocialManager:NetworkErrorDestroyed(Screen) end
function UTouristSocialManager:LeaveMultiplayerGame() end
function UTouristSocialManager:KickRemotePlayer() end
---@return boolean
function UTouristSocialManager:IsSessionOrGameHost() end
---@return boolean
function UTouristSocialManager:IsPlayerCommunicationRestricted() end
---@return boolean
function UTouristSocialManager:IsPartyJoinInProgress() end
---@return boolean
function UTouristSocialManager:IsMatchQueuedForReview() end
---@return boolean
function UTouristSocialManager:IsGameJoinInProgress() end
---@return boolean
function UTouristSocialManager:IsConnectingToHost() end
---@return boolean
function UTouristSocialManager:IsConnecting() end
---@return boolean
function UTouristSocialManager:IsConnectedToServers() end
---@return boolean
function UTouristSocialManager:IsConnectedToHost() end
---@return boolean
function UTouristSocialManager:IsConnectedToClient() end
---@return boolean
function UTouristSocialManager:IsClientConnecting() end
---@param bSuccess boolean
---@param ErrorCode int32
function UTouristSocialManager:InviteDialogClosed(bSuccess, ErrorCode) end
---@param bLogFailure boolean
---@return boolean
function UTouristSocialManager:InJoinableArea(bLogFailure) end
function UTouristSocialManager:ImguiGameJoinFailed() end
---@return boolean
function UTouristSocialManager:HasUnlockedMultiplayer() end
---@return boolean
function UTouristSocialManager:HasReturnedFromMultiplayer() end
---@return boolean
function UTouristSocialManager:HasPendingInvite() end
---@return boolean
function UTouristSocialManager:HasOpenNonSpectatorSlot() end
---@param amount float
---@return boolean
function UTouristSocialManager:HasEnoughClarity(amount) end
---@return UHMQPolyglotTextDatabase
function UTouristSocialManager:GetTextDatabase() end
---@param WorldContextObject UObject
---@return UTouristSocialManager
function UTouristSocialManager:GetSocialManager(WorldContextObject) end
---@return FSocialPlayerState
function UTouristSocialManager:GetPlayerState() end
---@return int32
function UTouristSocialManager:GetNatType() end
---@return ESocialMultiplayerState
function UTouristSocialManager:GetMultiplayerState() end
---@return int32
function UTouristSocialManager:GetGroupBucket() end
---@return boolean
function UTouristSocialManager:GetFinishedAct1AsClient() end
---@return float
function UTouristSocialManager:GetClarity() end
---@return FName
function UTouristSocialManager:GetActiveParty() end
---@return FString
function UTouristSocialManager:GetActiveMatch() end
---@return FName
function UTouristSocialManager:GetActiveGameSession() end
---@return int32
function UTouristSocialManager:GetAct2Complete() end
---@return int32
function UTouristSocialManager:GetAct1Complete() end
function UTouristSocialManager:DropFromHostWorldAfterDisconnectingAsClient() end
function UTouristSocialManager:DoImgui() end
function UTouristSocialManager:DisconnectAsClientButStayInWorld() end
---@return boolean
function UTouristSocialManager:CanReviewMatches() end
---@return boolean
function UTouristSocialManager:BP_BeginFadeInFromNetTravel() end
---@param bAccessingMultiplayer boolean
---@param bQuietly boolean
function UTouristSocialManager:BeginConnecting(bAccessingMultiplayer, bQuietly) end
---@return boolean
function UTouristSocialManager:AreMultiplayerFeaturesAvailable() end
---@return boolean
function UTouristSocialManager:AnyClientsConnected() end
---@param amount float
function UTouristSocialManager:AdjustClarity(amount) end


---@class UTouristSocialServerConfig : UObject
---@field Manager UTouristSocialManager
UTouristSocialServerConfig = {}

function UTouristSocialServerConfig:OnConnected() end


---@class UTouristTutorialPanel : UHMQScreenWidget
---@field OnTutorialComplete FTouristTutorialPanelOnTutorialComplete
---@field Content UContentWidget
UTouristTutorialPanel = {}

function UTouristTutorialPanel:ReceiveShowTutorial() end
function UTouristTutorialPanel:ReceiveHideTutorial() end
---@return UTouristTutorialWidget
function UTouristTutorialPanel:GetTutorialWidget() end
function UTouristTutorialPanel:EndTutorial() end


---@class UTouristTutorialWidget : UTouristWidgetBase
---@field bPauseTutorial boolean
---@field bAltLocation boolean
---@field bEndWhenRoomChanges boolean
---@field bShortcutToTutorialViewer boolean
---@field bShortcutToControllerPreset boolean
---@field bShortcutToSuitMenuParasite boolean
---@field bTutorialShortcutTriggered boolean
---@field AssociatedTutorialFlag FName
---@field TutorialRoomIndex int32
UTouristTutorialWidget = {}

function UTouristTutorialWidget:ShowTutorial() end
---@param RoomIndex int32
---@param bRoomCleared boolean
function UTouristTutorialWidget:PlayerRoomChanged(RoomIndex, bRoomCleared) end
function UTouristTutorialWidget:OnStartTutorial() end
function UTouristTutorialWidget:OnEndTutorial() end
function UTouristTutorialWidget:HideTutorial() end
function UTouristTutorialWidget:EndTutorial() end


---@class UTouristUniqueActorID : UActorComponent
---@field ActorId FGuid
UTouristUniqueActorID = {}

---@param Biome EBiome
---@param NewBiomeState EBiomeState
function UTouristUniqueActorID:HandleBiomeStateChanged(Biome, NewBiomeState) end


---@class UTouristViewportClient : UHMQScreenGameViewportClient
UTouristViewportClient = {}


---@class UTouristWidgetBase : UHMQUserWidget
---@field VisibilityEffect boolean
UTouristWidgetBase = {}

---@param bIsVisible boolean
function UTouristWidgetBase:VisibilityEffectChanged(bIsVisible) end
---@param bIsVisible boolean
function UTouristWidgetBase:VisibilityChanged(bIsVisible) end
function UTouristWidgetBase:RecursivelyRemoveFromParent() end
function UTouristWidgetBase:Reconstruct() end
---@param ActionName FName
---@param EventType EInputEvent
---@param bConsume boolean
---@param bExecuteWhenPaused boolean
---@param Callback FListenBetterForInputActionCallback
function UTouristWidgetBase:ListenBetterForInputAction(ActionName, EventType, bConsume, bExecuteWhenPaused, Callback) end
function UTouristWidgetBase:LanguageSettingsChanged() end
---@return FVector2D
function UTouristWidgetBase:GetScreenSize() end
---@return UPlayerHUDInfo
function UTouristWidgetBase:GetHUDInfo() end
function UTouristWidgetBase:ControllerSettingsChanged() end


---@class UTreeDefinitionAsset : UDataAsset
---@field Definition FTreeDefinition
UTreeDefinitionAsset = {}



---@class UTreeGeneratorComponent : UHMQActorComponent
---@field Generator ATreeGenerator
UTreeGeneratorComponent = {}



---@class UTreeGeneratorFogComponent : UTreeGeneratorComponent
---@field ParticleSystem UParticleSystem
---@field EffectName FName
---@field extent FVector
---@field MinScale float
---@field MaxScale float
---@field MinOffset FVector
---@field MaxOffset FVector
---@field FogComponents TArray<USceneComponent>
---@field FogBounds TArray<FBox>
UTreeGeneratorFogComponent = {}



---@class UWaveGenBlock : USceneComponent
---@field ID int32
---@field GridMirroringX EGridMirroring
---@field GridMirroringY EGridMirroring
---@field GridRotationZ EGridRotation
---@field TypeSyncPeers int32
---@field EnclosingGridVolume AGridVolume
---@field CurrentCell FIntVector
UWaveGenBlock = {}

function UWaveGenBlock:SelectPeerBlocks() end
function UWaveGenBlock:D_CancelTypeSync() end
function UWaveGenBlock:C_PrepareTypeSync() end
function UWaveGenBlock:B_BlockSync() end
function UWaveGenBlock:A_BlockRevert() end


---@class UWeaponClip : UGunComponent
---@field OnReloadStarted FWeaponClipOnReloadStarted
---@field OnReloadDone FWeaponClipOnReloadDone
---@field OnClipStatusChanged FWeaponClipOnClipStatusChanged
UWeaponClip = {}

---@param bImmediate boolean
---@param Percentage float
---@return boolean
function UWeaponClip:StartReload(bImmediate, Percentage) end
---@param NumBullets int32
---@param Reload boolean
function UWeaponClip:SetMaxBullets(NumBullets, Reload) end
function UWeaponClip:ReloadStarted() end
---@param FillPercent float
function UWeaponClip:ReloadDone(FillPercent) end
---@return boolean
function UWeaponClip:IsReloading() end
---@param NumBullets int32
---@return boolean
function UWeaponClip:HasBullets(NumBullets) end
---@return float
function UWeaponClip:GetReloadTimeRemaining() end
---@return float
function UWeaponClip:GetReloadSpeedMultplier() end
---@return float
function UWeaponClip:GetNumBullets() end
---@return int32
function UWeaponClip:GetMaxBullets() end
---@return float
function UWeaponClip:GetClipPercentage() end
---@param NumBullets int32
---@return boolean
function UWeaponClip:ConsumeBullets(NumBullets) end
---@return boolean
function UWeaponClip:CanStartReloading() end
function UWeaponClip:BroadcastClipStatusChanged() end


---@class UWeaponCommandScript : UCommandScript
UWeaponCommandScript = {}

---@param Position boolean
---@param Rotation boolean
---@param ApplyDelta boolean
---@param PosRule EWeaponScriptUpdatePos
---@param Space EWeaponScriptSpaceDesc
function UWeaponCommandScript:UpdatePosAndAim(Position, Rotation, ApplyDelta, PosRule, Space) end
---@param Distance float
function UWeaponCommandScript:StartBulletTargetDistanceEvent(Distance) end
function UWeaponCommandScript:StartBulletKillActorEvent() end
function UWeaponCommandScript:StartBulletEvent() end
---@param ReasonMask int32
function UWeaponCommandScript:StartBulletDeathEvent(ReasonMask) end
---@param MinHits int32
---@param MaxHits int32
function UWeaponCommandScript:StartBulletDamageActorEvent(MinHits, MaxHits) end
function UWeaponCommandScript:StartBulletBounceEvent() end
---@param ActorClassA TSubclassOf<UBulletType>
---@param ActorClassB TSubclassOf<UBulletType>
---@param ProbabilityOfA float
---@param RelativeTo EWeaponScriptSpaceDesc
function UWeaponCommandScript:SpawnRandomBullet(ActorClassA, ActorClassB, ProbabilityOfA, RelativeTo) end
---@param EffectContainerClass TSubclassOf<AEffectContainer>
---@param RelativeTo EWeaponScriptSpaceDesc
function UWeaponCommandScript:SpawnEffectContainer(EffectContainerClass, RelativeTo) end
---@param DecalMaterial UMaterialInterface
---@param DecalSize FVector
---@param Location FVector
---@param Rotation FRotator
---@param LifeSpan float
---@param RelativeTo EWeaponScriptSpaceDesc
function UWeaponCommandScript:SpawnDecalAtLocation(DecalMaterial, DecalSize, Location, Rotation, LifeSpan, RelativeTo) end
---@param ActorClass TSubclassOf<UBulletType>
---@param RelativeTo EWeaponScriptSpaceDesc
function UWeaponCommandScript:SpawnBullet(ActorClass, RelativeTo) end
---@param ActorClass TSubclassOf<AActor>
---@param Transform FTransform
---@param CollisionHandlingOverride ESpawnActorCollisionHandlingMethod
---@param RelativeTo EWeaponScriptSpaceDesc
function UWeaponCommandScript:SpawnActorFromBullet(ActorClass, Transform, CollisionHandlingOverride, RelativeTo) end
function UWeaponCommandScript:SetTransformToIdentity() end
---@param Rotator FRotator
---@param Space EWeaponScriptArithmeticMode
function UWeaponCommandScript:SetTransformRotation(Rotator, Space) end
---@param Position FVector
---@param Space EWeaponScriptArithmeticMode
function UWeaponCommandScript:SetTransformPosition(Position, Space) end
---@param Transform FTransform
function UWeaponCommandScript:SetTransform(Transform) end
---@param MinRollPicthYaw FVector
---@param MaxRollPicthYaw FVector
---@param Space EWeaponScriptArithmeticMode
function UWeaponCommandScript:SetRndTransformRotation(MinRollPicthYaw, MaxRollPicthYaw, Space) end
---@param MinPos FVector
---@param MaxPos FVector
---@param Space EWeaponScriptArithmeticMode
function UWeaponCommandScript:SetRndTransformPosition(MinPos, MaxPos, Space) end
---@param Name FName
---@param Transform FTransform
---@param RelativeTo EWeaponScriptSpaceDesc
function UWeaponCommandScript:SendNotification(Name, Transform, RelativeTo) end
---@param Name FName
---@param Transform FTransform
---@param RelativeTo EWeaponScriptSpaceDesc
function UWeaponCommandScript:SendDamageActorWithBulletSpawnDataNotification(Name, Transform, RelativeTo) end
---@param Name FName
---@param Transform FTransform
---@param RelativeTo EWeaponScriptSpaceDesc
function UWeaponCommandScript:SendDamageActorNotification(Name, Transform, RelativeTo) end
---@param Name FName
---@param Transform FTransform
---@param Actor AActor
---@param BulletSpawnData FBulletSpawnData
function UWeaponCommandScript:ScriptNotificationDamageActorWithBulletSpawnData(Name, Transform, Actor, BulletSpawnData) end
---@param Name FName
---@param Transform FTransform
---@param Actor AActor
function UWeaponCommandScript:ScriptNotificationDamageActor(Name, Transform, Actor) end
---@param Name FName
---@param Transform FTransform
function UWeaponCommandScript:ScriptNotification(Name, Transform) end
---@param Rotator FRotator
function UWeaponCommandScript:RotateTransform(Rotator) end
---@param MaxHorizontalHalfAngle float
---@param MaxVericalHalfAngle float
---@param bAllowRoll boolean
function UWeaponCommandScript:RndEllipseDir(MaxHorizontalHalfAngle, MaxVericalHalfAngle, bAllowRoll) end
---@param duration float
---@param Variance float
function UWeaponCommandScript:RndDelaySeconds(duration, Variance) end
---@param MinRadius float
---@param MaxRadius float
function UWeaponCommandScript:RndConeDir(MinRadius, MaxRadius) end
---@param Chance float
function UWeaponCommandScript:RandomIf(Chance) end
function UWeaponCommandScript:PushTransform() end
function UWeaponCommandScript:PopTransform() end
function UWeaponCommandScript:NotifySteamOfBullets() end
---@param Plane FVector
function UWeaponCommandScript:MirrorRotation(Plane) end
---@return TArray<AActor>
function UWeaponCommandScript:GetBulletHitActors() end
---@param startIndex int32
---@param LastIndex int32
function UWeaponCommandScript:ForLoop(startIndex, LastIndex) end
function UWeaponCommandScript:EndLoop() end
function UWeaponCommandScript:EndIf() end
function UWeaponCommandScript:EndEvent() end
function UWeaponCommandScript:Else() end
function UWeaponCommandScript:BulletSetMain() end
---@param value boolean
function UWeaponCommandScript:BulletSetGhost(value) end
---@param RotationAngle float
---@param RotationAxis FVector
---@param Space EWeaponScriptSpaceDesc
---@param duration float
---@param RotationAngleVariance float
---@param DurationVariance float
function UWeaponCommandScript:BulletRotateVelocity(RotationAngle, RotationAxis, Space, duration, RotationAngleVariance, DurationVariance) end
---@param RotationAngle float
---@param RotationAxis FVector
---@param Space EWeaponScriptSpaceDesc
---@param duration float
---@param RotationAngleVariance float
---@param DurationVariance float
function UWeaponCommandScript:BulletRotateAcceleration(RotationAngle, RotationAxis, Space, duration, RotationAngleVariance, DurationVariance) end
---@param SnapDirection boolean
---@param MaxTargetDistance float
---@param MaxTargetAngle float
---@param Method EWeaponScriptTargetingMehtod
---@param bIgnoreCurrentTarget boolean
---@param bPreferCurrentTarget boolean
---@param bTargetIsEnemy boolean
---@param bUpdateWeaponTarget boolean
---@param bIgnoreTargetsBehindLastBounceHitNormal boolean
---@param bUseLastHitOrKilledActorIfAvailable boolean
function UWeaponCommandScript:BulletRetarget(SnapDirection, MaxTargetDistance, MaxTargetAngle, Method, bIgnoreCurrentTarget, bPreferCurrentTarget, bTargetIsEnemy, bUpdateWeaponTarget, bIgnoreTargetsBehindLastBounceHitNormal, bUseLastHitOrKilledActorIfAvailable) end
---@param Velocity FVector
---@param Space EWeaponScriptSpaceDesc
---@param duration float
---@param VelocityVariance FVector
---@param DurationVariance float
function UWeaponCommandScript:BulletChangeVelocity(Velocity, Space, duration, VelocityVariance, DurationVariance) end
---@param TrackingTarget USceneComponent
function UWeaponCommandScript:BulletChangeTrackingTarget(TrackingTarget) end
---@param TargetTrackingTurnSpeedMin float
---@param TargetTrackingTurnSpeed float
---@param TargetTrackingTurnSpeedLerpTime float
---@param TargetTrackingPackedVariance FVector
function UWeaponCommandScript:BulletChangeTrackingSpeedV2(TargetTrackingTurnSpeedMin, TargetTrackingTurnSpeed, TargetTrackingTurnSpeedLerpTime, TargetTrackingPackedVariance) end
---@param TargetTrackingTurnSpeedMin float
---@param TargetTrackingTurnSpeed float
---@param TargetTrackingTurnSpeedLerpTime float
function UWeaponCommandScript:BulletChangeTrackingSpeed(TargetTrackingTurnSpeedMin, TargetTrackingTurnSpeed, TargetTrackingTurnSpeedLerpTime) end
---@param StartTime float
---@param duration float
---@param AbsoluteTime boolean
---@param StartTimeVariance float
---@param DurationVariance float
function UWeaponCommandScript:BulletChangeTracking(StartTime, duration, AbsoluteTime, StartTimeVariance, DurationVariance) end
---@param Speed float
---@param duration float
---@param Arithmetic EWeaponScriptArithmetic
---@param SpeedVariance float
---@param DurationVariance float
function UWeaponCommandScript:BulletChangeSpeed(Speed, duration, Arithmetic, SpeedVariance, DurationVariance) end
---@param Size float
---@param duration float
---@param Arithmetic EWeaponScriptArithmetic
---@param SizeVariance float
---@param DurationVariance float
function UWeaponCommandScript:BulletChangeSize(Size, duration, Arithmetic, SizeVariance, DurationVariance) end
---@param Distance float
---@param AbsoluteDistance boolean
function UWeaponCommandScript:BulletChangeMaxDistance(Distance, AbsoluteDistance) end
---@param lifetime float
---@param AbsoluteTime boolean
function UWeaponCommandScript:BulletChangeLife(lifetime, AbsoluteTime) end
---@param Garvity FVector
---@param Space EWeaponScriptSpaceDesc
---@param duration float
---@param GarvityVariance FVector
---@param DurationVariance float
function UWeaponCommandScript:BulletChangeGravity(Garvity, Space, duration, GarvityVariance, DurationVariance) end
---@param direction FVector
---@param Space EWeaponScriptSpaceDesc
---@param duration float
---@param DirectionVariance FVector
---@param DurationVariance float
function UWeaponCommandScript:BulletChangeDirection(direction, Space, duration, DirectionVariance, DurationVariance) end
---@param value float
---@param duration float
---@param Arithmetic EWeaponScriptArithmetic
---@param ValueVariance float
---@param DurationVariance float
function UWeaponCommandScript:BulletChangeDamageMultiplier(value, duration, Arithmetic, ValueVariance, DurationVariance) end
---@param Strength float
---@param duration float
function UWeaponCommandScript:BulletChangeAttachStrength(Strength, duration) end
---@param Acceleration FVector
---@param Space EWeaponScriptSpaceDesc
---@param duration float
---@param AccelerationVariance FVector
---@param DurationVariance float
function UWeaponCommandScript:BulletChangeAccelerationDirection(Acceleration, Space, duration, AccelerationVariance, DurationVariance) end
---@param Acceleration FVector
---@param Space EWeaponScriptSpaceDesc
---@param duration float
---@param AccelerationVariance FVector
---@param DurationVariance float
function UWeaponCommandScript:BulletChangeAcceleration(Acceleration, Space, duration, AccelerationVariance, DurationVariance) end
---@param Strength float
function UWeaponCommandScript:BulletAttachToMainBullet(Strength) end
---@param Strength float
function UWeaponCommandScript:BulletAttachToGun(Strength) end
---@param Target EWeaponScriptBulletTarget
---@param RndError float
---@param duration float
function UWeaponCommandScript:BulletAimAt(Target, RndError, duration) end


---@class UWeaponCommandScriptComponent : UCommandScriptComponent
UWeaponCommandScriptComponent = {}

---@param Output TArray<TSubclassOf<UBulletType>>
function UWeaponCommandScriptComponent:GetUsedBulletTypes(Output) end


---@class UWeaponCommandScriptParameters : UCommandScriptParameters
---@field SpreadOnAimDirection FVector2D
---@field SpreadOnBullet FVector2D
---@field HomingTarget USceneComponent
---@field bIgnoreTransformPitch boolean
---@field bIgnoreTransformRoll boolean
UWeaponCommandScriptParameters = {}



---@class UWeaponFiringBehavior : UGunComponent
---@field OnRequestFire FWeaponFiringBehaviorOnRequestFire
---@field OnStartFiring FWeaponFiringBehaviorOnStartFiring
---@field OnStopFiring FWeaponFiringBehaviorOnStopFiring
---@field OnRequestStopAudioBurst FWeaponFiringBehaviorOnRequestStopAudioBurst
---@field CurrentFireRate float
UWeaponFiringBehavior = {}

---@param bCancel boolean
function UWeaponFiringBehavior:StopFiring(bCancel) end
function UWeaponFiringBehavior:StartFiring() end
---@return float
function UWeaponFiringBehavior:GetCurrentFireRate() end


---@class UWeaponFiringBurst : UWeaponFiringDefault
---@field BulletsPerBurst int32
---@field DelayBetweenBursts float
---@field bFiringBurst boolean
---@field bStopPending boolean
---@field BulletsLeftInBurst int32
---@field DelayUntilNextBullet float
UWeaponFiringBurst = {}



---@class UWeaponFiringCharge : UWeaponFiringDefault
---@field MinChargeTime float
---@field MaxChargeTime float
---@field bFireAtMaxCharge boolean
---@field bFullAutoAtMaxCharge boolean
---@field bAllowRegularShots boolean
---@field ChargedShotCooldownOverride float
---@field BulletsPerChargedShot int32
---@field ChargeBurstFireRate float
---@field ChargingPfx FName
---@field ChargingPC UNGParticleComponent
---@field FullyChargedPfx FName
---@field FullyChargedPC UNGParticleComponent
---@field ChargingGameplayEffect TSubclassOf<UGameplayEffect>
---@field ChargingSound UAkAudioEvent
---@field ChargingSoundComponent UAkComponent
---@field bIsCharging boolean
---@field TriggerHeldDownTime float
---@field CachedTriggerHeldDownTime float
---@field bChargingSoundPlaying boolean
---@field ChargingGameplayEffectHandle FTouristGameplayEffectHandle
---@field BulletsLeftInBurst int32
---@field DelayUntilNextBurstBullet float
---@field bStopPending boolean
UWeaponFiringCharge = {}

---@param MaxChargeTime float
function UWeaponFiringCharge:SetMaxChargeTime(MaxChargeTime) end
---@return boolean
function UWeaponFiringCharge:IsFiring() end
---@return boolean
function UWeaponFiringCharge:IsCharging() end
---@return float
function UWeaponFiringCharge:GetCurrentRawChargePercent() end
---@return float
function UWeaponFiringCharge:GetCurrentChargePercent() end
---@return float
function UWeaponFiringCharge:GetChargePercent() end


---@class UWeaponFiringDefault : UWeaponFiringBehavior
---@field WindupTime float
---@field FireRate float
---@field FireRateRandomnessMultiplier float
---@field FireRateMultiplierCurve UCurveFloat
---@field bResetCooldownOnStopFiring boolean
---@field bFullAuto boolean
---@field WindupTimeLeft float
---@field cooldown float
---@field bIsFiring boolean
---@field bHasReleasedTrigger boolean
---@field FiringTime float
UWeaponFiringDefault = {}



---@class UWeaponManagerComponent : UActorComponent
---@field Weapons TArray<FEnemyWeaponInfo>
UWeaponManagerComponent = {}

function UWeaponManagerComponent:StopFiringAllWeapons() end
---@param Target AActor
function UWeaponManagerComponent:SetWeaponHomingTarget(Target) end
---@param WeaponName FName
function UWeaponManagerComponent:RequestWeaponStopFiringByName(WeaponName) end
---@param WeaponIndex int32
function UWeaponManagerComponent:RequestWeaponStopFiring(WeaponIndex) end
---@param WeaponName FName
function UWeaponManagerComponent:RequestWeaponStartFiringByName(WeaponName) end
---@param WeaponIndex int32
function UWeaponManagerComponent:RequestWeaponStartFiring(WeaponIndex) end
---@param WeaponName FName
---@return AGunBase
function UWeaponManagerComponent:GetWeaponByName(WeaponName) end
---@param index int32
---@return FName
function UWeaponManagerComponent:GetWeaponAttachmentSocketName(index) end
---@param index int32
---@return AGunBase
function UWeaponManagerComponent:GetWeapon(index) end
---@param WeaponName FName
---@return int32
function UWeaponManagerComponent:GetIndexFromWeaponName(WeaponName) end
---@param Weapon AGunBase
---@return int32
function UWeaponManagerComponent:GetIndexFromWeapon(Weapon) end
---@param Settings FEnemyWeaponSettings
function UWeaponManagerComponent:ApplyWeaponSettings(Settings) end
---@param WeaponInfo FEnemyWeaponInfo
---@return int32
function UWeaponManagerComponent:AddWeapon(WeaponInfo) end
---@param WeaponInfo FEnemyWeaponInfo
---@param InstancedWeapon AGunBase
---@return int32
function UWeaponManagerComponent:AddReadyWeapon(WeaponInfo, InstancedWeapon) end


---@class UWeaponOverheatingClip : UWeaponClip
---@field MaxBullets int32
---@field ReloadTimeActive float
---@field ReloadCurveActive UCurveFloat
---@field bUsePassiveReload boolean
---@field ReloadTimePassive float
---@field ReloadCurvePassive UCurveFloat
---@field ReloadDelayPassive float
---@field bEmptyClipsBeforeReload boolean
---@field bWaitForTriggerReleaseBeforeReload boolean
---@field CurrentBullets float
---@field CurrentReloadDelayPassive float
---@field CurrentReloadDuration float
---@field bIsActiveReload boolean
---@field bIsWaitingForTriggerReleaseToReload boolean
UWeaponOverheatingClip = {}



---@class UXenoglyphWidget : UHMQScreenWidget
UXenoglyphWidget = {}


